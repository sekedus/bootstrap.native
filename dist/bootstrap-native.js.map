{"version":3,"file":"bootstrap-native.js","sources":["../node_modules/.pnpm/@thednp+shorty@2.0.6/node_modules/@thednp/shorty/dist/shorty.mjs","../node_modules/.pnpm/@thednp+event-listener@2.0.6/node_modules/@thednp/event-listener/dist/event-listener.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../node_modules/.pnpm/@thednp+position-observer@0.0.2/node_modules/@thednp/position-observer/dist/index.mjs","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["const he = \"aria-checked\", ye = \"aria-description\", we = \"aria-describedby\", Ae = \"aria-expanded\", Se = \"aria-haspopup\", X = \"aria-hidden\", Ne = \"aria-label\", Te = \"aria-labelledby\", Me = \"aria-modal\", ke = \"aria-pressed\", De = \"aria-selected\", Ce = \"aria-valuemin\", Oe = \"aria-valuemax\", Le = \"aria-valuenow\", Ie = \"aria-valuetext\", Y = \"abort\", Z = \"beforeunload\", _ = \"blur\", $ = \"change\", tt = \"contextmenu\", P = \"DOMContentLoaded\", et = \"DOMMouseScroll\", nt = \"error\", ot = \"focus\", st = \"focusin\", ct = \"focusout\", rt = \"gesturechange\", at = \"gestureend\", it = \"gesturestart\", ut = \"keydown\", lt = \"keypress\", dt = \"keyup\", pt = \"load\", ft = \"click\", mt = \"dblclick\", gt = \"mousedown\", vt = \"mouseup\", Et = \"hover\", bt = \"mouseenter\", ht = \"mouseleave\", yt = \"mousein\", wt = \"mouseout\", At = \"mouseover\", St = \"mousemove\", Nt = \"mousewheel\", Tt = \"move\", Mt = \"orientationchange\", kt = \"pointercancel\", Dt = \"pointerdown\", Ct = \"pointerleave\", Ot = \"pointermove\", Lt = \"pointerup\", It = \"readystatechange\", xt = \"reset\", zt = \"resize\", Vt = \"select\", Bt = \"selectend\", Ft = \"selectstart\", Ht = \"scroll\", Pt = \"submit\", Ut = \"touchstart\", Wt = \"touchmove\", Rt = \"touchcancel\", Qt = \"touchend\", jt = \"unload\", xe = {\n  DOMContentLoaded: P,\n  DOMMouseScroll: et,\n  abort: Y,\n  beforeunload: Z,\n  blur: _,\n  change: $,\n  click: ft,\n  contextmenu: tt,\n  dblclick: mt,\n  error: nt,\n  focus: ot,\n  focusin: st,\n  focusout: ct,\n  gesturechange: rt,\n  gestureend: at,\n  gesturestart: it,\n  hover: Et,\n  keydown: ut,\n  keypress: lt,\n  keyup: dt,\n  load: pt,\n  mousedown: gt,\n  mousemove: St,\n  mousein: yt,\n  mouseout: wt,\n  mouseenter: bt,\n  mouseleave: ht,\n  mouseover: At,\n  mouseup: vt,\n  mousewheel: Nt,\n  move: Tt,\n  orientationchange: Mt,\n  pointercancel: kt,\n  pointerdown: Dt,\n  pointerleave: Ct,\n  pointermove: Ot,\n  pointerup: Lt,\n  readystatechange: It,\n  reset: xt,\n  resize: zt,\n  scroll: Ht,\n  select: Vt,\n  selectend: Bt,\n  selectstart: Ft,\n  submit: Pt,\n  touchcancel: Rt,\n  touchend: Qt,\n  touchmove: Wt,\n  touchstart: Ut,\n  unload: jt\n}, ze = \"drag\", Ve = \"dragstart\", Be = \"dragenter\", Fe = \"dragleave\", He = \"dragover\", Pe = \"dragend\", Ue = \"loadstart\", We = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Re = { down: \"mousedown\", up: \"mouseup\" }, Qe = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : (\n  /* istanbul ignore next @preserve */\n  [\"mouseover\", \"mouseout\"]\n), je = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, qe = { in: \"focusin\", out: \"focusout\" }, qt = 'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"]', Ge = {\n  Backspace: \"Backspace\",\n  //  8\n  Tab: \"Tab\",\n  //  9\n  Enter: \"Enter\",\n  // 13\n  Shift: \"Shift\",\n  // 16\n  Control: \"Control\",\n  // 17\n  Alt: \"Alt\",\n  // 18\n  Pause: \"Pause\",\n  // 19\n  CapsLock: \"CapsLock\",\n  // 20\n  Escape: \"Escape\",\n  // 27\n  Scape: \"Space\",\n  // 32\n  ArrowLeft: \"ArrowLeft\",\n  // 37\n  ArrowUp: \"ArrowUp\",\n  // 38\n  ArrowRight: \"ArrowRight\",\n  // 39\n  ArrowDown: \"ArrowDown\",\n  // 40\n  Insert: \"Insert\",\n  // 45\n  Delete: \"Delete\",\n  // 46\n  Meta: \"Meta\",\n  // 91 windows key\n  ContextMenu: \"ContextMenu\",\n  // 93\n  ScrollLock: \"ScrollLock\"\n  // 145\n}, Ke = \"Alt\", Je = \"ArrowDown\", Xe = \"ArrowUp\", Ye = \"ArrowLeft\", Ze = \"ArrowRight\", _e = \"Backspace\", $e = \"CapsLock\", tn = \"Control\", en = \"Delete\", nn = \"Enter\", on = \"NumpadEnter\", sn = \"Escape\", cn = \"Insert\", rn = \"Meta\", an = \"Pause\", un = \"ScrollLock\", ln = \"Shift\", dn = \"Space\", pn = \"Tab\", Gt = \"animationDuration\", Kt = \"animationDelay\", U = \"animationName\", D = \"animationend\", Jt = \"transitionDuration\", Xt = \"transitionDelay\", C = \"transitionend\", W = \"transitionProperty\", fn = \"addEventListener\", mn = \"removeEventListener\", gn = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, vn = \"offsetHeight\", En = \"offsetWidth\", bn = \"scrollHeight\", hn = \"scrollWidth\", yn = \"tabindex\", Yt = navigator.userAgentData, A = Yt, { userAgent: Zt } = navigator, S = Zt, z = /iPhone|iPad|iPod|Android/i;\nlet O = !1;\n// istanbul ignore else @preserve\nA ? O = A.brands.some((t) => z.test(t.brand)) : O = z.test(S);\nconst wn = O, V = /(iPhone|iPod|iPad)/, An = A ? A.brands.some(\n  (t) => V.test(t.brand)\n) : (\n  /* istanbul ignore next @preserve */\n  V.test(S)\n), Sn = S ? S.includes(\"Firefox\") : (\n  /* istanbul ignore next @preserve */\n  !1\n), { head: N } = document, Nn = [\"webkitPerspective\", \"perspective\"].some(\n  (t) => t in N.style\n), R = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(\n    e,\n    n,\n    s\n  );\n}, Q = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(\n    e,\n    n,\n    s\n  );\n}, _t = (t, e, n, o) => {\n  const s = (c) => {\n    // istanbul ignore else @preserve\n    (c.target === t || c.currentTarget === t) && (n.apply(t, [c]), Q(t, e, s, o));\n  };\n  R(t, e, s, o);\n}, $t = () => {\n}, Tn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    // istanbul ignore next @preserve\n    _t(document, P, $t, e);\n  } catch {\n  }\n  return t;\n})(), Mn = [\"webkitTransform\", \"transform\"].some(\n  (t) => t in N.style\n), kn = \"ontouchstart\" in window || /* istanbul ignore next @preserve */\n\"msMaxTouchPoints\" in navigator, Dn = [\"webkitAnimation\", \"animation\"].some(\n  (t) => t in N.style\n), Cn = [\"webkitTransition\", \"transition\"].some(\n  (t) => t in N.style\n), j = (t, e) => t.getAttribute(e), On = (t, e, n) => e.getAttributeNS(t, n), te = (t, e) => t.hasAttribute(e), Ln = (t, e, n) => e.hasAttributeNS(t, n), In = (t, e, n) => t.setAttribute(e, n), xn = (t, e, n, o) => e.setAttributeNS(t, n, o), zn = (t, e) => t.removeAttribute(e), Vn = (t, e, n) => e.removeAttributeNS(t, n), Bn = (t, ...e) => {\n  t.classList.add(...e);\n}, Fn = (t, ...e) => {\n  t.classList.remove(...e);\n}, Hn = (t, e) => t.classList.contains(e), { body: Pn } = document, { documentElement: Un } = document, Wn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, i = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(\n  (e) => t.nodeType === e\n) || !1, l = (t) => i(t) && t.nodeType === 1 || !1, E = /* @__PURE__ */ new Map(), L = {\n  data: E,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (t, e, n) => {\n    if (!l(t)) return;\n    // istanbul ignore else @preserve\n    E.has(e) || E.set(e, /* @__PURE__ */ new Map()), E.get(e).set(t, n);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (t) => E.get(t) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (t, e) => {\n    if (!l(t) || !e) return null;\n    const n = L.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (t, e) => {\n    const n = L.getAllFor(e);\n    if (!n || !l(t)) return;\n    n.delete(t);\n    // istanbul ignore else @preserve\n    n.size === 0 && E.delete(e);\n  }\n}, Rn = (t, e) => L.get(t, e), T = (t) => typeof t == \"string\" || !1, q = (t) => v(t) && t.constructor.name === \"Window\" || !1, G = (t) => i(t) && t.nodeType === 9 || !1, d = (t) => q(t) ? t.document : G(t) ? t : i(t) ? t.ownerDocument : globalThis.document, M = (t, ...e) => Object.assign(t, ...e), ee = (t) => {\n  if (!t) return;\n  if (T(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = ee(e);\n  if (!n) return;\n  const o = { ...t };\n  return delete o.tagName, M(n, o);\n}, ne = (t, e) => {\n  if (!t || !e) return;\n  if (T(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = ne(t, n);\n  if (!o) return;\n  const s = { ...e };\n  return delete s.tagName, M(o, s);\n}, K = (t, e) => t.dispatchEvent(e), Qn = (t, e, n) => n.indexOf(t) === e, g = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, oe = (t) => {\n  const e = g(t, U), n = g(t, Kt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, se = (t) => {\n  const e = g(t, U), n = g(t, Gt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, jn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = se(t), c = oe(t);\n  if (s) {\n    const a = (u) => {\n      // istanbul ignore else @preserve\n      u.target === t && (e.apply(t, [u]), t.removeEventListener(D, a), n = 1);\n    };\n    t.addEventListener(D, a), setTimeout(() => {\n      // istanbul ignore next @preserve\n      n || K(t, o);\n    }, s + c + 17);\n  } else {\n    // istanbul ignore next @preserve\n    e.apply(t, [o]);\n  }\n}, ce = (t) => {\n  const e = g(t, W), n = g(t, Xt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, re = (t) => {\n  const e = g(t, W), n = g(t, Jt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, qn = (t, e) => {\n  let n = 0;\n  const o = new Event(C), s = re(t), c = ce(t);\n  if (s) {\n    const a = (u) => {\n      // istanbul ignore else @preserve\n      u.target === t && (e.apply(t, [u]), t.removeEventListener(C, a), n = 1);\n    };\n    t.addEventListener(C, a), setTimeout(() => {\n      // istanbul ignore next @preserve\n      n || K(t, o);\n    }, s + c + 17);\n  } else\n    e.apply(t, [o]);\n}, Gn = (t) => Float32Array.from(Array.from(t)), Kn = (t) => Float64Array.from(Array.from(t)), Jn = (t, e) => t.focus(e), B = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, w = (t) => Object.entries(t), ae = (t) => t.toLowerCase(), Xn = (t, e, n, o) => {\n  const s = { ...n }, c = { ...t.dataset }, a = { ...e }, u = {}, p = \"title\";\n  return w(c).forEach(([r, f]) => {\n    const y = o && typeof r == \"string\" && r.includes(o) ? r.replace(o, \"\").replace(\n      /[A-Z]/g,\n      (J) => ae(J)\n    ) : (\n      /* istanbul ignore next @preserve */\n      r\n    );\n    u[y] = B(f);\n  }), w(s).forEach(([r, f]) => {\n    s[r] = B(f);\n  }), w(e).forEach(([r, f]) => {\n    // istanbul ignore else @preserve\n    r in s ? a[r] = s[r] : r in u ? a[r] = u[r] : a[r] = r === p ? j(t, p) : f;\n  }), a;\n}, Yn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Zn = (t) => Object.keys(t), _n = (t) => Object.values(t), $n = (t) => Object.fromEntries(t), to = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  // istanbul ignore else @preserve\n  return v(e) && M(n, e), n;\n}, eo = { passive: !0 }, no = (t) => t.offsetHeight, oo = (t, e) => {\n  w(e).forEach(([n, o]) => {\n    if (o && T(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, M(t.style, s);\n    }\n  });\n}, I = (t) => v(t) && t.constructor.name === \"Map\" || !1, ie = (t) => typeof t == \"number\" || !1, m = /* @__PURE__ */ new Map(), so = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (t, e, n, o) => {\n    if (!l(t)) return;\n    // istanbul ignore else @preserve\n    if (o && o.length) {\n      // istanbul ignore else @preserve\n      m.has(t) || m.set(t, /* @__PURE__ */ new Map()), m.get(t).set(o, setTimeout(e, n));\n    } else\n      m.set(t, setTimeout(e, n));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (t, e) => {\n    if (!l(t)) return null;\n    const n = m.get(t);\n    return e && n && I(n) ? n.get(e) || /* istanbul ignore next @preserve */\n    null : ie(n) ? n : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (t, e) => {\n    if (!l(t)) return;\n    const n = m.get(t);\n    if (e && e.length && I(n)) {\n      clearTimeout(n.get(e)), n.delete(e);\n      // istanbul ignore else @preserve\n      n.size === 0 && m.delete(t);\n    } else\n      clearTimeout(n), m.delete(t);\n  }\n}, co = (t) => t.toUpperCase(), ue = (t, e) => (i(e) ? e : d()).querySelectorAll(t), x = /* @__PURE__ */ new Map();\nfunction le(t) {\n  const { shiftKey: e, code: n } = t, o = d(this), s = [\n    ...ue(qt, this)\n  ].filter(\n    (u) => !te(u, \"disabled\") && !j(u, X)\n  );\n  if (!s.length) return;\n  const c = s[0], a = s[s.length - 1];\n  // istanbul ignore else @preserve\n  n === \"Tab\" && (e && o.activeElement === c ? (a.focus(), t.preventDefault()) : !e && o.activeElement === a && (c.focus(), t.preventDefault()));\n}\nconst de = (t) => x.has(t) === !0, ro = (t) => {\n  const e = de(t);\n  (e ? Q : R)(t, \"keydown\", le), e ? x.delete(t) : x.set(t, !0);\n}, h = (t, e) => {\n  const { width: n, height: o, top: s, right: c, bottom: a, left: u } = t.getBoundingClientRect();\n  let p = 1, r = 1;\n  if (e && l(t)) {\n    const { offsetWidth: f, offsetHeight: y } = t;\n    p = f > 0 ? Math.round(n) / f : (\n      /* istanbul ignore next @preserve */\n      1\n    ), r = y > 0 ? Math.round(o) / y : (\n      /* istanbul ignore next @preserve */\n      1\n    );\n  }\n  return {\n    width: n / p,\n    height: o / r,\n    top: s / r,\n    right: c / p,\n    bottom: a / r,\n    left: u / p,\n    x: u / p,\n    y: s / r\n  };\n}, ao = (t) => d(t).body, k = (t) => d(t).documentElement, io = (t) => d(t).head, uo = (t) => {\n  const e = q(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, pe = (t) => i(t) && t.constructor.name === \"ShadowRoot\" || !1, lo = (t) => t.nodeName === \"HTML\" ? t : l(t) && t.assignedSlot || // step into the shadow DOM of the parent of a slotted node\ni(t) && t.parentNode || // DOM Element detected\npe(t) && t.host || // ShadowRoot detected\nk(t), fe = (t) => {\n  if (!l(t)) return !1;\n  const { width: e, height: n } = h(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, po = (t, e, n) => {\n  const o = l(e), s = h(\n    t,\n    o && fe(e)\n  ), c = { x: 0, y: 0 };\n  // istanbul ignore else @preserve\n  if (o) {\n    const a = h(e, !0);\n    c.x = a.x + e.clientLeft, c.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - c.x,\n    y: s.top + n.y - c.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet F = 0, H = 0;\nconst b = /* @__PURE__ */ new Map(), me = (t, e) => {\n  let n = e ? F : H;\n  if (e) {\n    const o = me(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), I(s) && !s.has(e) ? (s.set(e, n), F += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), H += 1);\n  }\n  return n;\n}, fo = (t) => t ? G(t) ? t.defaultView : i(t) ? t?.ownerDocument?.defaultView : t : window, ge = (t) => Array.isArray(t) || !1, mo = (t) => i(t) && t.nodeName === \"CANVAS\" || !1, ve = (t) => l(t) && !!t.shadowRoot || !1, go = (t) => i(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, vo = (t) => {\n  if (!i(t)) return !1;\n  const { top: e, bottom: n } = h(t), { clientHeight: o } = k(t);\n  return e <= o && n >= 0;\n}, Eo = (t) => {\n  if (!i(t)) return !1;\n  const { clientWidth: e, clientHeight: n } = k(t), { top: o, left: s, bottom: c, right: a } = h(t, !0);\n  return o >= 0 && s >= 0 && c <= n && a <= e;\n}, bo = (t) => ge(t) && t.every(l) || !1, ho = (t) => typeof t == \"function\" || !1, yo = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, wo = (t) => l(t) && t.tagName === \"IMG\" || !1, Ao = (t) => {\n  if (!T(t)) return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, So = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, No = (t) => i(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some(\n  (e) => t.constructor.name.includes(e)\n) || !1, To = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, Mo = (t) => k(t).dir === \"rtl\", ko = (t) => i(t) && t.constructor.name.includes(\"SVG\") || !1, Do = (t) => i(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, Ee = (t, e) => t ? t.closest(e) || // break out of `ShadowRoot`\nEe(t.getRootNode().host, e) : null, Co = (t, e) => l(t) ? t : (i(e) ? e : d()).querySelector(t), be = (t, e) => (i(e) ? e : d()).getElementsByTagName(\n  t\n), Oo = (t) => [...be(\"*\", t)].filter(ve), Lo = (t, e) => d(e).getElementById(t) || null, Io = (t, e) => (e && i(e) ? e : d()).getElementsByClassName(\n  t\n), xo = (t, e) => t.matches(e), zo = \"2.0.6\";\nexport {\n  Wn as ArrayFrom,\n  P as DOMContentLoadedEvent,\n  et as DOMMouseScrollEvent,\n  L as Data,\n  Gn as Float32ArrayFrom,\n  Kn as Float64ArrayFrom,\n  M as ObjectAssign,\n  w as ObjectEntries,\n  $n as ObjectFromEntries,\n  Yn as ObjectHasOwn,\n  Zn as ObjectKeys,\n  _n as ObjectValues,\n  so as Timer,\n  Y as abortEvent,\n  Bn as addClass,\n  fn as addEventListener,\n  Kt as animationDelay,\n  Gt as animationDuration,\n  D as animationEndEvent,\n  U as animationName,\n  he as ariaChecked,\n  we as ariaDescribedBy,\n  ye as ariaDescription,\n  Ae as ariaExpanded,\n  Se as ariaHasPopup,\n  X as ariaHidden,\n  Ne as ariaLabel,\n  Te as ariaLabelledBy,\n  Me as ariaModal,\n  ke as ariaPressed,\n  De as ariaSelected,\n  Oe as ariaValueMax,\n  Ce as ariaValueMin,\n  Le as ariaValueNow,\n  Ie as ariaValueText,\n  Z as beforeunloadEvent,\n  gn as bezierEasings,\n  _ as blurEvent,\n  $ as changeEvent,\n  Ee as closest,\n  tt as contextmenuEvent,\n  to as createCustomEvent,\n  ee as createElement,\n  ne as createElementNS,\n  K as dispatchEvent,\n  Qn as distinct,\n  Pn as documentBody,\n  Un as documentElement,\n  N as documentHead,\n  ze as dragEvent,\n  Pe as dragendEvent,\n  Be as dragenterEvent,\n  Fe as dragleaveEvent,\n  He as dragoverEvent,\n  Ve as dragstartEvent,\n  jn as emulateAnimationEnd,\n  qn as emulateTransitionEnd,\n  nt as errorEvent,\n  Jn as focus,\n  ot as focusEvent,\n  qe as focusEvents,\n  qt as focusableSelector,\n  st as focusinEvent,\n  ct as focusoutEvent,\n  rt as gesturechangeEvent,\n  at as gestureendEvent,\n  it as gesturestartEvent,\n  j as getAttribute,\n  On as getAttributeNS,\n  h as getBoundingClientRect,\n  Oo as getCustomElements,\n  d as getDocument,\n  ao as getDocumentBody,\n  k as getDocumentElement,\n  io as getDocumentHead,\n  oe as getElementAnimationDelay,\n  se as getElementAnimationDuration,\n  Lo as getElementById,\n  g as getElementStyle,\n  ce as getElementTransitionDelay,\n  re as getElementTransitionDuration,\n  Io as getElementsByClassName,\n  be as getElementsByTagName,\n  Rn as getInstance,\n  uo as getNodeScroll,\n  lo as getParentNode,\n  po as getRectRelativeToOffsetParent,\n  me as getUID,\n  fo as getWindow,\n  te as hasAttribute,\n  Ln as hasAttributeNS,\n  Hn as hasClass,\n  de as hasFocusTrap,\n  An as isApple,\n  ge as isArray,\n  mo as isCanvas,\n  ve as isCustomElement,\n  G as isDocument,\n  go as isElement,\n  vo as isElementInScrollRange,\n  Eo as isElementInViewport,\n  bo as isElementsArray,\n  Sn as isFirefox,\n  ho as isFunction,\n  yo as isHTMLCollection,\n  l as isHTMLElement,\n  wo as isHTMLImageElement,\n  Ao as isJSON,\n  I as isMap,\n  No as isMedia,\n  wn as isMobile,\n  i as isNode,\n  To as isNodeList,\n  ie as isNumber,\n  v as isObject,\n  Mo as isRTL,\n  ko as isSVGElement,\n  fe as isScaledElement,\n  pe as isShadowRoot,\n  T as isString,\n  Do as isTableElement,\n  So as isWeakMap,\n  q as isWindow,\n  Ke as keyAlt,\n  Je as keyArrowDown,\n  Ye as keyArrowLeft,\n  Ze as keyArrowRight,\n  Xe as keyArrowUp,\n  _e as keyBackspace,\n  $e as keyCapsLock,\n  tn as keyControl,\n  en as keyDelete,\n  nn as keyEnter,\n  sn as keyEscape,\n  cn as keyInsert,\n  rn as keyMeta,\n  on as keyNumpadEnter,\n  an as keyPause,\n  un as keyScrollLock,\n  ln as keyShift,\n  dn as keySpace,\n  pn as keyTab,\n  Ge as keyboardEventKeys,\n  ut as keydownEvent,\n  lt as keypressEvent,\n  dt as keyupEvent,\n  pt as loadEvent,\n  Ue as loadstartEvent,\n  xo as matches,\n  Re as mouseClickEvents,\n  Qe as mouseHoverEvents,\n  We as mouseSwipeEvents,\n  ft as mouseclickEvent,\n  mt as mousedblclickEvent,\n  gt as mousedownEvent,\n  bt as mouseenterEvent,\n  Et as mousehoverEvent,\n  yt as mouseinEvent,\n  ht as mouseleaveEvent,\n  St as mousemoveEvent,\n  wt as mouseoutEvent,\n  At as mouseoverEvent,\n  vt as mouseupEvent,\n  Nt as mousewheelEvent,\n  Tt as moveEvent,\n  xe as nativeEvents,\n  $t as noop,\n  Xn as normalizeOptions,\n  B as normalizeValue,\n  Q as off,\n  vn as offsetHeight,\n  En as offsetWidth,\n  R as on,\n  _t as one,\n  Mt as orientationchangeEvent,\n  eo as passiveHandler,\n  kt as pointercancelEvent,\n  Dt as pointerdownEvent,\n  Ct as pointerleaveEvent,\n  Ot as pointermoveEvent,\n  Lt as pointerupEvent,\n  Co as querySelector,\n  ue as querySelectorAll,\n  It as readystatechangeEvent,\n  no as reflow,\n  zn as removeAttribute,\n  Vn as removeAttributeNS,\n  Fn as removeClass,\n  mn as removeEventListener,\n  xt as resetEvent,\n  zt as resizeEvent,\n  Ht as scrollEvent,\n  bn as scrollHeight,\n  hn as scrollWidth,\n  Vt as selectEvent,\n  Bt as selectendEvent,\n  Ft as selectstartEvent,\n  In as setAttribute,\n  xn as setAttributeNS,\n  oo as setElementStyle,\n  Pt as submitEvent,\n  Nn as support3DTransform,\n  Dn as supportAnimation,\n  Tn as supportPassive,\n  kn as supportTouch,\n  Mn as supportTransform,\n  Cn as supportTransition,\n  yn as tabindex,\n  ae as toLowerCase,\n  co as toUpperCase,\n  ro as toggleFocusTrap,\n  je as touchEvents,\n  Rt as touchcancelEvent,\n  Qt as touchendEvent,\n  Wt as touchmoveEvent,\n  Ut as touchstartEvent,\n  Xt as transitionDelay,\n  Jt as transitionDuration,\n  C as transitionEndEvent,\n  W as transitionProperty,\n  jt as unloadEvent,\n  S as userAgent,\n  A as userAgentData,\n  zo as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","const e = {}, f = (t) => {\n  const { type: c, currentTarget: i } = t;\n  [...e[c]].forEach(([n, s]) => {\n    /* istanbul ignore else @preserve */\n    i === n && [...s].forEach(([o, a]) => {\n      o.apply(n, [t]), typeof a == \"object\" && a.once && r(n, c, o, a);\n    });\n  });\n}, E = (t, c, i, n) => {\n  /* istanbul ignore else @preserve */\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const s = e[c];\n  /* istanbul ignore else @preserve */\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(t), { size: a } = o;\n  o.set(i, n);\n  /* istanbul ignore else @preserve */\n  a || t.addEventListener(c, f, n);\n}, r = (t, c, i, n) => {\n  const s = e[c], o = s && s.get(t), a = o && o.get(i), d = a !== void 0 ? a : n;\n  /* istanbul ignore else @preserve */\n  o && o.has(i) && o.delete(i);\n  /* istanbul ignore else @preserve */\n  s && (!o || !o.size) && s.delete(t);\n  /* istanbul ignore else @preserve */\n  (!s || !s.size) && delete e[c];\n  /* istanbul ignore else @preserve */\n  (!o || !o.size) && t.removeEventListener(\n    c,\n    f,\n    d\n  );\n}, g = E, M = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  r as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = \"fade\";\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = \"show\";\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = \"data-bs-dismiss\";\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = \"alert\";\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = \"Alert\";\nexport default alertComponent;\n","import { version } from \"../package.json\";\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport {\n  Data,\n  isHTMLElement,\n  isString,\n  normalizeOptions,\n  ObjectKeys,\n  querySelector,\n} from \"@thednp/shorty\";\n\nimport type { BaseOptions } from \"../interface/baseComponent\";\nimport Version from \"../version\";\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: HTMLElement;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    let element: HTMLElement | null;\n\n    try {\n      if (isHTMLElement(target)) {\n        element = target;\n      } else if (isString(target)) {\n        element = querySelector<HTMLElement>(target);\n        // istanbul ignore else @preserve\n        if (!element) throw Error(`\"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`your target is not an instance of HTMLElement.`);\n      }\n    } catch (e) {\n      throw Error(`${this.name} Error: ${(e as Error).message}`);\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    // istanbul ignore else @preserve\n    if (prevInstance) {\n      // remove previously attached event listeners\n      // to avoid memory leaks\n      prevInstance._toggleEventListeners();\n    }\n\n    this.element = element;\n    this.options = this.defaults && ObjectKeys(this.defaults).length\n      ? normalizeOptions(element, this.defaults, config || {}, \"bs\")\n      // istanbul ignore next @preserve\n      : {};\n\n    Data.set(element, this.name, this);\n  }\n\n  // istanbul ignore next @preserve\n  get version() {\n    return Version;\n  }\n\n  // istanbul ignore next @preserve\n  get name() {\n    return \"BaseComponent\";\n  }\n\n  // istanbul ignore next @preserve\n  get defaults() {\n    return {};\n  }\n\n  /** just to have something to extend from */\n  // istanbul ignore next @preserve coverage wise this isn't important\n  _toggleEventListeners = () => {\n    // do something to please linters\n  };\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove<typeof this>(this.element, this.name);\n    ObjectKeys(this).forEach((prop) => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  querySelector,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport alertString from \"../strings/alertString\";\nimport alertComponent from \"../strings/alertComponent\";\nimport type { AlertEvent } from \"../interface/alert\";\n\nimport BaseComponent from \"./base-component\";\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n */\nconst getAlertInstance = (element: HTMLElement) =>\n  getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = (element: HTMLElement) => new Alert(element);\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<Record<string, never>, AlertEvent>(\n  `close.bs.${alertString}`,\n);\nconst closedAlertEvent = createCustomEvent<Record<string, never>, AlertEvent>(\n  `closed.bs.${alertString}`,\n);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (self: Alert) => {\n  const { element } = self;\n  dispatchEvent(element, closedAlertEvent);\n\n  self._toggleEventListeners();\n  self.dispose();\n  element.remove();\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    // istanbul ignore else @preserve\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n\n      if (!closeAlertEvent.defaultPrevented) {\n        removeClass(element, showClass);\n\n        if (hasClass(element, fadeClass)) {\n          emulateTransitionEnd(element, () => alertTransitionEnd(this));\n        } else alertTransitionEnd(this);\n      }\n    }\n  };\n  /**\n   * Toggle on / off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { dismiss, close } = this;\n    // istanbul ignore else @preserve\n    if (dismiss) action(dismiss, mouseclickEvent, close);\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = \"active\";\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = \"data-bs-toggle\";\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = \"button\";\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = \"Button\";\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  addClass,\n  ariaPressed,\n  getAttribute,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  removeClass,\n  setAttribute,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport activeClass from \"../strings/activeClass\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport buttonString from \"../strings/buttonString\";\nimport buttonComponent from \"../strings/buttonComponent\";\n\nimport BaseComponent from \"./base-component\";\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) =>\n  getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e?: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, \"disabled\") && !getAttribute(element, \"disabled\")) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? \"false\" : \"true\");\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  // BUTTON PRIVATE METHOD\n  // =====================\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, this.toggle);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = \"data-bs-target\";\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = \"carousel\";\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = \"Carousel\";\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = \"data-bs-parent\";\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = \"data-bs-container\";\nexport default dataBsContainer;\n","import {\n  closest,\n  getAttribute,\n  getDocument,\n  querySelector,\n} from \"@thednp/shorty\";\n\nimport dataBsTarget from \"../strings/dataBsTarget\";\nimport dataBsParent from \"../strings/dataBsParent\";\nimport dataBsContainer from \"../strings/dataBsContainer\";\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, \"href\"];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map((att) => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent\n          ? closest(element, attValue)\n          : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter((x) => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  addClass,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  dragstartEvent,\n  emulateTransitionEnd,\n  getAttribute,\n  getDocument,\n  getElementsByClassName,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  isElementInScrollRange,\n  isHTMLElement,\n  isRTL,\n  keyArrowLeft,\n  keyArrowRight,\n  keydownEvent,\n  matches,\n  mouseclickEvent,\n  mouseenterEvent,\n  mouseleaveEvent,\n  ObjectAssign,\n  passiveHandler,\n  pointerdownEvent,\n  pointermoveEvent,\n  pointerupEvent,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  Timer,\n  touchstartEvent,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport activeClass from \"../strings/activeClass\";\nimport dataBsTarget from \"../strings/dataBsTarget\";\nimport carouselString from \"../strings/carouselString\";\nimport carouselComponent from \"../strings/carouselComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { CarouselEvent, CarouselOptions } from \"../interface/carousel\";\n\ntype CarouselEventProperties = {\n  relatedTarget: HTMLElement;\n  from: number;\n  to: number;\n  direction: \"left\" | \"right\";\n};\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = \"data-bs-slide-to\";\nconst dataBsSlide = \"data-bs-slide\";\nconst pausedClass = \"paused\";\n\nconst carouselDefaults: CarouselOptions = {\n  pause: \"hover\",\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) =>\n  getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<\n  CarouselEventProperties,\n  CarouselEvent\n>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<\n  CarouselEventProperties,\n  CarouselEvent\n>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  // istanbul ignore else @preserve\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === \"left\" ? \"next\" : \"prev\";\n    const directionClass = direction === \"left\" ? \"start\" : \"end\";\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (\n      self.cycle && !getDocument(element).hidden && options.interval &&\n      !self.isPaused\n    ) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  const self = getCarouselInstance(this);\n  // istanbul ignore else @preserve\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  const self = getCarouselInstance(this);\n  // istanbul ignore else @preserve\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element =\n    (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating) {\n    const newIndex = +(\n      getAttribute(this, dataBsSlideTo) ||\n      // istanbul ignore next @preserve\n      0\n    );\n\n    // istanbul ignore else @preserve\n    if (\n      this &&\n      !hasClass(this, activeClass) && // event target is not active\n      !Number.isNaN(newIndex)\n    ) {\n      // AND has the specific attribute\n      self.to(newIndex); // do the slide\n    }\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) ||\n    (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating) {\n    const orientation = getAttribute(this, dataBsSlide);\n\n    // istanbul ignore else @preserve\n    if (orientation === \"next\") {\n      self.next();\n    } else if (orientation === \"prev\") {\n      self.prev();\n    }\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = (\n  { code, target }: KeyboardEvent & { target: Node },\n) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter((x) =>\n    isElementInScrollRange(x)\n  );\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore next @preserve\n  if (self && !self.isAnimating && !/textarea|input/i.test(target.nodeName)) {\n    const RTL = isRTL(element);\n    const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n    const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n    // istanbul ignore else @preserve\n    if (code === arrowKeyPrev) self.prev();\n    else if (code === arrowKeyNext) self.next();\n  }\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  // istanbul ignore next @preserve\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) ||\n      !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating && !self.isTouch) {\n    // filter pointer event on controls & indicators\n    const { controls, indicators } = self;\n    // istanbul ignore else @preserve\n    if (\n      ![...controls, ...indicators].every((el) =>\n        el === target || el.contains(target as Node)\n      )\n    ) {\n      startX = e.pageX;\n\n      // istanbul ignore else @preserve\n      if (this.contains(target as Node)) {\n        self.isTouch = true;\n        toggleCarouselTouchHandlers(self, true);\n      }\n    }\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map((c) => getCarouselInstance(c) as Carousel)\n    .find((i) => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  // istanbul ignore else @preserve\n  if (self) {\n    const { element, index } = self;\n    const RTL = isRTL(element);\n    endX = e.pageX;\n\n    self.isTouch = false;\n    toggleCarouselTouchHandlers(self);\n\n    if (\n      !doc.getSelection()?.toString().length &&\n      element.contains(target as HTMLElement) &&\n      Math.abs(startX - endX) > 120\n    ) {\n      // determine next index to slide to\n      // istanbul ignore else @preserve\n      if (currentX < startX) {\n        self.to(index + (RTL ? -1 : 1));\n      } else if (currentX > startX) {\n        self.to(index + (RTL ? 1 : -1));\n      }\n    }\n\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n  }\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach((x) => removeClass(x, activeClass));\n\n  // istanbul ignore else @preserve\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(\n    getDocument(element),\n    pointermoveEvent,\n    carouselPointerMoveHandler,\n    passiveHandler,\n  );\n  action(\n    getDocument(element),\n    pointerupEvent,\n    carouselPointerUpHandler,\n    passiveHandler,\n  );\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: \"right\" | \"left\";\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? \"right\" : \"left\";\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length >= 2) {\n      const activeIndex = getActiveIndex(this);\n      // recover item from disposed instance\n      const transitionItem = [...slides].find((s) =>\n        matches(s, `.${carouselItem}-next,.${carouselItem}-next`)\n      );\n      this.index = activeIndex;\n\n      // external controls must be within same document context\n      const doc = getDocument(element);\n\n      this.controls = [\n        ...querySelectorAll(`[${dataBsSlide}]`, element),\n        ...querySelectorAll(\n          `[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`,\n          doc,\n        ),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n      // a LIVE collection is prefferable\n      this.indicators = [\n        ...(this.indicator\n          ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator)\n          // istanbul ignore next @preserve\n          : []),\n        ...querySelectorAll(\n          `[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`,\n          doc,\n        ),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      // set JavaScript and DATA API options\n      const { options } = this;\n\n      // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n      this.options.interval = options.interval === true\n        ? carouselDefaults.interval\n        : options.interval;\n\n      // set first slide active if none\n      // istanbul ignore next @preserve - impossible to test\n      if (transitionItem) {\n        this.index = [...slides].indexOf(transitionItem);\n      } else if (activeIndex < 0) {\n        this.index = 0;\n        addClass(slides[0], activeClass);\n        if (this.indicators.length) activateCarouselIndicator(this, 0);\n      }\n\n      // istanbul ignore else @preserve\n      if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n      // attach event handlers\n      this._toggleEventListeners(true);\n\n      // start to cycle if interval is set\n      if (options.interval) this.cycle();\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(\n      `.${carouselItem}-next,.${carouselItem}-prev`,\n      this.element,\n    ) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        // istanbul ignore else @preserve\n        if (\n          this.element && !this.isPaused && !this.isTouch &&\n          isElementInScrollRange(element)\n        ) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    // istanbul ignore else @preserve\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    // istanbul ignore else @preserve\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    // istanbul ignore else @preserve\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (\n      !this.isAnimating && activeItem !== next &&\n      !Timer.get(element, dataBsSlide)\n    ) {\n      // determine transition direction\n      // istanbul ignore else @preserve\n      if (\n        activeItem < next || (activeItem === 0 && next === slides.length - 1)\n      ) {\n        this.direction = RTL ? \"right\" : \"left\"; // next\n      } else if (\n        activeItem > next || (activeItem === slides.length - 1 && next === 0)\n      ) {\n        this.direction = RTL ? \"left\" : \"right\"; // prev\n      }\n      const { direction } = this;\n\n      // find the right next index\n      if (next < 0) {\n        next = slides.length - 1;\n      } else if (next >= slides.length) {\n        next = 0;\n      }\n\n      // orientation, class name, eventProperties\n      const orientation = direction === \"left\" ? \"next\" : \"prev\";\n      const directionClass = direction === \"left\" ? \"start\" : \"end\";\n\n      const eventProperties = {\n        relatedTarget: slides[next],\n        from: activeItem,\n        to: next,\n        direction,\n      };\n\n      // update event properties\n      ObjectAssign(carouselSlideEvent, eventProperties);\n      ObjectAssign(carouselSlidEvent, eventProperties);\n\n      // discontinue when prevented\n      dispatchEvent(element, carouselSlideEvent);\n      if (!carouselSlideEvent.defaultPrevented) {\n        // update index\n        this.index = next;\n        activateCarouselIndicator(this, next);\n\n        if (\n          getElementTransitionDuration(slides[next]) &&\n          hasClass(element, \"slide\")\n        ) {\n          Timer.set(\n            element,\n            () => {\n              addClass(slides[next], `${carouselItem}-${orientation}`);\n              reflow(slides[next]);\n              addClass(slides[next], `${carouselItem}-${directionClass}`);\n              addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n              // the instance might get diposed mid-animation\n              emulateTransitionEnd(\n                slides[next],\n                () =>\n                  this.slides && this.slides.length &&\n                  carouselTransitionEndHandler(this),\n              );\n            },\n            0,\n            dataBsSlide,\n          );\n        } else {\n          addClass(slides[next], activeClass);\n          removeClass(slides[activeItem], activeClass);\n\n          Timer.set(\n            element,\n            () => {\n              Timer.clear(element, dataBsSlide);\n              // check for element, might have been disposed\n              // istanbul ignore else @preserve\n              if (element && options.interval && !this.isPaused) {\n                this.cycle();\n              }\n\n              dispatchEvent(element, carouselSlidEvent);\n            },\n            0,\n            dataBsSlide,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles all event listeners for the `Carousel` instance.\n   *\n   * @param add when `TRUE` event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const { element, options, slides, controls, indicators } = this;\n    const { touch, pause, interval, keyboard } = options;\n    const action = add ? addListener : removeListener;\n\n    if (pause && interval) {\n      action(element, mouseenterEvent, carouselPauseHandler);\n      action(element, mouseleaveEvent, carouselResumeHandler);\n    }\n\n    if (touch && slides.length > 2) {\n      action(\n        element,\n        pointerdownEvent,\n        carouselPointerDownHandler,\n        passiveHandler,\n      );\n      action(element, touchstartEvent, carouselDragHandler, { passive: false });\n      action(element, dragstartEvent, carouselDragHandler, { passive: false });\n    }\n\n    // istanbul ignore else @preserve\n    if (controls.length) {\n      controls.forEach((arrow) => {\n        // istanbul ignore else @preserve\n        if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler);\n      });\n    }\n\n    // istanbul ignore else @preserve\n    if (indicators.length) {\n      indicators.forEach((indicator) => {\n        action(indicator, mouseclickEvent, carouselIndicatorHandler);\n      });\n    }\n\n    if (keyboard) {\n      action(getDocument(element), keydownEvent, carouselKeyHandler);\n    }\n  };\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    this._toggleEventListeners();\n    super.dispose();\n\n    // istanbul ignore next @preserve - impossible to test in playwright\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = \"collapsing\";\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = \"collapse\";\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = \"Collapse\";\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getDocument,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isString,\n  mouseclickEvent,\n  noop,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport collapsingClass from \"../strings/collapsingClass\";\nimport showClass from \"../strings/showClass\";\nimport collapseString from \"../strings/collapseString\";\nimport collapseComponent from \"../strings/collapseComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { CollapseEvent, CollapseOptions } from \"../interface/collapse\";\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) =>\n  getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach((btn) => setAttribute(btn, ariaExpanded, \"true\"));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: \"\" });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element);\n    setElementStyle(element, { height: \"0px\" });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      // istanbul ignore else @preserve\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach((btn) => setAttribute(btn, ariaExpanded, \"false\"));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: \"\" });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target &&\n    closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  // istanbul ignore else @preserve\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === \"A\") e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent, doc)\n      : null;\n\n    // add event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    // istanbul ignore else @preserve\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach((btn) => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [\n        ...querySelectorAll(`.${collapseString}.${showClass}`, parent),\n      ].find((i) => getCollapseInstance(i));\n      activeCollapseInstance = activeCollapse &&\n        getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach((btn) => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach((btn) => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /**\n   * Toggles on/off the event listener(s) of the `Collapse` instance.\n   *\n   * @param add when `true`, the event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) =>\n        action(btn, mouseclickEvent, collapseClickHandler)\n      );\n    }\n  };\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    this._toggleEventListeners();\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = [\"dropdown\", \"dropup\", \"dropstart\", \"dropend\"];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = \"Dropdown\";\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = \"dropdown-menu\";\nexport default dropdownMenuClass;\n","import { closest, getAttribute, hasAttribute } from \"@thednp/shorty\";\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, \"A\");\n  return (\n    (element.tagName === \"A\" &&\n      // anchor href starts with #\n      hasAttribute(element, \"href\") &&\n      (getAttribute(element, \"href\") as string).slice(-1) === \"#\") ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, \"href\") &&\n      (getAttribute(parentAnchor, \"href\") as string).slice(-1) === \"#\")\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  focus,\n  focusEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  keyArrowDown,\n  keyArrowUp,\n  keydownEvent,\n  keyEscape,\n  keyupEvent,\n  mouseclickEvent,\n  mousedownEvent,\n  ObjectAssign,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport showClass from \"../strings/showClass\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dropdownClasses from \"../strings/dropdownClasses\";\nimport dropdownComponent from \"../strings/dropdownComponent\";\nimport dropdownMenuClass from \"../strings/dropdownMenuClass\";\n\nimport isEmptyAnchor from \"../util/isEmptyAnchor\";\nimport BaseComponent from \"./base-component\";\nimport type { DropdownEvent, DropdownOptions } from \"../interface/dropdown\";\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] =\n  dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) =>\n  getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = [\"A\", \"BUTTON\"];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: \"dynamic\", // [dynamic|static]\n};\n\ntype DropdownEventProps = { relatedTarget: HTMLElement };\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `show.bs.${dropdownString}`,\n);\nconst shownDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `shown.bs.${dropdownString}`,\n);\nconst hideDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `hide.bs.${dropdownString}`,\n);\nconst hiddenDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  // istanbul ignore else @preserve: this test requires a navbar\n  if (getElementStyle(menu, \"position\") !== \"static\") {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = [\"margin\", \"top\", \"bottom\", \"left\", \"right\"];\n    resetProps.forEach((p) => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = \"\";\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass = dropdownClasses.find((c) =>\n      hasClass(parentElement, c)\n    ) ||\n      // istanbul ignore next @preserve: fallback position\n      dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: \"100%\" },\n      dropup: { top: \"auto\", bottom: \"100%\" },\n      dropstart: RTL\n        ? { left: \"100%\", right: \"auto\" }\n        : { left: \"auto\", right: \"100%\" },\n      dropend: RTL\n        ? { left: \"auto\", right: \"100%\" }\n        : { left: \"100%\", right: \"auto\" },\n      menuStart: RTL\n        ? { right: \"0\", left: \"auto\" }\n        : { right: \"auto\", left: \"0\" },\n      menuEnd: RTL\n        ? { right: \"auto\", left: \"0\" }\n        : { right: \"0\", left: \"auto\" },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed =\n      targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed =\n      targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) &&\n      targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) &&\n      targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (\n      horizontalClass.includes(positionClass) && leftFullExceed &&\n      rightFullExceed\n    ) {\n      positionClass = dropdownString;\n    }\n    if (\n      positionClass === dropstartString &&\n      (!RTL ? leftFullExceed : rightFullExceed)\n    ) {\n      positionClass = dropendString;\n    }\n    if (\n      positionClass === dropendString &&\n      (RTL ? leftFullExceed : rightFullExceed)\n    ) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: \"auto\",\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust:\n        | { left: \"auto\" | number; right: \"auto\" | number }\n        | undefined = { left: \"auto\", right: \"auto\" };\n      // istanbul ignore else @preserve\n      if (!leftExceed && rightExceed && !RTL) {\n        posAjust = { left: \"auto\", right: 0 };\n      }\n      // istanbul ignore else @preserve\n      if (leftExceed && !rightExceed && RTL) {\n        posAjust = { left: 0, right: \"auto\" };\n      }\n      // istanbul ignore else @preserve\n      if (posAjust) {\n        ObjectAssign(dropdownPosition[positionClass], posAjust);\n      }\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map((x) => (x ? `${x}px` : x)).join(\" \")}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      // istanbul ignore else @preserve\n      if (menuEnd) {\n        const endAdjust = (!RTL && leftExceed) || (RTL && rightExceed)\n          ? \"menuStart\"\n          // istanbul ignore next @preserve\n          : \"menuEnd\";\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map((c) => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (\n        firstElementChild && menuFocusTags.includes(firstElementChild.tagName)\n      ) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter((c) => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options, menu } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  // istanbul ignore else @preserve\n  if (options.display === \"dynamic\") {\n    if (self.open) self._observer.observe(menu);\n    else self._observer.disconnect();\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (\n  element: HTMLElement,\n): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, \"btn-group\", \"input-group\"]\n    .map((c) =>\n      getElementsByClassName(`${c} ${showClass}`, getDocument(element))\n    )\n    .find((x) => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)]\n      .find((x) =>\n        dropdownClasses.some((c) => c === getAttribute(x, dataBsToggle))\n      );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  // istanbul ignore else @preserve\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    // istanbul ignore else @preserve\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm = parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === \"form\" || closest(target, \"form\") !== null);\n\n      if (\n        [mouseclickEvent, mousedownEvent].includes(type) &&\n        isEmptyAnchor(target)\n      ) {\n        e.preventDefault();\n      }\n\n      // istanbul ignore else @preserve\n      if (\n        !isForm && type !== focusEvent && target !== element && target !== menu\n      ) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    e.stopPropagation();\n    self.toggle();\n    // istanbul ignore else @preserve\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  // istanbul ignore else @preserve\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  // istanbul ignore else @preserve\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (\n      menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)\n    ) {\n      let idx = menuItems.indexOf(activeElement);\n      // istanbul ignore else @preserve\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      // istanbul ignore else @preserve\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownIntersectionHandler(target: HTMLElement) {\n  const element = getCurrentOpenDropdown(target);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n  declare _observer: IntersectionObserver;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(\n      dropdownMenuClass,\n      parentElement as ParentNode,\n    );\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n      this._observer = new IntersectionObserver(\n        ([entry]) => dropdownIntersectionHandler(entry.target as HTMLElement),\n        { threshold: 1 },\n      );\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore else @preserve\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement &&\n        getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(\n        (e) => {\n          e.relatedTarget = element;\n        },\n      );\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, \"true\");\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore else @preserve\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach((e) => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, \"false\");\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = \"modal\";\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = \"Modal\";\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = \"Offcanvas\";\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = \"fixed-top\";\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = \"fixed-bottom\";\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = \"sticky-top\";\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = \"position-sticky\";\nexport default positionStickyClass;\n","import {\n  getDocumentBody,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getWindow,\n  hasClass,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport fixedTopClass from \"../strings/fixedTopClass\";\nimport fixedBottomClass from \"../strings/fixedBottomClass\";\nimport stickyTopClass from \"../strings/stickyTopClass\";\nimport positionStickyClass from \"../strings/positionStickyClass\";\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName(\"is-fixed\", parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: \"\",\n    overflow: \"\",\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore else @preserve\n  if (fixedItems.length) {\n    fixedItems.forEach((fixed) => {\n      setElementStyle(fixed, {\n        paddingRight: \"\",\n        marginRight: \"\",\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, \"paddingRight\"), 10);\n  const isOpen = getElementStyle(bd, \"overflow\") === \"hidden\";\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore else @preserve\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: \"hidden\",\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    // istanbul ignore else @preserve\n    if (fixedItems.length) {\n      fixedItems.forEach((fixed) => {\n        const itemPadValue = getElementStyle(fixed, \"paddingRight\");\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        // istanbul ignore else @preserve\n        if (\n          [stickyTopClass, positionStickyClass].some((c) => hasClass(fixed, c))\n        ) {\n          const itemMValue = getElementStyle(fixed, \"marginRight\");\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = \"offcanvas\";\nexport default offcanvasString;\n","import { createElement, getDocumentBody, isNode } from \"@thednp/shorty\";\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({\n  tagName: \"div\",\n  className: \"popup-container\",\n}) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) &&\n    customContainer.nodeName === \"BODY\";\n  const lookup = isNode(customContainer) && !containerIsBody\n    ? customContainer\n    : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  // istanbul ignore else @preserve\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) &&\n    customContainer.nodeName === \"BODY\";\n  const lookup = isNode(customContainer) && !containerIsBody\n    ? customContainer\n    : popupContainer;\n\n  // istanbul ignore else @preserve\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== \"BODY\"\n    ? customContainer\n    : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { appendPopup, hasPopup, popupContainer, removePopup };\n","import {\n  addClass,\n  createElement,\n  getDocument,\n  getDocumentBody,\n  hasClass,\n  querySelector,\n  reflow,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport modalString from \"../strings/modalString\";\nimport offcanvasString from \"../strings/offcanvasString\";\nimport { resetScrollbar } from \"./scrollbar\";\nimport { appendPopup, removePopup } from \"./popupContainer\";\n\nconst backdropString = \"backdrop\";\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement(\"div\") as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(\n    `${modalActiveSelector},${offcanvasActiveSelector}`,\n    getDocument(element),\n  );\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach((c) => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (\n  element: HTMLElement,\n  hasFade: boolean,\n  isModal?: boolean,\n) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  modalBackdropClass,\n  offcanvasActiveSelector,\n  offcanvasBackdropClass,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n};\n","import { getElementStyle, isHTMLElement } from \"@thednp/shorty\";\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) &&\n    getElementStyle(element, \"visibility\") !== \"hidden\" &&\n    element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  addClass,\n  ariaHidden,\n  ariaModal,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  isRTL,\n  KeyboardEvent,\n  keydownEvent,\n  keyEscape,\n  mouseclickEvent,\n  MouseEvent,\n  querySelector,\n  querySelectorAll,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  Timer,\n  toggleFocusTrap,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport modalString from \"../strings/modalString\";\nimport modalComponent from \"../strings/modalComponent\";\nimport offcanvasComponent from \"../strings/offcanvasComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport { measureScrollbar, setScrollbar } from \"../util/scrollbar\";\nimport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n} from \"../util/backdrop\";\nimport isVisible from \"../util/isVisible\";\nimport BaseComponent from \"./base-component\";\nimport { ModalEvent, ModalOptions } from \"../interface/modal\";\nimport { hasPopup } from \"../util/popupContainer\";\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\ntype ModalEventProps = {\n  relatedTarget: HTMLElement | undefined;\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) =>\n  getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `show.bs.${modalString}`,\n);\nconst shownModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `shown.bs.${modalString}`,\n);\nconst hideModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `hide.bs.${modalString}`,\n);\nconst hiddenModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `hidden.bs.${modalString}`,\n);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } =\n    element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  // istanbul ignore next @preserve: impossible to test?\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element)\n      ? \"paddingRight\"\n      // istanbul ignore next @preserve\n      : \"paddingLeft\";\n    const padStyle = { [pad]: `${scrollbarWidth}px` } as Partial<\n      CSS4Declaration\n    >;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n\n  if (add) self._observer.observe(element);\n  else self._observer.disconnect();\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: \"\", display: \"\" });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  // istanbul ignore else @preserve\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n  toggleFocusTrap(element);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n  toggleFocusTrap(element);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: \"block\" });\n  setModalScrollbar(self);\n  // istanbul ignore else @preserve\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: \"hidden\" });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, \"true\");\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (\n    options.backdrop && hasFade && hasClass(overlay, showClass) &&\n    !getCurrentOpen(element)\n  ) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n\n  const trigger = target && closest(target, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    // istanbul ignore else @preserve\n    if (trigger && trigger.tagName === \"A\") e.preventDefault();\n    self.relatedTarget = trigger;\n    self.toggle();\n  }\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent<HTMLElement>) => {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    const { options } = self;\n    // istanbul ignore else @preserve\n    if (\n      options.keyboard &&\n      code === keyEscape && // the keyboard option is enabled and the key is 27\n      hasClass(element, showClass)\n    ) {\n      // the modal is not visible\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nconst modalDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { currentTarget } = e;\n  const self = currentTarget && getModalInstance(currentTarget);\n\n  // this timer is needed\n  // istanbul ignore else @preserve\n  if (self && currentTarget && !Timer.get(currentTarget)) {\n    const { options, isStatic, modalDialog } = self;\n    const { backdrop } = options;\n    const { target } = e;\n\n    const selectedText = getDocument(currentTarget)?.getSelection()?.toString()\n      .length;\n    const targetInsideDialog = modalDialog.contains(target);\n    const dismiss = target && closest(target, modalDismissSelector);\n\n    // istanbul ignore else @preserve\n    if (isStatic && !targetInsideDialog) {\n      Timer.set(\n        currentTarget,\n        () => {\n          addClass(currentTarget, modalStaticClass);\n          emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n        },\n        17,\n      );\n    } else if (\n      dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)\n    ) {\n      self.relatedTarget = dismiss || null;\n      self.hide();\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n  declare _observer: ResizeObserver;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    // istanbul ignore else @preserve\n    if (modalDialog) {\n      this.modalDialog = modalDialog;\n      // modal can have multiple triggering elements\n      this.triggers = [\n        ...querySelectorAll(modalToggleSelector, getDocument(element)),\n      ].filter(\n        (btn) => getTargetElement(btn) === element,\n      );\n\n      // additional internals\n      this.isStatic = this.options.backdrop === \"static\";\n      this.hasFade = hasClass(element, fadeClass);\n      this.relatedTarget = null;\n      this._observer = new ResizeObserver(() => this.update());\n\n      // attach event listeners\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    // istanbul ignore else @preserve\n    if (!hasClass(element, showClass)) {\n      showModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showModalEvent);\n      if (!showModalEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n\n        // istanbul ignore else @preserve\n        if (currentOpen && currentOpen !== element) {\n          const that = getModalInstance(currentOpen) ||\n            // istanbul ignore next @preserve\n            getInstance<typeof BaseComponent & { hide: () => void }>(\n              currentOpen,\n              offcanvasComponent,\n            );\n          // istanbul ignore else @preserve\n          if (that) that.hide();\n        }\n        if (backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, hasFade, true);\n          } else {\n            toggleOverlayType(true);\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeModalShow(this), overlayDelay);\n        } else {\n          beforeModalShow(this);\n          // istanbul ignore else @preserve\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    // istanbul ignore else @preserve\n    if (hasClass(element, showClass)) {\n      hideModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideModalEvent);\n\n      // istanbul ignore else @preserve\n      if (!hideModalEvent.defaultPrevented) {\n        removeClass(element, showClass);\n        setAttribute(element, ariaHidden, \"true\");\n        removeAttribute(element, ariaModal);\n\n        if (hasFade) {\n          emulateTransitionEnd(element, () => beforeModalHide(this));\n        } else {\n          beforeModalHide(this);\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    // istanbul ignore else @preserve\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener of the `Modal` instance.\n   *\n   * @param add when `true`, event listener(s) is/are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) =>\n        action(btn, mouseclickEvent, modalClickHandler)\n      );\n    }\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { modalDialog, hasFade } = clone;\n    const callback = () => setTimeout(() => super.dispose(), 17);\n\n    this.hide();\n    this._toggleEventListeners();\n\n    if (hasFade) {\n      // use transitionend callback\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  addClass,\n  ariaHidden,\n  ariaModal,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  keydownEvent,\n  keyEscape,\n  mouseclickEvent,\n  querySelector,\n  querySelectorAll,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  toggleFocusTrap,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport showClass from \"../strings/showClass\";\nimport offcanvasString from \"../strings/offcanvasString\";\nimport offcanvasComponent from \"../strings/offcanvasComponent\";\nimport modalComponent from \"../strings/modalComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport isVisible from \"../util/isVisible\";\nimport { setScrollbar } from \"../util/scrollbar\";\nimport { hasPopup } from \"../util/popupContainer\";\nimport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  offcanvasActiveSelector,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n} from \"../util/backdrop\";\nimport BaseComponent from \"./base-component\";\nimport { OffcanvasEvent, OffcanvasOptions } from \"../interface/offcanvas\";\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\ntype OffCanvasEventProps = {\n  relatedTarget: HTMLElement | undefined;\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) =>\n  getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  // istanbul ignore else @preserve\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: \"hidden\" });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: \"visible\" });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n  }\n  emulateTransitionEnd(element, () => hideOffcanvasComplete(self));\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    // istanbul ignore else @preserve\n    if (trigger && trigger.tagName === \"A\") {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(\n    offcanvasActiveSelector,\n    getDocument(target as Node),\n  );\n  const offCanvasDismiss = querySelector(\n    offcanvasDismissSelector,\n    element as HTMLElement | undefined,\n  );\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    const { options, triggers } = self;\n    const { backdrop } = options;\n    const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n    const selection = getDocument(element).getSelection();\n\n    // istanbul ignore else: a filter is required here @preserve\n    if (!overlay.contains(target as HTMLElement) || backdrop !== \"static\") {\n      // istanbul ignore else @preserve\n      if (\n        !(selection && selection.toString().length) &&\n        ((!element.contains(target as HTMLElement) &&\n          backdrop &&\n          // istanbul ignore next @preserve\n          (!trigger || triggers.includes(target as HTMLElement))) ||\n          (offCanvasDismiss &&\n            offCanvasDismiss.contains(target as HTMLElement)))\n      ) {\n        self.relatedTarget =\n          offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)\n            ? offCanvasDismiss\n            : null;\n        self.hide();\n      }\n\n      // istanbul ignore next @preserve\n      if (trigger && trigger.tagName === \"A\") e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(\n    offcanvasActiveSelector,\n    getDocument(target as Node),\n  );\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    // istanbul ignore else @preserve\n    if (self.options.keyboard && code === keyEscape) {\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, \"true\");\n  setAttribute(element, \"role\", \"dialog\");\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n  toggleFocusTrap(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, \"true\");\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, \"role\");\n  setElementStyle(element, { visibility: \"\" });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget ||\n    triggers.find(isVisible);\n  // istanbul ignore else @preserve\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n  toggleFocusTrap(element);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(\n    target: HTMLElement | string,\n    config?: Partial<OffcanvasOptions>,\n  ) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [\n      ...querySelectorAll(offcanvasToggleSelector, getDocument(element)),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showOffcanvasEvent);\n\n      if (!showOffcanvasEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n        if (currentOpen && currentOpen !== element) {\n          const that = getOffcanvasInstance(currentOpen) ||\n            // istanbul ignore next @preserve\n            getInstance<typeof BaseComponent & { hide: () => void }>(\n              currentOpen,\n              modalComponent,\n            );\n\n          // istanbul ignore else @preserve\n          if (that) that.hide();\n        }\n\n        if (options.backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, true);\n          } else {\n            toggleOverlayType();\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n        } else {\n          beforeOffcanvasShow(this);\n          // istanbul ignore next @preserve - this test was done on Modal\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideOffcanvasEvent);\n      if (!hideOffcanvasEvent.defaultPrevented) {\n        addClass(element, offcanvasTogglingClass);\n        removeClass(element, showClass);\n        beforeOffcanvasHide(this);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listeners.\n   *\n   * @param self the `Offcanvas` instance\n   * @param add when *true*, listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    this.triggers.forEach((btn) =>\n      action(btn, mouseclickEvent, offcanvasTriggerHandler)\n    );\n  };\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const { element } = this;\n    const isOpen = hasClass(element, showClass);\n    const callback = () => setTimeout(() => super.dispose(), 1);\n\n    this.hide();\n    this._toggleEventListeners();\n\n    if (isOpen) {\n      emulateTransitionEnd(element, callback);\n      // istanbul ignore next @preserve\n    } else {\n      callback();\n    }\n  }\n}\n","/** @type {string} */\nconst popoverString = \"popover\";\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = \"Popover\";\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = \"tooltip\";\nexport default tooltipString;\n","import tooltipString from \"../strings/tooltipString\";\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : \"\";\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${\n    header + arrow + body\n  }</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: \"top\",\n  bottom: \"bottom\",\n  left: \"start\",\n  right: \"end\",\n};\n\nexport default tipClassPositions;\n","import {\n  createCustomEvent,\n  dispatchEvent,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isHTMLElement,\n  isRTL,\n  setElementStyle,\n  toLowerCase,\n} from \"@thednp/shorty\";\n\nimport popoverComponent from \"../strings/popoverComponent\";\nimport tipClassPositions from \"./tipClassPositions\";\nimport Tooltip from \"../components/tooltip\";\nimport type { TooltipEvent } from \"../interface/tooltip\";\nimport type { PopoverEvent } from \"../interface/popover\";\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n\n  // istanbul ignore else @preserve\n  if (tooltip) {\n    const tipPositions = { ...tipClassPositions };\n    const RTL = isRTL(element);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      // top: '0px', left: '0px', right: '', bottom: '',\n      top: \"\",\n      left: \"\",\n      right: \"\",\n      bottom: \"\",\n    });\n    const isPopover = self.name === popoverComponent;\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } =\n      getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } =\n      container as HTMLElement;\n    const parentPosition = getElementStyle(\n      container as HTMLElement,\n      \"position\",\n    );\n    const fixedParent = parentPosition === \"fixed\";\n    const scrollbarWidth = fixedParent\n      ? Math.abs(parentCWidth - parentOWidth)\n      : Math.abs(htmlcw - htmlow);\n    const leftBoundry = RTL && fixedParent\n      // istanbul ignore next @preserve\n      ? scrollbarWidth\n      : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = getBoundingClientRect(element, true);\n    const { x, y } = {\n      x: elemRectLeft,\n      y: elemRectTop,\n    };\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: \"\",\n      left: \"\",\n      right: \"\",\n      bottom: \"\",\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = \"\";\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = \"\";\n    let arrowTop: number | string = \"\";\n    let arrowLeft: number | string = \"\";\n    let arrowRight: number | string = \"\";\n\n    const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n    const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed =\n      elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed =\n      elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = [\"left\", \"right\"];\n    const verticals = [\"top\", \"bottom\"];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement)\n      ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry\n      : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed\n      ? \"top\"\n      : placement;\n    // recompute placement\n    placement = placement === \"top\" && topExceed ? \"bottom\" : placement;\n    placement = placement === \"bottom\" && bottomExceed ? \"top\" : placement;\n    placement = placement === \"left\" && leftExceed ? \"right\" : placement;\n    placement = placement === \"right\" && rightExceed\n      ? \"left\"\n      // istanbul ignore next @preserve\n      : placement;\n\n    // update tooltip/popover class\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(\n        tipClasses,\n        tipPositions[placement],\n      );\n    }\n\n    // compute tooltip / popover coordinates\n    // istanbul ignore else @preserve\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === \"left\") {\n        // LEFT\n        leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n      } else {\n        // RIGHT\n        leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = y;\n        bottomPosition = \"\";\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = y - tipHeight + elemHeight;\n        bottomPosition = \"\";\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = y - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === \"top\") {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = \"auto\";\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === \"\" ? \"\" : `${bottomPosition}px`,\n      left: leftPosition === \"auto\" ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== \"\" ? `${rightPosition}px` : \"\",\n    });\n\n    // update arrow placement\n    // istanbul ignore else @preserve\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== \"\") {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== \"\") {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== \"\") {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<\n      Record<string, unknown>,\n      TooltipEvent | PopoverEvent\n    >(\n      `updated.bs.${toLowerCase(self.name)}`,\n    );\n    dispatchEvent(element, updatedTooltipEvent);\n  }\n};\n\nexport default styleTip;\n","import getTipTemplate from \"./getTipTemplate\";\nimport tooltipString from \"../strings/tooltipString\";\nimport { TooltipOptions } from \"../interface/tooltip\";\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: \"\",\n  customClass: \"\",\n  trigger: \"hover focus\",\n  placement: \"top\",\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: \"\",\n  dismissible: false,\n  btnClose: \"\",\n};\nexport default tooltipDefaults;\n","var x = Object.defineProperty;\nvar A = (t, e, n) => e in t ? x(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n;\nvar a = (t, e, n) => A(t, typeof e != \"symbol\" ? e + \"\" : e, n);\nconst E = \"DOMContentLoaded\", B = navigator.userAgentData, b = B, { userAgent: T } = navigator, m = T, k = /iPhone|iPad|iPod|Android/i;\n// istanbul ignore else @preserve\nb ? b.brands.some((t) => k.test(t.brand)) : k.test(m);\nconst v = /(iPhone|iPod|iPad)/;\nb ? b.brands.some(\n  (t) => v.test(t.brand)\n) : (\n  /* istanbul ignore next @preserve */\n  v.test(m)\n);\nm && m.includes(\"Firefox\");\nconst { head: g } = document;\n[\"webkitPerspective\", \"perspective\"].some(\n  (t) => t in g.style\n);\nconst C = (t, e, n, i) => {\n  const o = i || !1;\n  t.addEventListener(\n    e,\n    n,\n    o\n  );\n}, $ = (t, e, n, i) => {\n  const o = i || !1;\n  t.removeEventListener(\n    e,\n    n,\n    o\n  );\n}, F = (t, e, n, i) => {\n  const o = (s) => {\n    // istanbul ignore else @preserve\n    (s.target === t || s.currentTarget === t) && (n.apply(t, [s]), $(t, e, o, i));\n  };\n  C(t, e, o, i);\n}, L = () => {\n};\n(() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    // istanbul ignore next @preserve\n    F(document, E, L, e);\n  } catch {\n  }\n  return t;\n})();\n[\"webkitTransform\", \"transform\"].some(\n  (t) => t in g.style\n);\n[\"webkitAnimation\", \"animation\"].some(\n  (t) => t in g.style\n);\n[\"webkitTransition\", \"transition\"].some(\n  (t) => t in g.style\n);\nconst O = (t) => t != null && typeof t == \"object\" || !1, V = (t) => O(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(\n  (e) => t.nodeType === e\n) || !1, H = (t) => V(t) && t.nodeType === 1 || !1, w = (t, e) => {\n  const { width: n, height: i, top: o, right: s, bottom: d, left: h } = t.getBoundingClientRect();\n  let r = 1, c = 1;\n  return {\n    width: n / r,\n    height: i / c,\n    top: o / c,\n    right: s / r,\n    bottom: d / c,\n    left: h / r,\n    x: h / r,\n    y: o / c\n  };\n}, j = (t) => typeof t == \"function\" || !1, P = \"PositionObserver Error\";\nclass D {\n  /**\n   * The constructor takes a single argument, callback, which is called\n   * whenever the position of an observed element changes. The callback function\n   * should take an array of `PositionObserverEntry` objects as its only argument.\n   *\n   * @param callback the callback that applies to all targets of this observer\n   */\n  constructor(e, n) {\n    a(this, \"entries\");\n    a(this, \"_tick\");\n    a(this, \"_root\");\n    a(this, \"_callback\");\n    /**\n     * Start observing the position of the specified element.\n     * If the element is not currently attached to the DOM,\n     * it will be attached before observation begins.\n     * @param target\n     */\n    a(this, \"observe\", (e) => {\n      if (!H(e))\n        throw new Error(\n          `${P}: ${e} is not an instance of HTMLElement.`\n        );\n      const { clientWidth: n, clientHeight: i } = this._root, o = w(e), { left: s, top: d, bottom: h, right: r, width: c, height: l } = o, u = d > 1 - l && s > 1 - c && h <= i + l - 1 && r <= n + c - 1;\n      this.entries.push({ target: e, boundingBox: o, isVisible: u }), this._tick = requestAnimationFrame(this._runCallback);\n    });\n    /**\n     * Stop observing the position of the specified element.\n     * @param target\n     */\n    a(this, \"unobserve\", (e) => {\n      const n = this.entries.findIndex((i) => i.target === e);\n      this.entries.splice(n, 1);\n    });\n    /**\n     * Private method responsible for all the heavy duty.\n     */\n    a(this, \"_runCallback\", () => {\n      /* istanbul ignore if @preserve - a guard must be set */\n      if (!this.entries.length) return;\n      const e = [], { clientWidth: n, clientHeight: i } = this._root;\n      this.entries.forEach((o, s) => {\n        const { target: d, boundingBox: h } = o, r = w(d), { left: c, top: l, bottom: u, right: f, width: p, height: _ } = r;\n        if (h.left !== c || h.top !== l || h.right !== f || h.bottom !== u) {\n          const y = l > 1 - _ && c > 1 - p && u <= i + _ - 1 && f <= n + p - 1;\n          this.entries[s].boundingBox = r, this.entries[s].isVisible = y, e.push({ target: d, boundingBox: r, isVisible: y });\n        }\n      }), e.length && this._callback(e), requestAnimationFrame(this._runCallback);\n    });\n    /**\n     * Immediately stop observing all elements.\n     */\n    a(this, \"disconnect\", () => {\n      cancelAnimationFrame(this._tick), this.entries.length = 0, this._tick = 0;\n    });\n    if (!j(e))\n      throw new Error(`${P}: ${e} is not a function.`);\n    this.entries = [], this._callback = e, this._root = (n == null ? void 0 : n.root) || (document == null ? void 0 : document.documentElement), this._tick = 0;\n  }\n}\nexport {\n  D as default\n};\n//# sourceMappingURL=index.mjs.map\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = \"data-original-title\";\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = \"Tooltip\";\nexport default tooltipComponent;\n","import {\n  isArray,\n  isFunction,\n  isHTMLElement,\n  isNode,\n  isNodeList,\n  isString,\n} from \"@thednp/shorty\";\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (\n  element: HTMLElement,\n  content: Node[] | Node | string,\n  sanitizeFn?: (s: string) => string,\n) => {\n  // istanbul ignore else @preserve\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, \"text/html\");\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (\n    isNodeList(content) || (isArray(content) && content.every(isNode))\n  ) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import {\n  addClass,\n  createElement,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  querySelector,\n  setAttribute,\n} from \"@thednp/shorty\";\n\nimport tooltipComponent from \"../strings/tooltipComponent\";\nimport tooltipString from \"../strings/tooltipString\";\nimport popoverString from \"../strings/popoverString\";\nimport fadeClass from \"../strings/fadeClass\";\nimport tipClassPositions from \"./tipClassPositions\";\nimport setHtml from \"./setHtml\";\nimport Tooltip from \"../components/tooltip\";\nimport Popover from \"../components/popover\";\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const {\n    title,\n    placement,\n    template,\n    animation,\n    customClass,\n    sanitizeFn,\n    dismissible,\n    content,\n    btnClose,\n  } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = \"end\";\n    tipPositions.right = \"start\";\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement(\"div\") as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    // istanbul ignore next @preserve\n    : undefined;\n\n  const { tooltip } = self;\n  // istanbul ignore else @preserve\n  if (tooltip) {\n    // set id and role attributes\n    setAttribute(tooltip, \"id\", id);\n    setAttribute(tooltip, \"role\", tooltipString);\n\n    const bodyClass = isTooltip\n      ? `${tooltipString}-inner`\n      : `${popoverString}-body`;\n    const tooltipHeader = isTooltip\n      ? null\n      : querySelector(`.${popoverString}-header`, tooltip);\n    const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n    // set arrow and enable access for styleTip\n    self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n    const { arrow } = self;\n\n    if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n    else {\n      const tempTitle = createElement(\"div\") as HTMLElement;\n      setHtml(tempTitle, title, sanitizeFn);\n      titleParts = [...[...tempTitle.childNodes]];\n    }\n\n    if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n    else {\n      const tempContent = createElement(\"div\") as HTMLElement;\n      setHtml(tempContent, content, sanitizeFn);\n      contentParts = [...[...tempContent.childNodes]];\n    }\n\n    // set dismissible button\n    if (dismissible) {\n      if (title) {\n        if (isHTMLElement(btnClose)) {\n          titleParts = [...titleParts, btnClose.cloneNode(true)];\n        } else {\n          const tempBtn = createElement(\"div\") as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          titleParts = [...titleParts, tempBtn.firstChild as Node];\n        }\n      } else {\n        // istanbul ignore else @preserve\n        if (tooltipHeader) tooltipHeader.remove();\n        if (isHTMLElement(btnClose)) {\n          contentParts = [...contentParts, btnClose.cloneNode(true)];\n        } else {\n          const tempBtn = createElement(\"div\") as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          contentParts = [...contentParts, tempBtn.firstChild as Node];\n        }\n      }\n    }\n\n    // fill the template with content from options / data attributes\n    // also sanitize title && content\n    // istanbul ignore else @preserve\n    if (!isTooltip) {\n      // istanbul ignore else @preserve\n      if (title && tooltipHeader) {\n        setHtml(tooltipHeader, titleParts, sanitizeFn);\n      }\n      // istanbul ignore else @preserve\n      if (content && tooltipBody) {\n        setHtml(tooltipBody, contentParts, sanitizeFn);\n      }\n      // set btn\n      self.btn = querySelector(\".btn-close\", tooltip) || undefined;\n    } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n    // Bootstrap 5.2.x\n    // addClass(tooltip, 'position-absolute');\n    addClass(tooltip, \"position-fixed\");\n    addClass(arrow, \"position-absolute\");\n\n    // set popover animation and placement\n    // istanbul ignore else @preserve\n    if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n    // istanbul ignore else @preserve\n    if (animation && !hasClass(tooltip, fadeClass)) {\n      addClass(tooltip, fadeClass);\n    }\n    // istanbul ignore else @preserve\n    if (customClass && !hasClass(tooltip, customClass)) {\n      addClass(tooltip, customClass);\n    }\n    // istanbul ignore else @preserve\n    if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n  }\n};\n\nexport default createTip;\n","import {\n  getDocument,\n  getElementStyle,\n  getParentNode,\n  isShadowRoot,\n  isTableElement,\n} from \"@thednp/shorty\";\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = [\"HTML\", \"BODY\"];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    // istanbul ignore else @preserve\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, \"position\") !== \"relative\" &&\n        containers.slice(i + 1).every((r) =>\n          getElementStyle(r as HTMLElement, \"position\") === \"static\"\n        )\n      ) {\n        return c;\n      }\n      return null;\n    }) ||\n    // istanbul ignore next: optional guard\n    getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  addClass,\n  ariaDescribedBy,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  focusEvent,\n  focusinEvent,\n  focusoutEvent,\n  getAttribute,\n  getDocument,\n  getElementStyle,\n  getInstance,\n  getUID,\n  hasAttribute,\n  hasClass,\n  isApple,\n  mouseclickEvent,\n  mousedownEvent,\n  mouseenterEvent,\n  mousehoverEvent,\n  mouseleaveEvent,\n  ObjectAssign,\n  passiveHandler,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  Timer,\n  toLowerCase,\n  touchstartEvent,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\nimport PositionObserver from \"@thednp/position-observer\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dataOriginalTitle from \"../strings/dataOriginalTitle\";\nimport showClass from \"../strings/showClass\";\nimport tooltipString from \"../strings/tooltipString\";\nimport tooltipComponent from \"../strings/tooltipComponent\";\nimport popoverString from \"../strings/popoverString\";\nimport popoverComponent from \"../strings/popoverComponent\";\nimport modalString from \"../strings/modalString\";\nimport offcanvasString from \"../strings/offcanvasString\";\n\nimport styleTip from \"../util/styleTip\";\nimport createTip from \"../util/createTip\";\nimport { appendPopup, hasPopup, removePopup } from \"../util/popupContainer\";\nimport getElementContainer from \"../util/getElementContainer\";\nimport tooltipDefaults from \"../util/tooltipDefaults\";\nimport BaseComponent from \"./base-component\";\nimport type { TooltipEvent, TooltipOptions } from \"../interface/tooltip\";\nimport type { PopoverEvent, PopoverOptions } from \"../interface/popover\";\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector =\n  `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = \"title\";\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n */\nlet getTooltipInstance = (element: HTMLElement) =>\n  getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(\n    tooltip as HTMLElement,\n    container === offsetParent ? container : offsetParent,\n  );\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container, offsetParent } = self;\n\n  return tooltip &&\n    hasPopup(tooltip, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  self._toggleEventListeners();\n\n  // istanbul ignore else @preserve\n  if (\n    hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent\n  ) {\n    toggleTooltipTitle(self);\n  }\n  // istanbul ignore else @preserve\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(\n    getDocument(element),\n    touchstartEvent,\n    self.handleTouch,\n    passiveHandler,\n  );\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<\n    Record<string, never>,\n    TooltipEvent | PopoverEvent\n  >(\n    `shown.bs.${toLowerCase(self.name)}`,\n  );\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, \"in\");\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<\n    Record<string, never>,\n    TooltipEvent | PopoverEvent\n  >(\n    `hidden.bs.${toLowerCase(self.name)}`,\n  );\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, \"out\");\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  // const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  if (add) self._observer.observe(self.element);\n  else self._observer.disconnect();\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) {\n    action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  }\n  if (parentOffcanvas) {\n    action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n  }\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content ||\n      getAttribute(element, titleAtt[0]) ||\n      // istanbul ignore next @preserve\n      \"\",\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n  declare _observer: PositionObserver;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    // istanbul ignore next @preserve: this is to set Popover too\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) =>\n      getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if (!((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      // reset default options\n      ObjectAssign(tooltipDefaults, { titleAttr: \"\" });\n\n      // set title attributes and add event listeners\n      // istanbul ignore else @preserve\n      if (\n        hasAttribute(element, titleAttr) && isTooltip &&\n        typeof options.title === \"string\"\n      ) {\n        toggleTooltipTitle(this, options.title);\n      }\n\n      // set containers\n      this.container = getElementContainer(element);\n      this.offsetParent = [\"sticky\", \"fixed\"].some(\n          (position) =>\n            getElementStyle(this.container as HTMLElement, \"position\") ===\n              position,\n        )\n        ? (this.container as HTMLElement)\n        : getDocument(this.element).body;\n\n      // create tooltip here\n      createTip(this);\n\n      // create observer\n      this._observer = new PositionObserver(() => this.update());\n\n      // attach events\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  // istanbul ignore next @preserve - impossible to test without Apple device\n  handleFocus = () => focus(this.element);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, \"out\");\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, \"out\");\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<\n            Record<string, never>,\n            TooltipEvent | PopoverEvent\n          >(\n            `show.bs.${toLowerCase(this.name)}`,\n          );\n          dispatchEvent(element, showTooltipEvent);\n\n          // istanbul ignore else @preserve\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, tipContainer);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            // istanbul ignore else @preserve\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            // istanbul ignore else @preserve\n            if (animation) {\n              emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            } else tooltipShownAction(this);\n          }\n        },\n        17,\n        \"in\",\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, \"in\");\n\n    // istanbul ignore else @preserve\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<\n            Record<string, never>,\n            TooltipEvent | PopoverEvent\n          >(\n            `hide.bs.${toLowerCase(this.name)}`,\n          );\n          dispatchEvent(element, hideTooltipEvent);\n\n          // istanbul ignore else @preserve\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            // istanbul ignore else @preserve\n            if (animation) {\n              emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            } else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        \"out\",\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip<Tooltip>(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    // istanbul ignore else @preserve\n    if (!enabled) {\n      this._toggleEventListeners(true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, enabled } = this;\n    // istanbul ignore else @preserve\n    if (enabled) {\n      if (tooltip && hasTip(this)) this.hide();\n      this._toggleEventListeners();\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    // istanbul ignore if @preserve\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Toggles on/off the `Tooltip` event listeners.\n   *\n   * @param add when `true`, event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    // btn is only for dismissible popover\n    const { element, options, btn } = this;\n    const { trigger } = options;\n    const isPopover = this.name !== tooltipComponent;\n    const dismissible = isPopover && (options as PopoverOptions).dismissible\n      ? true\n      : false;\n\n    // istanbul ignore else @preserve\n    if (!trigger.includes(\"manual\")) {\n      this.enabled = !!add;\n\n      const triggerOptions = trigger.split(\" \");\n\n      triggerOptions.forEach((tr) => {\n        // istanbul ignore else @preserve\n        if (tr === mousehoverEvent) {\n          action(element, mousedownEvent, this.handleShow);\n          action(element, mouseenterEvent, this.handleShow);\n\n          // istanbul ignore else @preserve\n          if (!dismissible) {\n            action(element, mouseleaveEvent, this.handleHide);\n            action(\n              getDocument(element),\n              touchstartEvent,\n              this.handleTouch,\n              passiveHandler,\n            );\n          }\n        } else if (tr === mouseclickEvent) {\n          action(element, tr, !dismissible ? this.toggle : this.handleShow);\n        } else if (tr === focusEvent) {\n          action(element, focusinEvent, this.handleShow);\n          // istanbul ignore else @preserve\n          if (!dismissible) action(element, focusoutEvent, this.handleHide);\n          // istanbul ignore else @preserve\n          if (isApple) {\n            action(element, mouseclickEvent, this.handleFocus);\n          }\n        }\n        // istanbul ignore else @preserve\n        if (dismissible && btn) {\n          action(btn, mouseclickEvent, this.handleHide);\n        }\n      });\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () =>\n      setTimeout(\n        () => disposeTooltipComplete(clone, () => super.dispose()),\n        17,\n      );\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip as HTMLElement, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { focus, getInstance, ObjectAssign } from \"@thednp/shorty\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport popoverString from \"../strings/popoverString\";\nimport popoverComponent from \"../strings/popoverComponent\";\n\nimport getTipTemplate from \"../util/getTipTemplate\";\nimport styleTip from \"../util/styleTip\";\nimport tooltipDefaults from \"../util/tooltipDefaults\";\nimport Tooltip from \"./tooltip\";\n\nimport type { PopoverOptions /* , PopoverEvent */ } from \"../interface/popover\";\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector =\n  `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: \"\",\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n */\nconst getPopoverInstance = (element: HTMLElement) =>\n  getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    // istanbul ignore else @preserve\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = \"scrollspy\";\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = \"ScrollSpy\";\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  addClass,\n  createCustomEvent,\n  dispatchEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementsByTagName,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  querySelector,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport PositionObserver from \"@thednp/position-observer\";\n\nimport activeClass from \"../strings/activeClass\";\nimport scrollspyString from \"../strings/scrollspyString\";\nimport scrollspyComponent from \"../strings/scrollspyComponent\";\n\nimport BaseComponent from \"./base-component\";\nimport { ScrollSpyEvent, ScrollSpyOptions } from \"../interface/scrollspy\";\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\ntype ScrollSpyEventProps = {\n  relatedTarget: HTMLElement;\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) =>\n  getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<\n  ScrollSpyEventProps,\n  ScrollSpyEvent\n>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } =\n    self;\n  const { offset } = options;\n  const isWin = scrollTarget !== element;\n\n  const links = target && getElementsByTagName(\"A\", target);\n  const doc = getDocument(element);\n  const scrollHEIGHT = scrollTarget\n    ? getScrollHeight(scrollTarget)\n    // istanbul ignore next @preserve\n    : scrollHeight;\n\n  self.scrollTop = scrollTarget.scrollTop;\n\n  // only update items/offsets once or with each mutation\n  // istanbul ignore else @preserve\n  if (\n    links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)\n  ) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.targets = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    Array.from(links).forEach((link) => {\n      href = getAttribute(link, \"href\");\n      targetItem = href && href.charAt(0) === \"#\" && href.slice(-1) !== \"#\" &&\n        querySelector(href, doc);\n\n      if (targetItem) {\n        self.items.push(link);\n        self.targets.push(targetItem);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push(\n          (isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset,\n        );\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return scrollTarget !== element\n    ? scrollTarget.clientHeight\n    : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName(\"A\", target)].forEach((item) => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n\n  // istanbul ignore else @preserve\n  if (isHTMLElement(target)) clear(target);\n\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, \"nav\") || hasClass(parentItem, \"dropdown-menu\")) {\n      parents.push(parentItem);\n    }\n  }\n\n  parents.forEach((menuItem) => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    // istanbul ignore else @preserve\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare targets: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n  declare _observer: PositionObserver;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(\n    target: HTMLElement | string,\n    config?: Partial<ScrollSpyOptions>,\n  ) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(\n      options.target as HTMLElement | string,\n      getDocument(element),\n    );\n\n    // invalidate\n    if (this.target) {\n      // set initial state\n      this.scrollTarget = element.clientHeight < element.scrollHeight\n        ? element\n        : getDocumentElement(element);\n      this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n      // run an initial burst, we need to know the targets\n      this.refresh();\n\n      // create observer\n      this._observer = new PositionObserver(() => this.refresh(), {\n        root: this.scrollTarget,\n      });\n\n      // add event handlers\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    // istanbul ignore else @preserve\n    if (isHTMLElement(target) && target.offsetHeight > 0) {\n      updateSpyTargets(this);\n\n      const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n      if (scrollTop >= maxScroll) {\n        const newActiveItem = items[itemsLength - 1];\n\n        // istanbul ignore else @preserve\n        if (activeItem !== newActiveItem) {\n          activate(this, newActiveItem);\n        }\n        return;\n      }\n\n      const { offsets } = this;\n\n      // istanbul ignore else @preserve\n      if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n        this.activeItem = null;\n        // istanbul ignore else @preserve\n        if (target) clear(target);\n        return;\n      }\n\n      items.forEach((item, i) => {\n        if (\n          activeItem !== item &&\n          scrollTop >= offsets[i] &&\n          (typeof offsets[i + 1] === \"undefined\" || scrollTop < offsets[i + 1])\n        ) {\n          activate(this, item);\n        }\n      });\n    }\n  };\n\n  /**\n   * Toggles on/off the component event listener.\n   *\n   * @param add when `true`, listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    if (add) {\n      if (this.scrollTarget === this.element) {\n        this.targets.forEach((targetItem) =>\n          this._observer.observe(targetItem)\n        );\n      } else {\n        this._observer.observe(this.element);\n      }\n    } else this._observer.disconnect();\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = \"tab\";\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = \"Tab\";\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  addClass,\n  ariaSelected,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getElementsByClassName,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  mouseclickEvent,\n  querySelector,\n  reflow,\n  removeClass,\n  setAttribute,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport collapsingClass from \"../strings/collapsingClass\";\nimport activeClass from \"../strings/activeClass\";\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dropdownClasses from \"../strings/dropdownClasses\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport tabString from \"../strings/tabString\";\nimport tabComponent from \"../strings/tabComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { /* TabOptions, */ TabEvent } from \"../interface/tab\";\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) =>\n  getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\ntype TabEventProps = {\n  relatedTarget: HTMLElement | undefined;\n};\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `show.bs.${tabString}`,\n);\nconst shownTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `shown.bs.${tabString}`,\n);\nconst hideTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `hide.bs.${tabString}`,\n);\nconst hiddenTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `hidden.bs.${tabString}`,\n);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  // istanbul ignore else @preserve\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = \"\";\n    removeClass(tabContent, collapsingClass);\n  }\n\n  // istanbul ignore else @preserve\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) ||\n    // istanbul ignore next @preserve\n    { tab: null };\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) ||\n      // istanbul ignore next @preserve\n      { currentHeight: 0, nextHeight: 0 };\n    // istanbul ignore else @preserve: vitest won't validate this branch\n    if (currentHeight !== nextHeight) {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    } else {\n      triggerTabEnd(self);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) ||\n    // istanbul ignore next @preserve\n    { tab: null, content: null };\n  let currentHeight = 0;\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach((c) => {\n      // istanbul ignore else @preserve\n      if (isHTMLElement(c)) addClass(c, \"overflow-hidden\");\n    });\n    currentHeight = isHTMLElement(content)\n      ? content.scrollHeight // istanbul ignore next @preserve\n      : 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n\n  // istanbul ignore else @preserve\n  if (!showTabEvent.defaultPrevented) {\n    // istanbul ignore else @preserve\n    if (nextContent) addClass(nextContent, activeClass);\n    // istanbul ignore else @preserve\n    if (content) removeClass(content, activeClass);\n\n    // istanbul ignore else @preserve\n    if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n      const nextHeight = nextContent.scrollHeight;\n      tabPrivate.set(element, {\n        currentHeight,\n        nextHeight,\n        tab: null,\n        content: null,\n      });\n\n      addClass(tabContent, collapsingClass);\n      tabContent.style.height = `${currentHeight}px`;\n      reflow(tabContent);\n      [content, nextContent].forEach((c) => {\n        // istanbul ignore else @preserve\n        if (c) removeClass(c, \"overflow-hidden\");\n      });\n    }\n\n    if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n      setTimeout(() => {\n        addClass(nextContent, showClass);\n        emulateTransitionEnd(nextContent, () => {\n          triggerTabShow(self);\n        });\n      }, 1);\n    } else {\n      // istanbul ignore else @preserve\n      if (nextContent) addClass(nextContent, showClass);\n      triggerTabShow(self);\n    }\n\n    // istanbul ignore else @preserve\n    if (tab) dispatchEvent(tab, hiddenTabEvent);\n  }\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (\n  self: Tab,\n): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(nav as HTMLElement | undefined)) {\n    return { tab: null, content: null };\n  }\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  // istanbul ignore else @preserve\n  if (\n    activeTabs.length === 1 &&\n    !dropdownClasses.some((c) =>\n      hasClass(activeTabs[0].parentElement as HTMLElement, c)\n    )\n  ) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement)\n    ? getTargetElement(tab as HTMLElement)\n    : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(\",.\")}`);\n  return dropdown\n    ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown)\n    : null;\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    e.preventDefault();\n    self.show();\n  }\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    // istanbul ignore else @preserve\n    if (content) {\n      const nav = closest(element, \".nav\");\n      const container = closest(content, \".tab-content\");\n\n      this.nav = nav;\n      this.content = content;\n      this.tabContent = container;\n\n      // event targets\n      this.dropdown = getParentDropdown(element);\n\n      // show first Tab instance of none is shown\n      // suggested on #432\n      const { tab } = getActiveTab(this);\n      if (nav && !tab) {\n        const firstTab = querySelector(tabSelector, nav);\n        const firstTabContent = firstTab && getTargetElement(firstTab);\n\n        // istanbul ignore else @preserve\n        if (firstTabContent) {\n          addClass(firstTab, activeClass);\n          addClass(firstTabContent, showClass);\n          addClass(firstTabContent, activeClass);\n          setAttribute(element, ariaSelected, \"true\");\n        }\n      }\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    // istanbul ignore else @preserve\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      // istanbul ignore else @preserve\n      if (nav) {\n        tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n      }\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      // istanbul ignore else @preserve\n      if (isHTMLElement(tab)) {\n        dispatchEvent(tab as EventTarget, hideTabEvent);\n        // istanbul ignore else @preserve\n        if (!hideTabEvent.defaultPrevented) {\n          addClass(element, activeClass);\n          setAttribute(element, ariaSelected, \"true\");\n\n          const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n          if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n            removeClass(activeDropdown, activeClass);\n          }\n\n          // istanbul ignore else @preserve\n          if (nav) {\n            const toggleTab = () => {\n              // istanbul ignore else @preserve\n              if (tab) {\n                removeClass(tab, activeClass);\n                setAttribute(tab, ariaSelected, \"false\");\n              }\n              if (dropdown && !hasClass(dropdown, activeClass)) {\n                addClass(dropdown, activeClass);\n              }\n            };\n\n            if (\n              content &&\n              (hasClass(content, fadeClass) ||\n                (nextContent && hasClass(nextContent, fadeClass)))\n            ) {\n              Timer.set(nav, toggleTab, 1);\n            } else toggleTab();\n          }\n\n          // istanbul ignore else @preserve\n          if (content) {\n            removeClass(content, showClass);\n            if (hasClass(content, fadeClass)) {\n              emulateTransitionEnd(content, () => triggerTabHide(this));\n            } else {\n              triggerTabHide(this);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, tabClickHandler);\n  };\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = \"toast\";\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = \"Toast\";\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  addClass,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focusinEvent,\n  focusoutEvent,\n  getDocument,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  mouseenterEvent,\n  mouseleaveEvent,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport toastString from \"../strings/toastString\";\nimport toastComponent from \"../strings/toastComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport { ToastEvent, ToastOptions } from \"../interface/toast\";\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = \"showing\";\n/** @deprecated */\nconst hideClass = \"hide\";\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) =>\n  getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `show.bs.${toastString}`,\n);\nconst shownToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `shown.bs.${toastString}`,\n);\nconst hideToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `hide.bs.${toastString}`,\n);\nconst hiddenToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `hidden.bs.${toastString}`,\n);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  // istanbul ignore else @preserve\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    // istanbul ignore else @preserve\n    if (trigger && trigger.tagName === \"A\") e.preventDefault();\n    self.relatedTarget = trigger;\n    self.show();\n  }\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  // istanbul ignore else @preserve: a solid filter is required\n  if (\n    self && element !== relatedTarget &&\n    !element.contains(relatedTarget as Node)\n  ) {\n    if ([mouseenterEvent, focusinEvent].includes(type)) {\n      Timer.clear(element, toastString);\n    } else {\n      Timer.set(element, () => self.hide(), self.options.delay, toastString);\n    }\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) {\n      addClass(element, fadeClass);\n    } else if (!options.animation && hasClass(element, fadeClass)) {\n      removeClass(element, fadeClass);\n    }\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [\n      ...querySelectorAll(toastToggleSelector, getDocument(element)),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    // istanbul ignore else @preserve\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (!showToastEvent.defaultPrevented) {\n        showToast(this);\n      }\n    }\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    // istanbul ignore else @preserve\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (!hideToastEvent.defaultPrevented) {\n        hideToast(this);\n      }\n    }\n  };\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, it will add the listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { element, triggers, dismiss, options, hide } = this;\n\n    // istanbul ignore else @preserve\n    if (dismiss) {\n      action(dismiss, mouseclickEvent, hide);\n    }\n\n    // istanbul ignore else @preserve\n    if (options.autohide) {\n      [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(\n        (e) => action(element, e, interactiveToastHandler),\n      );\n    }\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) =>\n        action(btn, mouseclickEvent, toastClickHandler)\n      );\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n    this._toggleEventListeners();\n    Timer.clear(element, toastString);\n\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from \"@thednp/shorty\";\n\nimport { addListener } from \"@thednp/event-listener\";\n\nimport Alert from \"../components/alert\";\nimport Button from \"../components/button\";\nimport Carousel from \"../components/carousel\";\nimport Collapse from \"../components/collapse\";\nimport Dropdown from \"../components/dropdown\";\nimport Modal from \"../components/modal\";\nimport Offcanvas from \"../components/offcanvas\";\nimport Popover from \"../components/popover\";\nimport ScrollSpy from \"../components/scrollspy\";\nimport Tab from \"../components/tab\";\nimport Toast from \"../components/toast\";\nimport Tooltip from \"../components/tooltip\";\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\ntype Component =\n  | Alert\n  | Button\n  | Carousel\n  | Collapse\n  | Dropdown\n  | Modal\n  | Offcanvas\n  | Popover\n  | ScrollSpy\n  | Tab\n  | Toast\n  | Tooltip;\n\n[\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n].forEach((c) => componentsList.set(c.prototype.name, c));\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = (\n  callback: (el: HTMLElement) => Component,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach((x) => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) {\n        (instance as T & { dispose: () => void }).dispose();\n      }\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName(\"*\", lookUp)];\n\n  componentsList.forEach((cs) => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter((item) => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach((comp) => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, \"DOMContentLoaded\", () => initCallback(), {\n    once: true,\n  });\n}\n"],"names":["we","Ae","X","Me","ke","De","P","ot","st","ct","ut","dt","ft","gt","Et","bt","ht","Dt","Ot","Lt","Ut","Ve","qt","Je","Xe","Ye","Ze","sn","Jt","Xt","C","W","Yt","A","Zt","S","z","A$1","V","An","N","R","e","n","o","s","Q","_t","c","$t","j","te","In","zn","Bn","Fn","Hn","v","i","l","E","L","Rn","T","q","G","d","M","ee","K","g","ce","re","qn","a","u","Jn","B","w","ae","Xn","p","r","f","y","J","Zn","to","eo","no","oo","I","ie","m","so","ue","x","le","de","ro","h","ao","k","pe","lo","k$1","F","H","b","me","fo","_a","ge","vo","ho","To","Mo","Do","Ee","Co","be","Io","xo","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","BaseComponent","target","config","__publicField","element","isHTMLElement","isString","querySelector","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","self","dispatchEvent","hasClass","removeClass","emulateTransitionEnd","add","action","addListener","removeListener","dismiss","close","mouseclickEvent","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","isActive","getAttribute","addClass","setAttribute","ariaPressed","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","closest","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","arrowKeyNext","keyArrowLeft","keyArrowRight","arrowKeyPrev","carouselDragHandler","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","activateCarouselIndicator","pointermoveEvent","passiveHandler","pointerupEvent","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","touchstartEvent","dragstartEvent","arrow","indicator","keydownEvent","getElementsByClassName","activeIndex","transitionItem","matches","ar","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","isAnimating","clone","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","getCurrentOpenDropdown","currentParent","type","isForm","mousedownEvent","dropdownClickHandler","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","dropdownIntersectionHandler","entry","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","getWindow","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","padStyle","toggleModalDismiss","modalDismissHandler","modalKeyHandler","afterModalHide","relatedTarget","focusElement","toggleFocusTrap","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","modalClickHandler","currentTarget","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","that","callback","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offcanvasTriggerHandler","offCanvasDismiss","selection","visibleTrigger","isOpen","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","toLowerCase","tooltipDefaults","$","O","D","_","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","isFunction","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","offsetParent","ariaDescribedBy","hasTip","disposeTooltipComplete","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","toggleTooltipOpenHandlers","parentModal","parentOffcanvas","titleAtt","tr","mousehoverEvent","focusinEvent","focusoutEvent","isApple","tipComponent","elem","getUID","position","PositionObserver","outTimer","tipContainer","showTooltipEvent","delay","hideTooltipEvent","enabled","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","scrollTarget","itemsLength","isWin","links","getElementsByTagName","scrollHEIGHT","getScrollHeight","href","targetItem","rect","getOffsetHeight","link","clear","item","activate","parents","parentItem","menuItem","parentLink","scrollTop","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toastClickHandler","interactiveToastHandler","isShown","hide","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","cs","init","selector","removeDataAPI","comp"],"mappings":"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","x_google_ignoreList":[0,1,52]}