{"version":3,"file":"bootstrap-native.js","sources":["../node_modules/@thednp/event-listener/dist/event-listener.cjs","../node_modules/@thednp/shorty/dist/shorty.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["\"use strict\";Object.defineProperty(exports,Symbol.toStringTag,{value:\"Module\"});const r={},a=s=>{const{type:e,currentTarget:c}=s;[...r[e]].forEach(([n,o])=>{c===n&&[...o].forEach(([t,i])=>{t.apply(n,[s]),typeof i==\"object\"&&i.once&&f(n,e,t,i)})})},d=(s,e,c,n)=>{r[e]||(r[e]=new Map);const o=r[e];o.has(s)||o.set(s,new Map);const t=o.get(s),{size:i}=t;t.set(c,n),i||s.addEventListener(e,a,n)},f=(s,e,c,n)=>{const o=r[e],t=o&&o.get(s),i=t&&t.get(c),g=i!==void 0?i:n;t&&t.has(c)&&t.delete(c),o&&(!t||!t.size)&&o.delete(s),(!o||!o.size)&&delete r[e],(!t||!t.size)&&s.removeEventListener(e,a,g)},E=d,L=f;exports.addListener=d;exports.globalListener=a;exports.off=L;exports.on=E;exports.registry=r;exports.removeListener=f;\n//# sourceMappingURL=event-listener.cjs.map\n","const fe = \"aria-checked\", me = \"aria-description\", ge = \"aria-describedby\", ve = \"aria-expanded\", Ee = \"aria-haspopup\", be = \"aria-hidden\", he = \"aria-label\", ye = \"aria-labelledby\", we = \"aria-modal\", Ae = \"aria-pressed\", Se = \"aria-selected\", Me = \"aria-valuemin\", Ne = \"aria-valuemax\", ke = \"aria-valuenow\", Te = \"aria-valuetext\", j = \"abort\", J = \"beforeunload\", K = \"blur\", X = \"change\", Y = \"contextmenu\", H = \"DOMContentLoaded\", Z = \"DOMMouseScroll\", $ = \"error\", _ = \"focus\", tt = \"focusin\", et = \"focusout\", nt = \"gesturechange\", ot = \"gestureend\", st = \"gesturestart\", ct = \"keydown\", rt = \"keypress\", at = \"keyup\", it = \"load\", ut = \"click\", lt = \"dblclick\", dt = \"mousedown\", pt = \"mouseup\", ft = \"hover\", mt = \"mouseenter\", gt = \"mouseleave\", vt = \"mousein\", Et = \"mouseout\", bt = \"mouseover\", ht = \"mousemove\", yt = \"mousewheel\", wt = \"move\", At = \"orientationchange\", St = \"pointercancel\", Mt = \"pointerdown\", Nt = \"pointerleave\", kt = \"pointermove\", Tt = \"pointerup\", Dt = \"readystatechange\", Ct = \"reset\", Lt = \"resize\", Ot = \"select\", It = \"selectend\", zt = \"selectstart\", xt = \"scroll\", Vt = \"submit\", Bt = \"touchstart\", Ht = \"touchmove\", Pt = \"touchcancel\", Ut = \"touchend\", Ft = \"unload\", De = {\n  DOMContentLoaded: H,\n  DOMMouseScroll: Z,\n  abort: j,\n  beforeunload: J,\n  blur: K,\n  change: X,\n  click: ut,\n  contextmenu: Y,\n  dblclick: lt,\n  error: $,\n  focus: _,\n  focusin: tt,\n  focusout: et,\n  gesturechange: nt,\n  gestureend: ot,\n  gesturestart: st,\n  hover: ft,\n  keydown: ct,\n  keypress: rt,\n  keyup: at,\n  load: it,\n  mousedown: dt,\n  mousemove: ht,\n  mousein: vt,\n  mouseout: Et,\n  mouseenter: mt,\n  mouseleave: gt,\n  mouseover: bt,\n  mouseup: pt,\n  mousewheel: yt,\n  move: wt,\n  orientationchange: At,\n  pointercancel: St,\n  pointerdown: Mt,\n  pointerleave: Nt,\n  pointermove: kt,\n  pointerup: Tt,\n  readystatechange: Dt,\n  reset: Ct,\n  resize: Lt,\n  scroll: xt,\n  select: Ot,\n  selectend: It,\n  selectstart: zt,\n  submit: Vt,\n  touchcancel: Pt,\n  touchend: Ut,\n  touchmove: Ht,\n  touchstart: Bt,\n  unload: Ft\n}, Ce = \"drag\", Le = \"dragstart\", Oe = \"dragenter\", Ie = \"dragleave\", ze = \"dragover\", xe = \"dragend\", Ve = \"loadstart\", Be = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, He = { down: \"mousedown\", up: \"mouseup\" }, Pe = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : [\"mouseover\", \"mouseout\"], Ue = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, Fe = { in: \"focusin\", out: \"focusout\" }, We = {\n  Backspace: \"Backspace\",\n  Tab: \"Tab\",\n  Enter: \"Enter\",\n  Shift: \"Shift\",\n  Control: \"Control\",\n  Alt: \"Alt\",\n  Pause: \"Pause\",\n  CapsLock: \"CapsLock\",\n  Escape: \"Escape\",\n  Scape: \"Space\",\n  ArrowLeft: \"ArrowLeft\",\n  ArrowUp: \"ArrowUp\",\n  ArrowRight: \"ArrowRight\",\n  ArrowDown: \"ArrowDown\",\n  Insert: \"Insert\",\n  Delete: \"Delete\",\n  Meta: \"Meta\",\n  ContextMenu: \"ContextMenu\",\n  ScrollLock: \"ScrollLock\"\n}, Re = \"Alt\", Qe = \"ArrowDown\", qe = \"ArrowUp\", Ge = \"ArrowLeft\", je = \"ArrowRight\", Je = \"Backspace\", Ke = \"CapsLock\", Xe = \"Control\", Ye = \"Delete\", Ze = \"Enter\", $e = \"Escape\", _e = \"Insert\", tn = \"Meta\", en = \"Pause\", nn = \"ScrollLock\", on = \"Shift\", sn = \"Space\", cn = \"Tab\", Wt = \"animationDuration\", Rt = \"animationDelay\", P = \"animationName\", T = \"animationend\", Qt = \"transitionDuration\", qt = \"transitionDelay\", D = \"transitionend\", U = \"transitionProperty\", rn = \"addEventListener\", an = \"removeEventListener\", un = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, ln = \"offsetHeight\", dn = \"offsetWidth\", pn = \"scrollHeight\", fn = \"scrollWidth\", mn = \"tabindex\", Gt = navigator.userAgentData, S = Gt, { userAgent: jt } = navigator, M = jt, I = /iPhone|iPad|iPod|Android/i;\nlet C = !1;\nS ? C = S.brands.some((t) => I.test(t.brand)) : C = I.test(M);\nconst gn = C, z = /(iPhone|iPod|iPad)/, vn = S ? S.brands.some((t) => z.test(t.brand)) : z.test(M), En = M ? M.includes(\"Firefox\") : !1, { head: N } = document, bn = [\"webkitPerspective\", \"perspective\"].some((t) => t in N.style), Jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(e, n, s);\n}, Kt = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(e, n, s);\n}, Xt = (t, e, n, o) => {\n  const s = (c) => {\n    (c.target === t || c.currentTarget === t) && (n.apply(t, [c]), Kt(t, e, s, o));\n  };\n  Jt(t, e, s, o);\n}, Yt = () => {\n}, hn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    Xt(document, H, Yt, e);\n  } catch {\n  }\n  return t;\n})(), yn = [\"webkitTransform\", \"transform\"].some((t) => t in N.style), wn = \"ontouchstart\" in window || \"msMaxTouchPoints\" in navigator, An = [\"webkitAnimation\", \"animation\"].some((t) => t in N.style), Sn = [\"webkitTransition\", \"transition\"].some((t) => t in N.style), Zt = (t, e) => t.getAttribute(e), Mn = (t, e, n) => e.getAttributeNS(t, n), Nn = (t, e) => t.hasAttribute(e), kn = (t, e, n) => e.hasAttributeNS(t, n), F = (t, e, n) => t.setAttribute(e, n), Tn = (t, e, n, o) => e.setAttributeNS(t, n, o), Dn = (t, e) => t.removeAttribute(e), Cn = (t, e, n) => e.removeAttributeNS(t, n), Ln = (t, ...e) => {\n  t.classList.add(...e);\n}, On = (t, ...e) => {\n  t.classList.remove(...e);\n}, In = (t, e) => t.classList.contains(e), { body: zn } = document, { documentElement: xn } = document, Vn = (t) => Array.from(t), E = (t) => t != null && typeof t == \"object\" || !1, i = (t) => E(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((e) => t.nodeType === e) || !1, u = (t) => i(t) && t.nodeType === 1 || !1, y = /* @__PURE__ */ new Map(), L = {\n  set: (t, e, n) => {\n    if (!u(t))\n      return;\n    y.has(e) || y.set(e, /* @__PURE__ */ new Map()), y.get(e).set(t, n);\n  },\n  getAllFor: (t) => y.get(t) || null,\n  get: (t, e) => {\n    if (!u(t) || !e)\n      return null;\n    const n = L.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  remove: (t, e) => {\n    const n = L.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && y.delete(e));\n  }\n}, Bn = (t, e) => L.get(t, e), g = (t) => typeof t == \"string\" || !1, W = (t) => E(t) && t.constructor.name === \"Window\" || !1, R = (t) => i(t) && t.nodeType === 9 || !1, d = (t) => W(t) ? t.document : R(t) ? t : i(t) ? t.ownerDocument : window.document, h = (t) => Object.entries(t), $t = (t) => {\n  if (!t)\n    return;\n  if (g(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = $t(e);\n  if (!n)\n    return;\n  const o = { ...t };\n  return delete o.tagName, h(o).forEach(([s, c]) => {\n    g(s) && g(c) && F(n, s, c);\n  }), n;\n}, _t = (t, e) => {\n  if (!t || !e)\n    return;\n  if (g(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = _t(t, n);\n  if (!o)\n    return;\n  const s = { ...e };\n  return delete s.tagName, h(s).forEach(([c, a]) => {\n    g(c) && g(a) && F(o, c, a);\n  }), o;\n}, Q = (t, e) => t.dispatchEvent(e), Hn = (t, e, n) => n.indexOf(t) === e, v = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, te = (t) => {\n  const e = v(t, P), n = v(t, Rt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, ee = (t) => {\n  const e = v(t, P), n = v(t, Wt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, Pn = (t, e) => {\n  let n = 0;\n  const o = new Event(T), s = ee(t), c = te(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(T, a), n = 1);\n    };\n    t.addEventListener(T, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + c + 17);\n  } else\n    e.apply(t, [o]);\n}, ne = (t) => {\n  const e = v(t, U), n = v(t, qt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, oe = (t) => {\n  const e = v(t, U), n = v(t, Qt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, Un = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = oe(t), c = ne(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(D, a), n = 1);\n    };\n    t.addEventListener(D, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + c + 17);\n  } else\n    e.apply(t, [o]);\n}, Fn = (t) => Float32Array.from(Array.from(t)), Wn = (t) => Float64Array.from(Array.from(t)), Rn = (t, e) => t.focus(e), x = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, se = (t) => t.toLowerCase(), Qn = (t, e, n, o) => {\n  const s = { ...n }, c = { ...t.dataset }, a = { ...e }, l = {}, p = \"title\";\n  return h(c).forEach(([r, f]) => {\n    const A = o && typeof r == \"string\" && r.includes(o) ? r.replace(o, \"\").replace(/[A-Z]/g, (G) => se(G)) : r;\n    l[A] = x(f);\n  }), h(s).forEach(([r, f]) => {\n    s[r] = x(f);\n  }), h(e).forEach(([r, f]) => {\n    r in s ? a[r] = s[r] : r in l ? a[r] = l[r] : a[r] = r === p ? Zt(t, p) : f;\n  }), a;\n}, q = (t, ...e) => Object.assign(t, ...e), qn = (t, e) => E(t) && (Object.hasOwn(t, e) || e in t), Gn = (t) => Object.keys(t), jn = (t) => Object.values(t), Jn = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return E(e) && q(n, e), n;\n}, Kn = { passive: !0 }, Xn = (t) => t.offsetHeight, Yn = (t, e) => {\n  h(e).forEach(([n, o]) => {\n    if (o && g(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, q(t.style, s);\n    }\n  });\n}, O = (t) => E(t) && t.constructor.name === \"Map\" || !1, ce = (t) => typeof t == \"number\" || !1, m = /* @__PURE__ */ new Map(), Zn = {\n  set: (t, e, n, o) => {\n    !u(t) || (o && o.length ? (m.has(t) || m.set(t, /* @__PURE__ */ new Map()), m.get(t).set(o, setTimeout(e, n))) : m.set(t, setTimeout(e, n)));\n  },\n  get: (t, e) => {\n    if (!u(t))\n      return null;\n    const n = m.get(t);\n    return e && n && O(n) ? n.get(e) || null : ce(n) ? n : null;\n  },\n  clear: (t, e) => {\n    if (!u(t))\n      return;\n    const n = m.get(t);\n    e && e.length && O(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && m.delete(t)) : (clearTimeout(n), m.delete(t));\n  }\n}, $n = (t) => t.toUpperCase(), w = (t, e) => {\n  const { width: n, height: o, top: s, right: c, bottom: a, left: l } = t.getBoundingClientRect();\n  let p = 1, r = 1;\n  if (e && u(t)) {\n    const { offsetWidth: f, offsetHeight: A } = t;\n    p = f > 0 ? Math.round(n) / f : 1, r = A > 0 ? Math.round(o) / A : 1;\n  }\n  return {\n    width: n / p,\n    height: o / r,\n    top: s / r,\n    right: c / p,\n    bottom: a / r,\n    left: l / p,\n    x: l / p,\n    y: s / r\n  };\n}, _n = (t) => d(t).body, k = (t) => d(t).documentElement, to = (t) => d(t).head, eo = (t) => {\n  const e = W(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, re = (t) => i(t) && t.constructor.name === \"ShadowRoot\" || !1, no = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || i(t) && t.parentNode || re(t) && t.host || k(t), ae = (t) => {\n  if (!u(t))\n    return !1;\n  const { width: e, height: n } = w(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, oo = (t, e, n) => {\n  const o = u(e), s = w(t, o && ae(e)), c = { x: 0, y: 0 };\n  if (o) {\n    const a = w(e, !0);\n    c.x = a.x + e.clientLeft, c.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - c.x,\n    y: s.top + n.y - c.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet V = 0, B = 0;\nconst b = /* @__PURE__ */ new Map(), ie = (t, e) => {\n  let n = e ? V : B;\n  if (e) {\n    const o = ie(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), O(s) && !s.has(e) ? (s.set(e, n), V += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), B += 1);\n  }\n  return n;\n}, so = (t) => {\n  var e;\n  return t ? R(t) ? t.defaultView : i(t) ? (e = t == null ? void 0 : t.ownerDocument) == null ? void 0 : e.defaultView : t : window;\n}, ue = (t) => Array.isArray(t) || !1, co = (t) => i(t) && t.nodeName === \"CANVAS\" || !1, le = (t) => u(t) && !!t.shadowRoot || !1, ro = (t) => i(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, ao = (t) => {\n  if (!i(t))\n    return !1;\n  const { top: e, bottom: n } = w(t), { clientHeight: o } = k(t);\n  return e <= o && n >= 0;\n}, io = (t) => {\n  if (!i(t))\n    return !1;\n  const { clientWidth: e, clientHeight: n } = k(t), { top: o, left: s, bottom: c, right: a } = w(t, !0);\n  return o >= 0 && s >= 0 && c <= n && a <= e;\n}, uo = (t) => ue(t) && t.every(u) || !1, lo = (t) => typeof t == \"function\" || !1, po = (t) => E(t) && t.constructor.name === \"HTMLCollection\" || !1, fo = (t) => u(t) && t.tagName === \"IMG\" || !1, mo = (t) => {\n  if (!g(t))\n    return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, go = (t) => E(t) && t.constructor.name === \"WeakMap\" || !1, vo = (t) => i(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((e) => t.constructor.name.includes(e)) || !1, Eo = (t) => E(t) && t.constructor.name === \"NodeList\" || !1, bo = (t) => k(t).dir === \"rtl\", ho = (t) => i(t) && t.constructor.name.includes(\"SVG\") || !1, yo = (t) => i(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, de = (t, e) => t ? t.closest(e) || de(t.getRootNode().host, e) : null, wo = (t, e) => u(t) ? t : (i(e) ? e : d()).querySelector(t), pe = (t, e) => (i(e) ? e : d()).getElementsByTagName(t), Ao = (t) => [...pe(\"*\", t)].filter(le), So = (t, e) => d(e).getElementById(t) || null, Mo = (t, e) => (i(e) ? e : d()).querySelectorAll(t), No = (t, e) => (e && i(e) ? e : d()).getElementsByClassName(\n  t\n), ko = (t, e) => t.matches(e);\nexport {\n  Vn as ArrayFrom,\n  H as DOMContentLoadedEvent,\n  Z as DOMMouseScrollEvent,\n  L as Data,\n  Fn as Float32ArrayFrom,\n  Wn as Float64ArrayFrom,\n  q as ObjectAssign,\n  h as ObjectEntries,\n  qn as ObjectHasOwn,\n  Gn as ObjectKeys,\n  jn as ObjectValues,\n  Zn as Timer,\n  j as abortEvent,\n  Ln as addClass,\n  rn as addEventListener,\n  Rt as animationDelay,\n  Wt as animationDuration,\n  T as animationEndEvent,\n  P as animationName,\n  fe as ariaChecked,\n  ge as ariaDescribedBy,\n  me as ariaDescription,\n  ve as ariaExpanded,\n  Ee as ariaHasPopup,\n  be as ariaHidden,\n  he as ariaLabel,\n  ye as ariaLabelledBy,\n  we as ariaModal,\n  Ae as ariaPressed,\n  Se as ariaSelected,\n  Ne as ariaValueMax,\n  Me as ariaValueMin,\n  ke as ariaValueNow,\n  Te as ariaValueText,\n  J as beforeunloadEvent,\n  un as bezierEasings,\n  K as blurEvent,\n  X as changeEvent,\n  de as closest,\n  Y as contextmenuEvent,\n  Jn as createCustomEvent,\n  $t as createElement,\n  _t as createElementNS,\n  Q as dispatchEvent,\n  Hn as distinct,\n  zn as documentBody,\n  xn as documentElement,\n  N as documentHead,\n  Ce as dragEvent,\n  xe as dragendEvent,\n  Oe as dragenterEvent,\n  Ie as dragleaveEvent,\n  ze as dragoverEvent,\n  Le as dragstartEvent,\n  Pn as emulateAnimationEnd,\n  Un as emulateTransitionEnd,\n  $ as errorEvent,\n  Rn as focus,\n  _ as focusEvent,\n  Fe as focusEvents,\n  tt as focusinEvent,\n  et as focusoutEvent,\n  nt as gesturechangeEvent,\n  ot as gestureendEvent,\n  st as gesturestartEvent,\n  Zt as getAttribute,\n  Mn as getAttributeNS,\n  w as getBoundingClientRect,\n  Ao as getCustomElements,\n  d as getDocument,\n  _n as getDocumentBody,\n  k as getDocumentElement,\n  to as getDocumentHead,\n  te as getElementAnimationDelay,\n  ee as getElementAnimationDuration,\n  So as getElementById,\n  v as getElementStyle,\n  ne as getElementTransitionDelay,\n  oe as getElementTransitionDuration,\n  No as getElementsByClassName,\n  pe as getElementsByTagName,\n  Bn as getInstance,\n  eo as getNodeScroll,\n  no as getParentNode,\n  oo as getRectRelativeToOffsetParent,\n  ie as getUID,\n  so as getWindow,\n  Nn as hasAttribute,\n  kn as hasAttributeNS,\n  In as hasClass,\n  vn as isApple,\n  ue as isArray,\n  co as isCanvas,\n  le as isCustomElement,\n  R as isDocument,\n  ro as isElement,\n  ao as isElementInScrollRange,\n  io as isElementInViewport,\n  uo as isElementsArray,\n  En as isFirefox,\n  lo as isFunction,\n  po as isHTMLCollection,\n  u as isHTMLElement,\n  fo as isHTMLImageElement,\n  mo as isJSON,\n  O as isMap,\n  vo as isMedia,\n  gn as isMobile,\n  i as isNode,\n  Eo as isNodeList,\n  ce as isNumber,\n  E as isObject,\n  bo as isRTL,\n  ho as isSVGElement,\n  ae as isScaledElement,\n  re as isShadowRoot,\n  g as isString,\n  yo as isTableElement,\n  go as isWeakMap,\n  W as isWindow,\n  Re as keyAlt,\n  Qe as keyArrowDown,\n  Ge as keyArrowLeft,\n  je as keyArrowRight,\n  qe as keyArrowUp,\n  Je as keyBackspace,\n  Ke as keyCapsLock,\n  Xe as keyControl,\n  Ye as keyDelete,\n  Ze as keyEnter,\n  $e as keyEscape,\n  _e as keyInsert,\n  tn as keyMeta,\n  en as keyPause,\n  nn as keyScrollLock,\n  on as keyShift,\n  sn as keySpace,\n  cn as keyTab,\n  We as keyboardEventKeys,\n  ct as keydownEvent,\n  rt as keypressEvent,\n  at as keyupEvent,\n  it as loadEvent,\n  Ve as loadstartEvent,\n  ko as matches,\n  He as mouseClickEvents,\n  Pe as mouseHoverEvents,\n  Be as mouseSwipeEvents,\n  ut as mouseclickEvent,\n  lt as mousedblclickEvent,\n  dt as mousedownEvent,\n  mt as mouseenterEvent,\n  ft as mousehoverEvent,\n  vt as mouseinEvent,\n  gt as mouseleaveEvent,\n  ht as mousemoveEvent,\n  Et as mouseoutEvent,\n  bt as mouseoverEvent,\n  pt as mouseupEvent,\n  yt as mousewheelEvent,\n  wt as moveEvent,\n  De as nativeEvents,\n  Yt as noop,\n  Qn as normalizeOptions,\n  x as normalizeValue,\n  Kt as off,\n  ln as offsetHeight,\n  dn as offsetWidth,\n  Jt as on,\n  Xt as one,\n  At as orientationchangeEvent,\n  Kn as passiveHandler,\n  St as pointercancelEvent,\n  Mt as pointerdownEvent,\n  Nt as pointerleaveEvent,\n  kt as pointermoveEvent,\n  Tt as pointerupEvent,\n  wo as querySelector,\n  Mo as querySelectorAll,\n  Dt as readystatechangeEvent,\n  Xn as reflow,\n  Dn as removeAttribute,\n  Cn as removeAttributeNS,\n  On as removeClass,\n  an as removeEventListener,\n  Ct as resetEvent,\n  Lt as resizeEvent,\n  xt as scrollEvent,\n  pn as scrollHeight,\n  fn as scrollWidth,\n  Ot as selectEvent,\n  It as selectendEvent,\n  zt as selectstartEvent,\n  F as setAttribute,\n  Tn as setAttributeNS,\n  Yn as setElementStyle,\n  Vt as submitEvent,\n  bn as support3DTransform,\n  An as supportAnimation,\n  hn as supportPassive,\n  wn as supportTouch,\n  yn as supportTransform,\n  Sn as supportTransition,\n  mn as tabindex,\n  se as toLowerCase,\n  $n as toUpperCase,\n  Ue as touchEvents,\n  Pt as touchcancelEvent,\n  Ut as touchendEvent,\n  Ht as touchmoveEvent,\n  Bt as touchstartEvent,\n  qt as transitionDelay,\n  Qt as transitionDuration,\n  D as transitionEndEvent,\n  U as transitionProperty,\n  Ft as unloadEvent,\n  M as userAgent,\n  S as userAgentData\n};\n//# sourceMappingURL=shorty.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  element: HTMLElement;\n  options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<this>(element, this.name);\n    if (prevInstance) prevInstance.dispose();\n\n    this.element = element;\n\n    /* istanbul ignore else */\n    if (this.defaults && ObjectKeys(this.defaults).length) {\n      this.options = normalizeOptions(element, this.defaults, config || {}, 'bs');\n    }\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /**\n   * Removes component from target element;\n   */\n  dispose() {\n    Data.remove(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  closest,\n  // ObjectAssign,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (that: Alert) => {\n  const { element } = that;\n  toggleAlertHandler(that);\n\n  dispatchEvent(element, closedAlertEvent);\n\n  that.dispose();\n  element.remove();\n};\n\n// ALERT PRIVATE METHOD\n// ====================\n/**\n * Toggle on / off the `click` event listener.\n *\n * @param that the target alert instance\n * @param add when `true`, event listener is added\n */\nconst toggleAlertHandler = (that: Alert, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { dismiss } = that;\n  /* istanbul ignore else */\n  if (dismiss) action(dismiss, mouseclickEvent, that.close);\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    toggleAlertHandler(this, true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   *\n   * @param e the `click` event\n   */\n  close(e?: Event) {\n    const self = e ? (getAlertInstance(closest(e.target as HTMLElement, alertSelector) as HTMLElement) as Alert) : this;\n    const { element } = self;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n      if (closeAlertEvent.defaultPrevented) return;\n\n      removeClass(element, showClass);\n\n      if (hasClass(element, fadeClass)) {\n        emulateTransitionEnd(element, () => alertTransitionEnd(self));\n      } else alertTransitionEnd(self);\n    }\n  }\n\n  /** Remove the component from target element. */\n  dispose() {\n    toggleAlertHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  // ObjectAssign,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON PRIVATE METHOD\n// =====================\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Button` instance\n * @param add when `true`, event listener is added\n */\nconst toggleButtonHandler = (self: Button, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, self.toggle);\n};\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    toggleButtonHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle(e: Event) {\n    if (e) e.preventDefault();\n    const self = e ? (getButtonInstance(e.target as HTMLElement) as Button) : this;\n    if (!self.element) return;\n    const { element, isActive } = self;\n\n    if (hasClass(element, 'disabled')) return;\n\n    const action = isActive ? removeClass : addClass;\n    action(element, activeClass);\n    setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n    self.isActive = hasClass(element, activeClass);\n  }\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    toggleButtonHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  touchstartEvent,\n  dragstartEvent,\n  addClass,\n  hasClass,\n  removeClass,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  // discontinue disposed instances\n  /* istanbul ignore else */\n  if (self.isAnimating && getCarouselInstance(element)) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // check for element, might have been disposed\n    if (!getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n\n  const newIndex = +(getAttribute(this, dataBsSlideTo) || /* istanbul ignore next */ 0);\n\n  if (\n    this &&\n    !hasClass(this, activeClass) && // event target is not active\n    !Number.isNaN(newIndex)\n  ) {\n    // AND has the specific attribute\n    self.to(newIndex); // do the slide\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const control = this;\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n  const orientation = getAttribute(this, dataBsSlide);\n\n  /* istanbul ignore else */\n  if (orientation === 'next') {\n    self.next();\n  } else if (orientation === 'prev') {\n    self.prev();\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (!self || self.isAnimating || /textarea|input/i.test(target.nodeName)) return;\n  const RTL = isRTL(element);\n  const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n  const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n  /* istanbul ignore else */\n  if (code === arrowKeyPrev) self.prev();\n  else if (code === arrowKeyNext) self.next();\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  /* istanbul ignore next */\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) || !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (!self || self.isAnimating || self.isTouch) {\n    return;\n  }\n\n  // filter pointer event on controls & indicators\n  const { controls, indicators } = self;\n  if ([...controls, ...indicators].some(el => el === target || el.contains(target as Node))) {\n    return;\n  }\n\n  startX = e.pageX;\n\n  /* istanbul ignore else */\n  if (this.contains(target as Node)) {\n    self.isTouch = true;\n    toggleCarouselTouchHandlers(self, true);\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore next */\n  if (!self) {\n    return;\n  }\n\n  const { element, index } = self;\n  const RTL = isRTL(element);\n\n  self.isTouch = false;\n  toggleCarouselTouchHandlers(self);\n\n  if (doc.getSelection()?.toString().length) {\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n    return;\n  }\n\n  endX = e.pageX;\n\n  // the event target is outside the carousel context\n  // OR swipe distance is less than 120px\n  /* istanbul ignore else */\n  if (!element.contains(target as HTMLElement) || Math.abs(startX - endX) < 120) {\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n    return;\n  }\n  // OR determine next index to slide to\n  /* istanbul ignore else */\n  if (currentX < startX) {\n    self.to(index + (RTL ? -1 : 1));\n  } else if (currentX > startX) {\n    self.to(index + (RTL ? 1 : -1));\n  }\n  // reset pointer position\n  startX = 0;\n  currentX = 0;\n  endX = 0;\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param pageIndex the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, pageIndex: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[pageIndex]) addClass(indicators[pageIndex], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler as EventListener, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler as EventListener, passiveHandler);\n};\n\n/**\n * Toggles all event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselHandlers = (self: Carousel, add?: boolean) => {\n  const { element, options, slides, controls, indicators } = self;\n  const { touch, pause, interval, keyboard } = options;\n  const action = add ? addListener : removeListener;\n\n  if (pause && interval) {\n    action(element, mouseenterEvent, carouselPauseHandler);\n    action(element, mouseleaveEvent, carouselResumeHandler);\n  }\n\n  if (touch && slides.length > 2) {\n    action(element, pointerdownEvent, carouselPointerDownHandler as EventListener, passiveHandler);\n    action(element, touchstartEvent, carouselDragHandler as unknown as EventListener, { passive: false });\n    action(element, dragstartEvent, carouselDragHandler as unknown as EventListener, { passive: false });\n  }\n\n  /* istanbul ignore else */\n  if (controls.length) {\n    controls.forEach(arrow => {\n      /* istanbul ignore else */\n      if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler as EventListener);\n    });\n  }\n\n  /* istanbul ignore else */\n  if (indicators.length) {\n    indicators.forEach(indicator => {\n      action(indicator, mouseclickEvent, carouselIndicatorHandler as EventListener);\n    });\n  }\n\n  if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler as EventListener);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.index = 0;\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length < 2) {\n      return;\n    }\n    // external controls must be within same document context\n    const doc = getDocument(element);\n\n    this.controls = [\n      ...querySelectorAll(`[${dataBsSlide}]`, element),\n      ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n    // a LIVE collection is prefferable\n    this.indicators = [\n      ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n      ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    // set JavaScript and DATA API options\n    const { options } = this;\n\n    // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n    this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n    // set first slide active if none\n    /* istanbul ignore else */\n    if (getActiveIndex(this) < 0) {\n      addClass(slides[0], activeClass);\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, 0);\n    }\n\n    // attach event handlers\n    toggleCarouselHandlers(this, true);\n\n    // start to cycle if interval is set\n    if (options.interval) this.cycle();\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (this.isAnimating || activeItem === next || Timer.get(element, dataBsSlide)) return;\n\n    // determine transition direction\n    /* istanbul ignore else */\n    if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n      this.direction = RTL ? 'right' : 'left'; // next\n    } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n      this.direction = RTL ? 'left' : 'right'; // prev\n    }\n    const { direction } = this;\n\n    // find the right next index\n    if (next < 0) {\n      next = slides.length - 1;\n    } else if (next >= slides.length) {\n      next = 0;\n    }\n\n    // orientation, class name, eventProperties\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    const eventProperties = {\n      relatedTarget: slides[next],\n      from: activeItem,\n      to: next,\n      direction,\n    };\n\n    // update event properties\n    ObjectAssign(carouselSlideEvent, eventProperties);\n    ObjectAssign(carouselSlidEvent, eventProperties);\n\n    // discontinue when prevented\n    dispatchEvent(element, carouselSlideEvent);\n    if (carouselSlideEvent.defaultPrevented) return;\n\n    // update index\n    this.index = next;\n    activateCarouselIndicator(this, next);\n\n    if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n      Timer.set(\n        element,\n        () => {\n          addClass(slides[next], `${carouselItem}-${orientation}`);\n          reflow(slides[next]);\n          addClass(slides[next], `${carouselItem}-${directionClass}`);\n          addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n          emulateTransitionEnd(slides[next], () => carouselTransitionEndHandler(this));\n        },\n        0,\n        dataBsSlide,\n      );\n    } else {\n      addClass(slides[next], activeClass);\n      removeClass(slides[activeItem], activeClass);\n\n      Timer.set(\n        element,\n        () => {\n          Timer.clear(element, dataBsSlide);\n          // check for element, might have been disposed\n          /* istanbul ignore else */\n          if (element && options.interval && !this.isPaused) {\n            this.cycle();\n          }\n\n          dispatchEvent(element, carouselSlidEvent);\n        },\n        0,\n        dataBsSlide,\n      );\n    }\n  }\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { slides } = this;\n    const itemClasses = ['start', 'end', 'prev', 'next'];\n\n    [...slides].forEach((slide, idx) => {\n      if (hasClass(slide, activeClass)) activateCarouselIndicator(this, idx);\n      itemClasses.forEach(c => removeClass(slide, `${carouselItem}-${c}`));\n    });\n\n    toggleCarouselHandlers(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (showCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  addClass(element, collapsingClass);\n  removeClass(element, collapseString);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n    addClass(element, showClass);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, shownCollapseEvent);\n  });\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (hideCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  removeClass(element, collapseString);\n  removeClass(element, showClass);\n  addClass(element, collapsingClass);\n\n  reflow(element);\n  setElementStyle(element, { height: '0px' });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    /* istanbul ignore else */\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, hiddenCollapseEvent);\n  });\n};\n\n/**\n * Toggles on/off the event listener(s) of the `Collapse` instance.\n *\n * @param self the `Collapse` instance\n * @param add when `true`, the event listener is added\n */\nconst toggleCollapseHandler = (self: Collapse, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler as EventListener));\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = querySelector(options.parent as HTMLElement | string, doc) || getTargetElement(element) || null;\n    this.parent = getTargetElement(element) || null;\n\n    // add event listeners\n    toggleCollapseHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (Timer.get(element)) return;\n\n    collapseContent(this);\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    toggleCollapseHandler(this);\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (element as HTMLAnchorElement).href.slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor && hasAttribute(parentAnchor, 'href') && (parentAnchor as HTMLAnchorElement).href.slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  querySelector,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"],[${dataBsToggle}=\"${dropupString}\"],[${dataBsToggle}=\"${dropendString}\"],[${dataBsToggle}=\"${dropstartString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<DropdownEvent>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore next: this test requires a navbar */\n  if (getElementStyle(menu, 'position') === 'static') return;\n\n  const RTL = isRTL(element);\n  // const menuStart = hasClass(menu, dropdownMenuStartClass);\n  const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n  // reset menu offset and position\n  const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n  resetProps.forEach(p => {\n    // menu.style[p] = '';\n    const style: { [key: string]: string } = {};\n    style[p] = '';\n    setElementStyle(menu, style);\n  });\n\n  // set initial position class\n  // take into account .btn-group parent as .dropdown\n  // this requires navbar/btn-group/input-group\n  let positionClass =\n    dropdownClasses.find(c => hasClass(parentElement, c)) ||\n    /* istanbul ignore next: fallback position */ dropdownString;\n\n  const dropdownMargin: { [key: string]: number[] } = {\n    dropdown: [offset, 0, 0],\n    dropup: [0, 0, offset],\n    dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n    dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n  };\n\n  const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n    dropdown: { top: '100%' },\n    dropup: { top: 'auto', bottom: '100%' },\n    dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n    dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n    menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n    menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n  };\n\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const { left: targetLeft, top: targetTop, width: targetWidth, height: targetHeight } = getBoundingClientRect(element);\n\n  // dropstart | dropend\n  const leftFullExceed = targetLeft - menuWidth - offset < 0;\n  // dropend\n  const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n  // dropstart | dropend\n  const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n  // dropdown\n  const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n  // dropup\n  const topExceed = targetTop - menuHeight - offset < 0;\n  // dropdown / dropup\n  const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n  const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n  // recompute position\n  // handle RTL as well\n  if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropendString;\n  }\n  if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropstartString;\n  }\n  if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n    positionClass = dropupString;\n  }\n\n  // override position for horizontal classes\n  if (horizontalClass.includes(positionClass) && bottomExceed) {\n    ObjectAssign(dropdownPosition[positionClass], {\n      top: 'auto',\n      bottom: 0,\n    });\n  }\n\n  // override position for vertical classes\n  if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n    // don't realign when menu is wider than window\n    // in both RTL and non-RTL readability is KING\n    let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n    if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n    if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n    if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n  }\n\n  const margins: number[] = dropdownMargin[positionClass];\n  setElementStyle(menu, {\n    ...dropdownPosition[positionClass],\n    margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n  });\n\n  // override dropdown-menu-start | dropdown-menu-end\n  if (verticalClass.includes(positionClass) && menuEnd) {\n    /* istanbul ignore else */\n    if (menuEnd) {\n      const endAdjust =\n        (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n      setElementStyle(menu, dropdownPosition[endAdjust]);\n    }\n  }\n  // trigger updated event\n  dispatchEvent(parentElement, updatedDropdownEvent);\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler as EventListener);\n  action(doc, focusEvent, dropdownDismissHandler as EventListener);\n  action(doc, keydownEvent, dropdownPreventScroll as EventListener);\n  action(doc, keyupEvent, dropdownKeyHandler as EventListener);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param self the `Dropdown` instance\n * @param add when `true`, it will add the event listener\n */\nconst toggleDropdownHandler = (self: Dropdown, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler as EventListener);\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore next: impossible to satisfy */\n  if (!target || !(target as HTMLElement).closest) return; // some weird FF bug #409\n\n  const element = getCurrentOpenDropdown(target as HTMLElement);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const hasData = closest(target as HTMLElement, dropdownSelector) !== null;\n  const isForm =\n    parentElement &&\n    parentElement.contains(target as HTMLElement) &&\n    ((target as HTMLElement).tagName === 'form' || closest(target as HTMLElement, 'form') !== null);\n\n  if (type === mouseclickEvent && isEmptyAnchor(target as HTMLElement)) {\n    e.preventDefault();\n  }\n  if (type === focusEvent && (target === element || target === menu || menu.contains(target as HTMLElement))) {\n    return;\n  }\n\n  /* istanbul ignore next */\n  if (isForm || hasData) {\n    // smile to ESLint\n  } else if (self) {\n    self.hide();\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopImmediatePropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n  /* istanbul ignore next: impossible to satisfy */\n  if (!self || !activeElement) return;\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n    let idx = menuItems.indexOf(activeElement);\n    /* istanbul ignore else */\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    /* istanbul ignore else */\n    if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n\n    // set targets\n    this.parentElement = parentElement as HTMLElement;\n    this.menu = querySelector(`.${dropdownMenuClass}`, parentElement as HTMLElement) as HTMLElement;\n\n    // add event listener\n    toggleDropdownHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (open) return;\n\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement && getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, showDropdownEvent);\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'true');\n\n    // change menu position\n    styleDropdown(this);\n\n    this.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, hideDropdownEvent);\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'false');\n\n    this.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    toggleDropdownHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'div' }) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import {\n  createElement,\n  getDocument,\n  reflow,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getDocumentBody,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isHTMLElement,\n  isRTL,\n  isFunction,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  focus,\n  Timer,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  action(element, mouseclickEvent, modalDismissHandler as EventListener);\n  action(getWindow(element), resizeEvent, self.update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler as EventListener);\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Modal` instance.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listener is added\n */\nconst toggleModalHandler = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler as EventListener));\n  }\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n * @param callback the `Modal` instance\n */\nconst afterModalHide = (self: Modal, callback?: () => void) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  /* istanbul ignore else */\n  if (isFunction(callback)) callback();\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n * @param callback when `true` skip animation\n */\nconst beforeModalHide = (self: Modal, callback?: () => void) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && !callback && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self, callback);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.toggle();\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(modalActiveSelector, getDocument(target as Node));\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { options } = self;\n  /* istanbul ignore else */\n  if (\n    options.keyboard &&\n    code === keyEscape && // the keyboard option is enabled and the key is 27\n    hasClass(element, showClass)\n  ) {\n    // the modal is not visible\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nfunction modalDismissHandler(this: HTMLElement, e: MouseEvent) {\n  const self = getModalInstance(this);\n\n  // this timer is needed\n  /* istanbul ignore next: must have a filter */\n  if (!self || Timer.get(this)) return;\n\n  const { options, isStatic, modalDialog } = self;\n  const { backdrop } = options;\n  const { target } = e;\n\n  const selectedText = getDocument(this)?.getSelection()?.toString().length;\n  const targetInsideDialog = modalDialog?.contains(target as HTMLElement);\n  const dismiss = target && closest(target as HTMLElement, modalDismissSelector);\n\n  /* istanbul ignore else */\n  if (isStatic && !targetInsideDialog) {\n    Timer.set(\n      this,\n      () => {\n        addClass(this, modalStaticClass);\n        emulateTransitionEnd(modalDialog as HTMLElement, () => staticTransitionEnd(self));\n      },\n      17,\n    );\n  } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n    self.relatedTarget = dismiss || null;\n    self.hide();\n    e.preventDefault();\n  }\n}\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration =\n    (isHTMLElement(modalDialog) ? getElementTransitionDuration(modalDialog) : /* istanbul ignore next */ 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    this.modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    // modal can have multiple triggering elements\n    this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional internals\n    this.isStatic = this.options.backdrop === 'static';\n    this.hasFade = hasClass(element, fadeClass);\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleModalHandler(this, true);\n\n    // bind\n    this.update = this.update.bind(this);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showModalEvent);\n    if (showModalEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n\n    if (currentOpen && currentOpen !== element) {\n      const that =\n        getModalInstance(currentOpen) ||\n        /* istanbul ignore next */\n        getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, offcanvasComponent);\n      if (that) that.hide();\n    }\n    if (backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(element, hasFade, true);\n      } else {\n        toggleOverlayType(true);\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n      setTimeout(() => beforeModalShow(this), overlayDelay);\n    } else {\n      beforeModalShow(this);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hide the modal from the user.\n   *\n   * @param callback when defined it will skip animation\n   */\n  hide(callback?: () => void) {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideModalEvent);\n    if (hideModalEvent.defaultPrevented) return;\n    removeClass(element, showClass);\n    setAttribute(element, ariaHidden, 'true');\n    removeAttribute(element, ariaModal);\n\n    // if (hasFade && callback) {\n    /* istanbul ignore else */\n    if (hasFade) {\n      emulateTransitionEnd(element, () => beforeModalHide(this, callback));\n    } else {\n      beforeModalHide(this, callback);\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update() {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  }\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    toggleModalHandler(this);\n    // use callback\n    this.hide(() => super.dispose());\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  isFunction,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the `click` event listeners.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true*, listeners are added\n */\nconst toggleOffcanvasEvents = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  self.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler as EventListener));\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler as EventListener);\n  action(doc, mouseclickEvent, offcanvasDismissHandler as EventListener);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param callback the hide callback\n */\nconst beforeOffcanvasHide = (self: Offcanvas, callback?: () => void) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => hideOffcanvasComplete(self, callback));\n  } else hideOffcanvasComplete(self, callback);\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must have a filter */\n  if (!self) return;\n\n  const { options, triggers } = self;\n  const { backdrop } = options;\n  const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n  const selection = getDocument(element).getSelection();\n\n  /* istanbul ignore next: a filter is required here */\n  if (overlay.contains(target as HTMLElement) && backdrop === 'static') return;\n\n  /* istanbul ignore else */\n  if (\n    !(selection && selection.toString().length) &&\n    ((!element.contains(target as HTMLElement) &&\n      backdrop &&\n      /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n      (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n  ) {\n    self.relatedTarget = offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n    self.hide();\n  }\n\n  /* istanbul ignore next */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (self.options.keyboard && code === keyEscape) {\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param callback the hide callback\n */\nconst hideOffcanvasComplete = (self: Offcanvas, callback?: () => void) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n  // callback\n  if (isFunction(callback)) callback();\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleOffcanvasEvents(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showOffcanvasEvent);\n    if (showOffcanvasEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const that =\n        getOffcanvasInstance(currentOpen) ||\n        /* istanbul ignore next */\n        getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, modalComponent);\n      if (that) that.hide();\n    }\n\n    if (options.backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(element, true);\n      } else {\n        toggleOverlayType();\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n    } else {\n      beforeOffcanvasShow(this);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hides the offcanvas from the user.\n   *\n   * @param callback when `true` it will skip animation\n   */\n  hide(callback?: () => void) {\n    const { element, relatedTarget } = this;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideOffcanvasEvent);\n    if (hideOffcanvasEvent.defaultPrevented) return;\n\n    addClass(element, offcanvasTogglingClass);\n    removeClass(element, showClass);\n\n    if (!callback) {\n      emulateTransitionEnd(element, () => beforeOffcanvasHide(this, callback));\n    } else beforeOffcanvasHide(this, callback);\n  }\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    toggleOffcanvasEvents(this);\n    this.hide(() => super.dispose());\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  toLowerCase,\n  createCustomEvent,\n  dispatchEvent,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\nimport type { TooltipEvent } from '../interface/tooltip';\nimport type { PopoverEvent } from '../interface/popover';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n  /* istanbul ignore next */\n  if (!tooltip) return;\n  const tipPositions = { ...tipClassPositions };\n  const RTL = isRTL(element);\n\n  // reset tooltip style (top: 0, left: 0 works best)\n  setElementStyle(tooltip, {\n    // top: '0px', left: '0px', right: '', bottom: '',\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  const isPopover = self.name === popoverComponent;\n  const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n  const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n  let { placement } = options;\n  const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n  const parentPosition = getElementStyle(container as HTMLElement, 'position');\n  const fixedParent = parentPosition === 'fixed';\n  const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n  const leftBoundry = RTL && fixedParent ? /* istanbul ignore next */ scrollbarWidth : 0;\n  const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n  const {\n    width: elemWidth,\n    height: elemHeight,\n    left: elemRectLeft,\n    right: elemRectRight,\n    top: elemRectTop,\n  } = getBoundingClientRect(element, true);\n  const { x, y } = {\n    x: elemRectLeft,\n    y: elemRectTop,\n  };\n  // reset arrow style\n  setElementStyle(arrow as HTMLElement, {\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  let topPosition: number | string = 0;\n  let bottomPosition: number | string = '';\n  let leftPosition: number | string = 0;\n  let rightPosition: number | string = '';\n  let arrowTop: number | string = '';\n  let arrowLeft: number | string = '';\n  let arrowRight: number | string = '';\n\n  const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n  const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n  const arrowAdjust = arrowWidth / 2;\n\n  // check placement\n  let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n  let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n  let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n  let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n  const horizontals = ['left', 'right'];\n  const verticals = ['top', 'bottom'];\n\n  topExceed = horizontals.includes(placement)\n    ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n    : topExceed;\n  bottomExceed = horizontals.includes(placement)\n    ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n    : bottomExceed;\n  leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n  rightExceed = verticals.includes(placement)\n    ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n    : rightExceed;\n\n  // first remove side positions if both left and right limits are exceeded\n  // we usually fall back to top|bottom\n  placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n  // recompute placement\n  placement = placement === 'top' && topExceed ? 'bottom' : placement;\n  placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n  placement = placement === 'left' && leftExceed ? 'right' : placement;\n  placement = placement === 'right' && rightExceed ? 'left' : placement;\n\n  // update tooltip/popover class\n  if (!tooltip.className.includes(placement)) {\n    tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n  }\n\n  // compute tooltip / popover coordinates\n  /* istanbul ignore else */\n  if (horizontals.includes(placement)) {\n    // secondary|side positions\n    if (placement === 'left') {\n      // LEFT\n      leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n    } else {\n      // RIGHT\n      leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n    }\n\n    // adjust top and arrow\n    if (topExceed && bottomExceed) {\n      topPosition = 0;\n      bottomPosition = 0;\n      arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n    } else if (topExceed) {\n      topPosition = y;\n      bottomPosition = '';\n      arrowTop = elemHeight / 2 - arrowWidth;\n    } else if (bottomExceed) {\n      topPosition = y - tipHeight + elemHeight;\n      bottomPosition = '';\n      arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n    } else {\n      topPosition = y - tipHeight / 2 + elemHeight / 2;\n      arrowTop = tipHeight / 2 - arrowHeight / 2;\n    }\n  } else if (verticals.includes(placement)) {\n    if (placement === 'top') {\n      topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n    } else {\n      // BOTTOM\n      topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n    }\n\n    // adjust left | right and also the arrow\n    if (leftExceed) {\n      leftPosition = 0;\n      arrowLeft = x + elemWidth / 2 - arrowAdjust;\n    } else if (rightExceed) {\n      leftPosition = 'auto';\n      rightPosition = 0;\n      arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n    } else {\n      leftPosition = x - tipWidth / 2 + elemWidth / 2;\n      arrowLeft = tipWidth / 2 - arrowAdjust;\n    }\n  }\n\n  // apply style to tooltip/popover\n  setElementStyle(tooltip, {\n    top: `${topPosition}px`,\n    bottom: bottomPosition === '' ? '' : `${bottomPosition}px`,\n    left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n    right: rightPosition !== '' ? `${rightPosition}px` : '',\n  });\n\n  // update arrow placement\n  /* istanbul ignore else */\n  if (isHTMLElement(arrow)) {\n    if (arrowTop !== '') {\n      arrow.style.top = `${arrowTop}px`;\n    }\n    if (arrowLeft !== '') {\n      arrow.style.left = `${arrowLeft}px`;\n    } else if (arrowRight !== '') {\n      arrow.style.right = `${arrowRight}px`;\n    }\n  }\n  const updatedTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`updated.bs.${toLowerCase(self.name)}`);\n  dispatchEvent(element, updatedTooltipEvent);\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","// import {getWindow} from '@thednp/shorty';\nimport { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: Node, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element) || (isString(content) && !content.length)) return;\n\n  /* istanbul ignore else */\n  if (isString(content)) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    // const win = getWindow(element);\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    : /* istanbul ignore next */ undefined;\n\n  const { tooltip } = self;\n  /* istanbul ignore next */\n  if (!tooltip) return;\n\n  // set id and role attributes\n  setAttribute(tooltip, 'id', id);\n  setAttribute(tooltip, 'role', tooltipString);\n\n  const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n  const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n  const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n  // set arrow and enable access for styleTip\n  self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n  const { arrow } = self;\n\n  if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n  else {\n    const tempTitle = createElement('div') as Node;\n    setHtml(tempTitle, title, sanitizeFn);\n    titleParts = [...[...tempTitle.childNodes]];\n  }\n\n  if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n  else {\n    const tempContent = createElement('div') as Node;\n    setHtml(tempContent, content, sanitizeFn);\n    contentParts = [...[...tempContent.childNodes]];\n  }\n\n  // set dismissible button\n  if (dismissible) {\n    if (title) {\n      if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        titleParts = [...titleParts, tempBtn.firstChild as Node];\n      }\n    } else {\n      /* istanbul ignore else */\n      if (tooltipHeader) tooltipHeader.remove();\n      if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        contentParts = [...contentParts, tempBtn.firstChild as Node];\n      }\n    }\n  }\n\n  // fill the template with content from options / data attributes\n  // also sanitize title && content\n  /* istanbul ignore else */\n  if (!isTooltip) {\n    /* istanbul ignore else */\n    if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n    /* istanbul ignore else */\n    if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n    // set btn\n    self.btn = querySelector('.btn-close', tooltip) || undefined;\n  } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n  // Bootstrap 5.2.x\n  // addClass(tooltip, 'position-absolute');\n  addClass(tooltip, 'position-fixed');\n  addClass(arrow, 'position-absolute');\n\n  // set popover animation and placement\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n  /* istanbul ignore else */\n  if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n  /* istanbul ignore else */\n  if (customClass && !hasClass(tooltip, customClass)) {\n    addClass(tooltip, customClass);\n  }\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n};\n\nexport default createTip;\n","import { getDocument, isShadowRoot, isTableElement, getParentNode, getElementStyle } from '@thednp/shorty';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = ['HTML', 'BODY'];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, 'position') !== 'relative' &&\n        containers.slice(i + 1).every(r => getElementStyle(r as HTMLElement, 'position') === 'static')\n      ) {\n        return c;\n      }\n      return null;\n    }) || /* istanbul ignore next: optional guard */ getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  isFunction,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementStyle,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip as HTMLElement, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  toggleTooltipHandlers(self);\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n\n  [scrollEvent, resizeEvent].forEach(ev => {\n    action(getWindow(element), ev, self.update, passiveHandler);\n  });\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element, onHideComplete } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n  if (isFunction(onHideComplete)) {\n    onHideComplete();\n    self.onHideComplete = undefined;\n  }\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  // btn is only for dismissible popover\n  const { element, options, btn } = self;\n  const { trigger } = options;\n  const isPopover = self.name !== tooltipComponent;\n  const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n  if (trigger.includes('manual')) return;\n\n  self.enabled = !!add;\n\n  const triggerOptions = trigger.split(' ');\n\n  triggerOptions.forEach(tr => {\n    /* istanbul ignore else */\n    if (tr === mousehoverEvent) {\n      action(element, mousedownEvent, self.show);\n      action(element, mouseenterEvent, self.show);\n\n      /* istanbul ignore else */\n      if (dismissible && btn) {\n        action(btn, mouseclickEvent, self.hide);\n      } else {\n        action(element, mouseleaveEvent, self.hide);\n        action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n      }\n    } else if (tr === mouseclickEvent) {\n      action(element, tr, !dismissible ? self.toggle : self.show);\n    } else if (tr === focusEvent) {\n      action(element, focusinEvent, self.show);\n      /* istanbul ignore else */\n      if (!dismissible) action(element, focusoutEvent, self.hide);\n      /* istanbul ignore else */\n      if (isApple) {\n        action(element, mouseclickEvent, () => focus(element));\n      }\n    }\n  });\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, container, offsetParent } = self;\n  const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  const win = getWindow(element);\n  const overflow = offsetHeight !== scrollHeight;\n  const scrollTarget = container === offsetParent && overflow ? container : win;\n  action(scrollTarget, resizeEvent, self.update, passiveHandler);\n  action(scrollTarget, scrollEvent, self.update, passiveHandler);\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.hide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.hide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content || getAttribute(element, titleAtt[0]) || /* istanbul ignore next */ '',\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n  declare onHideComplete?: () => void;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if ((!options.title && isTooltip) || (!isTooltip && !options.content)) {\n      // throw Error(`${this.name} Error: target has no content set.`);\n      return;\n    }\n\n    // reset default options\n    ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n    // all functions bind\n    this.handleTouch = this.handleTouch.bind(this);\n    this.update = this.update.bind(this);\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n    this.toggle = this.toggle.bind(this);\n\n    // set title attributes and add event listeners\n    /* istanbul ignore else */\n    if (hasAttribute(element, titleAttr) && isTooltip && typeof options.title === 'string') {\n      toggleTooltipTitle(this, options.title);\n    }\n\n    // set containers\n    this.container = getElementContainer(element);\n    this.offsetParent = ['sticky', 'fixed'].some(\n      position => getElementStyle(this.container as HTMLElement, 'position') === position,\n    )\n      ? (this.container as HTMLElement)\n      : getDocument(this.element).body;\n\n    // create tooltip here\n    createTip(this);\n\n    // attach events\n    toggleTooltipHandlers(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Shows the tooltip. */\n  show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasPopup(tooltip, tipContainer)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (showTooltipEvent.defaultPrevented) return;\n\n          // append to container\n          appendPopup(tooltip, tipContainer);\n\n          setAttribute(element, ariaDescribedBy, `#${id}`);\n\n          this.update();\n          toggleTooltipOpenHandlers(this, true);\n\n          /* istanbul ignore else */\n          if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n          /* istanbul ignore else */\n          if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n          else tooltipShownAction(this);\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  hide() {\n    const { options, tooltip, element, container, offsetParent } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (hideTooltipEvent.defaultPrevented) return;\n\n          this.update();\n          removeClass(tooltip, showClass);\n          toggleTooltipOpenHandlers(this);\n\n          /* istanbul ignore else */\n          if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n          else tooltipHiddenAction(this);\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update() {\n    styleTip<Tooltip>(this);\n  }\n\n  /** Toggles the tooltip visibility. */\n  toggle() {\n    const { tooltip, container, offsetParent } = this;\n\n    if (tooltip && !hasPopup(tooltip, container === offsetParent ? container : offsetParent)) this.show();\n    else this.hide();\n  }\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      toggleTooltipHandlers(this, true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, container, offsetParent, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent) && animation) {\n        this.onHideComplete = () => toggleTooltipHandlers(this);\n        this.hide();\n      } else {\n        toggleTooltipHandlers(this);\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch({ target }: TouchEvent) {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore next */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  }\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, container, offsetParent, options } = this;\n    const callback = () => disposeTooltipComplete(this, () => super.dispose());\n\n    if (options.animation && tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent)) {\n      this.options.delay = 0; // reset delay\n      this.onHideComplete = callback;\n      this.hide();\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show() {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  }\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  // ObjectAssign,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget ? getScrollHeight(scrollTarget) : /* istanbul ignore next */ scrollHeight;\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n/**\n * Toggles on/off the component event listener.\n *\n * @param self the `ScrollSpy` instance\n * @param add when `true`, listener is added\n */\nconst toggleSpyHandlers = (self: ScrollSpy, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.scrollTarget as EventTarget, scrollEvent, self.refresh, passiveHandler);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (!this.target) return;\n\n    // set initial state\n    this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n    this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n    // bind events\n    this.refresh = this.refresh.bind(this);\n\n    // add event handlers\n    toggleSpyHandlers(this, true);\n\n    this.refresh();\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh() {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore next */\n    if (target?.offsetHeight === 0) return;\n\n    updateSpyTargets(this);\n\n    const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n    if (scrollTop >= maxScroll) {\n      const newActiveItem = items[itemsLength - 1];\n\n      /* istanbul ignore else */\n      if (activeItem !== newActiveItem) {\n        activate(this, newActiveItem);\n      }\n      return;\n    }\n\n    const { offsets } = this;\n\n    if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n      this.activeItem = null;\n      if (target) clear(target);\n      return;\n    }\n\n    items.forEach((item, i) => {\n      if (\n        activeItem !== item &&\n        scrollTop >= offsets[i] &&\n        (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n      ) {\n        activate(this, item);\n      }\n    });\n  }\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    toggleSpyHandlers(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  // ObjectAssign,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || /* istanbul ignore next */ {\n      currentHeight: 0,\n      nextHeight: 0,\n    };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n  if (showTabEvent.defaultPrevented) return;\n\n  if (nextContent) addClass(nextContent, activeClass);\n  if (content) removeClass(content, activeClass);\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const nextHeight = nextContent.scrollHeight;\n    tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n    addClass(tabContent, collapsingClass);\n    tabContent.style.height = `${currentHeight}px`;\n    reflow(tabContent);\n    [content, nextContent].forEach(c => {\n      if (c) removeClass(c, 'overflow-hidden');\n    });\n  }\n\n  if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n    setTimeout(() => {\n      addClass(nextContent, showClass);\n      emulateTransitionEnd(nextContent, () => {\n        triggerTabShow(self);\n      });\n    }, 1);\n  } else {\n    if (nextContent) addClass(nextContent, showClass);\n    triggerTabShow(self);\n  }\n\n  if (tab) dispatchEvent(tab, hiddenTabEvent);\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  /* istanbul ignore next */\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Tab` instance\n * @param add when `true`, event listener is added\n */\nconst toggleTabHandler = (self: Tab, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, tabClickHandler);\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n  e.preventDefault();\n\n  self.show();\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    if (!content) return;\n\n    const nav = closest(element, '.nav');\n    const container = closest(content, '.tab-content');\n\n    this.nav = nav;\n    this.content = content;\n    this.tabContent = container;\n\n    // event targets\n    this.dropdown = getParentDropdown(element);\n\n    // show first Tab instance of none is shown\n    // suggested on #432\n    const { tab } = getActiveTab(this);\n    if (nav && !tab) {\n      const firstTab = querySelector(tabSelector, nav);\n      const firstTabContent = firstTab && getTargetElement(firstTab);\n\n      /* istanbul ignore else */\n      if (firstTabContent) {\n        addClass(firstTab, activeClass);\n        addClass(firstTabContent, showClass);\n        addClass(firstTabContent, activeClass);\n        setAttribute(element, ariaSelected, 'true');\n      }\n    }\n\n    // add event listener\n    toggleTabHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      if (isHTMLElement(tab as Node)) dispatchEvent(tab as EventTarget, hideTabEvent);\n      if (hideTabEvent.defaultPrevented) return;\n\n      addClass(element, activeClass);\n      setAttribute(element, ariaSelected, 'true');\n\n      const activeDropdown = isHTMLElement(tab as HTMLElement) && getParentDropdown(tab as HTMLElement);\n      if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n        removeClass(activeDropdown, activeClass);\n      }\n\n      /* istanbul ignore else */\n      if (nav) {\n        const toggleTab = () => {\n          if (tab) {\n            removeClass(tab, activeClass);\n            setAttribute(tab, ariaSelected, 'false');\n          }\n          if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n        };\n\n        if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n          Timer.set(nav, toggleTab, 1);\n        } else toggleTab();\n      }\n\n      if (content) {\n        removeClass(content, showClass);\n        if (hasClass(content, fadeClass)) {\n          emulateTransitionEnd(content, () => triggerTabHide(this));\n        } else {\n          triggerTabHide(this);\n        }\n      }\n    }\n  }\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    toggleTabHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  // ObjectAssign,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Toast` instance\n * @param add when `true`, it will add the listener\n */\nconst toggleToastHandlers = (self: Toast, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, triggers, dismiss, options } = self;\n\n  /* istanbul ignore else */\n  if (dismiss) {\n    action(dismiss, mouseclickEvent, self.hide);\n  }\n\n  /* istanbul ignore else */\n  if (options.autohide) {\n    [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n      action(element, e, interactiveToastHandler as EventListener),\n    );\n  }\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n  }\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  toggleToastHandlers(self);\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n  /* istanbul ignore next */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.show();\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore next: a solid filter is required */\n  if (!self || element === relatedTarget || element.contains(relatedTarget as Node)) return;\n\n  if ([mouseenterEvent, focusinEvent].includes(type)) {\n    Timer.clear(element, toastString);\n  } else {\n    Timer.set(element, () => self.hide(), self.options.delay, toastString);\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // bind\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n\n    // add event listener\n    toggleToastHandlers(this, true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (showToastEvent.defaultPrevented) return;\n\n      showToast(this);\n    }\n  }\n\n  /** Hides the toast. */\n  hide() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (hideToastEvent.defaultPrevented) return;\n      hideToast(this);\n    }\n  }\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","import { Data, ObjectKeys, ObjectValues, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = {\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n};\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  ObjectValues(componentsList).forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  ObjectKeys(componentsList).forEach(comp => {\n    removeComponentDataAPI(comp, lookUp);\n  });\n};\n\n// bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n"],"names":["exports","r","a","s","e","c","n","o","t","i","f","d","g","E","L","ge","ve","be","we","Ae","Se","H","_","tt","et","ct","at","ut","dt","ft","mt","gt","Mt","kt","Tt","Lt","xt","Bt","Le","Qe","qe","Ge","je","$e","Qt","qt","D","U","Gt","S","jt","M","I","z","vn","N","Jt","Kt","Xt","Yt","Zt","Nn","F","Dn","Ln","On","In","u","y","Bn","W","R","h","$t","Q","v","ne","oe","Un","l","Rn","x","se","Qn","p","A","G","q","Gn","jn","Jn","Kn","Xn","Yn","O","ce","m","Zn","w","_n","k","re","no","V","B","b","ie","so","ue","ao","lo","Eo","bo","yo","de","wo","pe","Mo","No","ko","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","BaseComponent","target","config","element","querySelector","isString","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","that","toggleAlertHandler","dispatchEvent","add","action","addListener","removeListener","dismiss","mouseclickEvent","self","closest","hasClass","removeClass","emulateTransitionEnd","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","toggleButtonHandler","setAttribute","ariaPressed","isActive","addClass","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","getAttribute","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","keyArrowRight","keyArrowLeft","carouselDragHandler","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","activateCarouselIndicator","pageIndex","pointermoveEvent","passiveHandler","pointerupEvent","toggleCarouselHandlers","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","touchstartEvent","dragstartEvent","arrow","indicator","keydownEvent","isHTMLElement","getElementsByClassName","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","itemClasses","slide","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","toggleCollapseHandler","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","toggleDropdownHandler","dropdownClickHandler","getCurrentOpenDropdown","currentParent","type","hasData","isForm","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","pad","padStyle","toggleModalDismiss","modalDismissHandler","modalKeyHandler","toggleModalHandler","modalClickHandler","afterModalHide","callback","relatedTarget","focusElement","isFunction","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffcanvasEvents","offcanvasTriggerHandler","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offCanvasDismiss","selection","visibleTrigger","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","toLowerCase","tooltipDefaults","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","offsetParent","ariaDescribedBy","disposeTooltipComplete","toggleTooltipHandlers","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","onHideComplete","hiddenTooltipEvent","tr","mousehoverEvent","mousedownEvent","focusinEvent","focusoutEvent","isApple","toggleTooltipOpenHandlers","offsetHeight","parentModal","parentOffcanvas","win","scrollTarget","titleAtt","tipComponent","elem","getUID","position","outTimer","tipContainer","showTooltipEvent","delay","hideTooltipEvent","enabled","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","itemsLength","isWin","isWindow","links","getElementsByTagName","scrollHEIGHT","getScrollHeight","href","targetItem","rect","getOffsetHeight","link","clear","item","activate","parents","parentItem","menuItem","parentLink","toggleSpyHandlers","scrollTop","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","toggleTabHandler","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toggleToastHandlers","interactiveToastHandler","toastClickHandler","completeDisposeToast","isShown","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","ObjectValues","cs","init","selector","matches","removeDataAPI","comp"],"mappings":"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"}