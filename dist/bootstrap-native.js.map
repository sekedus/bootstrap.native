{"version":3,"file":"bootstrap-native.js","sources":["../node_modules/@thednp/event-listener/dist/event-listener.mjs","../node_modules/@thednp/shorty/dist/shorty.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["const e = {}, f = (t) => {\n  const { type: c, currentTarget: i } = t;\n  [...e[c]].forEach(([n, s]) => {\n    i === n && [...s].forEach(([o, a]) => {\n      o.apply(n, [t]), typeof a == \"object\" && a.once && r(n, c, o, a);\n    });\n  });\n}, E = (t, c, i, n) => {\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const s = e[c];\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(t), { size: a } = o;\n  o.set(i, n), a || t.addEventListener(c, f, n);\n}, r = (t, c, i, n) => {\n  const s = e[c], o = s && s.get(t), a = o && o.get(i), d = a !== void 0 ? a : n;\n  o && o.has(i) && o.delete(i), s && (!o || !o.size) && s.delete(t), (!s || !s.size) && delete e[c], (!o || !o.size) && t.removeEventListener(c, f, d);\n}, g = E, M = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  r as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","const pe = \"aria-checked\", fe = \"aria-description\", me = \"aria-describedby\", ge = \"aria-expanded\", ve = \"aria-haspopup\", Ee = \"aria-hidden\", be = \"aria-label\", he = \"aria-labelledby\", ye = \"aria-modal\", we = \"aria-pressed\", Ae = \"aria-selected\", Se = \"aria-valuemin\", Me = \"aria-valuemax\", Ne = \"aria-valuenow\", ke = \"aria-valuetext\", G = \"abort\", j = \"beforeunload\", J = \"blur\", K = \"change\", X = \"contextmenu\", P = \"DOMContentLoaded\", Y = \"DOMMouseScroll\", Z = \"error\", $ = \"focus\", _ = \"focusin\", tt = \"focusout\", et = \"gesturechange\", nt = \"gestureend\", ot = \"gesturestart\", st = \"keydown\", ct = \"keypress\", rt = \"keyup\", at = \"load\", it = \"click\", ut = \"dblclick\", lt = \"mousedown\", dt = \"mouseup\", pt = \"hover\", ft = \"mouseenter\", mt = \"mouseleave\", gt = \"mousein\", vt = \"mouseout\", Et = \"mouseover\", bt = \"mousemove\", ht = \"mousewheel\", yt = \"move\", wt = \"orientationchange\", At = \"pointercancel\", St = \"pointerdown\", Mt = \"pointerleave\", Nt = \"pointermove\", kt = \"pointerup\", Tt = \"readystatechange\", Dt = \"reset\", Ct = \"resize\", Lt = \"select\", Ot = \"selectend\", It = \"selectstart\", zt = \"scroll\", xt = \"submit\", Vt = \"touchstart\", Bt = \"touchmove\", Ht = \"touchcancel\", Pt = \"touchend\", Ut = \"unload\", Te = {\n  DOMContentLoaded: P,\n  DOMMouseScroll: Y,\n  abort: G,\n  beforeunload: j,\n  blur: J,\n  change: K,\n  click: it,\n  contextmenu: X,\n  dblclick: ut,\n  error: Z,\n  focus: $,\n  focusin: _,\n  focusout: tt,\n  gesturechange: et,\n  gestureend: nt,\n  gesturestart: ot,\n  hover: pt,\n  keydown: st,\n  keypress: ct,\n  keyup: rt,\n  load: at,\n  mousedown: lt,\n  mousemove: bt,\n  mousein: gt,\n  mouseout: vt,\n  mouseenter: ft,\n  mouseleave: mt,\n  mouseover: Et,\n  mouseup: dt,\n  mousewheel: ht,\n  move: yt,\n  orientationchange: wt,\n  pointercancel: At,\n  pointerdown: St,\n  pointerleave: Mt,\n  pointermove: Nt,\n  pointerup: kt,\n  readystatechange: Tt,\n  reset: Dt,\n  resize: Ct,\n  scroll: zt,\n  select: Lt,\n  selectend: Ot,\n  selectstart: It,\n  submit: xt,\n  touchcancel: Ht,\n  touchend: Pt,\n  touchmove: Bt,\n  touchstart: Vt,\n  unload: Ut\n}, De = \"drag\", Ce = \"dragstart\", Le = \"dragenter\", Oe = \"dragleave\", Ie = \"dragover\", ze = \"dragend\", xe = \"loadstart\", Ve = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Be = { down: \"mousedown\", up: \"mouseup\" }, He = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : (\n  /* istanbul ignore next */\n  [\"mouseover\", \"mouseout\"]\n), Pe = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, Ue = { in: \"focusin\", out: \"focusout\" }, Fe = {\n  Backspace: \"Backspace\",\n  //  8\n  Tab: \"Tab\",\n  //  9\n  Enter: \"Enter\",\n  // 13\n  Shift: \"Shift\",\n  // 16\n  Control: \"Control\",\n  // 17\n  Alt: \"Alt\",\n  // 18\n  Pause: \"Pause\",\n  // 19\n  CapsLock: \"CapsLock\",\n  // 20\n  Escape: \"Escape\",\n  // 27\n  Scape: \"Space\",\n  // 32\n  ArrowLeft: \"ArrowLeft\",\n  // 37\n  ArrowUp: \"ArrowUp\",\n  // 38\n  ArrowRight: \"ArrowRight\",\n  // 39\n  ArrowDown: \"ArrowDown\",\n  // 40\n  Insert: \"Insert\",\n  // 45\n  Delete: \"Delete\",\n  // 46\n  Meta: \"Meta\",\n  // 91 windows key\n  ContextMenu: \"ContextMenu\",\n  // 93\n  ScrollLock: \"ScrollLock\"\n  // 145\n}, We = \"Alt\", Re = \"ArrowDown\", Qe = \"ArrowUp\", qe = \"ArrowLeft\", Ge = \"ArrowRight\", je = \"Backspace\", Je = \"CapsLock\", Ke = \"Control\", Xe = \"Delete\", Ye = \"Enter\", Ze = \"Escape\", $e = \"Insert\", _e = \"Meta\", tn = \"Pause\", en = \"ScrollLock\", nn = \"Shift\", on = \"Space\", sn = \"Tab\", Ft = \"animationDuration\", Wt = \"animationDelay\", U = \"animationName\", D = \"animationend\", Rt = \"transitionDuration\", Qt = \"transitionDelay\", C = \"transitionend\", F = \"transitionProperty\", cn = \"addEventListener\", rn = \"removeEventListener\", an = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, un = \"offsetHeight\", ln = \"offsetWidth\", dn = \"scrollHeight\", pn = \"scrollWidth\", fn = \"tabindex\", qt = navigator.userAgentData, A = qt, { userAgent: Gt } = navigator, S = Gt, z = /iPhone|iPad|iPod|Android/i;\nlet L = !1;\nA ? L = A.brands.some((t) => z.test(t.brand)) : L = z.test(S);\nconst mn = L, x = /(iPhone|iPod|iPad)/, gn = A ? A.brands.some((t) => x.test(t.brand)) : (\n  /* istanbul ignore next */\n  x.test(S)\n), vn = S ? S.includes(\"Firefox\") : (\n  /* istanbul ignore next */\n  !1\n), { head: M } = document, En = [\"webkitPerspective\", \"perspective\"].some((t) => t in M.style), jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(e, n, s);\n}, Jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(e, n, s);\n}, Kt = (t, e, n, o) => {\n  const s = (r) => {\n    (r.target === t || r.currentTarget === t) && (n.apply(t, [r]), Jt(t, e, s, o));\n  };\n  jt(t, e, s, o);\n}, Xt = () => {\n}, bn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    Kt(document, P, Xt, e);\n  } catch {\n  }\n  return t;\n})(), hn = [\"webkitTransform\", \"transform\"].some((t) => t in M.style), yn = \"ontouchstart\" in window || /* istanbul ignore next */\n\"msMaxTouchPoints\" in navigator, wn = [\"webkitAnimation\", \"animation\"].some((t) => t in M.style), An = [\"webkitTransition\", \"transition\"].some((t) => t in M.style), Yt = (t, e) => t.getAttribute(e), Sn = (t, e, n) => e.getAttributeNS(t, n), Mn = (t, e) => t.hasAttribute(e), Nn = (t, e, n) => e.hasAttributeNS(t, n), kn = (t, e, n) => t.setAttribute(e, n), Tn = (t, e, n, o) => e.setAttributeNS(t, n, o), Dn = (t, e) => t.removeAttribute(e), Cn = (t, e, n) => e.removeAttributeNS(t, n), Ln = (t, ...e) => {\n  t.classList.add(...e);\n}, On = (t, ...e) => {\n  t.classList.remove(...e);\n}, In = (t, e) => t.classList.contains(e), { body: zn } = document, { documentElement: xn } = document, Vn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, i = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((e) => t.nodeType === e) || !1, u = (t) => i(t) && t.nodeType === 1 || !1, E = /* @__PURE__ */ new Map(), O = {\n  data: E,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (t, e, n) => {\n    if (!u(t))\n      return;\n    E.has(e) || E.set(e, /* @__PURE__ */ new Map()), E.get(e).set(t, n);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (t) => E.get(t) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (t, e) => {\n    if (!u(t) || !e)\n      return null;\n    const n = O.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (t, e) => {\n    const n = O.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && E.delete(e));\n  }\n}, Bn = (t, e) => O.get(t, e), N = (t) => typeof t == \"string\" || !1, W = (t) => v(t) && t.constructor.name === \"Window\" || !1, R = (t) => i(t) && t.nodeType === 9 || !1, d = (t) => W(t) ? t.document : R(t) ? t : i(t) ? t.ownerDocument : window.document, k = (t, ...e) => Object.assign(t, ...e), Zt = (t) => {\n  if (!t)\n    return;\n  if (N(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = Zt(e);\n  if (!n)\n    return;\n  const o = { ...t };\n  return delete o.tagName, k(n, o);\n}, $t = (t, e) => {\n  if (!t || !e)\n    return;\n  if (N(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = $t(t, n);\n  if (!o)\n    return;\n  const s = { ...e };\n  return delete s.tagName, k(o, s);\n}, Q = (t, e) => t.dispatchEvent(e), Hn = (t, e, n) => n.indexOf(t) === e, g = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, _t = (t) => {\n  const e = g(t, U), n = g(t, Wt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, te = (t) => {\n  const e = g(t, U), n = g(t, Ft), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Pn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = te(t), r = _t(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(D, a), n = 1);\n    };\n    t.addEventListener(D, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, ee = (t) => {\n  const e = g(t, F), n = g(t, Qt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, ne = (t) => {\n  const e = g(t, F), n = g(t, Rt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Un = (t, e) => {\n  let n = 0;\n  const o = new Event(C), s = ne(t), r = ee(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(C, a), n = 1);\n    };\n    t.addEventListener(C, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, Fn = (t) => Float32Array.from(Array.from(t)), Wn = (t) => Float64Array.from(Array.from(t)), Rn = (t, e) => t.focus(e), V = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, w = (t) => Object.entries(t), oe = (t) => t.toLowerCase(), Qn = (t, e, n, o) => {\n  const s = { ...n }, r = { ...t.dataset }, a = { ...e }, l = {}, p = \"title\";\n  return w(r).forEach(([c, f]) => {\n    const y = o && typeof c == \"string\" && c.includes(o) ? c.replace(o, \"\").replace(/[A-Z]/g, (q) => oe(q)) : c;\n    l[y] = V(f);\n  }), w(s).forEach(([c, f]) => {\n    s[c] = V(f);\n  }), w(e).forEach(([c, f]) => {\n    c in s ? a[c] = s[c] : c in l ? a[c] = l[c] : a[c] = c === p ? Yt(t, p) : f;\n  }), a;\n}, qn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Gn = (t) => Object.keys(t), jn = (t) => Object.values(t), Jn = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return v(e) && k(n, e), n;\n}, Kn = { passive: !0 }, Xn = (t) => t.offsetHeight, Yn = (t, e) => {\n  w(e).forEach(([n, o]) => {\n    if (o && N(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, k(t.style, s);\n    }\n  });\n}, I = (t) => v(t) && t.constructor.name === \"Map\" || !1, se = (t) => typeof t == \"number\" || !1, m = /* @__PURE__ */ new Map(), Zn = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (t, e, n, o) => {\n    u(t) && (o && o.length ? (m.has(t) || m.set(t, /* @__PURE__ */ new Map()), m.get(t).set(o, setTimeout(e, n))) : m.set(t, setTimeout(e, n)));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (t, e) => {\n    if (!u(t))\n      return null;\n    const n = m.get(t);\n    return e && n && I(n) ? n.get(e) || /* istanbul ignore next */\n    null : se(n) ? n : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (t, e) => {\n    if (!u(t))\n      return;\n    const n = m.get(t);\n    e && e.length && I(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && m.delete(t)) : (clearTimeout(n), m.delete(t));\n  }\n}, $n = (t) => t.toUpperCase(), h = (t, e) => {\n  const { width: n, height: o, top: s, right: r, bottom: a, left: l } = t.getBoundingClientRect();\n  let p = 1, c = 1;\n  if (e && u(t)) {\n    const { offsetWidth: f, offsetHeight: y } = t;\n    p = f > 0 ? Math.round(n) / f : (\n      /* istanbul ignore next */\n      1\n    ), c = y > 0 ? Math.round(o) / y : (\n      /* istanbul ignore next */\n      1\n    );\n  }\n  return {\n    width: n / p,\n    height: o / c,\n    top: s / c,\n    right: r / p,\n    bottom: a / c,\n    left: l / p,\n    x: l / p,\n    y: s / c\n  };\n}, _n = (t) => d(t).body, T = (t) => d(t).documentElement, to = (t) => d(t).head, eo = (t) => {\n  const e = W(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, ce = (t) => i(t) && t.constructor.name === \"ShadowRoot\" || !1, no = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || // step into the shadow DOM of the parent of a slotted node\ni(t) && t.parentNode || // DOM Element detected\nce(t) && t.host || // ShadowRoot detected\nT(t), re = (t) => {\n  if (!u(t))\n    return !1;\n  const { width: e, height: n } = h(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, oo = (t, e, n) => {\n  const o = u(e), s = h(t, o && re(e)), r = { x: 0, y: 0 };\n  if (o) {\n    const a = h(e, !0);\n    r.x = a.x + e.clientLeft, r.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - r.x,\n    y: s.top + n.y - r.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet B = 0, H = 0;\nconst b = /* @__PURE__ */ new Map(), ae = (t, e) => {\n  let n = e ? B : H;\n  if (e) {\n    const o = ae(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), I(s) && !s.has(e) ? (s.set(e, n), B += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), H += 1);\n  }\n  return n;\n}, so = (t) => {\n  var e;\n  return t ? R(t) ? t.defaultView : i(t) ? (e = t == null ? void 0 : t.ownerDocument) == null ? void 0 : e.defaultView : t : window;\n}, ie = (t) => Array.isArray(t) || !1, co = (t) => i(t) && t.nodeName === \"CANVAS\" || !1, ue = (t) => u(t) && !!t.shadowRoot || !1, ro = (t) => i(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, ao = (t) => {\n  if (!i(t))\n    return !1;\n  const { top: e, bottom: n } = h(t), { clientHeight: o } = T(t);\n  return e <= o && n >= 0;\n}, io = (t) => {\n  if (!i(t))\n    return !1;\n  const { clientWidth: e, clientHeight: n } = T(t), { top: o, left: s, bottom: r, right: a } = h(t, !0);\n  return o >= 0 && s >= 0 && r <= n && a <= e;\n}, uo = (t) => ie(t) && t.every(u) || !1, lo = (t) => typeof t == \"function\" || !1, po = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, fo = (t) => u(t) && t.tagName === \"IMG\" || !1, mo = (t) => {\n  if (!N(t))\n    return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, go = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, vo = (t) => i(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((e) => t.constructor.name.includes(e)) || !1, Eo = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, bo = (t) => T(t).dir === \"rtl\", ho = (t) => i(t) && t.constructor.name.includes(\"SVG\") || !1, yo = (t) => i(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, le = (t, e) => t ? t.closest(e) || // break out of `ShadowRoot`\nle(t.getRootNode().host, e) : null, wo = (t, e) => u(t) ? t : (i(e) ? e : d()).querySelector(t), de = (t, e) => (i(e) ? e : d()).getElementsByTagName(t), Ao = (t) => [...de(\"*\", t)].filter(ue), So = (t, e) => d(e).getElementById(t) || null, Mo = (t, e) => (i(e) ? e : d()).querySelectorAll(t), No = (t, e) => (e && i(e) ? e : d()).getElementsByClassName(\n  t\n), ko = (t, e) => t.matches(e), To = \"2.0.0alpha14\";\nexport {\n  Vn as ArrayFrom,\n  P as DOMContentLoadedEvent,\n  Y as DOMMouseScrollEvent,\n  O as Data,\n  Fn as Float32ArrayFrom,\n  Wn as Float64ArrayFrom,\n  k as ObjectAssign,\n  w as ObjectEntries,\n  qn as ObjectHasOwn,\n  Gn as ObjectKeys,\n  jn as ObjectValues,\n  Zn as Timer,\n  G as abortEvent,\n  Ln as addClass,\n  cn as addEventListener,\n  Wt as animationDelay,\n  Ft as animationDuration,\n  D as animationEndEvent,\n  U as animationName,\n  pe as ariaChecked,\n  me as ariaDescribedBy,\n  fe as ariaDescription,\n  ge as ariaExpanded,\n  ve as ariaHasPopup,\n  Ee as ariaHidden,\n  be as ariaLabel,\n  he as ariaLabelledBy,\n  ye as ariaModal,\n  we as ariaPressed,\n  Ae as ariaSelected,\n  Me as ariaValueMax,\n  Se as ariaValueMin,\n  Ne as ariaValueNow,\n  ke as ariaValueText,\n  j as beforeunloadEvent,\n  an as bezierEasings,\n  J as blurEvent,\n  K as changeEvent,\n  le as closest,\n  X as contextmenuEvent,\n  Jn as createCustomEvent,\n  Zt as createElement,\n  $t as createElementNS,\n  Q as dispatchEvent,\n  Hn as distinct,\n  zn as documentBody,\n  xn as documentElement,\n  M as documentHead,\n  De as dragEvent,\n  ze as dragendEvent,\n  Le as dragenterEvent,\n  Oe as dragleaveEvent,\n  Ie as dragoverEvent,\n  Ce as dragstartEvent,\n  Pn as emulateAnimationEnd,\n  Un as emulateTransitionEnd,\n  Z as errorEvent,\n  Rn as focus,\n  $ as focusEvent,\n  Ue as focusEvents,\n  _ as focusinEvent,\n  tt as focusoutEvent,\n  et as gesturechangeEvent,\n  nt as gestureendEvent,\n  ot as gesturestartEvent,\n  Yt as getAttribute,\n  Sn as getAttributeNS,\n  h as getBoundingClientRect,\n  Ao as getCustomElements,\n  d as getDocument,\n  _n as getDocumentBody,\n  T as getDocumentElement,\n  to as getDocumentHead,\n  _t as getElementAnimationDelay,\n  te as getElementAnimationDuration,\n  So as getElementById,\n  g as getElementStyle,\n  ee as getElementTransitionDelay,\n  ne as getElementTransitionDuration,\n  No as getElementsByClassName,\n  de as getElementsByTagName,\n  Bn as getInstance,\n  eo as getNodeScroll,\n  no as getParentNode,\n  oo as getRectRelativeToOffsetParent,\n  ae as getUID,\n  so as getWindow,\n  Mn as hasAttribute,\n  Nn as hasAttributeNS,\n  In as hasClass,\n  gn as isApple,\n  ie as isArray,\n  co as isCanvas,\n  ue as isCustomElement,\n  R as isDocument,\n  ro as isElement,\n  ao as isElementInScrollRange,\n  io as isElementInViewport,\n  uo as isElementsArray,\n  vn as isFirefox,\n  lo as isFunction,\n  po as isHTMLCollection,\n  u as isHTMLElement,\n  fo as isHTMLImageElement,\n  mo as isJSON,\n  I as isMap,\n  vo as isMedia,\n  mn as isMobile,\n  i as isNode,\n  Eo as isNodeList,\n  se as isNumber,\n  v as isObject,\n  bo as isRTL,\n  ho as isSVGElement,\n  re as isScaledElement,\n  ce as isShadowRoot,\n  N as isString,\n  yo as isTableElement,\n  go as isWeakMap,\n  W as isWindow,\n  We as keyAlt,\n  Re as keyArrowDown,\n  qe as keyArrowLeft,\n  Ge as keyArrowRight,\n  Qe as keyArrowUp,\n  je as keyBackspace,\n  Je as keyCapsLock,\n  Ke as keyControl,\n  Xe as keyDelete,\n  Ye as keyEnter,\n  Ze as keyEscape,\n  $e as keyInsert,\n  _e as keyMeta,\n  tn as keyPause,\n  en as keyScrollLock,\n  nn as keyShift,\n  on as keySpace,\n  sn as keyTab,\n  Fe as keyboardEventKeys,\n  st as keydownEvent,\n  ct as keypressEvent,\n  rt as keyupEvent,\n  at as loadEvent,\n  xe as loadstartEvent,\n  ko as matches,\n  Be as mouseClickEvents,\n  He as mouseHoverEvents,\n  Ve as mouseSwipeEvents,\n  it as mouseclickEvent,\n  ut as mousedblclickEvent,\n  lt as mousedownEvent,\n  ft as mouseenterEvent,\n  pt as mousehoverEvent,\n  gt as mouseinEvent,\n  mt as mouseleaveEvent,\n  bt as mousemoveEvent,\n  vt as mouseoutEvent,\n  Et as mouseoverEvent,\n  dt as mouseupEvent,\n  ht as mousewheelEvent,\n  yt as moveEvent,\n  Te as nativeEvents,\n  Xt as noop,\n  Qn as normalizeOptions,\n  V as normalizeValue,\n  Jt as off,\n  un as offsetHeight,\n  ln as offsetWidth,\n  jt as on,\n  Kt as one,\n  wt as orientationchangeEvent,\n  Kn as passiveHandler,\n  At as pointercancelEvent,\n  St as pointerdownEvent,\n  Mt as pointerleaveEvent,\n  Nt as pointermoveEvent,\n  kt as pointerupEvent,\n  wo as querySelector,\n  Mo as querySelectorAll,\n  Tt as readystatechangeEvent,\n  Xn as reflow,\n  Dn as removeAttribute,\n  Cn as removeAttributeNS,\n  On as removeClass,\n  rn as removeEventListener,\n  Dt as resetEvent,\n  Ct as resizeEvent,\n  zt as scrollEvent,\n  dn as scrollHeight,\n  pn as scrollWidth,\n  Lt as selectEvent,\n  Ot as selectendEvent,\n  It as selectstartEvent,\n  kn as setAttribute,\n  Tn as setAttributeNS,\n  Yn as setElementStyle,\n  xt as submitEvent,\n  En as support3DTransform,\n  wn as supportAnimation,\n  bn as supportPassive,\n  yn as supportTouch,\n  hn as supportTransform,\n  An as supportTransition,\n  fn as tabindex,\n  oe as toLowerCase,\n  $n as toUpperCase,\n  Pe as touchEvents,\n  Ht as touchcancelEvent,\n  Pt as touchendEvent,\n  Bt as touchmoveEvent,\n  Vt as touchstartEvent,\n  Qt as transitionDelay,\n  Rt as transitionDuration,\n  C as transitionEndEvent,\n  F as transitionProperty,\n  Ut as unloadEvent,\n  S as userAgent,\n  A as userAgentData,\n  To as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: HTMLElement;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    /* istanbul ignore else */\n    if (prevInstance) {\n      prevInstance.dispose();\n    }\n\n    this.element = element;\n    this.options =\n      this.defaults && ObjectKeys(this.defaults).length\n        ? normalizeOptions(element, this.defaults, config || {}, 'bs')\n        : {};\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (that: Alert) => {\n  const { element } = that;\n  toggleAlertHandler(that);\n\n  dispatchEvent(element, closedAlertEvent);\n\n  that.dispose();\n  element.remove();\n};\n\n// ALERT PRIVATE METHOD\n// ====================\n/**\n * Toggle on / off the `click` event listener.\n *\n * @param that the target alert instance\n * @param add when `true`, event listener is added\n */\nconst toggleAlertHandler = (that: Alert, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { dismiss, close } = that;\n  /* istanbul ignore else */\n  if (dismiss) action(dismiss, mouseclickEvent, close);\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    toggleAlertHandler(this, true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n\n      if (!closeAlertEvent.defaultPrevented) {\n        removeClass(element, showClass);\n\n        if (hasClass(element, fadeClass)) {\n          emulateTransitionEnd(element, () => alertTransitionEnd(this));\n        } else alertTransitionEnd(this);\n      }\n    }\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    toggleAlertHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n  getAttribute,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON PRIVATE METHOD\n// =====================\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Button` instance\n * @param add when `true`, event listener is added\n */\nconst toggleButtonHandler = (self: Button, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, self.toggle);\n};\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    toggleButtonHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, 'disabled') && !getAttribute(element, 'disabled')) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    toggleButtonHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  touchstartEvent,\n  dragstartEvent,\n  addClass,\n  hasClass,\n  removeClass,\n  matches,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  /* istanbul ignore else */\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (self.cycle && !getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const newIndex = +(getAttribute(this, dataBsSlideTo) || /* istanbul ignore next */ 0);\n\n    if (\n      this &&\n      !hasClass(this, activeClass) && // event target is not active\n      !Number.isNaN(newIndex)\n    ) {\n      // AND has the specific attribute\n      self.to(newIndex); // do the slide\n    }\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const orientation = getAttribute(this, dataBsSlide);\n\n    /* istanbul ignore else */\n    if (orientation === 'next') {\n      self.next();\n    } else if (orientation === 'prev') {\n      self.prev();\n    }\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (self && !self.isAnimating && !/textarea|input/i.test(target.nodeName)) {\n    const RTL = isRTL(element);\n    const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n    const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n    /* istanbul ignore else */\n    if (code === arrowKeyPrev) self.prev();\n    else if (code === arrowKeyNext) self.next();\n  }\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  /* istanbul ignore next */\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) || !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (self && !self.isAnimating && !self.isTouch) {\n    // filter pointer event on controls & indicators\n    const { controls, indicators } = self;\n    if (![...controls, ...indicators].every(el => el === target || el.contains(target as Node))) {\n      startX = e.pageX;\n\n      /* istanbul ignore else */\n      if (this.contains(target as Node)) {\n        self.isTouch = true;\n        toggleCarouselTouchHandlers(self, true);\n      }\n    }\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore else */\n  if (self) {\n    const { element, index } = self;\n    const RTL = isRTL(element);\n    endX = e.pageX;\n\n    self.isTouch = false;\n    toggleCarouselTouchHandlers(self);\n\n    if (\n      !doc.getSelection()?.toString().length &&\n      element.contains(target as HTMLElement) &&\n      Math.abs(startX - endX) > 120\n    ) {\n      // determine next index to slide to\n      /* istanbul ignore else */\n      if (currentX < startX) {\n        self.to(index + (RTL ? -1 : 1));\n      } else if (currentX > startX) {\n        self.to(index + (RTL ? 1 : -1));\n      }\n    }\n\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n  }\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler as EventListener, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler as EventListener, passiveHandler);\n};\n\n/**\n * Toggles all event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselHandlers = (self: Carousel, add?: boolean) => {\n  const { element, options, slides, controls, indicators } = self;\n  const { touch, pause, interval, keyboard } = options;\n  const action = add ? addListener : removeListener;\n\n  if (pause && interval) {\n    action(element, mouseenterEvent, carouselPauseHandler);\n    action(element, mouseleaveEvent, carouselResumeHandler);\n  }\n\n  if (touch && slides.length > 2) {\n    action(element, pointerdownEvent, carouselPointerDownHandler as EventListener, passiveHandler);\n    action(element, touchstartEvent, carouselDragHandler as unknown as EventListener, { passive: false });\n    action(element, dragstartEvent, carouselDragHandler as unknown as EventListener, { passive: false });\n  }\n\n  /* istanbul ignore else */\n  if (controls.length) {\n    controls.forEach(arrow => {\n      /* istanbul ignore else */\n      if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler as EventListener);\n    });\n  }\n\n  /* istanbul ignore else */\n  if (indicators.length) {\n    indicators.forEach(indicator => {\n      action(indicator, mouseclickEvent, carouselIndicatorHandler as EventListener);\n    });\n  }\n\n  if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler as EventListener);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length >= 2) {\n      const activeIndex = getActiveIndex(this);\n      // recover item from disposed instance\n      const transitionItem = [...slides].find(s => matches(s, `.${carouselItem}-next,.${carouselItem}-next`));\n      this.index = activeIndex;\n\n      // external controls must be within same document context\n      const doc = getDocument(element);\n\n      this.controls = [\n        ...querySelectorAll(`[${dataBsSlide}]`, element),\n        ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n      // a LIVE collection is prefferable\n      this.indicators = [\n        ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n        ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      // set JavaScript and DATA API options\n      const { options } = this;\n\n      // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n      this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n      // set first slide active if none\n      /* istanbul ignore next - impossible to test with cypress */\n      if (transitionItem) {\n        this.index = [...slides].indexOf(transitionItem);\n      } else if (activeIndex < 0) {\n        this.index = 0;\n        addClass(slides[0], activeClass);\n        if (this.indicators.length) activateCarouselIndicator(this, 0);\n      }\n\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n      // attach event handlers\n      toggleCarouselHandlers(this, true);\n\n      // start to cycle if interval is set\n      if (options.interval) this.cycle();\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (!this.isAnimating && activeItem !== next && !Timer.get(element, dataBsSlide)) {\n      // determine transition direction\n      /* istanbul ignore else */\n      if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n        this.direction = RTL ? 'right' : 'left'; // next\n      } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n        this.direction = RTL ? 'left' : 'right'; // prev\n      }\n      const { direction } = this;\n\n      // find the right next index\n      if (next < 0) {\n        next = slides.length - 1;\n      } else if (next >= slides.length) {\n        next = 0;\n      }\n\n      // orientation, class name, eventProperties\n      const orientation = direction === 'left' ? 'next' : 'prev';\n      const directionClass = direction === 'left' ? 'start' : 'end';\n\n      const eventProperties = {\n        relatedTarget: slides[next],\n        from: activeItem,\n        to: next,\n        direction,\n      };\n\n      // update event properties\n      ObjectAssign(carouselSlideEvent, eventProperties);\n      ObjectAssign(carouselSlidEvent, eventProperties);\n\n      // discontinue when prevented\n      dispatchEvent(element, carouselSlideEvent);\n      if (!carouselSlideEvent.defaultPrevented) {\n        // update index\n        this.index = next;\n        activateCarouselIndicator(this, next);\n\n        if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n          Timer.set(\n            element,\n            () => {\n              addClass(slides[next], `${carouselItem}-${orientation}`);\n              reflow(slides[next]);\n              addClass(slides[next], `${carouselItem}-${directionClass}`);\n              addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n              // the instance might get diposed mid-animation\n              emulateTransitionEnd(\n                slides[next],\n                () => this.slides && this.slides.length && carouselTransitionEndHandler(this),\n              );\n            },\n            0,\n            dataBsSlide,\n          );\n        } else {\n          addClass(slides[next], activeClass);\n          removeClass(slides[activeItem], activeClass);\n\n          Timer.set(\n            element,\n            () => {\n              Timer.clear(element, dataBsSlide);\n              // check for element, might have been disposed\n              /* istanbul ignore else */\n              if (element && options.interval && !this.isPaused) {\n                this.cycle();\n              }\n\n              dispatchEvent(element, carouselSlidEvent);\n            },\n            0,\n            dataBsSlide,\n          );\n        }\n      }\n    }\n  }\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    toggleCarouselHandlers(clone);\n    super.dispose();\n\n    // istanbul ignore next - impossible to test with cypress\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n  isHTMLElement,\n  isString,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element);\n    setElementStyle(element, { height: '0px' });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      /* istanbul ignore else */\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n/**\n * Toggles on/off the event listener(s) of the `Collapse` instance.\n *\n * @param self the `Collapse` instance\n * @param add when `true`, the event listener is added\n */\nconst toggleCollapseHandler = (self: Collapse, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler as EventListener));\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent as string, doc)\n      : null;\n\n    // add event listeners\n    toggleCollapseHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    toggleCollapseHandler(this);\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (element as HTMLAnchorElement).href.slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor && hasAttribute(parentAnchor, 'href') && (parentAnchor as HTMLAnchorElement).href.slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n  isHTMLElement,\n  mousedownEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<DropdownEvent>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore else: this test requires a navbar */\n  if (getElementStyle(menu, 'position') !== 'static') {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n    resetProps.forEach(p => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = '';\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass =\n      dropdownClasses.find(c => hasClass(parentElement, c)) ||\n      /* istanbul ignore next: fallback position */ dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: '100%' },\n      dropup: { top: 'auto', bottom: '100%' },\n      dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n      dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n      menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n      menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropendString;\n    }\n    if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: 'auto',\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n      if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n      if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n      if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      /* istanbul ignore else */\n      if (menuEnd) {\n        const endAdjust =\n          (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler as EventListener);\n  action(doc, focusEvent, dropdownDismissHandler as EventListener);\n  action(doc, keydownEvent, dropdownPreventScroll as EventListener);\n  action(doc, keyupEvent, dropdownKeyHandler as EventListener);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param self the `Dropdown` instance\n * @param add when `true`, it will add the event listener\n */\nconst toggleDropdownHandler = (self: Dropdown, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler as EventListener);\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore else */\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    /* istanbul ignore else */\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm =\n        parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === 'form' || closest(target, 'form') !== null);\n\n      if ([mouseclickEvent, mousedownEvent].includes(type) && isEmptyAnchor(target)) {\n        e.preventDefault();\n      }\n\n      /* istanbul ignore else */\n      if (!isForm && type !== focusEvent && target !== element && target !== menu) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  /* istanbul ignore else */\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n      let idx = menuItems.indexOf(activeElement);\n      /* istanbul ignore else */\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      /* istanbul ignore else */\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(dropdownMenuClass, parentElement as ParentNode);\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n\n      // add event listener\n      toggleDropdownHandler(this, true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement && getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'true');\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'false');\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    toggleDropdownHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'div', className: 'popup-container' }) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import {\n  createElement,\n  getDocument,\n  reflow,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getDocumentBody,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  focus,\n  Timer,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, update } = self;\n  action(element, mouseclickEvent, modalDismissHandler as EventListener);\n  action(getWindow(element), resizeEvent, update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler as EventListener);\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Modal` instance.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listener is added\n */\nconst toggleModalHandler = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler as EventListener));\n  }\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.toggle();\n  }\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(modalActiveSelector, getDocument(target as Node));\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options } = self;\n    /* istanbul ignore else */\n    if (\n      options.keyboard &&\n      code === keyEscape && // the keyboard option is enabled and the key is 27\n      hasClass(element, showClass)\n    ) {\n      // the modal is not visible\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nfunction modalDismissHandler(this: HTMLElement, e: MouseEvent) {\n  const self = getModalInstance(this);\n\n  // this timer is needed\n  /* istanbul ignore else: must have a filter */\n  if (self && !Timer.get(this)) {\n    const { options, isStatic, modalDialog } = self;\n    const { backdrop } = options;\n    const { target } = e;\n\n    const selectedText = getDocument(this)?.getSelection()?.toString().length;\n    const targetInsideDialog = modalDialog.contains(target as HTMLElement);\n    const dismiss = target && closest(target as HTMLElement, modalDismissSelector);\n\n    /* istanbul ignore else */\n    if (isStatic && !targetInsideDialog) {\n      Timer.set(\n        this,\n        () => {\n          addClass(this, modalStaticClass);\n          emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n        },\n        17,\n      );\n    } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n      self.relatedTarget = dismiss || null;\n      self.hide();\n      e.preventDefault();\n    }\n  }\n}\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    /* istanbul ignore else */\n    if (modalDialog) {\n      this.modalDialog = modalDialog;\n      // modal can have multiple triggering elements\n      this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n        btn => getTargetElement(btn) === element,\n      );\n\n      // additional internals\n      this.isStatic = this.options.backdrop === 'static';\n      this.hasFade = hasClass(element, fadeClass);\n      this.relatedTarget = null;\n\n      // attach event listeners\n      toggleModalHandler(this, true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showModalEvent);\n      if (!showModalEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getModalInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, offcanvasComponent);\n          if (that) that.hide();\n        }\n        if (backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, hasFade, true);\n          } else {\n            toggleOverlayType(true);\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n          setTimeout(() => beforeModalShow(this), overlayDelay);\n        } else {\n          beforeModalShow(this);\n          /* istanbul ignore else */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideModalEvent);\n\n      if (!hideModalEvent.defaultPrevented) {\n        removeClass(element, showClass);\n        setAttribute(element, ariaHidden, 'true');\n        removeAttribute(element, ariaModal);\n\n        /* istanbul ignore else */\n        if (hasFade) {\n          emulateTransitionEnd(element, () => beforeModalHide(this));\n        } else {\n          beforeModalHide(this);\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, modalDialog } = clone;\n    const callback = () => setTimeout(() => super.dispose(), 17);\n    toggleModalHandler(clone);\n\n    // use transitionend callback\n    this.hide();\n    /* istanbul ignore else */\n    if (hasClass(element, 'fade')) {\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the `click` event listeners.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true*, listeners are added\n */\nconst toggleOffcanvasEvents = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  self.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler as EventListener));\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler as EventListener);\n  action(doc, mouseclickEvent, offcanvasDismissHandler as EventListener);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => hideOffcanvasComplete(self));\n  } else hideOffcanvasComplete(self);\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options, triggers } = self;\n    const { backdrop } = options;\n    const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n    const selection = getDocument(element).getSelection();\n\n    /* istanbul ignore else: a filter is required here */\n    if (!overlay.contains(target as HTMLElement) || backdrop !== 'static') {\n      /* istanbul ignore else */\n      if (\n        !(selection && selection.toString().length) &&\n        ((!element.contains(target as HTMLElement) &&\n          backdrop &&\n          /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n          (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n      ) {\n        self.relatedTarget =\n          offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n        self.hide();\n      }\n\n      /* istanbul ignore next */\n      if (trigger && trigger.tagName === 'A') e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (self.options.keyboard && code === keyEscape) {\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleOffcanvasEvents(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showOffcanvasEvent);\n\n      if (!showOffcanvasEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getOffcanvasInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, modalComponent);\n          if (that) that.hide();\n        }\n\n        if (options.backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, true);\n          } else {\n            toggleOverlayType();\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n        } else {\n          beforeOffcanvasShow(this);\n          /* istanbul ignore next - this test was done on Modal */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideOffcanvasEvent);\n      if (!hideOffcanvasEvent.defaultPrevented) {\n        addClass(element, offcanvasTogglingClass);\n        removeClass(element, showClass);\n        beforeOffcanvasHide(this);\n      }\n    }\n  }\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, options } = clone;\n    const delay = options.backdrop ? getElementTransitionDuration(overlay) : /* istanbul ignore next */ 0;\n    const callback = () => setTimeout(() => super.dispose(), delay + 17);\n    toggleOffcanvasEvents(clone);\n\n    this.hide();\n    if (hasClass(element, showClass)) {\n      emulateTransitionEnd(element, callback);\n      /* istanbul ignore next */\n    } else {\n      callback();\n    }\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  toLowerCase,\n  createCustomEvent,\n  dispatchEvent,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\nimport type { TooltipEvent } from '../interface/tooltip';\nimport type { PopoverEvent } from '../interface/popover';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n\n  /* istanbul ignore else */\n  if (tooltip) {\n    const tipPositions = { ...tipClassPositions };\n    const RTL = isRTL(element);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      // top: '0px', left: '0px', right: '', bottom: '',\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    const isPopover = self.name === popoverComponent;\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n    const parentPosition = getElementStyle(container as HTMLElement, 'position');\n    const fixedParent = parentPosition === 'fixed';\n    const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n    const leftBoundry = RTL && fixedParent ? /* istanbul ignore next */ scrollbarWidth : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = getBoundingClientRect(element, true);\n    const { x, y } = {\n      x: elemRectLeft,\n      y: elemRectTop,\n    };\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = '';\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = '';\n    let arrowTop: number | string = '';\n    let arrowLeft: number | string = '';\n    let arrowRight: number | string = '';\n\n    const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n    const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = ['left', 'right'];\n    const verticals = ['top', 'bottom'];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n    // recompute placement\n    placement = placement === 'top' && topExceed ? 'bottom' : placement;\n    placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n    placement = placement === 'left' && leftExceed ? 'right' : placement;\n    placement = placement === 'right' && rightExceed ? /* istanbul ignore next */ 'left' : placement;\n\n    // update tooltip/popover class\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n    }\n\n    // compute tooltip / popover coordinates\n    /* istanbul ignore else */\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === 'left') {\n        // LEFT\n        leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n      } else {\n        // RIGHT\n        leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = y;\n        bottomPosition = '';\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = y - tipHeight + elemHeight;\n        bottomPosition = '';\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = y - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === '' ? '' : `${bottomPosition}px`,\n      left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== '' ? `${rightPosition}px` : '',\n    });\n\n    // update arrow placement\n    /* istanbul ignore else */\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== '') {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== '') {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== '') {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`updated.bs.${toLowerCase(self.name)}`);\n    dispatchEvent(element, updatedTooltipEvent);\n  }\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","import { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: HTMLElement, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore else */\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    : /* istanbul ignore next */ undefined;\n\n  const { tooltip } = self;\n  /* istanbul ignore else */\n  if (tooltip) {\n    // set id and role attributes\n    setAttribute(tooltip, 'id', id);\n    setAttribute(tooltip, 'role', tooltipString);\n\n    const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n    const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n    const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n    // set arrow and enable access for styleTip\n    self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n    const { arrow } = self;\n\n    if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n    else {\n      const tempTitle = createElement('div') as HTMLElement;\n      setHtml(tempTitle, title, sanitizeFn);\n      titleParts = [...[...tempTitle.childNodes]];\n    }\n\n    if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n    else {\n      const tempContent = createElement('div') as HTMLElement;\n      setHtml(tempContent, content, sanitizeFn);\n      contentParts = [...[...tempContent.childNodes]];\n    }\n\n    // set dismissible button\n    if (dismissible) {\n      if (title) {\n        if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          titleParts = [...titleParts, tempBtn.firstChild as Node];\n        }\n      } else {\n        /* istanbul ignore else */\n        if (tooltipHeader) tooltipHeader.remove();\n        if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          contentParts = [...contentParts, tempBtn.firstChild as Node];\n        }\n      }\n    }\n\n    // fill the template with content from options / data attributes\n    // also sanitize title && content\n    /* istanbul ignore else */\n    if (!isTooltip) {\n      /* istanbul ignore else */\n      if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n      /* istanbul ignore else */\n      if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n      // set btn\n      self.btn = querySelector('.btn-close', tooltip) || undefined;\n    } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n    // Bootstrap 5.2.x\n    // addClass(tooltip, 'position-absolute');\n    addClass(tooltip, 'position-fixed');\n    addClass(arrow, 'position-absolute');\n\n    // set popover animation and placement\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n    /* istanbul ignore else */\n    if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n    /* istanbul ignore else */\n    if (customClass && !hasClass(tooltip, customClass)) {\n      addClass(tooltip, customClass);\n    }\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n  }\n};\n\nexport default createTip;\n","import { getDocument, isShadowRoot, isTableElement, getParentNode, getElementStyle } from '@thednp/shorty';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = ['HTML', 'BODY'];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, 'position') !== 'relative' &&\n        containers.slice(i + 1).every(r => getElementStyle(r as HTMLElement, 'position') === 'static')\n      ) {\n        return c;\n      }\n      return null;\n    }) || /* istanbul ignore next: optional guard */ getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementStyle,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip as HTMLElement, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container, offsetParent } = self;\n\n  return tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  toggleTooltipHandlers(self);\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n\n  [scrollEvent, resizeEvent].forEach(ev => {\n    action(getWindow(element), ev, self.update, passiveHandler);\n  });\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  // btn is only for dismissible popover\n  const { element, options, btn } = self;\n  const { trigger } = options;\n  const isPopover = self.name !== tooltipComponent;\n  const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n  /* istanbul ignore else */\n  if (!trigger.includes('manual')) {\n    self.enabled = !!add;\n\n    const triggerOptions = trigger.split(' ');\n\n    triggerOptions.forEach(tr => {\n      /* istanbul ignore else */\n      if (tr === mousehoverEvent) {\n        action(element, mousedownEvent, self.handleShow);\n        action(element, mouseenterEvent, self.handleShow);\n\n        /* istanbul ignore else */\n        if (!dismissible) {\n          action(element, mouseleaveEvent, self.handleHide);\n          action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n        }\n      } else if (tr === mouseclickEvent) {\n        action(element, tr, !dismissible ? self.toggle : self.handleShow);\n      } else if (tr === focusEvent) {\n        action(element, focusinEvent, self.handleShow);\n        /* istanbul ignore else */\n        if (!dismissible) action(element, focusoutEvent, self.handleHide);\n        /* istanbul ignore else */\n        if (isApple) {\n          action(element, mouseclickEvent, self.handleFocus);\n        }\n      }\n      /* istanbul ignore else */\n      if (dismissible && btn) {\n        action(btn, mouseclickEvent, self.handleHide);\n      }\n    });\n  }\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, container, offsetParent } = self;\n  const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  const win = getWindow(element);\n  const overflow = offsetHeight !== scrollHeight;\n  const scrollTarget = container === offsetParent && overflow ? container : win;\n  action(scrollTarget, resizeEvent, self.update, passiveHandler);\n  action(scrollTarget, scrollEvent, self.update, passiveHandler);\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content || getAttribute(element, titleAtt[0]) || /* istanbul ignore next */ '',\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if (!((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      // reset default options\n      ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n      // set title attributes and add event listeners\n      /* istanbul ignore else */\n      if (hasAttribute(element, titleAttr) && isTooltip && typeof options.title === 'string') {\n        toggleTooltipTitle(this, options.title);\n      }\n\n      // set containers\n      this.container = getElementContainer(element);\n      this.offsetParent = ['sticky', 'fixed'].some(\n        position => getElementStyle(this.container as HTMLElement, 'position') === position,\n      )\n        ? (this.container as HTMLElement)\n        : getDocument(this.element).body;\n\n      // create tooltip here\n      createTip(this);\n\n      // attach events\n      toggleTooltipHandlers(this, true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  handleFocus = () => focus(this.element);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, tipContainer);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            /* istanbul ignore else */\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            else tooltipShownAction(this);\n          }\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip<Tooltip>(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      toggleTooltipHandlers(this, true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasTip(this) && animation) {\n        this.hide();\n        emulateTransitionEnd(tooltip, () => toggleTooltipHandlers(this));\n      } else {\n        toggleTooltipHandlers(this);\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore else */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () => setTimeout(() => disposeTooltipComplete(clone, () => super.dispose()), 17);\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip as HTMLElement, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  // ObjectAssign,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget ? getScrollHeight(scrollTarget) : /* istanbul ignore next */ scrollHeight;\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n/**\n * Toggles on/off the component event listener.\n *\n * @param self the `ScrollSpy` instance\n * @param add when `true`, listener is added\n */\nconst toggleSpyHandlers = (self: ScrollSpy, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.scrollTarget as EventTarget, scrollEvent, self.refresh, passiveHandler);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (this.target) {\n      // set initial state\n      this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n      this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n      // add event handlers\n      toggleSpyHandlers(this, true);\n\n      this.refresh();\n    }\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore else */\n    if (isHTMLElement(target) && target.offsetHeight > 0) {\n      updateSpyTargets(this);\n\n      const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n      if (scrollTop >= maxScroll) {\n        const newActiveItem = items[itemsLength - 1];\n\n        /* istanbul ignore else */\n        if (activeItem !== newActiveItem) {\n          activate(this, newActiveItem);\n        }\n        return;\n      }\n\n      const { offsets } = this;\n\n      if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n        this.activeItem = null;\n        if (target) clear(target);\n        return;\n      }\n\n      items.forEach((item, i) => {\n        if (\n          activeItem !== item &&\n          scrollTop >= offsets[i] &&\n          (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n        ) {\n          activate(this, item);\n        }\n      });\n    }\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    toggleSpyHandlers(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  // ObjectAssign,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || /* istanbul ignore next */ {\n      currentHeight: 0,\n      nextHeight: 0,\n    };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n\n  if (!showTabEvent.defaultPrevented) {\n    if (nextContent) addClass(nextContent, activeClass);\n    if (content) removeClass(content, activeClass);\n\n    /* istanbul ignore else */\n    if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n      const nextHeight = nextContent.scrollHeight;\n      tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n      addClass(tabContent, collapsingClass);\n      tabContent.style.height = `${currentHeight}px`;\n      reflow(tabContent);\n      [content, nextContent].forEach(c => {\n        if (c) removeClass(c, 'overflow-hidden');\n      });\n    }\n\n    if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n      setTimeout(() => {\n        addClass(nextContent, showClass);\n        emulateTransitionEnd(nextContent, () => {\n          triggerTabShow(self);\n        });\n      }, 1);\n    } else {\n      if (nextContent) addClass(nextContent, showClass);\n      triggerTabShow(self);\n    }\n\n    if (tab) dispatchEvent(tab, hiddenTabEvent);\n  }\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  /* istanbul ignore next */\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Tab` instance\n * @param add when `true`, event listener is added\n */\nconst toggleTabHandler = (self: Tab, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, tabClickHandler);\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.preventDefault();\n    self.show();\n  }\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    /* istanbul ignore else */\n    if (content) {\n      const nav = closest(element, '.nav');\n      const container = closest(content, '.tab-content');\n\n      this.nav = nav;\n      this.content = content;\n      this.tabContent = container;\n\n      // event targets\n      this.dropdown = getParentDropdown(element);\n\n      // show first Tab instance of none is shown\n      // suggested on #432\n      const { tab } = getActiveTab(this);\n      if (nav && !tab) {\n        const firstTab = querySelector(tabSelector, nav);\n        const firstTabContent = firstTab && getTargetElement(firstTab);\n\n        /* istanbul ignore else */\n        if (firstTabContent) {\n          addClass(firstTab, activeClass);\n          addClass(firstTabContent, showClass);\n          addClass(firstTabContent, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n        }\n      }\n\n      // add event listener\n      toggleTabHandler(this, true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      /* istanbul ignore else */\n      if (isHTMLElement(tab)) {\n        dispatchEvent(tab as EventTarget, hideTabEvent);\n        /* istanbul ignore else */\n        if (!hideTabEvent.defaultPrevented) {\n          addClass(element, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n\n          const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n          if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n            removeClass(activeDropdown, activeClass);\n          }\n\n          /* istanbul ignore else */\n          if (nav) {\n            const toggleTab = () => {\n              if (tab) {\n                removeClass(tab, activeClass);\n                setAttribute(tab, ariaSelected, 'false');\n              }\n              if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n            };\n\n            if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n              Timer.set(nav, toggleTab, 1);\n            } else toggleTab();\n          }\n\n          if (content) {\n            removeClass(content, showClass);\n            if (hasClass(content, fadeClass)) {\n              emulateTransitionEnd(content, () => triggerTabHide(this));\n            } else {\n              triggerTabHide(this);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    toggleTabHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  // ObjectAssign,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Toast` instance\n * @param add when `true`, it will add the listener\n */\nconst toggleToastHandlers = (self: Toast, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, triggers, dismiss, options, hide } = self;\n\n  /* istanbul ignore else */\n  if (dismiss) {\n    action(dismiss, mouseclickEvent, hide);\n  }\n\n  /* istanbul ignore else */\n  if (options.autohide) {\n    [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n      action(element, e, interactiveToastHandler as EventListener),\n    );\n  }\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n  }\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  toggleToastHandlers(self);\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.show();\n  }\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore else: a solid filter is required */\n  if (self && element !== relatedTarget && !element.contains(relatedTarget as Node)) {\n    if ([mouseenterEvent, focusinEvent].includes(type)) {\n      Timer.clear(element, toastString);\n    } else {\n      Timer.set(element, () => self.hide(), self.options.delay, toastString);\n    }\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    toggleToastHandlers(this, true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (!showToastEvent.defaultPrevented) {\n        showToast(this);\n      }\n    }\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (!hideToastEvent.defaultPrevented) {\n        hideToast(this);\n      }\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\n[Alert, Button, Carousel, Collapse, Dropdown, Modal, Offcanvas, Popover, ScrollSpy, Tab, Toast, Tooltip].forEach(c =>\n  componentsList.set(c.prototype.name, c),\n);\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  componentsList.forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach(comp => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n"],"names":["e","f","c","i","s","o","r","E","d","me","ge","Ee","ye","we","Ae","P","$","_","tt","st","rt","it","lt","pt","ft","mt","St","Nt","kt","Ct","zt","Vt","Ce","Re","Qe","qe","Ge","Ze","Rt","Qt","C","F","qt","A","Gt","S","z","x","gn","M","jt","n","Jt","Kt","Xt","Yt","Mn","kn","Dn","Ln","On","In","v","u","O","Bn","N","W","R","k","Zt","Q","g","ee","ne","Un","l","Rn","V","w","oe","Qn","p","y","q","Gn","Jn","Kn","Xn","Yn","I","se","m","Zn","h","_n","T","ce","no","B","H","b","ae","so","ie","ao","lo","Eo","bo","yo","le","wo","de","Mo","No","ko","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","BaseComponent","target","config","element","querySelector","isString","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","that","toggleAlertHandler","dispatchEvent","add","action","addListener","removeListener","dismiss","close","mouseclickEvent","__publicField","hasClass","removeClass","emulateTransitionEnd","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","toggleButtonHandler","self","isActive","getAttribute","addClass","setAttribute","ariaPressed","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","closest","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","keyArrowRight","keyArrowLeft","carouselDragHandler","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","_a","activateCarouselIndicator","pointermoveEvent","passiveHandler","pointerupEvent","toggleCarouselHandlers","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","touchstartEvent","dragstartEvent","arrow","indicator","keydownEvent","isHTMLElement","getElementsByClassName","activeIndex","transitionItem","matches","ar","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","isAnimating","clone","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","toggleCollapseHandler","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","toggleDropdownHandler","dropdownClickHandler","getCurrentOpenDropdown","currentParent","type","isForm","mousedownEvent","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","pad","padStyle","toggleModalDismiss","update","modalDismissHandler","modalKeyHandler","toggleModalHandler","modalClickHandler","afterModalHide","relatedTarget","focusElement","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","callback","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffcanvasEvents","offcanvasTriggerHandler","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offCanvasDismiss","selection","visibleTrigger","delay","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","toLowerCase","tooltipDefaults","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","isFunction","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","offsetParent","ariaDescribedBy","hasTip","disposeTooltipComplete","toggleTooltipHandlers","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","tr","mousehoverEvent","focusinEvent","focusoutEvent","isApple","toggleTooltipOpenHandlers","offsetHeight","parentModal","parentOffcanvas","win","scrollTarget","titleAtt","tipComponent","elem","getUID","position","outTimer","tipContainer","showTooltipEvent","hideTooltipEvent","enabled","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","itemsLength","isWin","isWindow","links","getElementsByTagName","scrollHEIGHT","getScrollHeight","href","targetItem","rect","getOffsetHeight","link","clear","item","activate","parents","parentItem","menuItem","parentLink","toggleSpyHandlers","scrollTop","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","toggleTabHandler","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toggleToastHandlers","hide","interactiveToastHandler","toastClickHandler","completeDisposeToast","isShown","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","cs","init","selector","removeDataAPI","comp"],"mappings":"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","x_google_ignoreList":[0,1]}