{"version":3,"file":"bootstrap-native.mjs","sources":["../node_modules/.pnpm/@thednp+shorty@2.0.5/node_modules/@thednp/shorty/dist/shorty.mjs","../node_modules/.pnpm/@thednp+event-listener@2.0.6/node_modules/@thednp/event-listener/dist/event-listener.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["const he = \"aria-checked\", ye = \"aria-description\", we = \"aria-describedby\", Ae = \"aria-expanded\", Se = \"aria-haspopup\", X = \"aria-hidden\", Ne = \"aria-label\", Me = \"aria-labelledby\", Te = \"aria-modal\", ke = \"aria-pressed\", De = \"aria-selected\", Ce = \"aria-valuemin\", Oe = \"aria-valuemax\", Le = \"aria-valuenow\", Ie = \"aria-valuetext\", Y = \"abort\", Z = \"beforeunload\", $ = \"blur\", _ = \"change\", tt = \"contextmenu\", P = \"DOMContentLoaded\", et = \"DOMMouseScroll\", nt = \"error\", ot = \"focus\", st = \"focusin\", ct = \"focusout\", rt = \"gesturechange\", at = \"gestureend\", it = \"gesturestart\", ut = \"keydown\", lt = \"keypress\", dt = \"keyup\", pt = \"load\", ft = \"click\", mt = \"dblclick\", gt = \"mousedown\", vt = \"mouseup\", Et = \"hover\", bt = \"mouseenter\", ht = \"mouseleave\", yt = \"mousein\", wt = \"mouseout\", At = \"mouseover\", St = \"mousemove\", Nt = \"mousewheel\", Mt = \"move\", Tt = \"orientationchange\", kt = \"pointercancel\", Dt = \"pointerdown\", Ct = \"pointerleave\", Ot = \"pointermove\", Lt = \"pointerup\", It = \"readystatechange\", xt = \"reset\", zt = \"resize\", Vt = \"select\", Bt = \"selectend\", Ft = \"selectstart\", Ht = \"scroll\", Pt = \"submit\", Ut = \"touchstart\", Wt = \"touchmove\", Rt = \"touchcancel\", Qt = \"touchend\", jt = \"unload\", xe = {\n  DOMContentLoaded: P,\n  DOMMouseScroll: et,\n  abort: Y,\n  beforeunload: Z,\n  blur: $,\n  change: _,\n  click: ft,\n  contextmenu: tt,\n  dblclick: mt,\n  error: nt,\n  focus: ot,\n  focusin: st,\n  focusout: ct,\n  gesturechange: rt,\n  gestureend: at,\n  gesturestart: it,\n  hover: Et,\n  keydown: ut,\n  keypress: lt,\n  keyup: dt,\n  load: pt,\n  mousedown: gt,\n  mousemove: St,\n  mousein: yt,\n  mouseout: wt,\n  mouseenter: bt,\n  mouseleave: ht,\n  mouseover: At,\n  mouseup: vt,\n  mousewheel: Nt,\n  move: Mt,\n  orientationchange: Tt,\n  pointercancel: kt,\n  pointerdown: Dt,\n  pointerleave: Ct,\n  pointermove: Ot,\n  pointerup: Lt,\n  readystatechange: It,\n  reset: xt,\n  resize: zt,\n  scroll: Ht,\n  select: Vt,\n  selectend: Bt,\n  selectstart: Ft,\n  submit: Pt,\n  touchcancel: Rt,\n  touchend: Qt,\n  touchmove: Wt,\n  touchstart: Ut,\n  unload: jt\n}, ze = \"drag\", Ve = \"dragstart\", Be = \"dragenter\", Fe = \"dragleave\", He = \"dragover\", Pe = \"dragend\", Ue = \"loadstart\", We = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Re = { down: \"mousedown\", up: \"mouseup\" }, Qe = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : (\n  /* istanbul ignore next */\n  [\"mouseover\", \"mouseout\"]\n), je = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, qe = { in: \"focusin\", out: \"focusout\" }, qt = 'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"]', Ge = {\n  Backspace: \"Backspace\",\n  //  8\n  Tab: \"Tab\",\n  //  9\n  Enter: \"Enter\",\n  // 13\n  Shift: \"Shift\",\n  // 16\n  Control: \"Control\",\n  // 17\n  Alt: \"Alt\",\n  // 18\n  Pause: \"Pause\",\n  // 19\n  CapsLock: \"CapsLock\",\n  // 20\n  Escape: \"Escape\",\n  // 27\n  Scape: \"Space\",\n  // 32\n  ArrowLeft: \"ArrowLeft\",\n  // 37\n  ArrowUp: \"ArrowUp\",\n  // 38\n  ArrowRight: \"ArrowRight\",\n  // 39\n  ArrowDown: \"ArrowDown\",\n  // 40\n  Insert: \"Insert\",\n  // 45\n  Delete: \"Delete\",\n  // 46\n  Meta: \"Meta\",\n  // 91 windows key\n  ContextMenu: \"ContextMenu\",\n  // 93\n  ScrollLock: \"ScrollLock\"\n  // 145\n}, Ke = \"Alt\", Je = \"ArrowDown\", Xe = \"ArrowUp\", Ye = \"ArrowLeft\", Ze = \"ArrowRight\", $e = \"Backspace\", _e = \"CapsLock\", tn = \"Control\", en = \"Delete\", nn = \"Enter\", on = \"NumpadEnter\", sn = \"Escape\", cn = \"Insert\", rn = \"Meta\", an = \"Pause\", un = \"ScrollLock\", ln = \"Shift\", dn = \"Space\", pn = \"Tab\", Gt = \"animationDuration\", Kt = \"animationDelay\", U = \"animationName\", D = \"animationend\", Jt = \"transitionDuration\", Xt = \"transitionDelay\", C = \"transitionend\", W = \"transitionProperty\", fn = \"addEventListener\", mn = \"removeEventListener\", gn = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, vn = \"offsetHeight\", En = \"offsetWidth\", bn = \"scrollHeight\", hn = \"scrollWidth\", yn = \"tabindex\", Yt = navigator.userAgentData, A = Yt, { userAgent: Zt } = navigator, S = Zt, z = /iPhone|iPad|iPod|Android/i;\nlet O = !1;\n// istanbul ignore else @preserve\nA ? O = A.brands.some((t) => z.test(t.brand)) : O = z.test(S);\nconst wn = O, V = /(iPhone|iPod|iPad)/, An = A ? A.brands.some((t) => V.test(t.brand)) : (\n  /* istanbul ignore next @preserve */\n  V.test(S)\n), Sn = S ? S.includes(\"Firefox\") : (\n  /* istanbul ignore next @preserve */\n  !1\n), { head: N } = document, Nn = [\"webkitPerspective\", \"perspective\"].some((t) => t in N.style), R = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(e, n, s);\n}, Q = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(e, n, s);\n}, $t = (t, e, n, o) => {\n  const s = (c) => {\n    /* istanbul ignore else @preserve */\n    (c.target === t || c.currentTarget === t) && (n.apply(t, [c]), Q(t, e, s, o));\n  };\n  R(t, e, s, o);\n}, _t = () => {\n}, Mn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    // istanbul ignore next @preserve\n    $t(document, P, _t, e);\n  } catch {\n  }\n  return t;\n})(), Tn = [\"webkitTransform\", \"transform\"].some((t) => t in N.style), kn = \"ontouchstart\" in window || /* istanbul ignore next */\n\"msMaxTouchPoints\" in navigator, Dn = [\"webkitAnimation\", \"animation\"].some((t) => t in N.style), Cn = [\"webkitTransition\", \"transition\"].some((t) => t in N.style), j = (t, e) => t.getAttribute(e), On = (t, e, n) => e.getAttributeNS(t, n), te = (t, e) => t.hasAttribute(e), Ln = (t, e, n) => e.hasAttributeNS(t, n), In = (t, e, n) => t.setAttribute(e, n), xn = (t, e, n, o) => e.setAttributeNS(t, n, o), zn = (t, e) => t.removeAttribute(e), Vn = (t, e, n) => e.removeAttributeNS(t, n), Bn = (t, ...e) => {\n  t.classList.add(...e);\n}, Fn = (t, ...e) => {\n  t.classList.remove(...e);\n}, Hn = (t, e) => t.classList.contains(e), { body: Pn } = document, { documentElement: Un } = document, Wn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, i = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((e) => t.nodeType === e) || !1, l = (t) => i(t) && t.nodeType === 1 || !1, E = /* @__PURE__ */ new Map(), L = {\n  data: E,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (t, e, n) => {\n    if (!l(t)) return;\n    // istanbul ignore else @preserve\n    E.has(e) || E.set(e, /* @__PURE__ */ new Map()), E.get(e).set(t, n);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (t) => E.get(t) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (t, e) => {\n    if (!l(t) || !e) return null;\n    const n = L.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (t, e) => {\n    const n = L.getAllFor(e);\n    if (!n || !l(t)) return;\n    n.delete(t);\n    // istanbul ignore else @preserve\n    n.size === 0 && E.delete(e);\n  }\n}, Rn = (t, e) => L.get(t, e), M = (t) => typeof t == \"string\" || !1, q = (t) => v(t) && t.constructor.name === \"Window\" || !1, G = (t) => i(t) && t.nodeType === 9 || !1, d = (t) => q(t) ? t.document : G(t) ? t : i(t) ? t.ownerDocument : window.document, T = (t, ...e) => Object.assign(t, ...e), ee = (t) => {\n  if (!t) return;\n  if (M(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = ee(e);\n  if (!n) return;\n  const o = { ...t };\n  return delete o.tagName, T(n, o);\n}, ne = (t, e) => {\n  if (!t || !e) return;\n  if (M(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = ne(t, n);\n  if (!o) return;\n  const s = { ...e };\n  return delete s.tagName, T(o, s);\n}, K = (t, e) => t.dispatchEvent(e), Qn = (t, e, n) => n.indexOf(t) === e, g = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, oe = (t) => {\n  const e = g(t, U), n = g(t, Kt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, se = (t) => {\n  const e = g(t, U), n = g(t, Gt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, jn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = se(t), c = oe(t);\n  if (s) {\n    const a = (u) => {\n      // istanbul ignore else @preserve\n      u.target === t && (e.apply(t, [u]), t.removeEventListener(D, a), n = 1);\n    };\n    t.addEventListener(D, a), setTimeout(() => {\n      // istanbul ignore next @preserve\n      n || K(t, o);\n    }, s + c + 17);\n  } else {\n    // istanbul ignore next @preserve\n    e.apply(t, [o]);\n  }\n}, ce = (t) => {\n  const e = g(t, W), n = g(t, Xt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, re = (t) => {\n  const e = g(t, W), n = g(t, Jt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, qn = (t, e) => {\n  let n = 0;\n  const o = new Event(C), s = re(t), c = ce(t);\n  if (s) {\n    const a = (u) => {\n      // istanbul ignore else @preserve\n      u.target === t && (e.apply(t, [u]), t.removeEventListener(C, a), n = 1);\n    };\n    t.addEventListener(C, a), setTimeout(() => {\n      // istanbul ignore next @preserve\n      n || K(t, o);\n    }, s + c + 17);\n  } else\n    e.apply(t, [o]);\n}, Gn = (t) => Float32Array.from(Array.from(t)), Kn = (t) => Float64Array.from(Array.from(t)), Jn = (t, e) => t.focus(e), B = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, w = (t) => Object.entries(t), ae = (t) => t.toLowerCase(), Xn = (t, e, n, o) => {\n  const s = { ...n }, c = { ...t.dataset }, a = { ...e }, u = {}, p = \"title\";\n  return w(c).forEach(([r, f]) => {\n    const y = o && typeof r == \"string\" && r.includes(o) ? r.replace(o, \"\").replace(/[A-Z]/g, (J) => ae(J)) : (\n      /* istanbul ignore next @preserve */\n      r\n    );\n    u[y] = B(f);\n  }), w(s).forEach(([r, f]) => {\n    s[r] = B(f);\n  }), w(e).forEach(([r, f]) => {\n    // istanbul ignore else @preserve\n    r in s ? a[r] = s[r] : r in u ? a[r] = u[r] : a[r] = r === p ? j(t, p) : f;\n  }), a;\n}, Yn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Zn = (t) => Object.keys(t), $n = (t) => Object.values(t), _n = (t) => Object.fromEntries(t), to = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  // istanbul ignore else @preserve\n  return v(e) && T(n, e), n;\n}, eo = { passive: !0 }, no = (t) => t.offsetHeight, oo = (t, e) => {\n  w(e).forEach(([n, o]) => {\n    if (o && M(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, T(t.style, s);\n    }\n  });\n}, I = (t) => v(t) && t.constructor.name === \"Map\" || !1, ie = (t) => typeof t == \"number\" || !1, m = /* @__PURE__ */ new Map(), so = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (t, e, n, o) => {\n    if (!l(t)) return;\n    // istanbul ignore else @preserve\n    if (o && o.length) {\n      // istanbul ignore else @preserve\n      m.has(t) || m.set(t, /* @__PURE__ */ new Map()), m.get(t).set(o, setTimeout(e, n));\n    } else\n      m.set(t, setTimeout(e, n));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (t, e) => {\n    if (!l(t)) return null;\n    const n = m.get(t);\n    return e && n && I(n) ? n.get(e) || /* istanbul ignore next */\n    null : ie(n) ? n : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (t, e) => {\n    if (!l(t)) return;\n    const n = m.get(t);\n    if (e && e.length && I(n)) {\n      clearTimeout(n.get(e)), n.delete(e);\n      // istanbul ignore else @preserve\n      n.size === 0 && m.delete(t);\n    } else\n      clearTimeout(n), m.delete(t);\n  }\n}, co = (t) => t.toUpperCase(), ue = (t, e) => (i(e) ? e : d()).querySelectorAll(t), x = /* @__PURE__ */ new Map();\nfunction le(t) {\n  const { shiftKey: e, code: n } = t, o = d(this), s = [...ue(qt, this)].filter(\n    (u) => !te(u, \"disabled\") && !j(u, X)\n  );\n  if (!s.length) return;\n  const c = s[0], a = s[s.length - 1];\n  // istanbul ignore else @preserve\n  n === \"Tab\" && (e && o.activeElement === c ? (a.focus(), t.preventDefault()) : !e && o.activeElement === a && (c.focus(), t.preventDefault()));\n}\nconst de = (t) => x.has(t) === !0, ro = (t) => {\n  const e = de(t);\n  (e ? Q : R)(t, \"keydown\", le), e ? x.delete(t) : x.set(t, !0);\n}, h = (t, e) => {\n  const { width: n, height: o, top: s, right: c, bottom: a, left: u } = t.getBoundingClientRect();\n  let p = 1, r = 1;\n  if (e && l(t)) {\n    const { offsetWidth: f, offsetHeight: y } = t;\n    p = f > 0 ? Math.round(n) / f : (\n      /* istanbul ignore next */\n      1\n    ), r = y > 0 ? Math.round(o) / y : (\n      /* istanbul ignore next */\n      1\n    );\n  }\n  return {\n    width: n / p,\n    height: o / r,\n    top: s / r,\n    right: c / p,\n    bottom: a / r,\n    left: u / p,\n    x: u / p,\n    y: s / r\n  };\n}, ao = (t) => d(t).body, k = (t) => d(t).documentElement, io = (t) => d(t).head, uo = (t) => {\n  const e = q(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, pe = (t) => i(t) && t.constructor.name === \"ShadowRoot\" || !1, lo = (t) => t.nodeName === \"HTML\" ? t : l(t) && t.assignedSlot || // step into the shadow DOM of the parent of a slotted node\ni(t) && t.parentNode || // DOM Element detected\npe(t) && t.host || // ShadowRoot detected\nk(t), fe = (t) => {\n  if (!l(t)) return !1;\n  const { width: e, height: n } = h(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, po = (t, e, n) => {\n  const o = l(e), s = h(t, o && fe(e)), c = { x: 0, y: 0 };\n  // istanbul ignore else @preserve\n  if (o) {\n    const a = h(e, !0);\n    c.x = a.x + e.clientLeft, c.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - c.x,\n    y: s.top + n.y - c.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet F = 0, H = 0;\nconst b = /* @__PURE__ */ new Map(), me = (t, e) => {\n  let n = e ? F : H;\n  if (e) {\n    const o = me(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), I(s) && !s.has(e) ? (s.set(e, n), F += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), H += 1);\n  }\n  return n;\n}, fo = (t) => {\n  var e;\n  return t ? G(t) ? t.defaultView : i(t) ? (e = t == null ? void 0 : t.ownerDocument) == null ? void 0 : e.defaultView : t : window;\n}, ge = (t) => Array.isArray(t) || !1, mo = (t) => i(t) && t.nodeName === \"CANVAS\" || !1, ve = (t) => l(t) && !!t.shadowRoot || !1, go = (t) => i(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, vo = (t) => {\n  if (!i(t)) return !1;\n  const { top: e, bottom: n } = h(t), { clientHeight: o } = k(t);\n  return e <= o && n >= 0;\n}, Eo = (t) => {\n  if (!i(t)) return !1;\n  const { clientWidth: e, clientHeight: n } = k(t), { top: o, left: s, bottom: c, right: a } = h(t, !0);\n  return o >= 0 && s >= 0 && c <= n && a <= e;\n}, bo = (t) => ge(t) && t.every(l) || !1, ho = (t) => typeof t == \"function\" || !1, yo = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, wo = (t) => l(t) && t.tagName === \"IMG\" || !1, Ao = (t) => {\n  if (!M(t)) return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, So = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, No = (t) => i(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((e) => t.constructor.name.includes(e)) || !1, Mo = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, To = (t) => k(t).dir === \"rtl\", ko = (t) => i(t) && t.constructor.name.includes(\"SVG\") || !1, Do = (t) => i(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, Ee = (t, e) => t ? t.closest(e) || // break out of `ShadowRoot`\nEe(t.getRootNode().host, e) : null, Co = (t, e) => l(t) ? t : (i(e) ? e : d()).querySelector(t), be = (t, e) => (i(e) ? e : d()).getElementsByTagName(t), Oo = (t) => [...be(\"*\", t)].filter(ve), Lo = (t, e) => d(e).getElementById(t) || null, Io = (t, e) => (e && i(e) ? e : d()).getElementsByClassName(t), xo = (t, e) => t.matches(e), zo = \"2.0.5\";\nexport {\n  Wn as ArrayFrom,\n  P as DOMContentLoadedEvent,\n  et as DOMMouseScrollEvent,\n  L as Data,\n  Gn as Float32ArrayFrom,\n  Kn as Float64ArrayFrom,\n  T as ObjectAssign,\n  w as ObjectEntries,\n  _n as ObjectFromEntries,\n  Yn as ObjectHasOwn,\n  Zn as ObjectKeys,\n  $n as ObjectValues,\n  so as Timer,\n  Y as abortEvent,\n  Bn as addClass,\n  fn as addEventListener,\n  Kt as animationDelay,\n  Gt as animationDuration,\n  D as animationEndEvent,\n  U as animationName,\n  he as ariaChecked,\n  we as ariaDescribedBy,\n  ye as ariaDescription,\n  Ae as ariaExpanded,\n  Se as ariaHasPopup,\n  X as ariaHidden,\n  Ne as ariaLabel,\n  Me as ariaLabelledBy,\n  Te as ariaModal,\n  ke as ariaPressed,\n  De as ariaSelected,\n  Oe as ariaValueMax,\n  Ce as ariaValueMin,\n  Le as ariaValueNow,\n  Ie as ariaValueText,\n  Z as beforeunloadEvent,\n  gn as bezierEasings,\n  $ as blurEvent,\n  _ as changeEvent,\n  Ee as closest,\n  tt as contextmenuEvent,\n  to as createCustomEvent,\n  ee as createElement,\n  ne as createElementNS,\n  K as dispatchEvent,\n  Qn as distinct,\n  Pn as documentBody,\n  Un as documentElement,\n  N as documentHead,\n  ze as dragEvent,\n  Pe as dragendEvent,\n  Be as dragenterEvent,\n  Fe as dragleaveEvent,\n  He as dragoverEvent,\n  Ve as dragstartEvent,\n  jn as emulateAnimationEnd,\n  qn as emulateTransitionEnd,\n  nt as errorEvent,\n  Jn as focus,\n  ot as focusEvent,\n  qe as focusEvents,\n  qt as focusableSelector,\n  st as focusinEvent,\n  ct as focusoutEvent,\n  rt as gesturechangeEvent,\n  at as gestureendEvent,\n  it as gesturestartEvent,\n  j as getAttribute,\n  On as getAttributeNS,\n  h as getBoundingClientRect,\n  Oo as getCustomElements,\n  d as getDocument,\n  ao as getDocumentBody,\n  k as getDocumentElement,\n  io as getDocumentHead,\n  oe as getElementAnimationDelay,\n  se as getElementAnimationDuration,\n  Lo as getElementById,\n  g as getElementStyle,\n  ce as getElementTransitionDelay,\n  re as getElementTransitionDuration,\n  Io as getElementsByClassName,\n  be as getElementsByTagName,\n  Rn as getInstance,\n  uo as getNodeScroll,\n  lo as getParentNode,\n  po as getRectRelativeToOffsetParent,\n  me as getUID,\n  fo as getWindow,\n  te as hasAttribute,\n  Ln as hasAttributeNS,\n  Hn as hasClass,\n  de as hasFocusTrap,\n  An as isApple,\n  ge as isArray,\n  mo as isCanvas,\n  ve as isCustomElement,\n  G as isDocument,\n  go as isElement,\n  vo as isElementInScrollRange,\n  Eo as isElementInViewport,\n  bo as isElementsArray,\n  Sn as isFirefox,\n  ho as isFunction,\n  yo as isHTMLCollection,\n  l as isHTMLElement,\n  wo as isHTMLImageElement,\n  Ao as isJSON,\n  I as isMap,\n  No as isMedia,\n  wn as isMobile,\n  i as isNode,\n  Mo as isNodeList,\n  ie as isNumber,\n  v as isObject,\n  To as isRTL,\n  ko as isSVGElement,\n  fe as isScaledElement,\n  pe as isShadowRoot,\n  M as isString,\n  Do as isTableElement,\n  So as isWeakMap,\n  q as isWindow,\n  Ke as keyAlt,\n  Je as keyArrowDown,\n  Ye as keyArrowLeft,\n  Ze as keyArrowRight,\n  Xe as keyArrowUp,\n  $e as keyBackspace,\n  _e as keyCapsLock,\n  tn as keyControl,\n  en as keyDelete,\n  nn as keyEnter,\n  sn as keyEscape,\n  cn as keyInsert,\n  rn as keyMeta,\n  on as keyNumpadEnter,\n  an as keyPause,\n  un as keyScrollLock,\n  ln as keyShift,\n  dn as keySpace,\n  pn as keyTab,\n  Ge as keyboardEventKeys,\n  ut as keydownEvent,\n  lt as keypressEvent,\n  dt as keyupEvent,\n  pt as loadEvent,\n  Ue as loadstartEvent,\n  xo as matches,\n  Re as mouseClickEvents,\n  Qe as mouseHoverEvents,\n  We as mouseSwipeEvents,\n  ft as mouseclickEvent,\n  mt as mousedblclickEvent,\n  gt as mousedownEvent,\n  bt as mouseenterEvent,\n  Et as mousehoverEvent,\n  yt as mouseinEvent,\n  ht as mouseleaveEvent,\n  St as mousemoveEvent,\n  wt as mouseoutEvent,\n  At as mouseoverEvent,\n  vt as mouseupEvent,\n  Nt as mousewheelEvent,\n  Mt as moveEvent,\n  xe as nativeEvents,\n  _t as noop,\n  Xn as normalizeOptions,\n  B as normalizeValue,\n  Q as off,\n  vn as offsetHeight,\n  En as offsetWidth,\n  R as on,\n  $t as one,\n  Tt as orientationchangeEvent,\n  eo as passiveHandler,\n  kt as pointercancelEvent,\n  Dt as pointerdownEvent,\n  Ct as pointerleaveEvent,\n  Ot as pointermoveEvent,\n  Lt as pointerupEvent,\n  Co as querySelector,\n  ue as querySelectorAll,\n  It as readystatechangeEvent,\n  no as reflow,\n  zn as removeAttribute,\n  Vn as removeAttributeNS,\n  Fn as removeClass,\n  mn as removeEventListener,\n  xt as resetEvent,\n  zt as resizeEvent,\n  Ht as scrollEvent,\n  bn as scrollHeight,\n  hn as scrollWidth,\n  Vt as selectEvent,\n  Bt as selectendEvent,\n  Ft as selectstartEvent,\n  In as setAttribute,\n  xn as setAttributeNS,\n  oo as setElementStyle,\n  Pt as submitEvent,\n  Nn as support3DTransform,\n  Dn as supportAnimation,\n  Mn as supportPassive,\n  kn as supportTouch,\n  Tn as supportTransform,\n  Cn as supportTransition,\n  yn as tabindex,\n  ae as toLowerCase,\n  co as toUpperCase,\n  ro as toggleFocusTrap,\n  je as touchEvents,\n  Rt as touchcancelEvent,\n  Qt as touchendEvent,\n  Wt as touchmoveEvent,\n  Ut as touchstartEvent,\n  Xt as transitionDelay,\n  Jt as transitionDuration,\n  C as transitionEndEvent,\n  W as transitionProperty,\n  jt as unloadEvent,\n  S as userAgent,\n  A as userAgentData,\n  zo as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","const e = {}, f = (t) => {\n  const { type: c, currentTarget: i } = t;\n  [...e[c]].forEach(([n, s]) => {\n    /* istanbul ignore else @preserve */\n    i === n && [...s].forEach(([o, a]) => {\n      o.apply(n, [t]), typeof a == \"object\" && a.once && r(n, c, o, a);\n    });\n  });\n}, E = (t, c, i, n) => {\n  /* istanbul ignore else @preserve */\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const s = e[c];\n  /* istanbul ignore else @preserve */\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(t), { size: a } = o;\n  o.set(i, n);\n  /* istanbul ignore else @preserve */\n  a || t.addEventListener(c, f, n);\n}, r = (t, c, i, n) => {\n  const s = e[c], o = s && s.get(t), a = o && o.get(i), d = a !== void 0 ? a : n;\n  /* istanbul ignore else @preserve */\n  o && o.has(i) && o.delete(i);\n  /* istanbul ignore else @preserve */\n  s && (!o || !o.size) && s.delete(t);\n  /* istanbul ignore else @preserve */\n  (!s || !s.size) && delete e[c];\n  /* istanbul ignore else @preserve */\n  (!o || !o.size) && t.removeEventListener(\n    c,\n    f,\n    d\n  );\n}, g = E, M = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  r as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { Data, isHTMLElement, isString, normalizeOptions, ObjectKeys, querySelector } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: HTMLElement;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    let element: HTMLElement | null;\n\n    try {\n      if (isHTMLElement(target)) {\n        element = target;\n      } else if (isString(target)) {\n        element = querySelector<HTMLElement>(target);\n        // istanbul ignore else @preserve\n        if (!element) throw Error(`\"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`your target is not an instance of HTMLElement.`);\n      }\n    } catch (e) {\n      throw Error(`${this.name} Error: ${(e as Error).message}`);\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    // istanbul ignore else @preserve\n    if (prevInstance) {\n      // remove previously attached event listeners\n      // to avoid memory leaks\n      prevInstance._toggleEventListeners();\n    }\n\n    this.element = element;\n    this.options =\n      this.defaults && ObjectKeys(this.defaults).length\n        ? normalizeOptions(element, this.defaults, config || {}, 'bs')\n        : // istanbul ignore next @preserve\n          {};\n\n    Data.set(element, this.name, this);\n  }\n\n  // istanbul ignore next @preserve\n  get version() {\n    return Version;\n  }\n\n  // istanbul ignore next @preserve\n  get name() {\n    return 'BaseComponent';\n  }\n\n  // istanbul ignore next @preserve\n  get defaults() {\n    return {};\n  }\n\n  /** just to have something to extend from */\n  // istanbul ignore next @preserve coverage wise this isn't important\n  _toggleEventListeners = () => {\n    // do something to please linters\n  };\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove<typeof this>(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  querySelector,\n  removeClass,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = (element: HTMLElement) => new Alert(element);\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<Record<string, never>, AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<Record<string, never>, AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (self: Alert) => {\n  const { element } = self;\n  dispatchEvent(element, closedAlertEvent);\n\n  self._toggleEventListeners();\n  self.dispose();\n  element.remove();\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    // istanbul ignore else @preserve\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n\n      if (!closeAlertEvent.defaultPrevented) {\n        removeClass(element, showClass);\n\n        if (hasClass(element, fadeClass)) {\n          emulateTransitionEnd(element, () => alertTransitionEnd(this));\n        } else alertTransitionEnd(this);\n      }\n    }\n  };\n  /**\n   * Toggle on / off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { dismiss, close } = this;\n    // istanbul ignore else @preserve\n    if (dismiss) action(dismiss, mouseclickEvent, close);\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  addClass,\n  ariaPressed,\n  getAttribute,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  removeClass,\n  setAttribute,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e?: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, 'disabled') && !getAttribute(element, 'disabled')) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  // BUTTON PRIVATE METHOD\n  // =====================\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, this.toggle);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","import { closest, getAttribute, getDocument, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  addClass,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  dragstartEvent,\n  emulateTransitionEnd,\n  getAttribute,\n  getDocument,\n  getElementsByClassName,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  isElementInScrollRange,\n  isHTMLElement,\n  isRTL,\n  keyArrowLeft,\n  keyArrowRight,\n  keydownEvent,\n  matches,\n  mouseclickEvent,\n  mouseenterEvent,\n  mouseleaveEvent,\n  ObjectAssign,\n  passiveHandler,\n  pointerdownEvent,\n  pointermoveEvent,\n  pointerupEvent,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  Timer,\n  touchstartEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\ntype CarouselEventProperties = {\n  relatedTarget: HTMLElement;\n  from: number;\n  to: number;\n  direction: 'left' | 'right';\n};\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEventProperties, CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEventProperties, CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  // istanbul ignore else @preserve\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (self.cycle && !getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  const self = getCarouselInstance(this);\n  // istanbul ignore else @preserve\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  const self = getCarouselInstance(this);\n  // istanbul ignore else @preserve\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating) {\n    const newIndex = +(\n      getAttribute(this, dataBsSlideTo) ||\n      // istanbul ignore next @preserve\n      0\n    );\n\n    // istanbul ignore else @preserve\n    if (\n      this &&\n      !hasClass(this, activeClass) && // event target is not active\n      !Number.isNaN(newIndex)\n    ) {\n      // AND has the specific attribute\n      self.to(newIndex); // do the slide\n    }\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating) {\n    const orientation = getAttribute(this, dataBsSlide);\n\n    // istanbul ignore else @preserve\n    if (orientation === 'next') {\n      self.next();\n    } else if (orientation === 'prev') {\n      self.prev();\n    }\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore next @preserve\n  if (self && !self.isAnimating && !/textarea|input/i.test(target.nodeName)) {\n    const RTL = isRTL(element);\n    const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n    const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n    // istanbul ignore else @preserve\n    if (code === arrowKeyPrev) self.prev();\n    else if (code === arrowKeyNext) self.next();\n  }\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  // istanbul ignore next @preserve\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) || !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating && !self.isTouch) {\n    // filter pointer event on controls & indicators\n    const { controls, indicators } = self;\n    // istanbul ignore else @preserve\n    if (![...controls, ...indicators].every(el => el === target || el.contains(target as Node))) {\n      startX = e.pageX;\n\n      // istanbul ignore else @preserve\n      if (this.contains(target as Node)) {\n        self.isTouch = true;\n        toggleCarouselTouchHandlers(self, true);\n      }\n    }\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  // istanbul ignore else @preserve\n  if (self) {\n    const { element, index } = self;\n    const RTL = isRTL(element);\n    endX = e.pageX;\n\n    self.isTouch = false;\n    toggleCarouselTouchHandlers(self);\n\n    if (\n      !doc.getSelection()?.toString().length &&\n      element.contains(target as HTMLElement) &&\n      Math.abs(startX - endX) > 120\n    ) {\n      // determine next index to slide to\n      // istanbul ignore else @preserve\n      if (currentX < startX) {\n        self.to(index + (RTL ? -1 : 1));\n      } else if (currentX > startX) {\n        self.to(index + (RTL ? 1 : -1));\n      }\n    }\n\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n  }\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  // istanbul ignore else @preserve\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler, passiveHandler);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length >= 2) {\n      const activeIndex = getActiveIndex(this);\n      // recover item from disposed instance\n      const transitionItem = [...slides].find(s => matches(s, `.${carouselItem}-next,.${carouselItem}-next`));\n      this.index = activeIndex;\n\n      // external controls must be within same document context\n      const doc = getDocument(element);\n\n      this.controls = [\n        ...querySelectorAll(`[${dataBsSlide}]`, element),\n        ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n      // a LIVE collection is prefferable\n      this.indicators = [\n        ...(this.indicator\n          ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator)\n          : // istanbul ignore next @preserve\n            []),\n        ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      // set JavaScript and DATA API options\n      const { options } = this;\n\n      // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n      this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n      // set first slide active if none\n      // istanbul ignore next @preserve - impossible to test\n      if (transitionItem) {\n        this.index = [...slides].indexOf(transitionItem);\n      } else if (activeIndex < 0) {\n        this.index = 0;\n        addClass(slides[0], activeClass);\n        if (this.indicators.length) activateCarouselIndicator(this, 0);\n      }\n\n      // istanbul ignore else @preserve\n      if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n      // attach event handlers\n      this._toggleEventListeners(true);\n\n      // start to cycle if interval is set\n      if (options.interval) this.cycle();\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        // istanbul ignore else @preserve\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    // istanbul ignore else @preserve\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    // istanbul ignore else @preserve\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    // istanbul ignore else @preserve\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (!this.isAnimating && activeItem !== next && !Timer.get(element, dataBsSlide)) {\n      // determine transition direction\n      // istanbul ignore else @preserve\n      if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n        this.direction = RTL ? 'right' : 'left'; // next\n      } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n        this.direction = RTL ? 'left' : 'right'; // prev\n      }\n      const { direction } = this;\n\n      // find the right next index\n      if (next < 0) {\n        next = slides.length - 1;\n      } else if (next >= slides.length) {\n        next = 0;\n      }\n\n      // orientation, class name, eventProperties\n      const orientation = direction === 'left' ? 'next' : 'prev';\n      const directionClass = direction === 'left' ? 'start' : 'end';\n\n      const eventProperties = {\n        relatedTarget: slides[next],\n        from: activeItem,\n        to: next,\n        direction,\n      };\n\n      // update event properties\n      ObjectAssign(carouselSlideEvent, eventProperties);\n      ObjectAssign(carouselSlidEvent, eventProperties);\n\n      // discontinue when prevented\n      dispatchEvent(element, carouselSlideEvent);\n      if (!carouselSlideEvent.defaultPrevented) {\n        // update index\n        this.index = next;\n        activateCarouselIndicator(this, next);\n\n        if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n          Timer.set(\n            element,\n            () => {\n              addClass(slides[next], `${carouselItem}-${orientation}`);\n              reflow(slides[next]);\n              addClass(slides[next], `${carouselItem}-${directionClass}`);\n              addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n              // the instance might get diposed mid-animation\n              emulateTransitionEnd(\n                slides[next],\n                () => this.slides && this.slides.length && carouselTransitionEndHandler(this),\n              );\n            },\n            0,\n            dataBsSlide,\n          );\n        } else {\n          addClass(slides[next], activeClass);\n          removeClass(slides[activeItem], activeClass);\n\n          Timer.set(\n            element,\n            () => {\n              Timer.clear(element, dataBsSlide);\n              // check for element, might have been disposed\n              // istanbul ignore else @preserve\n              if (element && options.interval && !this.isPaused) {\n                this.cycle();\n              }\n\n              dispatchEvent(element, carouselSlidEvent);\n            },\n            0,\n            dataBsSlide,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles all event listeners for the `Carousel` instance.\n   *\n   * @param add when `TRUE` event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const { element, options, slides, controls, indicators } = this;\n    const { touch, pause, interval, keyboard } = options;\n    const action = add ? addListener : removeListener;\n\n    if (pause && interval) {\n      action(element, mouseenterEvent, carouselPauseHandler);\n      action(element, mouseleaveEvent, carouselResumeHandler);\n    }\n\n    if (touch && slides.length > 2) {\n      action(element, pointerdownEvent, carouselPointerDownHandler, passiveHandler);\n      action(element, touchstartEvent, carouselDragHandler, { passive: false });\n      action(element, dragstartEvent, carouselDragHandler, { passive: false });\n    }\n\n    // istanbul ignore else @preserve\n    if (controls.length) {\n      controls.forEach(arrow => {\n        // istanbul ignore else @preserve\n        if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler);\n      });\n    }\n\n    // istanbul ignore else @preserve\n    if (indicators.length) {\n      indicators.forEach(indicator => {\n        action(indicator, mouseclickEvent, carouselIndicatorHandler);\n      });\n    }\n\n    if (keyboard) {\n      action(getDocument(element), keydownEvent, carouselKeyHandler);\n    }\n  };\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    this._toggleEventListeners();\n    super.dispose();\n\n    // istanbul ignore next @preserve - impossible to test\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getDocument,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isString,\n  mouseclickEvent,\n  noop,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  Timer,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<Record<string, never>, CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<Record<string, never>, CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<Record<string, never>, CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<Record<string, never>, CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element);\n    setElementStyle(element, { height: '0px' });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      // istanbul ignore else @preserve\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  // istanbul ignore else @preserve\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent, doc)\n      : null;\n\n    // add event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    // istanbul ignore else @preserve\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /**\n   * Toggles on/off the event listener(s) of the `Collapse` instance.\n   *\n   * @param add when `true`, the event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler));\n    }\n  };\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    this._toggleEventListeners();\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { closest, getAttribute, hasAttribute } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (getAttribute(element, 'href') as string).slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, 'href') &&\n      (getAttribute(parentAnchor, 'href') as string).slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  focus,\n  focusEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getInstance,\n  getWindow,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  keyArrowDown,\n  keyArrowUp,\n  keydownEvent,\n  keyEscape,\n  keyupEvent,\n  mouseclickEvent,\n  mousedownEvent,\n  ObjectAssign,\n  passiveHandler,\n  removeClass,\n  resizeEvent,\n  scrollEvent,\n  setAttribute,\n  setElementStyle,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\ntype DropdownEventProps = { relatedTarget: HTMLElement };\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  // istanbul ignore else @preserve: this test requires a navbar\n  if (getElementStyle(menu, 'position') !== 'static') {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n    resetProps.forEach(p => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = '';\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass =\n      dropdownClasses.find(c => hasClass(parentElement, c)) ||\n      // istanbul ignore next @preserve: fallback position\n      dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: '100%' },\n      dropup: { top: 'auto', bottom: '100%' },\n      dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n      dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n      menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n      menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropendString;\n    }\n    if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: 'auto',\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n      // istanbul ignore else @preserve\n      if (!leftExceed && rightExceed && !RTL) {\n        posAjust = { left: 'auto', right: 0 };\n      }\n      // istanbul ignore else @preserve\n      if (leftExceed && !rightExceed && RTL) {\n        posAjust = { left: 0, right: 'auto' };\n      }\n      // istanbul ignore else @preserve\n      if (posAjust) {\n        ObjectAssign(dropdownPosition[positionClass], posAjust);\n      }\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      // istanbul ignore else @preserve\n      if (menuEnd) {\n        const endAdjust =\n          (!RTL && leftExceed) || (RTL && rightExceed)\n            ? 'menuStart'\n            : // istanbul ignore next @preserve\n              'menuEnd';\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  // istanbul ignore else @preserve\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  // istanbul ignore else @preserve\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    // istanbul ignore else @preserve\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm =\n        parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === 'form' || closest(target, 'form') !== null);\n\n      if ([mouseclickEvent, mousedownEvent].includes(type) && isEmptyAnchor(target)) {\n        e.preventDefault();\n      }\n\n      // istanbul ignore else @preserve\n      if (!isForm && type !== focusEvent && target !== element && target !== menu) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    e.stopPropagation();\n    self.toggle();\n    // istanbul ignore else @preserve\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  // istanbul ignore else @preserve\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  // istanbul ignore else @preserve\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n      let idx = menuItems.indexOf(activeElement);\n      // istanbul ignore else @preserve\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      // istanbul ignore else @preserve\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(dropdownMenuClass, parentElement as ParentNode);\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore else @preserve\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement && getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'true');\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore else @preserve\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'false');\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getDocumentBody,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getWindow,\n  hasClass,\n  setElementStyle,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore else @preserve\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore else @preserve\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    // istanbul ignore else @preserve\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        // istanbul ignore else @preserve\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { createElement, getDocumentBody, isNode } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({\n  tagName: 'div',\n  className: 'popup-container',\n}) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  // istanbul ignore else @preserve\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n\n  // istanbul ignore else @preserve\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { appendPopup, hasPopup, popupContainer, removePopup };\n","import {\n  addClass,\n  createElement,\n  getDocument,\n  getDocumentBody,\n  hasClass,\n  querySelector,\n  reflow,\n  removeClass,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  modalBackdropClass,\n  offcanvasActiveSelector,\n  offcanvasBackdropClass,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n};\n","import { getElementStyle, isHTMLElement } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  addClass,\n  ariaHidden,\n  ariaModal,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementTransitionDuration,\n  getInstance,\n  getWindow,\n  hasClass,\n  isRTL,\n  KeyboardEvent,\n  keydownEvent,\n  keyEscape,\n  mouseclickEvent,\n  MouseEvent,\n  passiveHandler,\n  querySelector,\n  querySelectorAll,\n  removeAttribute,\n  removeClass,\n  resizeEvent,\n  setAttribute,\n  setElementStyle,\n  Timer,\n  toggleFocusTrap,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport { measureScrollbar, setScrollbar } from '../util/scrollbar';\nimport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalEvent, ModalOptions } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\ntype ModalEventProps = {\n  relatedTarget: HTMLElement | undefined;\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  // istanbul ignore next @preserve: impossible to test?\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element)\n      ? 'paddingRight'\n      : // istanbul ignore next @preserve\n        'paddingLeft';\n    const padStyle = { [pad]: `${scrollbarWidth}px` } as Partial<CSS4Declaration>;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, update } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getWindow(element), resizeEvent, update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  // istanbul ignore else @preserve\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n  toggleFocusTrap(element);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n  toggleFocusTrap(element);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n  setModalScrollbar(self);\n  // istanbul ignore else @preserve\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n\n  const trigger = target && closest(target, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    // istanbul ignore else @preserve\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.toggle();\n  }\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent<HTMLElement>) => {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    const { options } = self;\n    // istanbul ignore else @preserve\n    if (\n      options.keyboard &&\n      code === keyEscape && // the keyboard option is enabled and the key is 27\n      hasClass(element, showClass)\n    ) {\n      // the modal is not visible\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nconst modalDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { currentTarget } = e;\n  const self = currentTarget && getModalInstance(currentTarget);\n\n  // this timer is needed\n  // istanbul ignore else @preserve\n  if (self && currentTarget && !Timer.get(currentTarget)) {\n    const { options, isStatic, modalDialog } = self;\n    const { backdrop } = options;\n    const { target } = e;\n\n    const selectedText = getDocument(currentTarget)?.getSelection()?.toString().length;\n    const targetInsideDialog = modalDialog.contains(target);\n    const dismiss = target && closest(target, modalDismissSelector);\n\n    // istanbul ignore else @preserve\n    if (isStatic && !targetInsideDialog) {\n      Timer.set(\n        currentTarget,\n        () => {\n          addClass(currentTarget, modalStaticClass);\n          emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n        },\n        17,\n      );\n    } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n      self.relatedTarget = dismiss || null;\n      self.hide();\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    // istanbul ignore else @preserve\n    if (modalDialog) {\n      this.modalDialog = modalDialog;\n      // modal can have multiple triggering elements\n      this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n        btn => getTargetElement(btn) === element,\n      );\n\n      // additional internals\n      this.isStatic = this.options.backdrop === 'static';\n      this.hasFade = hasClass(element, fadeClass);\n      this.relatedTarget = null;\n\n      // attach event listeners\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    // istanbul ignore else @preserve\n    if (!hasClass(element, showClass)) {\n      showModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showModalEvent);\n      if (!showModalEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n\n        // istanbul ignore else @preserve\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getModalInstance(currentOpen) ||\n            // istanbul ignore next @preserve\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, offcanvasComponent);\n          // istanbul ignore else @preserve\n          if (that) that.hide();\n        }\n        if (backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, hasFade, true);\n          } else {\n            toggleOverlayType(true);\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeModalShow(this), overlayDelay);\n        } else {\n          beforeModalShow(this);\n          // istanbul ignore else @preserve\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    // istanbul ignore else @preserve\n    if (hasClass(element, showClass)) {\n      hideModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideModalEvent);\n\n      // istanbul ignore else @preserve\n      if (!hideModalEvent.defaultPrevented) {\n        removeClass(element, showClass);\n        setAttribute(element, ariaHidden, 'true');\n        removeAttribute(element, ariaModal);\n\n        if (hasFade) {\n          emulateTransitionEnd(element, () => beforeModalHide(this));\n        } else {\n          beforeModalHide(this);\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    // istanbul ignore else @preserve\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener of the `Modal` instance.\n   *\n   * @param add when `true`, event listener(s) is/are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler));\n    }\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { modalDialog, hasFade } = clone;\n    const callback = () => setTimeout(() => super.dispose(), 17);\n\n    this.hide();\n    this._toggleEventListeners();\n\n    if (hasFade) {\n      // use transitionend callback\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  addClass,\n  ariaHidden,\n  ariaModal,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  keydownEvent,\n  keyEscape,\n  mouseclickEvent,\n  querySelector,\n  querySelectorAll,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  toggleFocusTrap,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  offcanvasActiveSelector,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasEvent, OffcanvasOptions } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\ntype OffCanvasEventProps = {\n  relatedTarget: HTMLElement | undefined;\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffCanvasEventProps, OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffCanvasEventProps, OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffCanvasEventProps, OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffCanvasEventProps, OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  // istanbul ignore else @preserve\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n  }\n  emulateTransitionEnd(element, () => hideOffcanvasComplete(self));\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    // istanbul ignore else @preserve\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    const { options, triggers } = self;\n    const { backdrop } = options;\n    const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n    const selection = getDocument(element).getSelection();\n\n    // istanbul ignore else: a filter is required here @preserve\n    if (!overlay.contains(target as HTMLElement) || backdrop !== 'static') {\n      // istanbul ignore else @preserve\n      if (\n        !(selection && selection.toString().length) &&\n        ((!element.contains(target as HTMLElement) &&\n          backdrop &&\n          // istanbul ignore next @preserve\n          (!trigger || triggers.includes(target as HTMLElement))) ||\n          (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n      ) {\n        self.relatedTarget =\n          offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n        self.hide();\n      }\n\n      // istanbul ignore next @preserve\n      if (trigger && trigger.tagName === 'A') e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    // istanbul ignore else @preserve\n    if (self.options.keyboard && code === keyEscape) {\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n  toggleFocusTrap(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  // istanbul ignore else @preserve\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n  toggleFocusTrap(element);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showOffcanvasEvent);\n\n      if (!showOffcanvasEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getOffcanvasInstance(currentOpen) ||\n            // istanbul ignore next @preserve\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, modalComponent);\n\n          // istanbul ignore else @preserve\n          if (that) that.hide();\n        }\n\n        if (options.backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, true);\n          } else {\n            toggleOverlayType();\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n        } else {\n          beforeOffcanvasShow(this);\n          // istanbul ignore next @preserve - this test was done on Modal\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideOffcanvasEvent);\n      if (!hideOffcanvasEvent.defaultPrevented) {\n        addClass(element, offcanvasTogglingClass);\n        removeClass(element, showClass);\n        beforeOffcanvasHide(this);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listeners.\n   *\n   * @param self the `Offcanvas` instance\n   * @param add when *true*, listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    this.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler));\n  };\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const { element } = this;\n    const isOpen = hasClass(element, showClass);\n    const callback = () => setTimeout(() => super.dispose(), 1);\n\n    this.hide();\n    this._toggleEventListeners();\n\n    if (isOpen) {\n      emulateTransitionEnd(element, callback);\n      // istanbul ignore next @preserve\n    } else {\n      callback();\n    }\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  createCustomEvent,\n  dispatchEvent,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isHTMLElement,\n  isRTL,\n  setElementStyle,\n  toLowerCase,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\nimport type { TooltipEvent } from '../interface/tooltip';\nimport type { PopoverEvent } from '../interface/popover';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n\n  // istanbul ignore else @preserve\n  if (tooltip) {\n    const tipPositions = { ...tipClassPositions };\n    const RTL = isRTL(element);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      // top: '0px', left: '0px', right: '', bottom: '',\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    const isPopover = self.name === popoverComponent;\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n    const parentPosition = getElementStyle(container as HTMLElement, 'position');\n    const fixedParent = parentPosition === 'fixed';\n    const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n    const leftBoundry =\n      RTL && fixedParent\n        ? // istanbul ignore next @preserve\n          scrollbarWidth\n        : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = getBoundingClientRect(element, true);\n    const { x, y } = {\n      x: elemRectLeft,\n      y: elemRectTop,\n    };\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = '';\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = '';\n    let arrowTop: number | string = '';\n    let arrowLeft: number | string = '';\n    let arrowRight: number | string = '';\n\n    const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n    const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = ['left', 'right'];\n    const verticals = ['top', 'bottom'];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n    // recompute placement\n    placement = placement === 'top' && topExceed ? 'bottom' : placement;\n    placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n    placement = placement === 'left' && leftExceed ? 'right' : placement;\n    placement =\n      placement === 'right' && rightExceed\n        ? 'left'\n        : // istanbul ignore next @preserve\n          placement;\n\n    // update tooltip/popover class\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n    }\n\n    // compute tooltip / popover coordinates\n    // istanbul ignore else @preserve\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === 'left') {\n        // LEFT\n        leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n      } else {\n        // RIGHT\n        leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = y;\n        bottomPosition = '';\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = y - tipHeight + elemHeight;\n        bottomPosition = '';\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = y - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === '' ? '' : `${bottomPosition}px`,\n      left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== '' ? `${rightPosition}px` : '',\n    });\n\n    // update arrow placement\n    // istanbul ignore else @preserve\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== '') {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== '') {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== '') {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<Record<string, unknown>, TooltipEvent | PopoverEvent>(\n      `updated.bs.${toLowerCase(self.name)}`,\n    );\n    dispatchEvent(element, updatedTooltipEvent);\n  }\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","import { isArray, isFunction, isHTMLElement, isNode, isNodeList, isString } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: HTMLElement, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  // istanbul ignore else @preserve\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import { addClass, createElement, hasClass, isHTMLElement, isRTL, querySelector, setAttribute } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    : // istanbul ignore next @preserve\n      undefined;\n\n  const { tooltip } = self;\n  // istanbul ignore else @preserve\n  if (tooltip) {\n    // set id and role attributes\n    setAttribute(tooltip, 'id', id);\n    setAttribute(tooltip, 'role', tooltipString);\n\n    const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n    const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n    const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n    // set arrow and enable access for styleTip\n    self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n    const { arrow } = self;\n\n    if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n    else {\n      const tempTitle = createElement('div') as HTMLElement;\n      setHtml(tempTitle, title, sanitizeFn);\n      titleParts = [...[...tempTitle.childNodes]];\n    }\n\n    if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n    else {\n      const tempContent = createElement('div') as HTMLElement;\n      setHtml(tempContent, content, sanitizeFn);\n      contentParts = [...[...tempContent.childNodes]];\n    }\n\n    // set dismissible button\n    if (dismissible) {\n      if (title) {\n        if (isHTMLElement(btnClose)) {\n          titleParts = [...titleParts, btnClose.cloneNode(true)];\n        } else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          titleParts = [...titleParts, tempBtn.firstChild as Node];\n        }\n      } else {\n        // istanbul ignore else @preserve\n        if (tooltipHeader) tooltipHeader.remove();\n        if (isHTMLElement(btnClose)) {\n          contentParts = [...contentParts, btnClose.cloneNode(true)];\n        } else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          contentParts = [...contentParts, tempBtn.firstChild as Node];\n        }\n      }\n    }\n\n    // fill the template with content from options / data attributes\n    // also sanitize title && content\n    // istanbul ignore else @preserve\n    if (!isTooltip) {\n      // istanbul ignore else @preserve\n      if (title && tooltipHeader) {\n        setHtml(tooltipHeader, titleParts, sanitizeFn);\n      }\n      // istanbul ignore else @preserve\n      if (content && tooltipBody) {\n        setHtml(tooltipBody, contentParts, sanitizeFn);\n      }\n      // set btn\n      self.btn = querySelector('.btn-close', tooltip) || undefined;\n    } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n    // Bootstrap 5.2.x\n    // addClass(tooltip, 'position-absolute');\n    addClass(tooltip, 'position-fixed');\n    addClass(arrow, 'position-absolute');\n\n    // set popover animation and placement\n    // istanbul ignore else @preserve\n    if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n    // istanbul ignore else @preserve\n    if (animation && !hasClass(tooltip, fadeClass)) {\n      addClass(tooltip, fadeClass);\n    }\n    // istanbul ignore else @preserve\n    if (customClass && !hasClass(tooltip, customClass)) {\n      addClass(tooltip, customClass);\n    }\n    // istanbul ignore else @preserve\n    if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n  }\n};\n\nexport default createTip;\n","import { getDocument, getElementStyle, getParentNode, isShadowRoot, isTableElement } from '@thednp/shorty';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = ['HTML', 'BODY'];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    // istanbul ignore else @preserve\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, 'position') !== 'relative' &&\n        containers.slice(i + 1).every(r => getElementStyle(r as HTMLElement, 'position') === 'static')\n      ) {\n        return c;\n      }\n      return null;\n    }) ||\n    // istanbul ignore next: optional guard\n    getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  addClass,\n  ariaDescribedBy,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  focusEvent,\n  focusinEvent,\n  focusoutEvent,\n  getAttribute,\n  getDocument,\n  getElementStyle,\n  getInstance,\n  getUID,\n  getWindow,\n  hasAttribute,\n  hasClass,\n  isApple,\n  mouseclickEvent,\n  mousedownEvent,\n  mouseenterEvent,\n  mousehoverEvent,\n  mouseleaveEvent,\n  ObjectAssign,\n  passiveHandler,\n  removeAttribute,\n  removeClass,\n  resizeEvent,\n  scrollEvent,\n  setAttribute,\n  Timer,\n  toLowerCase,\n  touchstartEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, hasPopup, removePopup } from '../util/popupContainer';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport type { TooltipEvent, TooltipOptions } from '../interface/tooltip';\nimport type { PopoverEvent, PopoverOptions } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip as HTMLElement, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container, offsetParent } = self;\n\n  return tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  self._toggleEventListeners();\n\n  // istanbul ignore else @preserve\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  // istanbul ignore else @preserve\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch, passiveHandler);\n\n  [scrollEvent, resizeEvent].forEach(ev => {\n    action(getWindow(element), ev, self.update, passiveHandler);\n  });\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<Record<string, never>, TooltipEvent | PopoverEvent>(\n    `shown.bs.${toLowerCase(self.name)}`,\n  );\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<Record<string, never>, TooltipEvent | PopoverEvent>(\n    `hidden.bs.${toLowerCase(self.name)}`,\n  );\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, container, offsetParent } = self;\n  const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  // istanbul ignore else @preserve\n  const win = getWindow(element);\n  const overflow = offsetHeight !== scrollHeight;\n  const scrollTarget = container === offsetParent && overflow ? container : win;\n  action(scrollTarget, resizeEvent, self.update, passiveHandler);\n  action(scrollTarget, scrollEvent, self.update, passiveHandler);\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) {\n    action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  }\n  if (parentOffcanvas) {\n    action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n  }\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content ||\n      getAttribute(element, titleAtt[0]) ||\n      // istanbul ignore next @preserve\n      '',\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    // istanbul ignore next @preserve: this is to set Popover too\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if (!((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      // reset default options\n      ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n      // set title attributes and add event listeners\n      // istanbul ignore else @preserve\n      if (hasAttribute(element, titleAttr) && isTooltip && typeof options.title === 'string') {\n        toggleTooltipTitle(this, options.title);\n      }\n\n      // set containers\n      this.container = getElementContainer(element);\n      this.offsetParent = ['sticky', 'fixed'].some(\n        position => getElementStyle(this.container as HTMLElement, 'position') === position,\n      )\n        ? (this.container as HTMLElement)\n        : getDocument(this.element).body;\n\n      // create tooltip here\n      createTip(this);\n\n      // attach events\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  // istanbul ignore next @preserve - impossible to test without Apple device\n  handleFocus = () => focus(this.element);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<Record<string, never>, TooltipEvent | PopoverEvent>(\n            `show.bs.${toLowerCase(this.name)}`,\n          );\n          dispatchEvent(element, showTooltipEvent);\n\n          // istanbul ignore else @preserve\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, tipContainer);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            // istanbul ignore else @preserve\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            // istanbul ignore else @preserve\n            if (animation) {\n              emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            } else tooltipShownAction(this);\n          }\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    // istanbul ignore else @preserve\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<Record<string, never>, TooltipEvent | PopoverEvent>(\n            `hide.bs.${toLowerCase(this.name)}`,\n          );\n          dispatchEvent(element, hideTooltipEvent);\n\n          // istanbul ignore else @preserve\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            // istanbul ignore else @preserve\n            if (animation) {\n              emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            } else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip<Tooltip>(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    // istanbul ignore else @preserve\n    if (!enabled) {\n      this._toggleEventListeners(true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, enabled } = this;\n    // istanbul ignore else @preserve\n    if (enabled) {\n      if (tooltip && hasTip(this)) this.hide();\n      this._toggleEventListeners();\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    // istanbul ignore if @preserve\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Toggles on/off the `Tooltip` event listeners.\n   *\n   * @param add when `true`, event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    // btn is only for dismissible popover\n    const { element, options, btn } = this;\n    const { trigger } = options;\n    const isPopover = this.name !== tooltipComponent;\n    const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n    // istanbul ignore else @preserve\n    if (!trigger.includes('manual')) {\n      this.enabled = !!add;\n\n      const triggerOptions = trigger.split(' ');\n\n      triggerOptions.forEach(tr => {\n        // istanbul ignore else @preserve\n        if (tr === mousehoverEvent) {\n          action(element, mousedownEvent, this.handleShow);\n          action(element, mouseenterEvent, this.handleShow);\n\n          // istanbul ignore else @preserve\n          if (!dismissible) {\n            action(element, mouseleaveEvent, this.handleHide);\n            action(getDocument(element), touchstartEvent, this.handleTouch, passiveHandler);\n          }\n        } else if (tr === mouseclickEvent) {\n          action(element, tr, !dismissible ? this.toggle : this.handleShow);\n        } else if (tr === focusEvent) {\n          action(element, focusinEvent, this.handleShow);\n          // istanbul ignore else @preserve\n          if (!dismissible) action(element, focusoutEvent, this.handleHide);\n          // istanbul ignore else @preserve\n          if (isApple) {\n            action(element, mouseclickEvent, this.handleFocus);\n          }\n        }\n        // istanbul ignore else @preserve\n        if (dismissible && btn) {\n          action(btn, mouseclickEvent, this.handleHide);\n        }\n      });\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () => setTimeout(() => disposeTooltipComplete(clone, () => super.dispose()), 17);\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip as HTMLElement, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { focus, getInstance, ObjectAssign } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    // istanbul ignore else @preserve\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  addClass,\n  createCustomEvent,\n  dispatchEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementsByTagName,\n  getInstance,\n  getWindow,\n  hasClass,\n  isHTMLElement,\n  isWindow,\n  passiveHandler,\n  querySelector,\n  removeClass,\n  scrollEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyEvent, ScrollSpyOptions } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\ntype ScrollSpyEventProps = {\n  relatedTarget: HTMLElement;\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEventProps, ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget\n    ? getScrollHeight(scrollTarget)\n    : // istanbul ignore next @preserve\n      scrollHeight;\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  // istanbul ignore else @preserve\n  if (links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n\n  // istanbul ignore else @preserve\n  if (isHTMLElement(target)) clear(target);\n\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) {\n      parents.push(parentItem);\n    }\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    // istanbul ignore else @preserve\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (this.target) {\n      // set initial state\n      this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n      this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n      // add event handlers\n      this._toggleEventListeners(true);\n\n      this.refresh();\n    }\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    // istanbul ignore else @preserve\n    if (isHTMLElement(target) && target.offsetHeight > 0) {\n      updateSpyTargets(this);\n\n      const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n      if (scrollTop >= maxScroll) {\n        const newActiveItem = items[itemsLength - 1];\n\n        // istanbul ignore else @preserve\n        if (activeItem !== newActiveItem) {\n          activate(this, newActiveItem);\n        }\n        return;\n      }\n\n      const { offsets } = this;\n\n      // istanbul ignore else @preserve\n      if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n        this.activeItem = null;\n        // istanbul ignore else @preserve\n        if (target) clear(target);\n        return;\n      }\n\n      items.forEach((item, i) => {\n        if (\n          activeItem !== item &&\n          scrollTop >= offsets[i] &&\n          (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n        ) {\n          activate(this, item);\n        }\n      });\n    }\n  };\n\n  /**\n   * Toggles on/off the component event listener.\n   *\n   * @param add when `true`, listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.scrollTarget as EventTarget, scrollEvent, this.refresh, passiveHandler);\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  addClass,\n  ariaSelected,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getElementsByClassName,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  mouseclickEvent,\n  querySelector,\n  reflow,\n  removeClass,\n  setAttribute,\n  Timer,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\ntype TabEventProps = {\n  relatedTarget: HTMLElement | undefined;\n};\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEventProps, TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEventProps, TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEventProps, TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEventProps, TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  // istanbul ignore else @preserve\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  // istanbul ignore else @preserve\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || { tab: null }; // istanbul ignore next @preserve\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || { currentHeight: 0, nextHeight: 0 }; // istanbul ignore next @preserve\n    // istanbul ignore else @preserve: vitest won't validate this branch\n    if (currentHeight !== nextHeight) {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    } else {\n      triggerTabEnd(self);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || {\n    // istanbul ignore next @preserve\n    tab: null,\n    content: null,\n  };\n  let currentHeight = 0;\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      // istanbul ignore else @preserve\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content)\n      ? content.scrollHeight\n      : // istanbul ignore next @preserve\n        0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n\n  // istanbul ignore else @preserve\n  if (!showTabEvent.defaultPrevented) {\n    // istanbul ignore else @preserve\n    if (nextContent) addClass(nextContent, activeClass);\n    // istanbul ignore else @preserve\n    if (content) removeClass(content, activeClass);\n\n    // istanbul ignore else @preserve\n    if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n      const nextHeight = nextContent.scrollHeight;\n      tabPrivate.set(element, {\n        currentHeight,\n        nextHeight,\n        tab: null,\n        content: null,\n      });\n\n      addClass(tabContent, collapsingClass);\n      tabContent.style.height = `${currentHeight}px`;\n      reflow(tabContent);\n      [content, nextContent].forEach(c => {\n        // istanbul ignore else @preserve\n        if (c) removeClass(c, 'overflow-hidden');\n      });\n    }\n\n    if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n      setTimeout(() => {\n        addClass(nextContent, showClass);\n        emulateTransitionEnd(nextContent, () => {\n          triggerTabShow(self);\n        });\n      }, 1);\n    } else {\n      // istanbul ignore else @preserve\n      if (nextContent) addClass(nextContent, showClass);\n      triggerTabShow(self);\n    }\n\n    // istanbul ignore else @preserve\n    if (tab) dispatchEvent(tab, hiddenTabEvent);\n  }\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(nav as HTMLElement | undefined)) {\n    return { tab: null, content: null };\n  }\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  // istanbul ignore else @preserve\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    e.preventDefault();\n    self.show();\n  }\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    // istanbul ignore else @preserve\n    if (content) {\n      const nav = closest(element, '.nav');\n      const container = closest(content, '.tab-content');\n\n      this.nav = nav;\n      this.content = content;\n      this.tabContent = container;\n\n      // event targets\n      this.dropdown = getParentDropdown(element);\n\n      // show first Tab instance of none is shown\n      // suggested on #432\n      const { tab } = getActiveTab(this);\n      if (nav && !tab) {\n        const firstTab = querySelector(tabSelector, nav);\n        const firstTabContent = firstTab && getTargetElement(firstTab);\n\n        // istanbul ignore else @preserve\n        if (firstTabContent) {\n          addClass(firstTab, activeClass);\n          addClass(firstTabContent, showClass);\n          addClass(firstTabContent, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n        }\n      }\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    // istanbul ignore else @preserve\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      // istanbul ignore else @preserve\n      if (nav) {\n        tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n      }\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      // istanbul ignore else @preserve\n      if (isHTMLElement(tab)) {\n        dispatchEvent(tab as EventTarget, hideTabEvent);\n        // istanbul ignore else @preserve\n        if (!hideTabEvent.defaultPrevented) {\n          addClass(element, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n\n          const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n          if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n            removeClass(activeDropdown, activeClass);\n          }\n\n          // istanbul ignore else @preserve\n          if (nav) {\n            const toggleTab = () => {\n              // istanbul ignore else @preserve\n              if (tab) {\n                removeClass(tab, activeClass);\n                setAttribute(tab, ariaSelected, 'false');\n              }\n              if (dropdown && !hasClass(dropdown, activeClass)) {\n                addClass(dropdown, activeClass);\n              }\n            };\n\n            if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n              Timer.set(nav, toggleTab, 1);\n            } else toggleTab();\n          }\n\n          // istanbul ignore else @preserve\n          if (content) {\n            removeClass(content, showClass);\n            if (hasClass(content, fadeClass)) {\n              emulateTransitionEnd(content, () => triggerTabHide(this));\n            } else {\n              triggerTabHide(this);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, tabClickHandler);\n  };\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  addClass,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focusinEvent,\n  focusoutEvent,\n  getDocument,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  mouseenterEvent,\n  mouseleaveEvent,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  Timer,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastEvent, ToastOptions } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  // istanbul ignore else @preserve\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    // istanbul ignore else @preserve\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.show();\n  }\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  // istanbul ignore else @preserve: a solid filter is required\n  if (self && element !== relatedTarget && !element.contains(relatedTarget as Node)) {\n    if ([mouseenterEvent, focusinEvent].includes(type)) {\n      Timer.clear(element, toastString);\n    } else {\n      Timer.set(element, () => self.hide(), self.options.delay, toastString);\n    }\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) {\n      addClass(element, fadeClass);\n    } else if (!options.animation && hasClass(element, fadeClass)) {\n      removeClass(element, fadeClass);\n    }\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    // istanbul ignore else @preserve\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (!showToastEvent.defaultPrevented) {\n        showToast(this);\n      }\n    }\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    // istanbul ignore else @preserve\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (!hideToastEvent.defaultPrevented) {\n        hideToast(this);\n      }\n    }\n  };\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, it will add the listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { element, triggers, dismiss, options, hide } = this;\n\n    // istanbul ignore else @preserve\n    if (dismiss) {\n      action(dismiss, mouseclickEvent, hide);\n    }\n\n    // istanbul ignore else @preserve\n    if (options.autohide) {\n      [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n        action(element, e, interactiveToastHandler),\n      );\n    }\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n    this._toggleEventListeners();\n    Timer.clear(element, toastString);\n\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\ntype Component =\n  | Alert\n  | Button\n  | Carousel\n  | Collapse\n  | Dropdown\n  | Modal\n  | Offcanvas\n  | Popover\n  | ScrollSpy\n  | Tab\n  | Toast\n  | Tooltip;\n\n[Alert, Button, Carousel, Collapse, Dropdown, Modal, Offcanvas, Popover, ScrollSpy, Tab, Toast, Tooltip].forEach(c =>\n  componentsList.set(c.prototype.name, c),\n);\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = (\n  callback: (el: HTMLElement) => Component,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) {\n        (instance as T & { dispose: () => void }).dispose();\n      }\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  componentsList.forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach(comp => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), {\n    once: true,\n  });\n}\n"],"names":["we","Ae","X","Te","ke","De","P","ot","st","ct","ut","dt","ft","gt","Et","bt","ht","Dt","Ot","Lt","zt","Ht","Ut","Ve","qt","Je","Xe","Ye","Ze","sn","Jt","Xt","C","W","Yt","A","Zt","S","z","V","An","N","R","e","n","o","s","Q","$t","c","_t","j","te","In","zn","Bn","Fn","Hn","v","i","l","E","L","Rn","M","q","G","d","T","ee","K","g","ce","re","qn","a","u","Jn","B","w","ae","Xn","p","f","y","J","Zn","to","eo","no","oo","I","ie","m","so","ue","x","le","de","ro","h","ao","k","pe","lo","F","H","b","me","fo","ge","vo","ho","Mo","To","Do","Ee","Co","be","Io","xo","r","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","version","BaseComponent","target","config","__publicField","element","isHTMLElement","isString","querySelector","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","self","dispatchEvent","hasClass","removeClass","emulateTransitionEnd","add","action","addListener","removeListener","dismiss","close","mouseclickEvent","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","isActive","getAttribute","addClass","setAttribute","ariaPressed","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","closest","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","arrowKeyNext","keyArrowLeft","keyArrowRight","arrowKeyPrev","carouselDragHandler","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","_a","activateCarouselIndicator","pointermoveEvent","passiveHandler","pointerupEvent","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","touchstartEvent","dragstartEvent","arrow","indicator","keydownEvent","getElementsByClassName","activeIndex","transitionItem","matches","ar","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","isAnimating","clone","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","getCurrentOpenDropdown","currentParent","type","isForm","mousedownEvent","dropdownClickHandler","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","padStyle","toggleModalDismiss","update","modalDismissHandler","modalKeyHandler","afterModalHide","relatedTarget","focusElement","toggleFocusTrap","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","modalClickHandler","_b","currentTarget","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","that","callback","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offcanvasTriggerHandler","offCanvasDismiss","selection","visibleTrigger","isOpen","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","toLowerCase","tooltipDefaults","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","isFunction","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","offsetParent","ariaDescribedBy","hasTip","disposeTooltipComplete","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","toggleTooltipOpenHandlers","offsetHeight","parentModal","parentOffcanvas","win","scrollTarget","titleAtt","tr","mousehoverEvent","focusinEvent","focusoutEvent","isApple","tipComponent","elem","getUID","position","outTimer","tipContainer","showTooltipEvent","delay","hideTooltipEvent","enabled","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","itemsLength","isWin","isWindow","links","getElementsByTagName","scrollHEIGHT","getScrollHeight","href","targetItem","rect","getOffsetHeight","link","clear","item","activate","parents","parentItem","menuItem","parentLink","scrollTop","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toastClickHandler","interactiveToastHandler","isShown","hide","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","cs","init","selector","removeDataAPI","comp"],"mappings":"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","x_google_ignoreList":[0,1]}