{"version":3,"file":"bootstrap-native.mjs","sources":["../node_modules/@thednp/event-listener/dist/event-listener.mjs","../node_modules/@thednp/shorty/dist/shorty.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["const e = {}, f = (t) => {\n  const { type: c, currentTarget: i } = t;\n  [...e[c]].forEach(([n, s]) => {\n    i === n && [...s].forEach(([o, a]) => {\n      o.apply(n, [t]), typeof a == \"object\" && a.once && r(n, c, o, a);\n    });\n  });\n}, E = (t, c, i, n) => {\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const s = e[c];\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(t), { size: a } = o;\n  o.set(i, n), a || t.addEventListener(c, f, n);\n}, r = (t, c, i, n) => {\n  const s = e[c], o = s && s.get(t), a = o && o.get(i), d = a !== void 0 ? a : n;\n  o && o.has(i) && o.delete(i), s && (!o || !o.size) && s.delete(t), (!s || !s.size) && delete e[c], (!o || !o.size) && t.removeEventListener(c, f, d);\n}, g = E, M = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  r as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","const pe = \"aria-checked\", fe = \"aria-description\", me = \"aria-describedby\", ge = \"aria-expanded\", ve = \"aria-haspopup\", Ee = \"aria-hidden\", be = \"aria-label\", he = \"aria-labelledby\", ye = \"aria-modal\", we = \"aria-pressed\", Ae = \"aria-selected\", Se = \"aria-valuemin\", Me = \"aria-valuemax\", Ne = \"aria-valuenow\", ke = \"aria-valuetext\", G = \"abort\", j = \"beforeunload\", J = \"blur\", K = \"change\", X = \"contextmenu\", P = \"DOMContentLoaded\", Y = \"DOMMouseScroll\", Z = \"error\", $ = \"focus\", _ = \"focusin\", tt = \"focusout\", et = \"gesturechange\", nt = \"gestureend\", ot = \"gesturestart\", st = \"keydown\", ct = \"keypress\", rt = \"keyup\", at = \"load\", it = \"click\", ut = \"dblclick\", lt = \"mousedown\", dt = \"mouseup\", pt = \"hover\", ft = \"mouseenter\", mt = \"mouseleave\", gt = \"mousein\", vt = \"mouseout\", Et = \"mouseover\", bt = \"mousemove\", ht = \"mousewheel\", yt = \"move\", wt = \"orientationchange\", At = \"pointercancel\", St = \"pointerdown\", Mt = \"pointerleave\", Nt = \"pointermove\", kt = \"pointerup\", Tt = \"readystatechange\", Dt = \"reset\", Ct = \"resize\", Lt = \"select\", Ot = \"selectend\", It = \"selectstart\", zt = \"scroll\", xt = \"submit\", Vt = \"touchstart\", Bt = \"touchmove\", Ht = \"touchcancel\", Pt = \"touchend\", Ut = \"unload\", Te = {\n  DOMContentLoaded: P,\n  DOMMouseScroll: Y,\n  abort: G,\n  beforeunload: j,\n  blur: J,\n  change: K,\n  click: it,\n  contextmenu: X,\n  dblclick: ut,\n  error: Z,\n  focus: $,\n  focusin: _,\n  focusout: tt,\n  gesturechange: et,\n  gestureend: nt,\n  gesturestart: ot,\n  hover: pt,\n  keydown: st,\n  keypress: ct,\n  keyup: rt,\n  load: at,\n  mousedown: lt,\n  mousemove: bt,\n  mousein: gt,\n  mouseout: vt,\n  mouseenter: ft,\n  mouseleave: mt,\n  mouseover: Et,\n  mouseup: dt,\n  mousewheel: ht,\n  move: yt,\n  orientationchange: wt,\n  pointercancel: At,\n  pointerdown: St,\n  pointerleave: Mt,\n  pointermove: Nt,\n  pointerup: kt,\n  readystatechange: Tt,\n  reset: Dt,\n  resize: Ct,\n  scroll: zt,\n  select: Lt,\n  selectend: Ot,\n  selectstart: It,\n  submit: xt,\n  touchcancel: Ht,\n  touchend: Pt,\n  touchmove: Bt,\n  touchstart: Vt,\n  unload: Ut\n}, De = \"drag\", Ce = \"dragstart\", Le = \"dragenter\", Oe = \"dragleave\", Ie = \"dragover\", ze = \"dragend\", xe = \"loadstart\", Ve = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Be = { down: \"mousedown\", up: \"mouseup\" }, He = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : (\n  /* istanbul ignore next */\n  [\"mouseover\", \"mouseout\"]\n), Pe = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, Ue = { in: \"focusin\", out: \"focusout\" }, Fe = {\n  Backspace: \"Backspace\",\n  //  8\n  Tab: \"Tab\",\n  //  9\n  Enter: \"Enter\",\n  // 13\n  Shift: \"Shift\",\n  // 16\n  Control: \"Control\",\n  // 17\n  Alt: \"Alt\",\n  // 18\n  Pause: \"Pause\",\n  // 19\n  CapsLock: \"CapsLock\",\n  // 20\n  Escape: \"Escape\",\n  // 27\n  Scape: \"Space\",\n  // 32\n  ArrowLeft: \"ArrowLeft\",\n  // 37\n  ArrowUp: \"ArrowUp\",\n  // 38\n  ArrowRight: \"ArrowRight\",\n  // 39\n  ArrowDown: \"ArrowDown\",\n  // 40\n  Insert: \"Insert\",\n  // 45\n  Delete: \"Delete\",\n  // 46\n  Meta: \"Meta\",\n  // 91 windows key\n  ContextMenu: \"ContextMenu\",\n  // 93\n  ScrollLock: \"ScrollLock\"\n  // 145\n}, We = \"Alt\", Re = \"ArrowDown\", Qe = \"ArrowUp\", qe = \"ArrowLeft\", Ge = \"ArrowRight\", je = \"Backspace\", Je = \"CapsLock\", Ke = \"Control\", Xe = \"Delete\", Ye = \"Enter\", Ze = \"Escape\", $e = \"Insert\", _e = \"Meta\", tn = \"Pause\", en = \"ScrollLock\", nn = \"Shift\", on = \"Space\", sn = \"Tab\", Ft = \"animationDuration\", Wt = \"animationDelay\", U = \"animationName\", D = \"animationend\", Rt = \"transitionDuration\", Qt = \"transitionDelay\", C = \"transitionend\", F = \"transitionProperty\", cn = \"addEventListener\", rn = \"removeEventListener\", an = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, un = \"offsetHeight\", ln = \"offsetWidth\", dn = \"scrollHeight\", pn = \"scrollWidth\", fn = \"tabindex\", qt = navigator.userAgentData, A = qt, { userAgent: Gt } = navigator, S = Gt, z = /iPhone|iPad|iPod|Android/i;\nlet L = !1;\nA ? L = A.brands.some((t) => z.test(t.brand)) : L = z.test(S);\nconst mn = L, x = /(iPhone|iPod|iPad)/, gn = A ? A.brands.some((t) => x.test(t.brand)) : (\n  /* istanbul ignore next */\n  x.test(S)\n), vn = S ? S.includes(\"Firefox\") : (\n  /* istanbul ignore next */\n  !1\n), { head: M } = document, En = [\"webkitPerspective\", \"perspective\"].some((t) => t in M.style), jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(e, n, s);\n}, Jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(e, n, s);\n}, Kt = (t, e, n, o) => {\n  const s = (r) => {\n    (r.target === t || r.currentTarget === t) && (n.apply(t, [r]), Jt(t, e, s, o));\n  };\n  jt(t, e, s, o);\n}, Xt = () => {\n}, bn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    Kt(document, P, Xt, e);\n  } catch {\n  }\n  return t;\n})(), hn = [\"webkitTransform\", \"transform\"].some((t) => t in M.style), yn = \"ontouchstart\" in window || /* istanbul ignore next */\n\"msMaxTouchPoints\" in navigator, wn = [\"webkitAnimation\", \"animation\"].some((t) => t in M.style), An = [\"webkitTransition\", \"transition\"].some((t) => t in M.style), Yt = (t, e) => t.getAttribute(e), Sn = (t, e, n) => e.getAttributeNS(t, n), Mn = (t, e) => t.hasAttribute(e), Nn = (t, e, n) => e.hasAttributeNS(t, n), kn = (t, e, n) => t.setAttribute(e, n), Tn = (t, e, n, o) => e.setAttributeNS(t, n, o), Dn = (t, e) => t.removeAttribute(e), Cn = (t, e, n) => e.removeAttributeNS(t, n), Ln = (t, ...e) => {\n  t.classList.add(...e);\n}, On = (t, ...e) => {\n  t.classList.remove(...e);\n}, In = (t, e) => t.classList.contains(e), { body: zn } = document, { documentElement: xn } = document, Vn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, i = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((e) => t.nodeType === e) || !1, u = (t) => i(t) && t.nodeType === 1 || !1, E = /* @__PURE__ */ new Map(), O = {\n  data: E,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (t, e, n) => {\n    if (!u(t))\n      return;\n    E.has(e) || E.set(e, /* @__PURE__ */ new Map()), E.get(e).set(t, n);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (t) => E.get(t) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (t, e) => {\n    if (!u(t) || !e)\n      return null;\n    const n = O.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (t, e) => {\n    const n = O.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && E.delete(e));\n  }\n}, Bn = (t, e) => O.get(t, e), N = (t) => typeof t == \"string\" || !1, W = (t) => v(t) && t.constructor.name === \"Window\" || !1, R = (t) => i(t) && t.nodeType === 9 || !1, d = (t) => W(t) ? t.document : R(t) ? t : i(t) ? t.ownerDocument : window.document, k = (t, ...e) => Object.assign(t, ...e), Zt = (t) => {\n  if (!t)\n    return;\n  if (N(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = Zt(e);\n  if (!n)\n    return;\n  const o = { ...t };\n  return delete o.tagName, k(n, o);\n}, $t = (t, e) => {\n  if (!t || !e)\n    return;\n  if (N(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = $t(t, n);\n  if (!o)\n    return;\n  const s = { ...e };\n  return delete s.tagName, k(o, s);\n}, Q = (t, e) => t.dispatchEvent(e), Hn = (t, e, n) => n.indexOf(t) === e, g = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, _t = (t) => {\n  const e = g(t, U), n = g(t, Wt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, te = (t) => {\n  const e = g(t, U), n = g(t, Ft), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Pn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = te(t), r = _t(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(D, a), n = 1);\n    };\n    t.addEventListener(D, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, ee = (t) => {\n  const e = g(t, F), n = g(t, Qt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, ne = (t) => {\n  const e = g(t, F), n = g(t, Rt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Un = (t, e) => {\n  let n = 0;\n  const o = new Event(C), s = ne(t), r = ee(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(C, a), n = 1);\n    };\n    t.addEventListener(C, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, Fn = (t) => Float32Array.from(Array.from(t)), Wn = (t) => Float64Array.from(Array.from(t)), Rn = (t, e) => t.focus(e), V = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, w = (t) => Object.entries(t), oe = (t) => t.toLowerCase(), Qn = (t, e, n, o) => {\n  const s = { ...n }, r = { ...t.dataset }, a = { ...e }, l = {}, p = \"title\";\n  return w(r).forEach(([c, f]) => {\n    const y = o && typeof c == \"string\" && c.includes(o) ? c.replace(o, \"\").replace(/[A-Z]/g, (q) => oe(q)) : c;\n    l[y] = V(f);\n  }), w(s).forEach(([c, f]) => {\n    s[c] = V(f);\n  }), w(e).forEach(([c, f]) => {\n    c in s ? a[c] = s[c] : c in l ? a[c] = l[c] : a[c] = c === p ? Yt(t, p) : f;\n  }), a;\n}, qn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Gn = (t) => Object.keys(t), jn = (t) => Object.values(t), Jn = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return v(e) && k(n, e), n;\n}, Kn = { passive: !0 }, Xn = (t) => t.offsetHeight, Yn = (t, e) => {\n  w(e).forEach(([n, o]) => {\n    if (o && N(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, k(t.style, s);\n    }\n  });\n}, I = (t) => v(t) && t.constructor.name === \"Map\" || !1, se = (t) => typeof t == \"number\" || !1, m = /* @__PURE__ */ new Map(), Zn = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (t, e, n, o) => {\n    u(t) && (o && o.length ? (m.has(t) || m.set(t, /* @__PURE__ */ new Map()), m.get(t).set(o, setTimeout(e, n))) : m.set(t, setTimeout(e, n)));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (t, e) => {\n    if (!u(t))\n      return null;\n    const n = m.get(t);\n    return e && n && I(n) ? n.get(e) || /* istanbul ignore next */\n    null : se(n) ? n : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (t, e) => {\n    if (!u(t))\n      return;\n    const n = m.get(t);\n    e && e.length && I(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && m.delete(t)) : (clearTimeout(n), m.delete(t));\n  }\n}, $n = (t) => t.toUpperCase(), h = (t, e) => {\n  const { width: n, height: o, top: s, right: r, bottom: a, left: l } = t.getBoundingClientRect();\n  let p = 1, c = 1;\n  if (e && u(t)) {\n    const { offsetWidth: f, offsetHeight: y } = t;\n    p = f > 0 ? Math.round(n) / f : (\n      /* istanbul ignore next */\n      1\n    ), c = y > 0 ? Math.round(o) / y : (\n      /* istanbul ignore next */\n      1\n    );\n  }\n  return {\n    width: n / p,\n    height: o / c,\n    top: s / c,\n    right: r / p,\n    bottom: a / c,\n    left: l / p,\n    x: l / p,\n    y: s / c\n  };\n}, _n = (t) => d(t).body, T = (t) => d(t).documentElement, to = (t) => d(t).head, eo = (t) => {\n  const e = W(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, ce = (t) => i(t) && t.constructor.name === \"ShadowRoot\" || !1, no = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || // step into the shadow DOM of the parent of a slotted node\ni(t) && t.parentNode || // DOM Element detected\nce(t) && t.host || // ShadowRoot detected\nT(t), re = (t) => {\n  if (!u(t))\n    return !1;\n  const { width: e, height: n } = h(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, oo = (t, e, n) => {\n  const o = u(e), s = h(t, o && re(e)), r = { x: 0, y: 0 };\n  if (o) {\n    const a = h(e, !0);\n    r.x = a.x + e.clientLeft, r.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - r.x,\n    y: s.top + n.y - r.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet B = 0, H = 0;\nconst b = /* @__PURE__ */ new Map(), ae = (t, e) => {\n  let n = e ? B : H;\n  if (e) {\n    const o = ae(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), I(s) && !s.has(e) ? (s.set(e, n), B += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), H += 1);\n  }\n  return n;\n}, so = (t) => {\n  var e;\n  return t ? R(t) ? t.defaultView : i(t) ? (e = t == null ? void 0 : t.ownerDocument) == null ? void 0 : e.defaultView : t : window;\n}, ie = (t) => Array.isArray(t) || !1, co = (t) => i(t) && t.nodeName === \"CANVAS\" || !1, ue = (t) => u(t) && !!t.shadowRoot || !1, ro = (t) => i(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, ao = (t) => {\n  if (!i(t))\n    return !1;\n  const { top: e, bottom: n } = h(t), { clientHeight: o } = T(t);\n  return e <= o && n >= 0;\n}, io = (t) => {\n  if (!i(t))\n    return !1;\n  const { clientWidth: e, clientHeight: n } = T(t), { top: o, left: s, bottom: r, right: a } = h(t, !0);\n  return o >= 0 && s >= 0 && r <= n && a <= e;\n}, uo = (t) => ie(t) && t.every(u) || !1, lo = (t) => typeof t == \"function\" || !1, po = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, fo = (t) => u(t) && t.tagName === \"IMG\" || !1, mo = (t) => {\n  if (!N(t))\n    return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, go = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, vo = (t) => i(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((e) => t.constructor.name.includes(e)) || !1, Eo = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, bo = (t) => T(t).dir === \"rtl\", ho = (t) => i(t) && t.constructor.name.includes(\"SVG\") || !1, yo = (t) => i(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, le = (t, e) => t ? t.closest(e) || // break out of `ShadowRoot`\nle(t.getRootNode().host, e) : null, wo = (t, e) => u(t) ? t : (i(e) ? e : d()).querySelector(t), de = (t, e) => (i(e) ? e : d()).getElementsByTagName(t), Ao = (t) => [...de(\"*\", t)].filter(ue), So = (t, e) => d(e).getElementById(t) || null, Mo = (t, e) => (i(e) ? e : d()).querySelectorAll(t), No = (t, e) => (e && i(e) ? e : d()).getElementsByClassName(\n  t\n), ko = (t, e) => t.matches(e), To = \"2.0.0alpha14\";\nexport {\n  Vn as ArrayFrom,\n  P as DOMContentLoadedEvent,\n  Y as DOMMouseScrollEvent,\n  O as Data,\n  Fn as Float32ArrayFrom,\n  Wn as Float64ArrayFrom,\n  k as ObjectAssign,\n  w as ObjectEntries,\n  qn as ObjectHasOwn,\n  Gn as ObjectKeys,\n  jn as ObjectValues,\n  Zn as Timer,\n  G as abortEvent,\n  Ln as addClass,\n  cn as addEventListener,\n  Wt as animationDelay,\n  Ft as animationDuration,\n  D as animationEndEvent,\n  U as animationName,\n  pe as ariaChecked,\n  me as ariaDescribedBy,\n  fe as ariaDescription,\n  ge as ariaExpanded,\n  ve as ariaHasPopup,\n  Ee as ariaHidden,\n  be as ariaLabel,\n  he as ariaLabelledBy,\n  ye as ariaModal,\n  we as ariaPressed,\n  Ae as ariaSelected,\n  Me as ariaValueMax,\n  Se as ariaValueMin,\n  Ne as ariaValueNow,\n  ke as ariaValueText,\n  j as beforeunloadEvent,\n  an as bezierEasings,\n  J as blurEvent,\n  K as changeEvent,\n  le as closest,\n  X as contextmenuEvent,\n  Jn as createCustomEvent,\n  Zt as createElement,\n  $t as createElementNS,\n  Q as dispatchEvent,\n  Hn as distinct,\n  zn as documentBody,\n  xn as documentElement,\n  M as documentHead,\n  De as dragEvent,\n  ze as dragendEvent,\n  Le as dragenterEvent,\n  Oe as dragleaveEvent,\n  Ie as dragoverEvent,\n  Ce as dragstartEvent,\n  Pn as emulateAnimationEnd,\n  Un as emulateTransitionEnd,\n  Z as errorEvent,\n  Rn as focus,\n  $ as focusEvent,\n  Ue as focusEvents,\n  _ as focusinEvent,\n  tt as focusoutEvent,\n  et as gesturechangeEvent,\n  nt as gestureendEvent,\n  ot as gesturestartEvent,\n  Yt as getAttribute,\n  Sn as getAttributeNS,\n  h as getBoundingClientRect,\n  Ao as getCustomElements,\n  d as getDocument,\n  _n as getDocumentBody,\n  T as getDocumentElement,\n  to as getDocumentHead,\n  _t as getElementAnimationDelay,\n  te as getElementAnimationDuration,\n  So as getElementById,\n  g as getElementStyle,\n  ee as getElementTransitionDelay,\n  ne as getElementTransitionDuration,\n  No as getElementsByClassName,\n  de as getElementsByTagName,\n  Bn as getInstance,\n  eo as getNodeScroll,\n  no as getParentNode,\n  oo as getRectRelativeToOffsetParent,\n  ae as getUID,\n  so as getWindow,\n  Mn as hasAttribute,\n  Nn as hasAttributeNS,\n  In as hasClass,\n  gn as isApple,\n  ie as isArray,\n  co as isCanvas,\n  ue as isCustomElement,\n  R as isDocument,\n  ro as isElement,\n  ao as isElementInScrollRange,\n  io as isElementInViewport,\n  uo as isElementsArray,\n  vn as isFirefox,\n  lo as isFunction,\n  po as isHTMLCollection,\n  u as isHTMLElement,\n  fo as isHTMLImageElement,\n  mo as isJSON,\n  I as isMap,\n  vo as isMedia,\n  mn as isMobile,\n  i as isNode,\n  Eo as isNodeList,\n  se as isNumber,\n  v as isObject,\n  bo as isRTL,\n  ho as isSVGElement,\n  re as isScaledElement,\n  ce as isShadowRoot,\n  N as isString,\n  yo as isTableElement,\n  go as isWeakMap,\n  W as isWindow,\n  We as keyAlt,\n  Re as keyArrowDown,\n  qe as keyArrowLeft,\n  Ge as keyArrowRight,\n  Qe as keyArrowUp,\n  je as keyBackspace,\n  Je as keyCapsLock,\n  Ke as keyControl,\n  Xe as keyDelete,\n  Ye as keyEnter,\n  Ze as keyEscape,\n  $e as keyInsert,\n  _e as keyMeta,\n  tn as keyPause,\n  en as keyScrollLock,\n  nn as keyShift,\n  on as keySpace,\n  sn as keyTab,\n  Fe as keyboardEventKeys,\n  st as keydownEvent,\n  ct as keypressEvent,\n  rt as keyupEvent,\n  at as loadEvent,\n  xe as loadstartEvent,\n  ko as matches,\n  Be as mouseClickEvents,\n  He as mouseHoverEvents,\n  Ve as mouseSwipeEvents,\n  it as mouseclickEvent,\n  ut as mousedblclickEvent,\n  lt as mousedownEvent,\n  ft as mouseenterEvent,\n  pt as mousehoverEvent,\n  gt as mouseinEvent,\n  mt as mouseleaveEvent,\n  bt as mousemoveEvent,\n  vt as mouseoutEvent,\n  Et as mouseoverEvent,\n  dt as mouseupEvent,\n  ht as mousewheelEvent,\n  yt as moveEvent,\n  Te as nativeEvents,\n  Xt as noop,\n  Qn as normalizeOptions,\n  V as normalizeValue,\n  Jt as off,\n  un as offsetHeight,\n  ln as offsetWidth,\n  jt as on,\n  Kt as one,\n  wt as orientationchangeEvent,\n  Kn as passiveHandler,\n  At as pointercancelEvent,\n  St as pointerdownEvent,\n  Mt as pointerleaveEvent,\n  Nt as pointermoveEvent,\n  kt as pointerupEvent,\n  wo as querySelector,\n  Mo as querySelectorAll,\n  Tt as readystatechangeEvent,\n  Xn as reflow,\n  Dn as removeAttribute,\n  Cn as removeAttributeNS,\n  On as removeClass,\n  rn as removeEventListener,\n  Dt as resetEvent,\n  Ct as resizeEvent,\n  zt as scrollEvent,\n  dn as scrollHeight,\n  pn as scrollWidth,\n  Lt as selectEvent,\n  Ot as selectendEvent,\n  It as selectstartEvent,\n  kn as setAttribute,\n  Tn as setAttributeNS,\n  Yn as setElementStyle,\n  xt as submitEvent,\n  En as support3DTransform,\n  wn as supportAnimation,\n  bn as supportPassive,\n  yn as supportTouch,\n  hn as supportTransform,\n  An as supportTransition,\n  fn as tabindex,\n  oe as toLowerCase,\n  $n as toUpperCase,\n  Pe as touchEvents,\n  Ht as touchcancelEvent,\n  Pt as touchendEvent,\n  Bt as touchmoveEvent,\n  Vt as touchstartEvent,\n  Qt as transitionDelay,\n  Rt as transitionDuration,\n  C as transitionEndEvent,\n  F as transitionProperty,\n  Ut as unloadEvent,\n  S as userAgent,\n  A as userAgentData,\n  To as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: HTMLElement;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    /* istanbul ignore else */\n    if (prevInstance) {\n      prevInstance.dispose();\n    }\n\n    this.element = element;\n    this.options =\n      this.defaults && ObjectKeys(this.defaults).length\n        ? normalizeOptions(element, this.defaults, config || {}, 'bs')\n        : {};\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (that: Alert) => {\n  const { element } = that;\n  toggleAlertHandler(that);\n\n  dispatchEvent(element, closedAlertEvent);\n\n  that.dispose();\n  element.remove();\n};\n\n// ALERT PRIVATE METHOD\n// ====================\n/**\n * Toggle on / off the `click` event listener.\n *\n * @param that the target alert instance\n * @param add when `true`, event listener is added\n */\nconst toggleAlertHandler = (that: Alert, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { dismiss, close } = that;\n  /* istanbul ignore else */\n  if (dismiss) action(dismiss, mouseclickEvent, close);\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    toggleAlertHandler(this, true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n\n      if (!closeAlertEvent.defaultPrevented) {\n        removeClass(element, showClass);\n\n        if (hasClass(element, fadeClass)) {\n          emulateTransitionEnd(element, () => alertTransitionEnd(this));\n        } else alertTransitionEnd(this);\n      }\n    }\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    toggleAlertHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n  getAttribute,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON PRIVATE METHOD\n// =====================\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Button` instance\n * @param add when `true`, event listener is added\n */\nconst toggleButtonHandler = (self: Button, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, self.toggle);\n};\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    toggleButtonHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, 'disabled') && !getAttribute(element, 'disabled')) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    toggleButtonHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  touchstartEvent,\n  dragstartEvent,\n  addClass,\n  hasClass,\n  removeClass,\n  matches,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  /* istanbul ignore else */\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (self.cycle && !getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const newIndex = +(getAttribute(this, dataBsSlideTo) || /* istanbul ignore next */ 0);\n\n    if (\n      this &&\n      !hasClass(this, activeClass) && // event target is not active\n      !Number.isNaN(newIndex)\n    ) {\n      // AND has the specific attribute\n      self.to(newIndex); // do the slide\n    }\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const orientation = getAttribute(this, dataBsSlide);\n\n    /* istanbul ignore else */\n    if (orientation === 'next') {\n      self.next();\n    } else if (orientation === 'prev') {\n      self.prev();\n    }\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (self && !self.isAnimating && !/textarea|input/i.test(target.nodeName)) {\n    const RTL = isRTL(element);\n    const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n    const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n    /* istanbul ignore else */\n    if (code === arrowKeyPrev) self.prev();\n    else if (code === arrowKeyNext) self.next();\n  }\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  /* istanbul ignore next */\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) || !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (self && !self.isAnimating && !self.isTouch) {\n    // filter pointer event on controls & indicators\n    const { controls, indicators } = self;\n    if (![...controls, ...indicators].every(el => el === target || el.contains(target as Node))) {\n      startX = e.pageX;\n\n      /* istanbul ignore else */\n      if (this.contains(target as Node)) {\n        self.isTouch = true;\n        toggleCarouselTouchHandlers(self, true);\n      }\n    }\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore else */\n  if (self) {\n    const { element, index } = self;\n    const RTL = isRTL(element);\n    endX = e.pageX;\n\n    self.isTouch = false;\n    toggleCarouselTouchHandlers(self);\n\n    if (\n      !doc.getSelection()?.toString().length &&\n      element.contains(target as HTMLElement) &&\n      Math.abs(startX - endX) > 120\n    ) {\n      // determine next index to slide to\n      /* istanbul ignore else */\n      if (currentX < startX) {\n        self.to(index + (RTL ? -1 : 1));\n      } else if (currentX > startX) {\n        self.to(index + (RTL ? 1 : -1));\n      }\n    }\n\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n  }\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler as EventListener, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler as EventListener, passiveHandler);\n};\n\n/**\n * Toggles all event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselHandlers = (self: Carousel, add?: boolean) => {\n  const { element, options, slides, controls, indicators } = self;\n  const { touch, pause, interval, keyboard } = options;\n  const action = add ? addListener : removeListener;\n\n  if (pause && interval) {\n    action(element, mouseenterEvent, carouselPauseHandler);\n    action(element, mouseleaveEvent, carouselResumeHandler);\n  }\n\n  if (touch && slides.length > 2) {\n    action(element, pointerdownEvent, carouselPointerDownHandler as EventListener, passiveHandler);\n    action(element, touchstartEvent, carouselDragHandler as unknown as EventListener, { passive: false });\n    action(element, dragstartEvent, carouselDragHandler as unknown as EventListener, { passive: false });\n  }\n\n  /* istanbul ignore else */\n  if (controls.length) {\n    controls.forEach(arrow => {\n      /* istanbul ignore else */\n      if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler as EventListener);\n    });\n  }\n\n  /* istanbul ignore else */\n  if (indicators.length) {\n    indicators.forEach(indicator => {\n      action(indicator, mouseclickEvent, carouselIndicatorHandler as EventListener);\n    });\n  }\n\n  if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler as EventListener);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length >= 2) {\n      const activeIndex = getActiveIndex(this);\n      // recover item from disposed instance\n      const transitionItem = [...slides].find(s => matches(s, `.${carouselItem}-next,.${carouselItem}-next`));\n      this.index = activeIndex;\n\n      // external controls must be within same document context\n      const doc = getDocument(element);\n\n      this.controls = [\n        ...querySelectorAll(`[${dataBsSlide}]`, element),\n        ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n      // a LIVE collection is prefferable\n      this.indicators = [\n        ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n        ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      // set JavaScript and DATA API options\n      const { options } = this;\n\n      // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n      this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n      // set first slide active if none\n      /* istanbul ignore next - impossible to test with cypress */\n      if (transitionItem) {\n        this.index = [...slides].indexOf(transitionItem);\n      } else if (activeIndex < 0) {\n        this.index = 0;\n        addClass(slides[0], activeClass);\n        if (this.indicators.length) activateCarouselIndicator(this, 0);\n      }\n\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n      // attach event handlers\n      toggleCarouselHandlers(this, true);\n\n      // start to cycle if interval is set\n      if (options.interval) this.cycle();\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (!this.isAnimating && activeItem !== next && !Timer.get(element, dataBsSlide)) {\n      // determine transition direction\n      /* istanbul ignore else */\n      if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n        this.direction = RTL ? 'right' : 'left'; // next\n      } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n        this.direction = RTL ? 'left' : 'right'; // prev\n      }\n      const { direction } = this;\n\n      // find the right next index\n      if (next < 0) {\n        next = slides.length - 1;\n      } else if (next >= slides.length) {\n        next = 0;\n      }\n\n      // orientation, class name, eventProperties\n      const orientation = direction === 'left' ? 'next' : 'prev';\n      const directionClass = direction === 'left' ? 'start' : 'end';\n\n      const eventProperties = {\n        relatedTarget: slides[next],\n        from: activeItem,\n        to: next,\n        direction,\n      };\n\n      // update event properties\n      ObjectAssign(carouselSlideEvent, eventProperties);\n      ObjectAssign(carouselSlidEvent, eventProperties);\n\n      // discontinue when prevented\n      dispatchEvent(element, carouselSlideEvent);\n      if (!carouselSlideEvent.defaultPrevented) {\n        // update index\n        this.index = next;\n        activateCarouselIndicator(this, next);\n\n        if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n          Timer.set(\n            element,\n            () => {\n              addClass(slides[next], `${carouselItem}-${orientation}`);\n              reflow(slides[next]);\n              addClass(slides[next], `${carouselItem}-${directionClass}`);\n              addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n              // the instance might get diposed mid-animation\n              emulateTransitionEnd(\n                slides[next],\n                () => this.slides && this.slides.length && carouselTransitionEndHandler(this),\n              );\n            },\n            0,\n            dataBsSlide,\n          );\n        } else {\n          addClass(slides[next], activeClass);\n          removeClass(slides[activeItem], activeClass);\n\n          Timer.set(\n            element,\n            () => {\n              Timer.clear(element, dataBsSlide);\n              // check for element, might have been disposed\n              /* istanbul ignore else */\n              if (element && options.interval && !this.isPaused) {\n                this.cycle();\n              }\n\n              dispatchEvent(element, carouselSlidEvent);\n            },\n            0,\n            dataBsSlide,\n          );\n        }\n      }\n    }\n  }\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    toggleCarouselHandlers(clone);\n    super.dispose();\n\n    // istanbul ignore next - impossible to test with cypress\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n  isHTMLElement,\n  isString,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element);\n    setElementStyle(element, { height: '0px' });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      /* istanbul ignore else */\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n/**\n * Toggles on/off the event listener(s) of the `Collapse` instance.\n *\n * @param self the `Collapse` instance\n * @param add when `true`, the event listener is added\n */\nconst toggleCollapseHandler = (self: Collapse, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler as EventListener));\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent as string, doc)\n      : null;\n\n    // add event listeners\n    toggleCollapseHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    toggleCollapseHandler(this);\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (element as HTMLAnchorElement).href.slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor && hasAttribute(parentAnchor, 'href') && (parentAnchor as HTMLAnchorElement).href.slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n  isHTMLElement,\n  mousedownEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<DropdownEvent>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore else: this test requires a navbar */\n  if (getElementStyle(menu, 'position') !== 'static') {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n    resetProps.forEach(p => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = '';\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass =\n      dropdownClasses.find(c => hasClass(parentElement, c)) ||\n      /* istanbul ignore next: fallback position */ dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: '100%' },\n      dropup: { top: 'auto', bottom: '100%' },\n      dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n      dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n      menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n      menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropendString;\n    }\n    if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: 'auto',\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n      if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n      if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n      if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      /* istanbul ignore else */\n      if (menuEnd) {\n        const endAdjust =\n          (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler as EventListener);\n  action(doc, focusEvent, dropdownDismissHandler as EventListener);\n  action(doc, keydownEvent, dropdownPreventScroll as EventListener);\n  action(doc, keyupEvent, dropdownKeyHandler as EventListener);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param self the `Dropdown` instance\n * @param add when `true`, it will add the event listener\n */\nconst toggleDropdownHandler = (self: Dropdown, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler as EventListener);\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore else */\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    /* istanbul ignore else */\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm =\n        parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === 'form' || closest(target, 'form') !== null);\n\n      if ([mouseclickEvent, mousedownEvent].includes(type) && isEmptyAnchor(target)) {\n        e.preventDefault();\n      }\n\n      /* istanbul ignore else */\n      if (!isForm && type !== focusEvent && target !== element && target !== menu) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopPropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  /* istanbul ignore else */\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n      let idx = menuItems.indexOf(activeElement);\n      /* istanbul ignore else */\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      /* istanbul ignore else */\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(dropdownMenuClass, parentElement as ParentNode);\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n\n      // add event listener\n      toggleDropdownHandler(this, true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement && getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'true');\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'false');\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    toggleDropdownHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'div', className: 'popup-container' }) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import {\n  createElement,\n  getDocument,\n  reflow,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getDocumentBody,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  focus,\n  Timer,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, update } = self;\n  action(element, mouseclickEvent, modalDismissHandler as EventListener);\n  action(getWindow(element), resizeEvent, update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler as EventListener);\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Modal` instance.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listener is added\n */\nconst toggleModalHandler = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler as EventListener));\n  }\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.toggle();\n  }\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(modalActiveSelector, getDocument(target as Node));\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options } = self;\n    /* istanbul ignore else */\n    if (\n      options.keyboard &&\n      code === keyEscape && // the keyboard option is enabled and the key is 27\n      hasClass(element, showClass)\n    ) {\n      // the modal is not visible\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nfunction modalDismissHandler(this: HTMLElement, e: MouseEvent) {\n  const self = getModalInstance(this);\n\n  // this timer is needed\n  /* istanbul ignore else: must have a filter */\n  if (self && !Timer.get(this)) {\n    const { options, isStatic, modalDialog } = self;\n    const { backdrop } = options;\n    const { target } = e;\n\n    const selectedText = getDocument(this)?.getSelection()?.toString().length;\n    const targetInsideDialog = modalDialog.contains(target as HTMLElement);\n    const dismiss = target && closest(target as HTMLElement, modalDismissSelector);\n\n    /* istanbul ignore else */\n    if (isStatic && !targetInsideDialog) {\n      Timer.set(\n        this,\n        () => {\n          addClass(this, modalStaticClass);\n          emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n        },\n        17,\n      );\n    } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n      self.relatedTarget = dismiss || null;\n      self.hide();\n      e.preventDefault();\n    }\n  }\n}\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    /* istanbul ignore else */\n    if (modalDialog) {\n      this.modalDialog = modalDialog;\n      // modal can have multiple triggering elements\n      this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n        btn => getTargetElement(btn) === element,\n      );\n\n      // additional internals\n      this.isStatic = this.options.backdrop === 'static';\n      this.hasFade = hasClass(element, fadeClass);\n      this.relatedTarget = null;\n\n      // attach event listeners\n      toggleModalHandler(this, true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showModalEvent);\n      if (!showModalEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getModalInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, offcanvasComponent);\n          if (that) that.hide();\n        }\n        if (backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, hasFade, true);\n          } else {\n            toggleOverlayType(true);\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n          setTimeout(() => beforeModalShow(this), overlayDelay);\n        } else {\n          beforeModalShow(this);\n          /* istanbul ignore else */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideModalEvent);\n\n      if (!hideModalEvent.defaultPrevented) {\n        removeClass(element, showClass);\n        setAttribute(element, ariaHidden, 'true');\n        removeAttribute(element, ariaModal);\n\n        /* istanbul ignore else */\n        if (hasFade) {\n          emulateTransitionEnd(element, () => beforeModalHide(this));\n        } else {\n          beforeModalHide(this);\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, modalDialog } = clone;\n    const callback = () => setTimeout(() => super.dispose(), 17);\n    toggleModalHandler(clone);\n\n    // use transitionend callback\n    this.hide();\n    /* istanbul ignore else */\n    if (hasClass(element, 'fade')) {\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the `click` event listeners.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true*, listeners are added\n */\nconst toggleOffcanvasEvents = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  self.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler as EventListener));\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler as EventListener);\n  action(doc, mouseclickEvent, offcanvasDismissHandler as EventListener);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => hideOffcanvasComplete(self));\n  } else hideOffcanvasComplete(self);\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options, triggers } = self;\n    const { backdrop } = options;\n    const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n    const selection = getDocument(element).getSelection();\n\n    /* istanbul ignore else: a filter is required here */\n    if (!overlay.contains(target as HTMLElement) || backdrop !== 'static') {\n      /* istanbul ignore else */\n      if (\n        !(selection && selection.toString().length) &&\n        ((!element.contains(target as HTMLElement) &&\n          backdrop &&\n          /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n          (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n      ) {\n        self.relatedTarget =\n          offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n        self.hide();\n      }\n\n      /* istanbul ignore next */\n      if (trigger && trigger.tagName === 'A') e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (self.options.keyboard && code === keyEscape) {\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleOffcanvasEvents(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showOffcanvasEvent);\n\n      if (!showOffcanvasEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getOffcanvasInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, modalComponent);\n          if (that) that.hide();\n        }\n\n        if (options.backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, true);\n          } else {\n            toggleOverlayType();\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n        } else {\n          beforeOffcanvasShow(this);\n          /* istanbul ignore next - this test was done on Modal */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideOffcanvasEvent);\n      if (!hideOffcanvasEvent.defaultPrevented) {\n        addClass(element, offcanvasTogglingClass);\n        removeClass(element, showClass);\n        beforeOffcanvasHide(this);\n      }\n    }\n  }\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, options } = clone;\n    const delay = options.backdrop ? getElementTransitionDuration(overlay) : /* istanbul ignore next */ 0;\n    const callback = () => setTimeout(() => super.dispose(), delay + 17);\n    toggleOffcanvasEvents(clone);\n\n    this.hide();\n    if (hasClass(element, showClass)) {\n      emulateTransitionEnd(element, callback);\n      /* istanbul ignore next */\n    } else {\n      callback();\n    }\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  toLowerCase,\n  createCustomEvent,\n  dispatchEvent,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\nimport type { TooltipEvent } from '../interface/tooltip';\nimport type { PopoverEvent } from '../interface/popover';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n\n  /* istanbul ignore else */\n  if (tooltip) {\n    const tipPositions = { ...tipClassPositions };\n    const RTL = isRTL(element);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      // top: '0px', left: '0px', right: '', bottom: '',\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    const isPopover = self.name === popoverComponent;\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n    const parentPosition = getElementStyle(container as HTMLElement, 'position');\n    const fixedParent = parentPosition === 'fixed';\n    const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n    const leftBoundry = RTL && fixedParent ? /* istanbul ignore next */ scrollbarWidth : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = getBoundingClientRect(element, true);\n    const { x, y } = {\n      x: elemRectLeft,\n      y: elemRectTop,\n    };\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = '';\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = '';\n    let arrowTop: number | string = '';\n    let arrowLeft: number | string = '';\n    let arrowRight: number | string = '';\n\n    const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n    const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = ['left', 'right'];\n    const verticals = ['top', 'bottom'];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n    // recompute placement\n    placement = placement === 'top' && topExceed ? 'bottom' : placement;\n    placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n    placement = placement === 'left' && leftExceed ? 'right' : placement;\n    placement = placement === 'right' && rightExceed ? /* istanbul ignore next */ 'left' : placement;\n\n    // update tooltip/popover class\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n    }\n\n    // compute tooltip / popover coordinates\n    /* istanbul ignore else */\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === 'left') {\n        // LEFT\n        leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n      } else {\n        // RIGHT\n        leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = y;\n        bottomPosition = '';\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = y - tipHeight + elemHeight;\n        bottomPosition = '';\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = y - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === '' ? '' : `${bottomPosition}px`,\n      left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== '' ? `${rightPosition}px` : '',\n    });\n\n    // update arrow placement\n    /* istanbul ignore else */\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== '') {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== '') {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== '') {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`updated.bs.${toLowerCase(self.name)}`);\n    dispatchEvent(element, updatedTooltipEvent);\n  }\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","import { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: HTMLElement, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore else */\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    : /* istanbul ignore next */ undefined;\n\n  const { tooltip } = self;\n  /* istanbul ignore else */\n  if (tooltip) {\n    // set id and role attributes\n    setAttribute(tooltip, 'id', id);\n    setAttribute(tooltip, 'role', tooltipString);\n\n    const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n    const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n    const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n    // set arrow and enable access for styleTip\n    self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n    const { arrow } = self;\n\n    if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n    else {\n      const tempTitle = createElement('div') as HTMLElement;\n      setHtml(tempTitle, title, sanitizeFn);\n      titleParts = [...[...tempTitle.childNodes]];\n    }\n\n    if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n    else {\n      const tempContent = createElement('div') as HTMLElement;\n      setHtml(tempContent, content, sanitizeFn);\n      contentParts = [...[...tempContent.childNodes]];\n    }\n\n    // set dismissible button\n    if (dismissible) {\n      if (title) {\n        if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          titleParts = [...titleParts, tempBtn.firstChild as Node];\n        }\n      } else {\n        /* istanbul ignore else */\n        if (tooltipHeader) tooltipHeader.remove();\n        if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          contentParts = [...contentParts, tempBtn.firstChild as Node];\n        }\n      }\n    }\n\n    // fill the template with content from options / data attributes\n    // also sanitize title && content\n    /* istanbul ignore else */\n    if (!isTooltip) {\n      /* istanbul ignore else */\n      if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n      /* istanbul ignore else */\n      if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n      // set btn\n      self.btn = querySelector('.btn-close', tooltip) || undefined;\n    } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n    // Bootstrap 5.2.x\n    // addClass(tooltip, 'position-absolute');\n    addClass(tooltip, 'position-fixed');\n    addClass(arrow, 'position-absolute');\n\n    // set popover animation and placement\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n    /* istanbul ignore else */\n    if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n    /* istanbul ignore else */\n    if (customClass && !hasClass(tooltip, customClass)) {\n      addClass(tooltip, customClass);\n    }\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n  }\n};\n\nexport default createTip;\n","import { getDocument, isShadowRoot, isTableElement, getParentNode, getElementStyle } from '@thednp/shorty';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = ['HTML', 'BODY'];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, 'position') !== 'relative' &&\n        containers.slice(i + 1).every(r => getElementStyle(r as HTMLElement, 'position') === 'static')\n      ) {\n        return c;\n      }\n      return null;\n    }) || /* istanbul ignore next: optional guard */ getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementStyle,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip as HTMLElement, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container, offsetParent } = self;\n\n  return tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  toggleTooltipHandlers(self);\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n\n  [scrollEvent, resizeEvent].forEach(ev => {\n    action(getWindow(element), ev, self.update, passiveHandler);\n  });\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  // btn is only for dismissible popover\n  const { element, options, btn } = self;\n  const { trigger } = options;\n  const isPopover = self.name !== tooltipComponent;\n  const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n  /* istanbul ignore else */\n  if (!trigger.includes('manual')) {\n    self.enabled = !!add;\n\n    const triggerOptions = trigger.split(' ');\n\n    triggerOptions.forEach(tr => {\n      /* istanbul ignore else */\n      if (tr === mousehoverEvent) {\n        action(element, mousedownEvent, self.handleShow);\n        action(element, mouseenterEvent, self.handleShow);\n\n        /* istanbul ignore else */\n        if (!dismissible) {\n          action(element, mouseleaveEvent, self.handleHide);\n          action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n        }\n      } else if (tr === mouseclickEvent) {\n        action(element, tr, !dismissible ? self.toggle : self.handleShow);\n      } else if (tr === focusEvent) {\n        action(element, focusinEvent, self.handleShow);\n        /* istanbul ignore else */\n        if (!dismissible) action(element, focusoutEvent, self.handleHide);\n        /* istanbul ignore else */\n        if (isApple) {\n          action(element, mouseclickEvent, self.handleFocus);\n        }\n      }\n      /* istanbul ignore else */\n      if (dismissible && btn) {\n        action(btn, mouseclickEvent, self.handleHide);\n      }\n    });\n  }\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, container, offsetParent } = self;\n  const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  const win = getWindow(element);\n  const overflow = offsetHeight !== scrollHeight;\n  const scrollTarget = container === offsetParent && overflow ? container : win;\n  action(scrollTarget, resizeEvent, self.update, passiveHandler);\n  action(scrollTarget, scrollEvent, self.update, passiveHandler);\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content || getAttribute(element, titleAtt[0]) || /* istanbul ignore next */ '',\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if (!((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      // reset default options\n      ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n      // set title attributes and add event listeners\n      /* istanbul ignore else */\n      if (hasAttribute(element, titleAttr) && isTooltip && typeof options.title === 'string') {\n        toggleTooltipTitle(this, options.title);\n      }\n\n      // set containers\n      this.container = getElementContainer(element);\n      this.offsetParent = ['sticky', 'fixed'].some(\n        position => getElementStyle(this.container as HTMLElement, 'position') === position,\n      )\n        ? (this.container as HTMLElement)\n        : getDocument(this.element).body;\n\n      // create tooltip here\n      createTip(this);\n\n      // attach events\n      toggleTooltipHandlers(this, true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  handleFocus = () => focus(this.element);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, tipContainer);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            /* istanbul ignore else */\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            else tooltipShownAction(this);\n          }\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip<Tooltip>(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      toggleTooltipHandlers(this, true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasTip(this) && animation) {\n        this.hide();\n        emulateTransitionEnd(tooltip, () => toggleTooltipHandlers(this));\n      } else {\n        toggleTooltipHandlers(this);\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore else */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () => setTimeout(() => disposeTooltipComplete(clone, () => super.dispose()), 17);\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip as HTMLElement, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  // ObjectAssign,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget ? getScrollHeight(scrollTarget) : /* istanbul ignore next */ scrollHeight;\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n/**\n * Toggles on/off the component event listener.\n *\n * @param self the `ScrollSpy` instance\n * @param add when `true`, listener is added\n */\nconst toggleSpyHandlers = (self: ScrollSpy, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.scrollTarget as EventTarget, scrollEvent, self.refresh, passiveHandler);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (this.target) {\n      // set initial state\n      this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n      this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n      // add event handlers\n      toggleSpyHandlers(this, true);\n\n      this.refresh();\n    }\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore else */\n    if (isHTMLElement(target) && target.offsetHeight > 0) {\n      updateSpyTargets(this);\n\n      const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n      if (scrollTop >= maxScroll) {\n        const newActiveItem = items[itemsLength - 1];\n\n        /* istanbul ignore else */\n        if (activeItem !== newActiveItem) {\n          activate(this, newActiveItem);\n        }\n        return;\n      }\n\n      const { offsets } = this;\n\n      if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n        this.activeItem = null;\n        if (target) clear(target);\n        return;\n      }\n\n      items.forEach((item, i) => {\n        if (\n          activeItem !== item &&\n          scrollTop >= offsets[i] &&\n          (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n        ) {\n          activate(this, item);\n        }\n      });\n    }\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    toggleSpyHandlers(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  // ObjectAssign,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || /* istanbul ignore next */ {\n      currentHeight: 0,\n      nextHeight: 0,\n    };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n\n  if (!showTabEvent.defaultPrevented) {\n    if (nextContent) addClass(nextContent, activeClass);\n    if (content) removeClass(content, activeClass);\n\n    /* istanbul ignore else */\n    if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n      const nextHeight = nextContent.scrollHeight;\n      tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n      addClass(tabContent, collapsingClass);\n      tabContent.style.height = `${currentHeight}px`;\n      reflow(tabContent);\n      [content, nextContent].forEach(c => {\n        if (c) removeClass(c, 'overflow-hidden');\n      });\n    }\n\n    if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n      setTimeout(() => {\n        addClass(nextContent, showClass);\n        emulateTransitionEnd(nextContent, () => {\n          triggerTabShow(self);\n        });\n      }, 1);\n    } else {\n      if (nextContent) addClass(nextContent, showClass);\n      triggerTabShow(self);\n    }\n\n    if (tab) dispatchEvent(tab, hiddenTabEvent);\n  }\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  /* istanbul ignore next */\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Tab` instance\n * @param add when `true`, event listener is added\n */\nconst toggleTabHandler = (self: Tab, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, tabClickHandler);\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.preventDefault();\n    self.show();\n  }\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    /* istanbul ignore else */\n    if (content) {\n      const nav = closest(element, '.nav');\n      const container = closest(content, '.tab-content');\n\n      this.nav = nav;\n      this.content = content;\n      this.tabContent = container;\n\n      // event targets\n      this.dropdown = getParentDropdown(element);\n\n      // show first Tab instance of none is shown\n      // suggested on #432\n      const { tab } = getActiveTab(this);\n      if (nav && !tab) {\n        const firstTab = querySelector(tabSelector, nav);\n        const firstTabContent = firstTab && getTargetElement(firstTab);\n\n        /* istanbul ignore else */\n        if (firstTabContent) {\n          addClass(firstTab, activeClass);\n          addClass(firstTabContent, showClass);\n          addClass(firstTabContent, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n        }\n      }\n\n      // add event listener\n      toggleTabHandler(this, true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      /* istanbul ignore else */\n      if (isHTMLElement(tab)) {\n        dispatchEvent(tab as EventTarget, hideTabEvent);\n        /* istanbul ignore else */\n        if (!hideTabEvent.defaultPrevented) {\n          addClass(element, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n\n          const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n          if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n            removeClass(activeDropdown, activeClass);\n          }\n\n          /* istanbul ignore else */\n          if (nav) {\n            const toggleTab = () => {\n              if (tab) {\n                removeClass(tab, activeClass);\n                setAttribute(tab, ariaSelected, 'false');\n              }\n              if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n            };\n\n            if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n              Timer.set(nav, toggleTab, 1);\n            } else toggleTab();\n          }\n\n          if (content) {\n            removeClass(content, showClass);\n            if (hasClass(content, fadeClass)) {\n              emulateTransitionEnd(content, () => triggerTabHide(this));\n            } else {\n              triggerTabHide(this);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    toggleTabHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  // ObjectAssign,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Toast` instance\n * @param add when `true`, it will add the listener\n */\nconst toggleToastHandlers = (self: Toast, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, triggers, dismiss, options, hide } = self;\n\n  /* istanbul ignore else */\n  if (dismiss) {\n    action(dismiss, mouseclickEvent, hide);\n  }\n\n  /* istanbul ignore else */\n  if (options.autohide) {\n    [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n      action(element, e, interactiveToastHandler as EventListener),\n    );\n  }\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n  }\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  toggleToastHandlers(self);\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.show();\n  }\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore else: a solid filter is required */\n  if (self && element !== relatedTarget && !element.contains(relatedTarget as Node)) {\n    if ([mouseenterEvent, focusinEvent].includes(type)) {\n      Timer.clear(element, toastString);\n    } else {\n      Timer.set(element, () => self.hide(), self.options.delay, toastString);\n    }\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    toggleToastHandlers(this, true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (!showToastEvent.defaultPrevented) {\n        showToast(this);\n      }\n    }\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (!hideToastEvent.defaultPrevented) {\n        hideToast(this);\n      }\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\n[Alert, Button, Carousel, Collapse, Dropdown, Modal, Offcanvas, Popover, ScrollSpy, Tab, Toast, Tooltip].forEach(c =>\n  componentsList.set(c.prototype.name, c),\n);\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  componentsList.forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach(comp => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n"],"names":["e","f","c","i","s","o","a","r","E","d","g","M","me","ge","Ee","ye","we","Ae","P","$","_","tt","st","rt","it","lt","pt","ft","mt","St","Nt","kt","Ct","zt","Vt","Ce","Re","Qe","qe","Ge","Ze","Rt","Qt","C","F","qt","A","Gt","S","z","x","gn","jt","n","Jt","Kt","Xt","Yt","Mn","kn","Dn","Ln","On","In","v","u","O","Bn","N","W","R","k","Zt","Q","ee","ne","Un","l","Rn","V","w","oe","Qn","p","y","q","Gn","Jn","Kn","Xn","Yn","I","se","m","Zn","h","_n","T","ce","no","B","H","b","ae","so","ie","ao","lo","Eo","bo","yo","le","wo","de","Mo","No","ko","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","version","BaseComponent","target","config","element","querySelector","isString","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","that","toggleAlertHandler","dispatchEvent","add","action","addListener","removeListener","dismiss","close","mouseclickEvent","__publicField","hasClass","removeClass","emulateTransitionEnd","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","toggleButtonHandler","self","isActive","getAttribute","addClass","setAttribute","ariaPressed","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","closest","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","keyArrowRight","keyArrowLeft","carouselDragHandler","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","_a","activateCarouselIndicator","pointermoveEvent","passiveHandler","pointerupEvent","toggleCarouselHandlers","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","touchstartEvent","dragstartEvent","arrow","indicator","keydownEvent","isHTMLElement","getElementsByClassName","activeIndex","transitionItem","matches","ar","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","isAnimating","clone","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","toggleCollapseHandler","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","toggleDropdownHandler","dropdownClickHandler","getCurrentOpenDropdown","currentParent","type","isForm","mousedownEvent","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","pad","padStyle","toggleModalDismiss","update","modalDismissHandler","modalKeyHandler","toggleModalHandler","modalClickHandler","afterModalHide","relatedTarget","focusElement","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","_b","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","callback","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffcanvasEvents","offcanvasTriggerHandler","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offCanvasDismiss","selection","visibleTrigger","delay","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","toLowerCase","tooltipDefaults","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","isFunction","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","offsetParent","ariaDescribedBy","hasTip","disposeTooltipComplete","toggleTooltipHandlers","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","tr","mousehoverEvent","focusinEvent","focusoutEvent","isApple","toggleTooltipOpenHandlers","offsetHeight","parentModal","parentOffcanvas","win","scrollTarget","titleAtt","tipComponent","elem","getUID","position","outTimer","tipContainer","showTooltipEvent","hideTooltipEvent","enabled","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","itemsLength","isWin","isWindow","links","getElementsByTagName","scrollHEIGHT","getScrollHeight","href","targetItem","rect","getOffsetHeight","link","clear","item","activate","parents","parentItem","menuItem","parentLink","toggleSpyHandlers","scrollTop","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","toggleTabHandler","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toggleToastHandlers","hide","interactiveToastHandler","toastClickHandler","completeDisposeToast","isShown","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","cs","init","selector","removeDataAPI","comp"],"mappings":";;;AAAA,MAAMA,KAAI,CAAE,GAAEC,KAAI,CAAC,MAAM;AACvB,QAAM,EAAE,MAAMC,GAAG,eAAeC,EAAC,IAAK;AACtC,GAAC,GAAGH,GAAEE,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAGE,CAAC,MAAM;AAC5B,IAAAD,MAAM,KAAK,CAAC,GAAGC,CAAC,EAAE,QAAQ,CAAC,CAACC,GAAGC,CAAC,MAAM;AACpC,MAAAD,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,OAAOC,KAAK,YAAYA,EAAE,QAAQC,EAAE,GAAGL,GAAGG,GAAGC,CAAC;AAAA,IACrE,CAAK;AAAA,EACL,CAAG;AACH,GAAGE,IAAI,CAAC,GAAGN,GAAGC,GAAG,MAAM;AACrB,EAAAH,GAAEE,CAAC,MAAMF,GAAEE,CAAC,IAAoB,oBAAI,IAAG;AACvC,QAAME,IAAIJ,GAAEE,CAAC;AACb,EAAAE,EAAE,IAAI,CAAC,KAAKA,EAAE,IAAI,GAAmB,oBAAI,IAAG,CAAE;AAC9C,QAAMC,IAAID,EAAE,IAAI,CAAC,GAAG,EAAE,MAAME,EAAG,IAAGD;AAClC,EAAAA,EAAE,IAAIF,GAAG,CAAC,GAAGG,KAAK,EAAE,iBAAiBJ,GAAGD,IAAG,CAAC;AAC9C,GAAGM,IAAI,CAAC,GAAGL,GAAGC,GAAG,MAAM;AACrB,QAAMC,IAAIJ,GAAEE,CAAC,GAAGG,IAAID,KAAKA,EAAE,IAAI,CAAC,GAAGE,IAAID,KAAKA,EAAE,IAAIF,CAAC,GAAGM,IAAIH,MAAM,SAASA,IAAI;AAC7E,EAAAD,KAAKA,EAAE,IAAIF,CAAC,KAAKE,EAAE,OAAOF,CAAC,GAAGC,MAAM,CAACC,KAAK,CAACA,EAAE,SAASD,EAAE,OAAO,CAAC,IAAI,CAACA,KAAK,CAACA,EAAE,SAAS,OAAOJ,GAAEE,CAAC,IAAI,CAACG,KAAK,CAACA,EAAE,SAAS,EAAE,oBAAoBH,GAAGD,IAAGQ,CAAC;AACrJ,GAAGC,KAAIF,GAAGG,KAAIJ;;;;;;;;8CChBsCK,KAAK,oBAAoBC,KAAK,iBAAuCC,KAAK,eAA0DC,KAAK,cAAcC,KAAK,gBAAgBC,KAAK,iBAAwLC,KAAI,oBAAuDC,KAAI,SAASC,KAAI,WAAWC,KAAK,YAA0EC,KAAK,WAA4BC,KAAK,SAAsBC,IAAK,SAA0BC,KAAK,aAA6BC,KAAK,SAASC,KAAK,cAAcC,KAAK,cAAmKC,KAAK,eAAoCC,KAAK,eAAeC,KAAK,aAAoDC,KAAK,UAA+DC,KAAK,UAAyBC,KAAK,cAmDtlCC,KAAK,aAoDNC,KAAK,aAAaC,KAAK,WAAWC,KAAK,aAAaC,KAAK,cAA8FC,KAAK,UAAyMC,KAAK,sBAAsBC,KAAK,mBAAmBC,KAAI,iBAAiBC,KAAI,sBA0B1VC,KAAK,UAAU,eAAeC,KAAID,IAAI,EAAE,WAAWE,GAAE,IAAK,WAAWC,KAAID,IAAIE,KAAI;AAEvLH,KAAQA,GAAE,OAAO,KAAK,CAAC,MAAMG,GAAE,KAAK,EAAE,KAAK,CAAC,IAAQA,GAAE,KAAKD,EAAC;AACvD,MAASE,KAAI,sBAAsBC,KAAKL,KAAIA,GAAE,OAAO,KAAK,CAAC,MAAMI,GAAE,KAAK,EAAE,KAAK,CAAC;AAAA;AAAA,EAEnFA,GAAE,KAAKF,EAAC;AAAA;AACFA,MAAIA,GAAE,SAAS,SAAS;AAG7B,MAAA,EAAE,MAAMrC,OAAM;AAAe,CAAC,qBAAqB,aAAa,EAAE,KAAK,CAAC,MAAM,KAAKA,GAAE,KAAK;AAAG,MAAAyC,KAAK,CAAC,GAAG,GAAGC,GAAGhD,MAAM;AACnH,QAAMD,IAAIC,KAAK;AACf,IAAE,iBAAiB,GAAGgD,GAAGjD,CAAC;AAC5B,GAAGkD,KAAK,CAAC,GAAG,GAAGD,GAAGhD,MAAM;AACtB,QAAMD,IAAIC,KAAK;AACf,IAAE,oBAAoB,GAAGgD,GAAGjD,CAAC;AAC/B,GAAGmD,KAAK,CAAC,GAAG,GAAGF,GAAGhD,MAAM;AACtB,QAAMD,IAAI,CAACG,MAAM;AACf,KAACA,EAAE,WAAW,KAAKA,EAAE,kBAAkB,OAAO8C,EAAE,MAAM,GAAG,CAAC9C,CAAC,CAAC,GAAG+C,GAAG,GAAG,GAAGlD,GAAGC,CAAC;AAAA,EAChF;AACE,EAAA+C,GAAG,GAAG,GAAGhD,GAAGC,CAAC;AACf,GAAGmD,KAAK,MAAM;AACd;AAAA,CAAS,MAAM;AACb,MAAI,IAAI;AACR,MAAI;AACF,UAAM,IAAI,OAAO,eAAe,CAAA,GAAI,WAAW;AAAA,MAC7C,KAAK,OAAO,IAAI,IAAI;AAAA,IAC1B,CAAK;AACD,IAAAD,GAAG,UAAUrC,IAAGsC,IAAI,CAAC;AAAA,EACzB,QAAI;AAAA,EACD;AACD,SAAO;AACT,GAAI;AAAO,CAAC,mBAAmB,WAAW,EAAE,KAAK,CAAC,MAAM,KAAK7C,GAAE,KAAK;AAC9B,CAAC,mBAAmB,WAAW,EAAE,KAAK,CAAC,MAAM,KAAKA,GAAE,KAAK;AAAQ,CAAC,oBAAoB,YAAY,EAAE,KAAK,CAAC,MAAM,KAAKA,GAAE,KAAK;AAAE,MAAC8C,KAAK,CAAC,GAAG,MAAM,EAAE,aAAa,CAAC,GAA6CC,KAAK,CAAC,GAAG,MAAM,EAAE,aAAa,CAAC,GAA6CC,IAAK,CAAC,GAAG,GAAGN,MAAM,EAAE,aAAa,GAAGA,CAAC,GAAmDO,KAAK,CAAC,GAAG,MAAM,EAAE,gBAAgB,CAAC,GAAgDC,IAAK,CAAC,MAAM,MAAM;AACvf,IAAE,UAAU,IAAI,GAAG,CAAC;AACtB,GAAGC,IAAK,CAAC,MAAM,MAAM;AACnB,IAAE,UAAU,OAAO,GAAG,CAAC;AACzB,GAAGC,IAAK,CAAC,GAAG,MAAM,EAAE,UAAU,SAAS,CAAC,GAA2FC,KAAI,CAAC,MAAM,KAAK,QAAQ,OAAO,KAAK,YAAY,IAAI7D,IAAI,CAAC,MAAM6D,GAAE,CAAC,KAAK,OAAO,EAAE,YAAY,YAAY,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE,KAAK,CAAC,MAAM,EAAE,aAAa,CAAC,KAAK,IAAIC,IAAI,CAAC,MAAM9D,EAAE,CAAC,KAAK,EAAE,aAAa,KAAK,IAAIK,KAAoB,oBAAI,IAAK,GAAE0D,KAAI;AAAA,EAChY,MAAM1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQN,KAAK,CAAC,GAAG,GAAG6C,MAAM;AAChB,IAAKY,EAAE,CAAC,MAERzD,GAAE,IAAI,CAAC,KAAKA,GAAE,IAAI,GAAmB,oBAAI,IAAK,CAAA,GAAGA,GAAE,IAAI,CAAC,EAAE,IAAI,GAAG6C,CAAC;AAAA,EACnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,WAAW,CAAC,MAAM7C,GAAE,IAAI,CAAC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ9B,KAAK,CAAC,GAAG,MAAM;AACb,QAAI,CAACyD,EAAE,CAAC,KAAK,CAAC;AACZ,aAAO;AACT,UAAMZ,IAAIa,GAAE,UAAU,CAAC;AACvB,WAAO,KAAKb,KAAKA,EAAE,IAAI,CAAC,KAAK;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,QAAQ,CAAC,GAAG,MAAM;AAChB,UAAMA,IAAIa,GAAE,UAAU,CAAC;AACvB,KAACb,KAAK,CAACY,EAAE,CAAC,MAAMZ,EAAE,OAAO,CAAC,GAAGA,EAAE,SAAS,KAAK7C,GAAE,OAAO,CAAC;AAAA,EACxD;AACH,GAAG2D,IAAK,CAAC,GAAG,MAAMD,GAAE,IAAI,GAAG,CAAC,GAAGE,KAAI,CAAC,MAAM,OAAO,KAAK,YAAY,IAAIC,KAAI,CAAC,MAAML,GAAE,CAAC,KAAK,EAAE,YAAY,SAAS,YAAY,IAAIM,KAAI,CAAC,MAAMnE,EAAE,CAAC,KAAK,EAAE,aAAa,KAAK,IAAIM,IAAI,CAAC,MAAM4D,GAAE,CAAC,IAAI,EAAE,WAAWC,GAAE,CAAC,IAAI,IAAInE,EAAE,CAAC,IAAI,EAAE,gBAAgB,OAAO,UAAUoE,KAAI,CAAC,MAAM,MAAM,OAAO,OAAO,GAAG,GAAG,CAAC,GAAGC,KAAK,CAAC,MAAM;AAClT,MAAI,CAAC;AACH;AACF,MAAIJ,GAAE,CAAC;AACL,WAAO3D,EAAG,EAAC,cAAc,CAAC;AAC5B,QAAM,EAAE,SAAS,EAAG,IAAG,GAAG4C,IAAImB,GAAG,CAAC;AAClC,MAAI,CAACnB;AACH;AACF,QAAMhD,IAAI,EAAE,GAAG;AACf,SAAO,OAAOA,EAAE,SAASkE,GAAElB,GAAGhD,CAAC;AACjC,GAUGoE,IAAI,CAAC,GAAG,MAAM,EAAE,cAAc,CAAC,GAAyC/D,IAAI,CAAC,GAAG,MAAM;AACvF,QAAM2C,IAAI,iBAAiB,CAAC,GAAGhD,IAAI,EAAE,QAAQ,UAAU,QAAQ,EAAE,QAAQ,YAAY,KAAK,EAAE,YAAW;AACvG,SAAOgD,EAAE,iBAAiBhD,CAAC;AAC7B,GA8BGqE,KAAK,CAAC,MAAM;AACb,QAAM,IAAIhE,EAAE,GAAGkC,EAAC,GAAGS,IAAI3C,EAAE,GAAGgC,EAAE,GAAGrC,IAAIgD,EAAE,SAAS,IAAI;AAAA;AAAA,IAElD;AAAA,MACE,KAAKjD,IAAI,KAAK,MAAM,SAAS,WAAWiD,CAAC,IAAIhD;AAAA;AAAA,IAE/C;AAAA;AAEF,SAAO,OAAO,MAAMD,CAAC;AAAA;AAAA,IAEnB;AAAA,MACEA;AACN,GAAGuE,KAAK,CAAC,MAAM;AACb,QAAM,IAAIjE,EAAE,GAAGkC,EAAC,GAAGS,IAAI3C,EAAE,GAAG+B,EAAE,GAAGpC,IAAIgD,EAAE,SAAS,IAAI;AAAA;AAAA,IAElD;AAAA,MACE,KAAKjD,IAAI,KAAK,MAAM,SAAS,WAAWiD,CAAC,IAAIhD;AAAA;AAAA,IAE/C;AAAA;AAEF,SAAO,OAAO,MAAMD,CAAC;AAAA;AAAA,IAEnB;AAAA,MACEA;AACN,GAAGwE,IAAK,CAAC,GAAG,MAAM;AAChB,MAAIvB,IAAI;AACR,QAAMhD,IAAI,IAAI,MAAMsC,EAAC,GAAGvC,IAAIuE,GAAG,CAAC,GAAGpE,IAAImE,GAAG,CAAC;AAC3C,MAAItE,GAAG;AACL,UAAME,IAAI,CAACuE,MAAM;AACf,MAAAA,EAAE,WAAW,MAAM,EAAE,MAAM,GAAG,CAACA,CAAC,CAAC,GAAG,EAAE,oBAAoBlC,IAAGrC,CAAC,GAAG+C,IAAI;AAAA,IAC3E;AACI,MAAE,iBAAiBV,IAAGrC,CAAC,GAAG,WAAW,MAAM;AACzC,MAAA+C,KAAKoB,EAAE,GAAGpE,CAAC;AAAA,IACjB,GAAOD,IAAIG,IAAI,EAAE;AAAA;AAEb,MAAE,MAAM,GAAG,CAACF,CAAC,CAAC;AAClB,GAA+FyE,KAAK,CAAC,GAAG,MAAM,EAAE,MAAM,CAAC,GAAGC,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,IAAI,KAAK,CAAC,SAAS,EAAE,EAAE,SAAS,CAAC,IAAI,KAAK,CAAC,QAAQ,IAAI,MAAM,MAAM,EAAE,SAAS,CAAC,IAAI,OAAO,MAAM,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,GAAGC,KAAI,CAAC,MAAM,OAAO,QAAQ,CAAC,GAAGC,KAAK,CAAC,MAAM,EAAE,YAAW,GAAIC,KAAK,CAAC,GAAG,GAAG7B,GAAGhD,MAAM;AAC5W,QAAMD,IAAI,EAAE,GAAGiD,EAAG,GAAE9C,IAAI,EAAE,GAAG,EAAE,QAAS,GAAED,IAAI,EAAE,GAAG,EAAG,GAAEuE,IAAI,CAAE,GAAEM,IAAI;AACpE,SAAOH,GAAEzE,CAAC,EAAE,QAAQ,CAAC,CAACL,GAAGD,CAAC,MAAM;AAC9B,UAAMmF,IAAI/E,KAAK,OAAOH,KAAK,YAAYA,EAAE,SAASG,CAAC,IAAIH,EAAE,QAAQG,GAAG,EAAE,EAAE,QAAQ,UAAU,CAACgF,MAAMJ,GAAGI,CAAC,CAAC,IAAInF;AAC1G,IAAA2E,EAAEO,CAAC,IAAIL,GAAE9E,CAAC;AAAA,EACd,CAAG,GAAG+E,GAAE5E,CAAC,EAAE,QAAQ,CAAC,CAACF,GAAGD,CAAC,MAAM;AAC3B,IAAAG,EAAEF,CAAC,IAAI6E,GAAE9E,CAAC;AAAA,EACd,CAAG,GAAG+E,GAAE,CAAC,EAAE,QAAQ,CAAC,CAAC9E,GAAGD,CAAC,MAAM;AAC3B,IAAAC,KAAKE,IAAIE,EAAEJ,CAAC,IAAIE,EAAEF,CAAC,IAAIA,KAAK2E,IAAIvE,EAAEJ,CAAC,IAAI2E,EAAE3E,CAAC,IAAII,EAAEJ,CAAC,IAAIA,MAAMiF,IAAI1B,GAAG,GAAG0B,CAAC,IAAIlF;AAAA,EAC3E,CAAA,GAAGK;AACN,GAA2DgF,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,GAAiCC,IAAK,CAAC,GAAG,MAAM;AAClI,QAAMlC,IAAI,IAAI,YAAY,GAAG;AAAA,IAC3B,YAAY;AAAA,IACZ,SAAS;AAAA,EACb,CAAG;AACD,SAAOW,GAAE,CAAC,KAAKO,GAAElB,GAAG,CAAC,GAAGA;AAC1B,GAAGmC,KAAK,EAAE,SAAS,GAAE,GAAIC,KAAK,CAAC,MAAM,EAAE,cAAcC,IAAK,CAAC,GAAG,MAAM;AAClE,EAAAV,GAAE,CAAC,EAAE,QAAQ,CAAC,CAAC3B,GAAGhD,CAAC,MAAM;AACvB,QAAIA,KAAK+D,GAAEf,CAAC,KAAKA,EAAE,SAAS,IAAI;AAC9B,QAAE,MAAM,YAAYA,GAAGhD,CAAC;AAAA,SACrB;AACH,YAAMD,IAAI,CAAA;AACV,MAAAA,EAAEiD,CAAC,IAAIhD,GAAGkE,GAAE,EAAE,OAAOnE,CAAC;AAAA;AAAA,EAE5B,CAAG;AACH,GAAGuF,KAAI,CAAC,MAAM3B,GAAE,CAAC,KAAK,EAAE,YAAY,SAAS,SAAS,IAAI4B,KAAK,CAAC,MAAM,OAAO,KAAK,YAAY,IAAIC,KAAoB,oBAAI,IAAK,GAAEC,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASpI,KAAK,CAAC,GAAG,GAAGzC,GAAGhD,MAAM;AACnB,IAAA4D,EAAE,CAAC,MAAM5D,KAAKA,EAAE,UAAUwF,GAAE,IAAI,CAAC,KAAKA,GAAE,IAAI,GAAmB,oBAAI,IAAK,CAAA,GAAGA,GAAE,IAAI,CAAC,EAAE,IAAIxF,GAAG,WAAW,GAAGgD,CAAC,CAAC,KAAKwC,GAAE,IAAI,GAAG,WAAW,GAAGxC,CAAC,CAAC;AAAA,EAC1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,KAAK,CAAC,GAAG,MAAM;AACb,QAAI,CAACY,EAAE,CAAC;AACN,aAAO;AACT,UAAMZ,IAAIwC,GAAE,IAAI,CAAC;AACjB,WAAO,KAAKxC,KAAKsC,GAAEtC,CAAC,IAAIA,EAAE,IAAI,CAAC;AAAA,IAC/B,OAAOuC,GAAGvC,CAAC,IAAIA,IAAI;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,OAAO,CAAC,GAAG,MAAM;AACf,QAAI,CAACY,EAAE,CAAC;AACN;AACF,UAAMZ,IAAIwC,GAAE,IAAI,CAAC;AACjB,SAAK,EAAE,UAAUF,GAAEtC,CAAC,KAAK,aAAaA,EAAE,IAAI,CAAC,CAAC,GAAGA,EAAE,OAAO,CAAC,GAAGA,EAAE,SAAS,KAAKwC,GAAE,OAAO,CAAC,MAAM,aAAaxC,CAAC,GAAGwC,GAAE,OAAO,CAAC;AAAA,EAC1H;AACH,GAAgCE,KAAI,CAAC,GAAG,MAAM;AAC5C,QAAM,EAAE,OAAO1C,GAAG,QAAQhD,GAAG,KAAKD,GAAG,OAAOG,GAAG,QAAQD,GAAG,MAAMuE,EAAC,IAAK,EAAE;AACxE,MAAIM,IAAI,GAAGjF,IAAI;AACf,MAAI,KAAK+D,EAAE,CAAC,GAAG;AACb,UAAM,EAAE,aAAahE,GAAG,cAAcmF,EAAC,IAAK;AAC5C,IAAAD,IAAIlF,IAAI,IAAI,KAAK,MAAMoD,CAAC,IAAIpD;AAAA;AAAA,MAE1B;AAAA,OACCC,IAAIkF,IAAI,IAAI,KAAK,MAAM/E,CAAC,IAAI+E;AAAA;AAAA,MAE7B;AAAA;AAAA;AAGJ,SAAO;AAAA,IACL,OAAO/B,IAAI8B;AAAA,IACX,QAAQ9E,IAAIH;AAAA,IACZ,KAAKE,IAAIF;AAAA,IACT,OAAOK,IAAI4E;AAAA,IACX,QAAQ7E,IAAIJ;AAAA,IACZ,MAAM2E,IAAIM;AAAA,IACV,GAAGN,IAAIM;AAAA,IACP,GAAG/E,IAAIF;AAAA,EACX;AACA,GAAG8F,KAAK,CAAC,MAAMvF,EAAE,CAAC,EAAE,MAAMwF,KAAI,CAAC,MAAMxF,EAAE,CAAC,EAAE,iBAGvCyF,KAAK,CAAC,MAAM/F,EAAE,CAAC,KAAK,EAAE,YAAY,SAAS,gBAAgB,IAAIgG,KAAK,CAAC,MAAM,EAAE,aAAa,SAAS,IAAIlC,EAAE,CAAC,KAAK,EAAE;AACpH9D,EAAE,CAAC,KAAK,EAAE;AACV+F,GAAG,CAAC,KAAK,EAAE;AACXD,GAAE,CAAC;AAkBH,IAAIG,KAAI,GAAGC,KAAI;AACV,MAACC,KAAoB,oBAAI,IAAK,GAAEC,KAAK,CAAC,GAAG,MAAM;AAClD,MAAIlD,IAAI,IAAI+C,KAAIC;AAChB,MAAI,GAAG;AACL,UAAMhG,IAAIkG,GAAG,CAAC,GAAGnG,IAAIkG,GAAE,IAAIjG,CAAC,KAAqB,oBAAI;AACrD,IAAAiG,GAAE,IAAIjG,CAAC,KAAKiG,GAAE,IAAIjG,GAAGD,CAAC,GAAGuF,GAAEvF,CAAC,KAAK,CAACA,EAAE,IAAI,CAAC,KAAKA,EAAE,IAAI,GAAGiD,CAAC,GAAG+C,MAAK,KAAK/C,IAAIjD,EAAE,IAAI,CAAC;AAAA,SAC3E;AACL,UAAMC,IAAI,EAAE,MAAM;AAClB,IAAAiG,GAAE,IAAIjG,CAAC,IAAIgD,IAAIiD,GAAE,IAAIjG,CAAC,KAAKiG,GAAE,IAAIjG,GAAGgD,CAAC,GAAGgD,MAAK;AAAA;AAE/C,SAAOhD;AACT,GAAGmD,KAAK,CAAC,MAAM;AACb,MAAI;AACJ,SAAO,IAAIlC,GAAE,CAAC,IAAI,EAAE,cAAcnE,EAAE,CAAC,KAAK,IAAI,KAAK,OAAO,SAAS,EAAE,kBAAkB,OAAO,SAAS,EAAE,cAAc,IAAI;AAC7H,GAAGsG,KAAK,CAAC,MAAM,MAAM,QAAQ,CAAC,KAAK,IAAmLC,KAAK,CAAC,MAAM;AAChO,MAAI,CAACvG,EAAE,CAAC;AACN,WAAO;AACT,QAAM,EAAE,KAAK,GAAG,QAAQkD,EAAG,IAAG0C,GAAE,CAAC,GAAG,EAAE,cAAc1F,EAAG,IAAG4F,GAAE,CAAC;AAC7D,SAAO,KAAK5F,KAAKgD,KAAK;AACxB,GAK0CsD,KAAK,CAAC,MAAM,OAAO,KAAK,cAAc,IAS0FC,KAAK,CAAC,MAAM5C,GAAE,CAAC,KAAK,EAAE,YAAY,SAAS,cAAc,IAAI6C,KAAK,CAAC,MAAMZ,GAAE,CAAC,EAAE,QAAQ,OAAqEa,KAAK,CAAC,MAAM3G,EAAE,CAAC,KAAK,CAAC,SAAS,MAAM,IAAI,EAAE,SAAS,EAAE,QAAQ,KAAK,IAAI4G,IAAK,CAAC,GAAG,MAAM,IAAI,EAAE,QAAQ,CAAC;AACzaA,EAAG,EAAE,YAAW,EAAG,MAAM,CAAC,IAAI,MAAMC,IAAK,CAAC,GAAG,MAAM/C,EAAE,CAAC,IAAI,KAAK9D,EAAE,CAAC,IAAI,IAAIM,EAAG,GAAE,cAAc,CAAC,GAAGwG,KAAK,CAAC,GAAG,OAAO9G,EAAE,CAAC,IAAI,IAAIM,EAAG,GAAE,qBAAqB,CAAC,GAA0FyG,KAAK,CAAC,GAAG,OAAO/G,EAAE,CAAC,IAAI,IAAIM,KAAK,iBAAiB,CAAC,GAAG0G,KAAK,CAAC,GAAG,OAAO,KAAKhH,EAAE,CAAC,IAAI,IAAIM,EAAG,GAAE;AAAA,EACzU;AACF,GAAG2G,KAAK,CAAC,GAAG,MAAM,EAAE,QAAQ,CAAC,GCzbvBC,IAAY,QCAZC,IAAY,QCAZC,KAAgB,mBCFhBC,KAAc,SCAdC,KAAiB,uBCCjBC,KAAUC;ACMhB,MAAqBC,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAQjC,YAAYC,GAA8BC,GAAsB;AACxD,UAAAC,IAAUC,EAAcH,CAAM;AAEpC,QAAI,CAACE;AACC,YAAAE,GAASJ,CAAM,IACX,MAAM,GAAG,KAAK,gBAAgBA,6BAAkC,IAEhE,MAAM,GAAG,KAAK,4DAA4D;AAIpF,UAAMK,IAAeC,GAAK,IAAiBJ,GAAS,KAAK,IAAI;AAE7D,IAAIG,KACFA,EAAa,QAAQ,GAGvB,KAAK,UAAUH,GACf,KAAK,UACH,KAAK,YAAYK,GAAW,KAAK,QAAQ,EAAE,SACvCC,GAAiBN,GAAS,KAAK,UAAUD,KAAU,IAAI,IAAI,IAC3D,IAENK,GAAK,IAAIJ,GAAS,KAAK,MAAM,IAAI;AAAA,EACnC;AAAA;AAAA,EAGA,IAAI,UAAU;AACL,WAAAL;AAAA,EACT;AAAA;AAAA,EAGA,IAAI,OAAO;AACF,WAAA;AAAA,EACT;AAAA;AAAA,EAGA,IAAI,WAAW;AACb,WAAO;EACT;AAAA;AAAA,EAGA,UAAU;AACRS,IAAAA,GAAK,OAAO,KAAK,SAAS,KAAK,IAAI,GACxBC,GAAA,IAAI,EAAE,QAAQ,CAAQE,MAAA;AAC/B,aAAO,KAAKA,CAAI;AAAA,IAAA,CACjB;AAAA,EACH;AACF;ACtCA,MAAMC,KAAgB,IAAIf,MACpBgB,KAAuB,IAAIjB,OAAkBC,QAO7CiB,KAAmB,CAACV,MAAyBW,EAAmBX,GAASN,EAAc,GAKvFkB,KAAoB,CAAIZ,MAAyB,IAAIa,GAAMb,CAAO,GAIlEc,KAAkBC,EAA8B,YAAYtB,IAAa,GACzEuB,KAAmBD,EAA8B,aAAatB,IAAa,GAS3EwB,KAAqB,CAACC,MAAgB;AACpC,QAAA,EAAE,SAAAlB,EAAY,IAAAkB;AACpB,EAAAC,GAAmBD,CAAI,GAEvBE,EAAcpB,GAASgB,EAAgB,GAEvCE,EAAK,QAAQ,GACblB,EAAQ,OAAO;AACjB,GAUMmB,KAAqB,CAACD,GAAaG,MAAkB;AACnD,QAAAC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAAC,GAAS,OAAAC,EAAU,IAAAR;AAEvB,EAAAO,KAAgBH,EAAAG,GAASE,GAAiBD,CAAK;AACrD;AAKA,MAAqBb,WAAchB,GAAc;AAAA,EAM/C,YAAYC,GAA8B;AACxC,UAAMA,CAAM;AAHd,IAAA8B,EAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,EAAA,eAAQ,MAAM;AACN,YAAA,EAAE,SAAA5B,EAAY,IAAA;AAGpB,MAAIA,KAAW6B,EAAS7B,GAAST,CAAS,MACxC6B,EAAcpB,GAASc,EAAe,GAEjCA,GAAgB,qBACnBgB,EAAY9B,GAAST,CAAS,GAE1BsC,EAAS7B,GAASV,CAAS,IAC7ByC,EAAqB/B,GAAS,MAAMiB,GAAmB,IAAI,CAAC,IACvDA,GAAmB,IAAI;AAAA,IAElC;AAhCA,SAAK,UAAUhB,EAAcQ,IAAsB,KAAK,OAAO,GAG/DU,GAAmB,MAAM,EAAI;AAAA,EAC/B;AAAA;AAAA,EAGA,IAAI,OAAO;AACF,WAAAzB;AAAA,EACT;AAAA;AAAA,EA2BA,UAAU;AACR,IAAAyB,GAAmB,IAAI,GACvB,MAAM,QAAQ;AAAA,EAChB;AACF;AAjDES,EADmBf,IACZ,YAAWL,KAClBoB,EAFmBf,IAEZ,QAAOD,KACdgB,EAHmBf,IAGZ,eAAcH;ACjFvB,MAAMsB,IAAc,UCAdC,KAAe,kBCFfC,KAAe,UCAfC,KAAkB,UCuBlBC,KAAiB,IAAIH,OAAiBC,QAMtCG,KAAoB,CAACrC,MAAyBW,EAAoBX,GAASmC,EAAe,GAG1FG,KAAqB,CAACtC,MAAyB,IAAIuC,GAAOvC,CAAO,GAUjEwC,KAAsB,CAACC,GAAcpB,MAAkB;AAE3D,GADeA,IAAME,IAAcC,GAC5BiB,EAAK,SAASd,GAAiBc,EAAK,MAAM;AACnD;AAKA,MAAqBF,WAAe1C,GAAc;AAAA;AAAA;AAAA;AAAA,EAUhD,YAAYC,GAA8B;AACxC,UAAMA,CAAM;AANd,IAAA8B,EAAA,kBAAW;AAiCX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,EAAA,gBAAS,CAAC3J,MAAa;AACjB,MAAAA,KAAGA,EAAE,eAAe;AAElB,YAAA,EAAE,SAAA+H,GAAS,UAAA0C,EAAa,IAAA;AAC1B,MAAA,CAACb,EAAS7B,GAAS,UAAU,KAAK,CAAC2C,GAAa3C,GAAS,UAAU,OACtD0C,IAAWZ,IAAcc,GACjC5C,GAASgC,CAAW,GAC3Ba,EAAa7C,GAAS8C,IAAaJ,IAAW,UAAU,MAAM,GACzD,KAAA,WAAWb,EAAS7B,GAASgC,CAAW;AAAA,IAC/C;AAjCM,UAAA,EAAE,SAAAhC,EAAY,IAAA;AAGf,SAAA,WAAW6B,EAAS7B,GAASgC,CAAW,GAC7Ca,EAAa7C,GAAS8C,IAAa,OAAO,CAAC,CAAC,KAAK,QAAQ,CAAC,GAG1DN,GAAoB,MAAM,EAAI;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAAL;AAAA,EACT;AAAA;AAAA,EAsBA,UAAU;AACR,IAAAK,GAAoB,IAAI,GACxB,MAAM,QAAQ;AAAA,EAChB;AACF;AAtDEZ,EADmBW,IACZ,YAAWH,KAClBR,EAFmBW,IAEZ,QAAOD,KACdV,EAHmBW,IAGZ,eAAcF;ACnDvB,MAAMU,KAAe,kBCFfC,KAAiB,YCAjBC,KAAoB,YCEpBC,KAAe,kBCAfC,KAAkB,qBCUlBC,IAAmB,CAACpD,MAAyB;AACjD,QAAMqD,IAAa,CAACN,IAAcG,IAAcC,IAAiB,MAAM,GACjEG,IAAMC,EAAYvD,CAAO;AAExB,SAAAqD,EACJ,IAAI,CAAOG,MAAA;AACJ,UAAAC,IAAWd,GAAa3C,GAASwD,CAAG;AAC1C,WAAIC,IACKD,MAAQN,KAAeQ,EAAQ1D,GAASyD,CAAQ,IAAIxD,EAAcwD,GAAUH,CAAG,IAEjF;AAAA,EAAA,CACR,EACA,OAAO,CAAKnI,MAAAA,CAAC,EAAE,CAAC;AACrB,GCwBMwI,KAAmB,kBAAkBX,QACrCY,IAAe,GAAGZ,WAClBa,KAAgB,oBAChBC,KAAc,iBACdC,KAAc,UAEdC,KAAoC;AAAA,EACxC,OAAO;AAAA,EACP,UAAU;AAAA,EACV,OAAO;AAAA,EACP,UAAU;AACZ,GAMMC,KAAsB,CAACjE,MAAyBW,EAAsBX,GAASiD,EAAiB,GAKhGiB,KAAuB,CAAClE,MAAyB,IAAImE,GAASnE,CAAO;AAE3E,IAAIoE,KAAS,GACTC,KAAW,GACXC,KAAO;AAIX,MAAMC,KAAqBxD,EAAiC,YAAYiC,IAAgB,GAClFwB,KAAoBzD,EAAiC,WAAWiC,IAAgB,GAShFyB,KAA+B,CAAChC,MAAmB;AACvD,QAAM,EAAE,OAAAiC,GAAO,WAAAC,GAAW,SAAA3E,GAAS,QAAA4E,GAAQ,SAAAC,EAAY,IAAApC;AAGvD,MAAIA,EAAK,aAAa;AACd,UAAAqC,IAAaC,GAAetC,CAAI,GAChCuC,IAAcL,MAAc,SAAS,SAAS,QAC9CM,IAAiBN,MAAc,SAAS,UAAU;AAE/C/B,IAAAA,EAAAgC,EAAOF,CAAK,GAAG1C,CAAW,GACnCF,EAAY8C,EAAOF,CAAK,GAAG,GAAGd,KAAgBoB,GAAa,GAC3DlD,EAAY8C,EAAOF,CAAK,GAAG,GAAGd,KAAgBqB,GAAgB,GAElDnD,EAAA8C,EAAOE,CAAU,GAAG9C,CAAW,GAC3CF,EAAY8C,EAAOE,CAAU,GAAG,GAAGlB,KAAgBqB,GAAgB,GAEnE7D,EAAcpB,GAASwE,EAAiB,GAClCU,EAAA,MAAMlF,GAAS8D,EAAW,GAG5BrB,EAAK,SAAS,CAACc,EAAYvD,CAAO,EAAE,UAAU6E,EAAQ,YAAY,CAACpC,EAAK,YAC1EA,EAAK,MAAM;AAAA;AAGjB;AAMA,SAAS0C,KAAwC;AAEzC,QAAA1C,IAAOwB,GAAoB,IAAI;AAEjC,EAAAxB,KAAQ,CAACA,EAAK,YAAY,CAACyC,EAAM,IAAI,MAAMnB,EAAW,KACxDnB,EAAS,MAAMmB,EAAW;AAE9B;AAOA,SAASqB,KAAyC;AAE1C,QAAA3C,IAAOwB,GAAoB,IAAI;AAEjC,EAAAxB,KAAQA,EAAK,YAAY,CAACyC,EAAM,IAAI,MAAMnB,EAAW,KACvDtB,EAAK,MAAM;AAEf;AAOA,SAAS4C,GAA4CpN,GAAe;AAClE,EAAAA,EAAE,eAAe;AAEjB,QAAM+H,IAAW0D,EAAQ,MAAMC,EAAgB,KAAKP,EAAiB,IAAI,GACnEX,IAAOwB,GAAoBjE,CAAO;AAEpC,MAAAyC,KAAQ,CAACA,EAAK,aAAa;AAC7B,UAAM6C,IAAW,EAAE3C,GAAa,MAAMkB,EAAa;AAAA,IAAgC;AAEnF,IACE,QACA,CAAChC,EAAS,MAAMG,CAAW;AAAA,IAC3B,CAAC,OAAO,MAAMsD,CAAQ,KAGtB7C,EAAK,GAAG6C,CAAQ;AAAA;AAGtB;AAOA,SAASC,GAA2CtN,GAAe;AACjE,EAAAA,EAAE,eAAe;AACjB,QAAM+H,IAAU0D,EAAQ,MAAMC,EAAgB,KAAMP,EAAiB,IAAI,GACnEX,IAAOwB,GAAoBjE,CAAO;AAEpC,MAAAyC,KAAQ,CAACA,EAAK,aAAa;AACvB,UAAAuC,IAAcrC,GAAa,MAAMmB,EAAW;AAGlD,IAAIkB,MAAgB,SAClBvC,EAAK,KAAK,IACDuC,MAAgB,UACzBvC,EAAK,KAAK;AAAA;AAGhB;AAOA,MAAM+C,KAAqB,CAAC,EAAE,MAAAC,GAAM,QAAA3F,QAA+C;AAC3E,QAAAwD,IAAMC,EAAYzD,CAAM,GACxB,CAACE,CAAO,IAAI,CAAC,GAAG0F,GAAiB/B,IAAkBL,CAAG,CAAC,EAAE,OAAO,CAAKnI,MAAAwK,GAAuBxK,CAAC,CAAC,GAC9FsH,IAAOwB,GAAoBjE,CAAO;AAGpC,MAAAyC,KAAQ,CAACA,EAAK,eAAe,CAAC,kBAAkB,KAAK3C,EAAO,QAAQ,GAAG;AACnE,UAAA8F,IAAMC,GAAM7F,CAAO;AAKzB,IAAIyF,OAHkBG,IAAqBE,KAAfC,MAGDtD,EAAK,KAAK,IAC5BgD,OALaG,IAAsBG,KAAhBD,OAKIrD,EAAK,KAAK;AAAA;AAE9C;AASA,SAASuD,GAAuC/N,GAA2B;AACnE,QAAA,EAAE,QAAA6H,EAAW,IAAA7H,GACbwK,IAAOwB,GAAoB,IAAI;AAGrC,EACExB,KACAA,EAAK,YACHA,EAAK,aAAa,CAACA,EAAK,UAAU,SAAS3C,CAAc,KAAM,CAAC2C,EAAK,SAAS,SAAS3C,CAAqB,OAE9G7H,EAAE,yBAAyB,GAC3BA,EAAE,gBAAgB,GAClBA,EAAE,eAAe;AAErB;AASA,SAASgO,GAA8ChO,GAAiB;AAChE,QAAA,EAAE,QAAA6H,EAAW,IAAA7H,GACbwK,IAAOwB,GAAoB,IAAI;AAErC,MAAIxB,KAAQ,CAACA,EAAK,eAAe,CAACA,EAAK,SAAS;AAExC,UAAA,EAAE,UAAAyD,GAAU,YAAAC,EAAe,IAAA1D;AACjC,IAAK,CAAC,GAAGyD,GAAU,GAAGC,CAAU,EAAE,MAAM,CAAAC,MAAMA,MAAOtG,KAAUsG,EAAG,SAAStG,CAAc,CAAC,MACxFsE,KAASnM,EAAE,OAGP,KAAK,SAAS6H,CAAc,MAC9B2C,EAAK,UAAU,IACf4D,GAA4B5D,GAAM,EAAI;AAAA;AAI9C;AAOA,MAAM6D,KAA6B,CAACrO,MAAoB;AACtD,EAAAoM,KAAWpM,EAAE;AACf,GAOMsO,KAA2B,CAACtO,MAAoB;ArBnRtD,MAAAuO;AqBoRQ,QAAA,EAAE,QAAA1G,EAAW,IAAA7H,GACbqL,IAAMC,EAAYzD,CAAc,GAChC2C,IAAO,CAAC,GAAGiD,GAAiB/B,IAAkBL,CAAG,CAAC,EACrD,IAAI,CAAAnL,MAAK8L,GAAoB9L,CAAC,CAAa,EAC3C,KAAK,CAAA,MAAK,EAAE,OAAO;AAItB,MAAIsK,GAAM;AACF,UAAA,EAAE,SAAAzC,GAAS,OAAA0E,EAAU,IAAAjC,GACrBmD,IAAMC,GAAM7F,CAAO;AACzB,IAAAsE,KAAOrM,EAAE,OAETwK,EAAK,UAAU,IACf4D,GAA4B5D,CAAI,GAG9B,GAAC+D,IAAAlD,EAAI,aAAA,MAAJ,QAAAkD,EAAoB,WAAW,WAChCxG,EAAQ,SAASF,CAAqB,KACtC,KAAK,IAAIsE,KAASE,EAAI,IAAI,QAItBD,KAAWD,KACb3B,EAAK,GAAGiC,KAASkB,IAAM,KAAK,EAAE,IACrBvB,KAAWD,MACpB3B,EAAK,GAAGiC,KAASkB,IAAM,IAAI,GAAG,IAKzBxB,KAAA,GACEC,KAAA,GACJC,KAAA;AAAA;AAEX,GAUMmC,KAA4B,CAAChE,GAAgBiC,MAAkB;AAC7D,QAAA,EAAE,YAAAyB,EAAe,IAAA1D;AACtB,GAAA,GAAG0D,CAAU,EAAE,QAAQ,OAAKrE,EAAY3G,GAAG6G,CAAW,CAAC,GAGpDS,EAAK,WAAWiC,CAAK,KAAY9B,EAAAuD,EAAWzB,CAAK,GAAG1C,CAAW;AACrE,GAQMqE,KAA8B,CAAC5D,GAAgBpB,MAAkB;AAC/D,QAAA,EAAE,SAAArB,EAAY,IAAAyC,GACdnB,IAASD,IAAME,IAAcC;AACnC,EAAAF,EAAOiC,EAAYvD,CAAO,GAAG0G,IAAkBJ,IAA6CK,EAAc,GAC1GrF,EAAOiC,EAAYvD,CAAO,GAAG4G,IAAgBL,IAA2CI,EAAc;AACxG,GAQME,KAAyB,CAACpE,GAAgBpB,MAAkB;AAChE,QAAM,EAAE,SAAArB,GAAS,SAAA6E,GAAS,QAAAD,GAAQ,UAAAsB,GAAU,YAAAC,EAAe,IAAA1D,GACrD,EAAE,OAAAqE,GAAO,OAAAC,GAAO,UAAAC,GAAU,UAAAC,MAAapC,GACvCvD,IAASD,IAAME,IAAcC;AAEnC,EAAIuF,KAASC,MACJ1F,EAAAtB,GAASkH,IAAiB/B,EAAoB,GAC9C7D,EAAAtB,GAASmH,IAAiB/B,EAAqB,IAGpD0B,KAASlC,EAAO,SAAS,MACpBtD,EAAAtB,GAASoH,IAAkBnB,IAA6CU,EAAc,GAC7FrF,EAAOtB,GAASqH,IAAiBrB,IAAiD,EAAE,SAAS,IAAO,GACpG1E,EAAOtB,GAASsH,IAAgBtB,IAAiD,EAAE,SAAS,IAAO,IAIjGE,EAAS,UACXA,EAAS,QAAQ,CAASqB,MAAA;AAEpB,IAAAA,KAAcjG,EAAAiG,GAAO5F,GAAiB4D,EAAwC;AAAA,EAAA,CACnF,GAICY,EAAW,UACbA,EAAW,QAAQ,CAAaqB,MAAA;AACvB,IAAAlG,EAAAkG,GAAW7F,GAAiB0D,EAAyC;AAAA,EAAA,CAC7E,GAGC4B,KAAU3F,EAAOiC,EAAYvD,CAAO,GAAGyH,IAAcjC,EAAmC;AAC9F,GAQMT,KAAiB,CAACtC,MAAmB;AACnC,QAAA,EAAE,QAAAmC,GAAQ,SAAA5E,EAAY,IAAAyC,GACtBqC,IAAa7E,EAAc,IAAI2D,KAAgB5B,KAAehC,CAAO;AACpE,SAAA0H,EAAc5C,CAAU,IAAI,CAAC,GAAGF,CAAM,EAAE,QAAQE,CAAU,IAAI;AACvE;AAKA,MAAqBX,WAAiBtE,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBlD,YAAYC,GAA8BC,GAAmC;AAC3E,UAAMD,GAAQC,CAAM;AAGd,UAAA,EAAE,SAAAC,EAAY,IAAA;AAGpB,SAAK,YAAY6F,GAAM7F,CAAO,IAAI,UAAU,QAC5C,KAAK,UAAU,IAIV,KAAA,SAAS2H,GAAuB/D,GAAc5D,CAAO;AACpD,UAAA,EAAE,QAAA4E,EAAW,IAAA;AAIf,QAAAA,EAAO,UAAU,GAAG;AAChB,YAAAgD,IAAc7C,GAAe,IAAI,GAEjC8C,IAAiB,CAAC,GAAGjD,CAAM,EAAE,KAAK,CAAKvM,MAAAyP,GAAQzP,GAAG,IAAIuL,WAAsBA,QAAmB,CAAC;AACtG,WAAK,QAAQgE;AAGP,YAAAtE,IAAMC,EAAYvD,CAAO;AAE/B,WAAK,WAAW;AAAA,QACd,GAAG0F,GAAiB,IAAI5B,OAAgB9D,CAAO;AAAA,QAC/C,GAAG0F,GAAiB,IAAI5B,OAAgBf,QAAkB/C,EAAQ,QAAQsD,CAAG;AAAA,MAAA,EAC7E,OAAO,CAACnL,GAAGC,GAAG2P,MAAO3P,MAAM2P,EAAG,QAAQ5P,CAAC,CAAC,GAE1C,KAAK,YAAY8H,EAAc,IAAI+C,iBAA6BhD,CAAO,GAGvE,KAAK,aAAa;AAAA,QAChB,GAAI,KAAK,YAAY0F,GAAiB,IAAI7B,OAAkB,KAAK,SAAS,IAAI,CAAC;AAAA,QAC/E,GAAG6B,GAAiB,IAAI7B,OAAkBd,QAAkB/C,EAAQ,QAAQsD,CAAG;AAAA,MAAA,EAC/E,OAAO,CAACnL,GAAGC,GAAG2P,MAAO3P,MAAM2P,EAAG,QAAQ5P,CAAC,CAAC;AAGpC,YAAA,EAAE,SAAA0M,EAAY,IAAA;AAGpB,WAAK,QAAQ,WAAWA,EAAQ,aAAa,KAAOb,GAAiB,WAAWa,EAAQ,UAIpFgD,IACF,KAAK,QAAQ,CAAC,GAAGjD,CAAM,EAAE,QAAQiD,CAAc,IACtCD,IAAc,MACvB,KAAK,QAAQ,GACJhF,EAAAgC,EAAO,CAAC,GAAG5C,CAAW,GAC3B,KAAK,WAAW,UAAQyE,GAA0B,MAAM,CAAC,IAI3D,KAAK,WAAW,UAAkCA,GAAA,MAAM,KAAK,KAAK,GAGtEI,GAAuB,MAAM,EAAI,GAG7BhC,EAAQ,YAAU,KAAK,MAAM;AAAA;AAAA,EAErC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAA5B;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAe;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,WAAW;AACN,WAAAnC,EAAS,KAAK,SAASkC,EAAW;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,cAAc;AAChB,WAAO9D,EAAc,IAAI2D,WAAsBA,UAAqB,KAAK,OAAO,MAAM;AAAA,EACxF;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ;AACN,UAAM,EAAE,SAAA5D,GAAS,SAAA6E,GAAS,UAAAmD,GAAU,OAAAtD,MAAU;AAExCQ,IAAAA,EAAA,MAAMlF,GAASgD,EAAc,GAC/BgF,MACI9C,EAAA,MAAMlF,GAAS+D,EAAW,GAChCjC,EAAY9B,GAAS+D,EAAW,IAG5BmB,EAAA;AAAA,MACJlF;AAAA,MACA,MAAM;AAIA,QAAA,KAAK,WAAW,CAAC,KAAK,YAAY,CAAC,KAAK,WAAW2F,GAAuB3F,CAAO,KAC9E,KAAA,GAAG0E,IAAQ,CAAC;AAAA,MAErB;AAAA,MACAG,EAAQ;AAAA,MACR7B;AAAA,IAAA;AAAA,EAEJ;AAAA;AAAA,EAGA,QAAQ;AACA,UAAA,EAAE,SAAAhD,GAAS,SAAA6E,EAAY,IAAA;AAE7B,IAAI,CAAC,KAAK,YAAYA,EAAQ,aAC5BjC,EAAS5C,GAAS+D,EAAW,GACvBmB,EAAA;AAAA,MACJlF;AAAA,MACA,MAAM;AAAA,MAEN;AAAA,MACA;AAAA,MACA+D;AAAA,IAAA;AAAA,EAGN;AAAA;AAAA,EAGA,OAAO;AAED,IAAC,KAAK,eACH,KAAA,GAAG,KAAK,QAAQ,CAAC;AAAA,EAE1B;AAAA;AAAA,EAGA,OAAO;AAED,IAAC,KAAK,eACH,KAAA,GAAG,KAAK,QAAQ,CAAC;AAAA,EAE1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,GAAGkE,GAAa;AACd,UAAM,EAAE,SAAAjI,GAAS,QAAA4E,GAAQ,SAAAC,EAAA,IAAY,MAC/BC,IAAaC,GAAe,IAAI,GAChCa,IAAMC,GAAM7F,CAAO;AACzB,QAAIkI,IAAOD;AAKP,QAAA,CAAC,KAAK,eAAenD,MAAeoD,KAAQ,CAAChD,EAAM,IAAIlF,GAAS8D,EAAW,GAAG;AAGhF,MAAIgB,IAAaoD,KAASpD,MAAe,KAAKoD,MAAStD,EAAO,SAAS,IAChE,KAAA,YAAYgB,IAAM,UAAU,UACxBd,IAAaoD,KAASpD,MAAeF,EAAO,SAAS,KAAKsD,MAAS,OACvE,KAAA,YAAYtC,IAAM,SAAS;AAE5B,YAAA,EAAE,WAAAjB,EAAc,IAAA;AAGtB,MAAIuD,IAAO,IACTA,IAAOtD,EAAO,SAAS,IACdsD,KAAQtD,EAAO,WACjBsD,IAAA;AAIH,YAAAlD,IAAcL,MAAc,SAAS,SAAS,QAC9CM,IAAiBN,MAAc,SAAS,UAAU,OAElDwD,IAAkB;AAAA,QACtB,eAAevD,EAAOsD,CAAI;AAAA,QAC1B,MAAMpD;AAAA,QACN,IAAIoD;AAAA,QACJ,WAAAvD;AAAA,MAAA;AAIFyD,MAAAA,GAAa7D,IAAoB4D,CAAe,GAChDC,GAAa5D,IAAmB2D,CAAe,GAG/C/G,EAAcpB,GAASuE,EAAkB,GACpCA,GAAmB,qBAEtB,KAAK,QAAQ2D,GACbzB,GAA0B,MAAMyB,CAAI,GAEhCG,GAA6BzD,EAAOsD,CAAI,CAAC,KAAKrG,EAAS7B,GAAS,OAAO,IACnEkF,EAAA;AAAA,QACJlF;AAAA,QACA,MAAM;AACJ4C,UAAAA,EAASgC,EAAOsD,CAAI,GAAG,GAAGtE,KAAgBoB,GAAa,GAChDsD,GAAA1D,EAAOsD,CAAI,CAAC,GACnBtF,EAASgC,EAAOsD,CAAI,GAAG,GAAGtE,KAAgBqB,GAAgB,GAC1DrC,EAASgC,EAAOE,CAAU,GAAG,GAAGlB,KAAgBqB,GAAgB,GAGhElD;AAAAA,YACE6C,EAAOsD,CAAI;AAAA,YACX,MAAM,KAAK,UAAU,KAAK,OAAO,UAAUzD,GAA6B,IAAI;AAAA,UAAA;AAAA,QAEhF;AAAA,QACA;AAAA,QACAX;AAAA,MAAA,KAGOlB,EAAAgC,EAAOsD,CAAI,GAAGlG,CAAW,GACtBF,EAAA8C,EAAOE,CAAU,GAAG9C,CAAW,GAErCkD,EAAA;AAAA,QACJlF;AAAA,QACA,MAAM;AACEkF,UAAAA,EAAA,MAAMlF,GAAS8D,EAAW,GAG5B9D,KAAW6E,EAAQ,YAAY,CAAC,KAAK,YACvC,KAAK,MAAM,GAGbzD,EAAcpB,GAASwE,EAAiB;AAAA,QAC1C;AAAA,QACA;AAAA,QACAV;AAAA,MAAA;AAAA;AAAA,EAKV;AAAA;AAAA,EAGA,UAAU;AACF,UAAA,EAAE,aAAAyE,EAAgB,IAAA,MAElBC,IAAQ;AAAA,MACZ,GAAG;AAAA,MACH,aAAAD;AAAA,IAAA;AAEF,IAAA1B,GAAuB2B,CAAK,GAC5B,MAAM,QAAQ,GAGVA,EAAM,eACRzG,EAAqByG,EAAM,OAAOA,EAAM,KAAK,GAAG,MAAM;AACpD,MAAA/D,GAA6B+D,CAAK;AAAA,IAAA,CACnC;AAAA,EAEL;AACF;AA1RE5G,EADmBuC,IACZ,YAAWR,KAClB/B,EAFmBuC,IAEZ,QAAOD,KACdtC,EAHmBuC,IAGZ,eAAcF;AC5YvB,MAAMwE,KAAkB,cCHlBC,IAAiB,YCAjBC,KAAoB,YCsCpBC,KAAmB,IAAIF,KACvBG,KAAyB,IAAI5G,OAAiByG,OAC9CI,KAAmB,EAAE,QAAQ,QAM7BC,KAAsB,CAAC/I,MAAyBW,EAAsBX,GAAS2I,EAAiB,GAKhGK,KAAuB,CAAChJ,MAAyB,IAAIiJ,GAASjJ,CAAO,GAIrEkJ,KAAoBnI,EAAiC,WAAW2H,GAAgB,GAChFS,KAAqBpI,EAAiC,YAAY2H,GAAgB,GAClFU,KAAoBrI,EAAiC,WAAW2H,GAAgB,GAChFW,KAAsBtI,EAAiC,aAAa2H,GAAgB,GASpFY,KAAiB,CAAC7G,MAAmB;AACzC,QAAM,EAAE,SAAAzC,GAAS,QAAAuJ,GAAQ,UAAAC,EAAA,IAAa/G;AAEtCrB,EAAAA,EAAcpB,GAASkJ,EAAiB,GACnCA,GAAkB,qBACfhE,EAAA,IAAIlF,GAASyJ,IAAM,EAAE,GACvBF,KAAcrE,EAAA,IAAIqE,GAAQE,IAAM,EAAE,GAEtC7G,EAAS5C,GAASyI,EAAe,GACjC3G,EAAY9B,GAAS0I,CAAc,GAEnCgB,EAAgB1J,GAAS,EAAE,QAAQ,GAAGA,EAAQ,kBAAkB,GAEhE+B,EAAqB/B,GAAS,MAAM;AAClCkF,IAAAA,EAAM,MAAMlF,CAAO,GACfuJ,KAAQrE,EAAM,MAAMqE,CAAM,GAE9BC,EAAS,QAAQ,CAAOG,MAAA9G,EAAa8G,GAAKC,IAAc,MAAM,CAAC,GAE/D9H,EAAY9B,GAASyI,EAAe,GACpC7F,EAAS5C,GAAS0I,CAAc,GAChC9F,EAAS5C,GAAST,CAAS,GAE3BmK,EAAgB1J,GAAS,EAAE,QAAQ,GAAI,CAAA,GAEvCoB,EAAcpB,GAASmJ,EAAkB;AAAA,EAAA,CAC1C;AAEL,GAOMU,KAAkB,CAACpH,MAAmB;AAC1C,QAAM,EAAE,SAAAzC,GAAS,QAAAuJ,GAAQ,UAAAC,EAAA,IAAa/G;AAEtCrB,EAAAA,EAAcpB,GAASoJ,EAAiB,GAEnCA,GAAkB,qBACflE,EAAA,IAAIlF,GAASyJ,IAAM,EAAE,GACvBF,KAAcrE,EAAA,IAAIqE,GAAQE,IAAM,EAAE,GAEtCC,EAAgB1J,GAAS,EAAE,QAAQ,GAAGA,EAAQ,kBAAkB,GAEhE8B,EAAY9B,GAAS0I,CAAc,GACnC5G,EAAY9B,GAAST,CAAS,GAC9BqD,EAAS5C,GAASyI,EAAe,GAEjCH,GAAOtI,CAAO,GACd0J,EAAgB1J,GAAS,EAAE,QAAQ,MAAO,CAAA,GAE1C+B,EAAqB/B,GAAS,MAAM;AAClCkF,IAAAA,EAAM,MAAMlF,CAAO,GAEfuJ,KAAQrE,EAAM,MAAMqE,CAAM,GAE9BC,EAAS,QAAQ,CAAOG,MAAA9G,EAAa8G,GAAKC,IAAc,OAAO,CAAC,GAEhE9H,EAAY9B,GAASyI,EAAe,GACpC7F,EAAS5C,GAAS0I,CAAc,GAEhCgB,EAAgB1J,GAAS,EAAE,QAAQ,GAAI,CAAA,GAEvCoB,EAAcpB,GAASqJ,EAAmB;AAAA,EAAA,CAC3C;AAEL,GAQMS,KAAwB,CAACrH,GAAgBpB,MAAkB;AACzD,QAAAC,IAASD,IAAME,IAAcC,GAC7B,EAAE,UAAAgI,EAAa,IAAA/G;AAGrB,EAAI+G,EAAS,UACXA,EAAS,QAAQ,CAAOG,MAAArI,EAAOqI,GAAKhI,GAAiBoI,EAAqC,CAAC;AAE/F,GASMA,KAAuB,CAAC9R,MAAkB;AACxC,QAAA,EAAE,QAAA6H,EAAW,IAAA7H,GACb+R,IAAUlK,KAAU4D,EAAQ5D,GAAuB+I,EAAsB,GACzE7I,IAAUgK,KAAW5G,EAAiB4G,CAAO,GAC7CvH,IAAOzC,KAAW+I,GAAoB/I,CAAO;AAE/C,EAAAyC,KAAMA,EAAK,OAAO,GAGlBuH,KAAWA,EAAQ,YAAY,OAAK/R,EAAE,eAAe;AAC3D;AAMA,MAAqBgR,WAAiBpJ,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAYlD,YAAYC,GAA8BC,GAAmC;AAC3E,UAAMD,GAAQC,CAAM;AAGd,UAAA,EAAE,SAAAC,GAAS,SAAA6E,EAAY,IAAA,MACvBvB,IAAMC,EAAYvD,CAAO;AAG/B,SAAK,WAAW,CAAC,GAAG0F,GAAiBmD,IAAwBvF,CAAG,CAAC,EAAE,OAAO,CAAAqG,MAAOvG,EAAiBuG,CAAG,MAAM3J,CAAO,GAGlH,KAAK,SAAS0H,EAAc7C,EAAQ,MAAM,IACtCA,EAAQ,SACR3E,GAAS2E,EAAQ,MAAM,IACvBzB,EAAiBpD,CAAO,KAAKC,EAAc4E,EAAQ,QAAkBvB,CAAG,IACxE,MAGJwG,GAAsB,MAAM,EAAI;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAAnB;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAG;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACP,IAAKjH,EAAS,KAAK,SAAStC,CAAS,IAChC,KAAK,KAAK,IADyB,KAAK,KAAK;AAAA,EAEpD;AAAA;AAAA,EAGA,OAAO;AACC,UAAA,EAAE,UAAAiK,GAAU,SAAAxJ,EAAY,IAAA;AAC9B,IAAKkF,EAAM,IAAIlF,CAAO,MACpB6J,GAAgB,IAAI,GAEhBL,EAAS,UACXA,EAAS,QAAQ,CAAOG,MAAA/G,EAAS+G,GAAK,GAAGjB,IAAiB,CAAC;AAAA,EAGjE;AAAA;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAA1I,GAAS,QAAAuJ,GAAQ,UAAAC,EAAA,IAAa;AAClC,QAAAS,GACAC;AAEJ,IAAIX,MACeU,IAAA,CAAC,GAAGvE,GAAiB,IAAIgD,KAAkBnJ,KAAagK,CAAM,CAAC,EAAE;AAAA,MAAK,CAAAnR,MACrF2Q,GAAoB3Q,CAAC;AAAA,IAAA,GAEE8R,IAAAD,KAAkBlB,GAAoBkB,CAAc,KAG1E,CAACV,KAAU,CAACrE,EAAM,IAAIqE,CAAM,MAAM,CAACrE,EAAM,IAAIlF,CAAO,MACnDkK,KAA0BD,MAAmBjK,MAC/C6J,GAAgBK,CAAsB,GACfA,EAAA,SAAS,QAAQ,CAAOP,MAAA;AACpC/G,MAAAA,EAAA+G,GAAK,GAAGjB,IAAiB;AAAA,IAAA,CACnC,IAGHY,GAAe,IAAI,GAEfE,EAAS,UACXA,EAAS,QAAQ,CAAOG,MAAA7H,EAAY6H,GAAK,GAAGjB,IAAiB,CAAC;AAAA,EAGpE;AAAA;AAAA,EAGA,UAAU;AACR,IAAAoB,GAAsB,IAAI,GAE1B,MAAM,QAAQ;AAAA,EAChB;AACF;AApGElI,EADmBqH,IACZ,YAAWL,KAClBhH,EAFmBqH,IAEZ,QAAOD,KACdpH,EAHmBqH,IAGZ,eAAcF;ACjLvB,MAAMoB,KAAsB,CAAC,YAAY,UAAU,aAAa,SAAS,GCFnEC,KAAoB,YCEpBC,KAAoB,iBCMpBC,KAAgB,CAACtK,MAAyB;AAExC,QAAAuK,IAAe7G,EAAQ1D,GAAS,GAAG;AACzC,SACGA,EAAQ,YAAY;AAAA,EAEnBwK,GAAaxK,GAAS,MAAM,KAC3BA,EAA8B,KAAK,MAAM,EAAE,MAAM;AAAA,EAEnDuK,KAAgBC,GAAaD,GAAc,MAAM,KAAMA,EAAmC,KAAK,MAAM,EAAE,MAAM;AAElH,GCgCM,CAACE,IAAgBC,IAAcC,IAAiBC,EAAa,IAAIC,IACjEC,KAAmB,IAAI7I,OAAiBwI,QAMxCM,KAAsB,CAAC/K,MAAyBW,EAAsBX,GAASoK,EAAiB,GAKhGY,KAAuB,CAAChL,MAAyB,IAAIiL,GAASjL,CAAO,GAKrEkL,KAAuB,GAAGb,UAC1Bc,KAAgB,CAACV,IAAgBC,EAAY,GAC7CU,KAAkB,CAACT,IAAiBC,EAAa,GACjDS,KAAgB,CAAC,KAAK,QAAQ,GAE9BC,KAAmB;AAAA,EACvB,QAAQ;AAAA;AAAA,EACR,SAAS;AAAA;AACX,GAIMC,KAAoBxK,EAAiC,WAAW0J,IAAgB,GAChFe,KAAqBzK,EAAiC,YAAY0J,IAAgB,GAClFgB,KAAoB1K,EAAiC,WAAW0J,IAAgB,GAChFiB,KAAsB3K,EAAiC,aAAa0J,IAAgB,GACpFkB,KAAuB5K,EAAiC,cAAc0J,IAAgB,GAUtFmB,KAAgB,CAACnJ,MAAmB;AACxC,QAAM,EAAE,SAAAzC,GAAS,MAAA6L,GAAM,eAAAC,GAAe,SAAAjH,MAAYpC,GAC5C,EAAE,QAAAsJ,EAAW,IAAAlH;AAInB,MAAImH,EAAgBH,GAAM,UAAU,MAAM,UAAU;AAC5C,UAAAjG,IAAMC,GAAM7F,CAAO,GAEnBiM,IAAUpK,EAASgK,GAAMX,EAAoB;AAInD,IADmB,CAAC,UAAU,OAAO,UAAU,QAAQ,OAAO,EACnD,QAAQ,CAAK9N,MAAA;AAEtB,YAAM8O,KAAmC,CAAA;AACzC,MAAAA,GAAM9O,CAAC,IAAI,IACXsM,EAAgBmC,GAAMK,EAAK;AAAA,IAAA,CAC5B;AAKD,QAAIC,IACFtB,GAAgB,KAAK,OAAKhJ,EAASiK,GAAe3T,CAAC,CAAC;AAAA,IACNsS;AAEhD,UAAM2B,IAA8C;AAAA,MAClD,UAAU,CAACL,GAAQ,GAAG,CAAC;AAAA,MACvB,QAAQ,CAAC,GAAG,GAAGA,CAAM;AAAA,MACrB,WAAWnG,IAAM,CAAC,IAAI,GAAG,GAAGmG,CAAM,IAAI,CAAC,IAAIA,GAAQ,CAAC;AAAA,MACpD,SAASnG,IAAM,CAAC,IAAImG,GAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAGA,CAAM;AAAA,IAAA,GAG9CM,IAAgE;AAAA,MACpE,UAAU,EAAE,KAAK,OAAO;AAAA,MACxB,QAAQ,EAAE,KAAK,QAAQ,QAAQ,OAAO;AAAA,MACtC,WAAWzG,IAAM,EAAE,MAAM,QAAQ,OAAO,OAAO,IAAI,EAAE,MAAM,QAAQ,OAAO,OAAO;AAAA,MACjF,SAASA,IAAM,EAAE,MAAM,QAAQ,OAAO,OAAO,IAAI,EAAE,MAAM,QAAQ,OAAO,OAAO;AAAA,MAC/E,WAAWA,IAAM,EAAE,OAAO,KAAK,MAAM,OAAO,IAAI,EAAE,OAAO,QAAQ,MAAM,IAAI;AAAA,MAC3E,SAASA,IAAM,EAAE,OAAO,QAAQ,MAAM,IAAI,IAAI,EAAE,OAAO,KAAK,MAAM,OAAO;AAAA,IAAA,GAGrE,EAAE,aAAa0G,GAAW,cAAcC,MAAeV,GAEvD,EAAE,aAAAW,GAAa,cAAAC,EAAa,IAAIC,GAAmB1M,CAAO,GAC1D;AAAA,MACJ,MAAM2M;AAAA,MACN,KAAKC;AAAA,MACL,OAAOC;AAAA,MACP,QAAQC;AAAA,IAAA,IACNC,GAAsB/M,CAAO,GAG3BgN,IAAiBL,IAAaL,IAAYP,IAAS,GAEnDkB,IAAkBN,IAAaL,IAAYO,KAAcd,KAAUS,GAEnEU,KAAeN,IAAYL,IAAaR,KAAUU,GAElDU,IAAmBP,IAAYL,IAAaO,KAAef,KAAUU,GAErEW,IAAYR,IAAYL,IAAaR,IAAS,GAE9CsB,KAAe,CAACzH,KAAOqG,KAAarG,KAAO,CAACqG,MAAaU,IAAaE,KAAcP,IAAY,GAChGgB,MAAgB1H,KAAOqG,KAAa,CAACrG,KAAO,CAACqG,MAAaU,IAAaL,KAAaE;AA6B1F,QAzBIpB,GAAgB,SAASe,CAAa,KAAKa,KAAkBC,MAC/Cd,IAAA1B,KAEd0B,MAAkBxB,OAAqB/E,IAAuBqH,IAAjBD,OAC/Bb,IAAAvB,KAEduB,MAAkBvB,OAAkBhF,IAAMoH,IAAiBC,OAC7Cd,IAAAxB,KAEdwB,MAAkBzB,MAAgB0C,KAAa,CAACD,MAClChB,IAAA1B,KAEd0B,MAAkB1B,MAAkB0C,KAAoB,CAACC,MAC3CjB,IAAAzB,KAIdU,GAAgB,SAASe,CAAa,KAAKe,MAChC9E,GAAAiE,EAAiBF,CAAa,GAAG;AAAA,MAC5C,KAAK;AAAA,MACL,QAAQ;AAAA,IAAA,CACT,GAIChB,GAAc,SAASgB,CAAa,MAAMkB,KAAcC,KAAc;AAGxE,UAAIC,IAA0E,EAAE,MAAM,QAAQ,OAAO,OAAO;AACxG,MAAA,CAACF,KAAcC,MAAe,CAAC1H,MAAK2H,IAAW,EAAE,MAAM,QAAQ,OAAO,EAAE,IACxEF,KAAc,CAACC,MAAe1H,MAAK2H,IAAW,EAAE,MAAM,GAAG,OAAO,OAAO,IACvEA,KAAuBnF,GAAAiE,EAAiBF,CAAa,GAAGoB,CAAQ;AAAA;AAGhE,UAAAC,KAAoBpB,EAAeD,CAAa;AACtDzC,IAAAA,EAAgBmC,GAAM;AAAA,MACpB,GAAGQ,EAAiBF,CAAa;AAAA,MACjC,QAAQ,GAAGqB,GAAQ,IAAI,CAAArS,MAAMA,KAAI,GAAGA,KAAU,EAAE,KAAK,GAAG;AAAA,IAAA,CACzD,GAGGgQ,GAAc,SAASgB,CAAa,KAAKF,KAEvCA,KAGcvC,EAAAmC,GAAMQ,EADnB,CAACzG,KAAOyH,KAAgBzH,KAAO0H,KAAe;AAAA;AAAA,MAAyC;AAAA,KAC1C,CAAC,GAIrDlM,EAAc0K,GAAeH,EAAoB;AAAA;AAErD,GAQM8B,KAAe,CAAC5B,MACb,CAAC,GAAGA,EAAK,QAAQ,EACrB,IAAI,CAAK1T,MAAA;AACR,MAAIA,KAAKkT,GAAc,SAASlT,EAAE,OAAO;AAAU,WAAAA;AAC7C,QAAA,EAAE,mBAAAuV,EAAsB,IAAAvV;AAC9B,SAAIuV,KAAqBrC,GAAc,SAASqC,EAAkB,OAAO,IAChEA,IAEF;AACR,CAAA,EACA,OAAO,CAAAvV,MAAKA,CAAC,GASZwV,KAAwB,CAAClL,MAAmB;AAC1C,QAAA,EAAE,SAAAzC,GAAS,SAAA6E,EAAY,IAAApC,GACvBnB,IAASmB,EAAK,OAAOlB,IAAcC,GACnC8B,IAAMC,EAAYvD,CAAO;AAExB,EAAAsB,EAAAgC,GAAK3B,GAAiBiM,EAAuC,GAC7DtM,EAAAgC,GAAKuK,IAAYD,EAAuC,GACxDtM,EAAAgC,GAAKmE,IAAcqG,EAAsC,GACzDxM,EAAAgC,GAAKyK,IAAYC,EAAmC,GAGvDnJ,EAAQ,YAAY,aACtB,CAACoJ,IAAaC,EAAW,EAAE,QAAQ,CAAMC,MAAA;AACvC,IAAA7M,EAAO8M,GAAUpO,CAAO,GAAGmO,GAAIE,IAAuB1H,EAAc;AAAA,EAAA,CACrE;AAEL,GAQM2H,KAAwB,CAAC7L,GAAgBpB,MAAkB;AAExD,GADQA,IAAME,IAAcC,GAC5BiB,EAAK,SAASd,GAAiB4M,EAAqC;AAC7E,GAQMC,KAAyB,CAACxO,MAAkD;AAC1E,QAAAyO,IAAgB,CAAC,GAAG5D,IAAiB,aAAa,aAAa,EAClE,IAAI,CAAK1S,MAAAwP,GAAuB,GAAGxP,KAAKoH,KAAagE,EAAYvD,CAAO,CAAC,CAAC,EAC1E,KAAK,CAAK7E,MAAAA,EAAE,MAAM;AAEjB,MAAAsT,KAAiBA,EAAc;AACjC,WAAO,CAAC,GAAIA,EAAc,CAAC,EAAE,QAA0C,EAAE;AAAA,MAAK,CAAAtT,MAC5E0P,GAAgB,KAAK,CAAA1S,MAAKA,MAAMwK,GAAaxH,GAAG8G,EAAY,CAAC;AAAA,IAAA;AAInE,GASM2L,KAAyB,CAAC3V,MAAkB;AAC1C,QAAA,EAAE,QAAA6H,GAAQ,MAAA4O,EAAS,IAAAzW;AAGrB,MAAA6H,KAAU4H,EAAc5H,CAAM,GAAG;AAE7B,UAAAE,IAAUwO,GAAuB1O,CAAM,GACvC2C,IAAOzC,KAAW+K,GAAoB/K,CAAO;AAGnD,QAAIyC,GAAM;AACF,YAAA,EAAE,eAAAqJ,GAAe,MAAAD,EAAS,IAAApJ,GAE1BkM,IACJ7C,KACAA,EAAc,SAAShM,CAAM,MAC5BA,EAAO,YAAY,UAAU4D,EAAQ5D,GAAQ,MAAM,MAAM;AAExD,MAAA,CAAC6B,GAAiBiN,EAAc,EAAE,SAASF,CAAI,KAAKpE,GAAcxK,CAAM,KAC1E7H,EAAE,eAAe,GAIf,CAAC0W,KAAUD,MAASb,MAAc/N,MAAWE,KAAWF,MAAW+L,KACrEpJ,EAAK,KAAK;AAAA;AAAA;AAIlB,GAOM8L,KAAuB,CAACtW,MAAkB;AACxC,QAAA,EAAE,QAAA6H,EAAW,IAAA7H,GACb+H,IAAUF,KAAU4D,EAAQ5D,GAAuBgL,EAAgB,GACnErI,IAAOzC,KAAW+K,GAAoB/K,CAAO;AAGnD,EAAIyC,MACFxK,EAAE,gBAAgB,GAClBwK,EAAK,OAAO,GAERzC,KAAWsK,GAActK,CAAO,KAAG/H,EAAE,eAAe;AAE5D,GAOM6V,KAAwB,CAAC7V,MAAqB;AAElD,EAAI,CAAC4W,IAAcC,EAAU,EAAE,SAAS7W,EAAE,IAAI,KAAGA,EAAE,eAAe;AACpE;AAOA,SAAS+V,GAAsC/V,GAAkB;AACzD,QAAA,EAAE,MAAAwN,EAAS,IAAAxN,GACX+H,IAAUwO,GAAuB,IAAI,GACrC/L,IAAOzC,KAAW+K,GAAoB/K,CAAO,GAC7C,EAAE,eAAA+O,EAAmB,IAAA/O,KAAWuD,EAAYvD,CAAO;AAGzD,MAAIyC,KAAQsM,GAAe;AACnB,UAAA,EAAE,MAAAlD,GAAM,MAAAmD,EAAS,IAAAvM,GACjBwM,IAAYxB,GAAa5B,CAAI;AAG/B,QAAAoD,KAAaA,EAAU,UAAU,CAACJ,IAAcC,EAAU,EAAE,SAASrJ,CAAI,GAAG;AAC1E,UAAAwC,IAAMgH,EAAU,QAAQF,CAAa;AAEzC,MAAIA,MAAkB/O,IACdiI,IAAA,IACGxC,MAASqJ,KACZ7G,IAAAA,IAAM,IAAIA,IAAM,IAAI,IACjBxC,MAASoJ,OAClB5G,IAAMA,IAAMgH,EAAU,SAAS,IAAIhH,IAAM,IAAIA,IAG3CgH,EAAUhH,CAAG,KAASiH,GAAAD,EAAUhH,CAAG,CAAgB;AAAA;AAGrD,IAAAkH,OAAc1J,KAAQuJ,MACxBvM,EAAK,OAAO,GACZyM,GAAMlP,CAAO;AAAA;AAGnB;AAGA,SAASqO,KAAyC;AAC1C,QAAArO,IAAUwO,GAAuB,IAAI,GACrC/L,IAAOzC,KAAW+K,GAAoB/K,CAAO;AAGnD,EAAIyC,KAAQA,EAAK,QAAMmJ,GAAcnJ,CAAI;AAC3C;AAKA,MAAqBwI,WAAiBpL,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAalD,YAAYC,GAA8BC,GAAmC;AAC3E,UAAMD,GAAQC,CAAM;AAGd,UAAA,EAAE,eAAA+L,EAAc,IAAI,KAAK,SACzB,CAACD,CAAI,IAAIlE,GAAuB0C,IAAmByB,CAA2B;AAGpF,IAAID,MAEF,KAAK,gBAAgBC,GACrB,KAAK,OAAOD,GAGZyC,GAAsB,MAAM,EAAI;AAAA,EAEpC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAAlE;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAkB;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACP,IAAI,KAAK,OAAM,KAAK,KAAK,IACpB,KAAK,KAAK;AAAA,EACjB;AAAA;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAAtL,GAAS,MAAAgP,GAAM,MAAAnD,GAAM,eAAAC,MAAkB;AAG/C,QAAI,CAACkD,GAAM;AACH,YAAAI,IAAiBZ,GAAuBxO,CAAO,GAC/CqP,IAAkBD,KAAkBrE,GAAoBqE,CAAc;AACxE,MAAAC,KAAiBA,EAAgB,KAAK,GAG1C,CAAC9D,IAAmBC,IAAoBG,EAAoB,EAAE,QAAQ,CAAK1T,MAAA;AACzE,QAAAA,EAAE,gBAAgB+H;AAAA,MAAA,CACnB,GAEDoB,EAAc0K,GAAeP,EAAiB,GACzCA,GAAkB,qBACrB3I,EAASiJ,GAAMtM,CAAS,GACxBqD,EAASkJ,GAAevM,CAAS,GACpBsD,EAAA7C,GAAS4J,IAAc,MAAM,GAG1CgC,GAAc,IAAI,GAElB,KAAK,OAAO,CAACoD,GAEbE,GAAMlP,CAAO,GACb2N,GAAsB,IAAI,GAC1BvM,EAAc0K,GAAeN,EAAkB;AAAA;AAAA,EAGrD;AAAA;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAAxL,GAAS,MAAAgP,GAAM,MAAAnD,GAAM,eAAAC,MAAkB;AAG/C,IAAIkD,MACF,CAACvD,IAAmBC,EAAmB,EAAE,QAAQ,CAAKzT,MAAA;AACpD,MAAAA,EAAE,gBAAgB+H;AAAA,IAAA,CACnB,GAEDoB,EAAc0K,GAAeL,EAAiB,GACzCA,GAAkB,qBACrB3J,EAAY+J,GAAMtM,CAAS,GAC3BuC,EAAYgK,GAAevM,CAAS,GACvBsD,EAAA7C,GAAS4J,IAAc,OAAO,GAE3C,KAAK,OAAO,CAACoF,GAEbrB,GAAsB,IAAI,GAC1BvM,EAAc0K,GAAeJ,EAAmB;AAAA,EAGtD;AAAA;AAAA,EAGA,UAAU;AACR,IAAI,KAAK,QAAM,KAAK,KAAK,GAEzB4C,GAAsB,IAAI,GAC1B,MAAM,QAAQ;AAAA,EAChB;AACF;AAnHE1M,EADmBqJ,IACZ,YAAWH,KAClBlJ,EAFmBqJ,IAEZ,QAAOD,KACdpJ,EAHmBqJ,IAGZ,eAAcF;ACzZvB,MAAMuE,IAAc,SCAdC,KAAiB,SCAjBC,KAAqB,aCErBC,KAAgB,aCAhBC,KAAmB,gBCAnBC,KAAiB,cCAjBC,KAAsB,mBCYtBC,KAAgB,CAACtG,MAAwB;AAAA,EAC7C,GAAG5B,GAAuB8H,IAAelG,CAAM;AAAA,EAC/C,GAAG5B,GAAuB+H,IAAkBnG,CAAM;AAAA,EAClD,GAAG5B,GAAuBgI,IAAgBpG,CAAM;AAAA,EAChD,GAAG5B,GAAuBiI,IAAqBrG,CAAM;AAAA,EACrD,GAAG5B,GAAuB,YAAY4B,CAAM;AAC9C,GAQauG,KAAiB,CAAC9P,MAA0B;AACjD,QAAA+P,IAAKC,GAAgBhQ,CAAO;AAClC0J,EAAAA,EAAgBqG,GAAI;AAAA,IAClB,cAAc;AAAA,IACd,UAAU;AAAA,EAAA,CACX;AAEK,QAAAE,IAAaJ,GAAcE,CAAE;AAEnC,EAAIE,EAAW,UACbA,EAAW,QAAQ,CAASC,MAAA;AAC1BxG,IAAAA,EAAgBwG,GAAO;AAAA,MACrB,cAAc;AAAA,MACd,aAAa;AAAA,IAAA,CACd;AAAA,EAAA,CACF;AAEL,GASaC,KAAmB,CAACnQ,MAAyB;AACxD,QAAM,EAAE,aAAAwM,EAAA,IAAgBE,GAAmB1M,CAAO,GAC5C,EAAE,YAAAoQ,EAAA,IAAehC,GAAUpO,CAAO;AACjC,SAAA,KAAK,IAAIoQ,IAAa5D,CAAW;AAC1C,GASa6D,KAAe,CAACrQ,GAAsBsQ,MAAuB;AAClE,QAAAP,IAAKC,GAAgBhQ,CAAO,GAC5BuQ,IAAU,SAASvE,EAAgB+D,GAAI,cAAc,GAAG,EAAE,GAE1DS,IADSxE,EAAgB+D,GAAI,UAAU,MAAM,YACzBQ,IAAU,IAAIJ,GAAiBnQ,CAAO,GAC1DiQ,IAAaJ,GAAcE,CAAE;AAGnC,EAAIO,MACF5G,EAAgBqG,GAAI;AAAA,IAClB,UAAU;AAAA,IACV,cAAc,GAAGQ,IAAUC;AAAA,EAAA,CAC5B,GAGGP,EAAW,UACbA,EAAW,QAAQ,CAASC,MAAA;AACpB,UAAAO,IAAezE,EAAgBkE,GAAO,cAAc;AAGtD,QAFJA,EAAM,MAAM,eAAe,GAAG,SAASO,GAAc,EAAE,IAAID,OAEvD,CAACb,IAAgBC,EAAmB,EAAE,KAAK,OAAK/N,EAASqO,GAAO/X,CAAC,CAAC,GAAG;AACjE,YAAAuY,IAAa1E,EAAgBkE,GAAO,aAAa;AACvD,MAAAA,EAAM,MAAM,cAAc,GAAG,SAASQ,GAAY,EAAE,IAAIF;AAAA;AAAA,EAC1D,CACD;AAGP,GC9FMG,IAAkB,aCElBC,KAAiBC,GAAc,EAAE,SAAS,OAAO,WAAW,mBAAmB,GAE/EC,KAAc,CAAChR,GAAqBiR,MAAiC;AACzE,QAAMC,IAAkBC,EAAOF,CAAe,KAAKA,EAAgB,aAAa,QAC1EG,IAASD,EAAOF,CAAe,KAAK,CAACC,IAAkBD,IAAkBH,IACzEO,IAAOH,IAAkBD,IAAkBf,GAAgBlQ,CAAM;AAEnE,EAAAmR,EAAOnR,CAAM,MACXoR,MAAWN,MACbO,EAAK,OAAOP,EAAc,GAE5BM,EAAO,OAAOpR,CAAM;AAExB,GAEMsR,KAAc,CAACtR,GAAqBiR,MAAiC;AACzE,QAAMC,IAAkBC,EAAOF,CAAe,KAAKA,EAAgB,aAAa,QAC1EG,IAASD,EAAOF,CAAe,KAAK,CAACC,IAAkBD,IAAkBH;AAE3E,EAAAK,EAAOnR,CAAM,MACfA,EAAO,OAAO,GAEVoR,MAAWN,MAAkB,CAACA,GAAe,SAAS,UACxDA,GAAe,OAAO;AAG5B,GAEMS,KAAW,CAACvR,GAAqBiR,MAAiC;AACtE,QAAMG,IAASD,EAAOF,CAAe,KAAKA,EAAgB,aAAa,SAASA,IAAkBH;AAClG,SAAOK,EAAOnR,CAAM,KAAKoR,EAAO,SAASpR,CAAM;AACjD,GChBMwR,KAAiB,YACjBC,KAAqB,GAAGjC,KAAegC,MACvCE,KAAyB,GAAGb,KAAmBW,MAC/CG,KAAsB,IAAInC,KAAe/P,KACzCmS,KAA0B,IAAIf,KAAmBpR,KAGjDoS,IAAUd,GAAc,KAAK,GAQ7Be,KAAiB,CAAC5R,MACfC,EAAc,GAAGwR,MAAuBC,MAA2BnO,EAAYvD,CAAO,CAAC,GAQ1F6R,KAAoB,CAACC,MAAsB;AACzC,QAAAC,IAAcD,IAAUP,KAAqBC;AACnD,GAACD,IAAoBC,EAAsB,EAAE,QAAQ,CAAKrZ,MAAA;AACxD2J,IAAAA,EAAY6P,GAASxZ,CAAC;AAAA,EAAA,CACvB,GACDyK,EAAS+O,GAASI,CAAW;AAC/B,GASMC,KAAgB,CAAChS,GAAsBiS,GAAkBH,MAAsB;AACnF,EAAAD,GAAkBC,CAAO,GACbhB,GAAAa,GAAS3B,GAAgBhQ,CAAO,CAAC,GACzCiS,KAASrP,EAAS+O,GAASrS,CAAS;AAC1C,GAKM4S,KAAc,MAAM;AACxB,EAAKrQ,EAAS8P,GAASpS,CAAS,MAC9BqD,EAAS+O,GAASpS,CAAS,GAC3B+I,GAAOqJ,CAAO;AAElB,GAKMQ,KAAc,MAAM;AACxBrQ,EAAAA,EAAY6P,GAASpS,CAAS;AAChC,GAOM6S,KAAgB,CAACpS,MAAgC;AACjD,EAAC4R,GAAe5R,CAAO,MACzB8B,EAAY6P,GAASrS,CAAS,GAClB8R,GAAAO,GAAS3B,GAAgBhQ,CAAO,CAAC,GAC7C8P,GAAe9P,CAAO;AAE1B,GCrFMqS,KAAY,CAACrS,MACV0H,EAAc1H,CAAO,KAAKgM,EAAgBhM,GAAS,YAAY,MAAM,YAAYA,EAAQ,iBAAiB,MCwD7GsS,KAAgB,IAAIhD,KACpBiD,KAAsB,IAAItQ,OAAiBqN,OAC3CkD,KAAuB,IAAIhT,OAAkB8P,OAC7CmD,KAAmB,GAAGnD,YAEtBoD,KAAgB;AAAA,EACpB,UAAU;AAAA,EACV,UAAU;AACZ,GAMMC,KAAmB,CAAC3S,MAAyBW,EAAmBX,GAASuP,EAAc,GAKvFqD,KAAoB,CAAC5S,MAAyB,IAAI6S,GAAM7S,CAAO,GAI/D8S,KAAiB/R,EAA8B,WAAWuO,GAAa,GACvEyD,KAAkBhS,EAA8B,YAAYuO,GAAa,GACzE0D,KAAiBjS,EAA8B,WAAWuO,GAAa,GACvE2D,KAAmBlS,EAA8B,aAAauO,GAAa,GAU3E4D,KAAoB,CAACzQ,MAAgB;AACnC,QAAA,EAAE,SAAAzC,EAAY,IAAAyC,GACd0Q,IAAiBhD,GAAiBnQ,CAAO,GACzC,EAAE,cAAAyM,GAAc,cAAA2G,EAAa,IAAI1G,GAAmB1M,CAAO,GAC3D,EAAE,cAAcqT,GAAa,cAAcC,MAAsBtT,GACjEuT,IAAgBF,MAAgBC;AAGlC,MAAA,CAACC,KAAiBJ,GAAgB;AACpC,UAAMK,IAAO3N,GAAM7F,CAAO;AAAA;AAAA,MAAgD;AAAA,QAA5C,gBACxByT,IAAW,CAAA;AACR,IAAAA,EAAAD,CAAG,IAAI,GAAGL,OACnBzJ,EAAgB1J,GAASyT,CAAQ;AAAA;AAEtB,EAAApD,GAAArQ,GAASuT,KAAiB9G,MAAiB2G,CAAY;AACtE,GAQMM,KAAqB,CAACjR,GAAapB,MAAkB;AACnD,QAAAC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAAxB,GAAS,QAAA2T,EAAW,IAAAlR;AACrB,EAAAnB,EAAAtB,GAAS2B,GAAiBiS,EAAoC,GACrEtS,EAAO8M,GAAUpO,CAAO,GAAGkO,IAAayF,GAAQhN,EAAc,GAC9DrF,EAAOiC,EAAYvD,CAAO,GAAGyH,IAAcoM,EAAgC;AAC7E,GAQMC,KAAqB,CAACrR,GAAapB,MAAkB;AACnD,QAAAC,IAASD,IAAME,IAAcC,GAC7B,EAAE,UAAAgI,EAAa,IAAA/G;AAGrB,EAAI+G,EAAS,UACXA,EAAS,QAAQ,CAAOG,MAAArI,EAAOqI,GAAKhI,GAAiBoS,EAAkC,CAAC;AAE5F,GAOMC,KAAiB,CAACvR,MAAgB;AACtC,QAAM,EAAE,UAAA+G,GAAU,SAAAxJ,GAAS,eAAAiU,EAAA,IAAkBxR;AAC7C,EAAA2P,GAAcpS,CAAO,GACrB0J,EAAgB1J,GAAS,EAAE,cAAc,IAAI,SAAS,IAAI,GAC1D0T,GAAmBjR,CAAI;AAEvB,QAAMyR,IAAepB,GAAe,iBAAiBtJ,EAAS,KAAK6I,EAAS;AAExE,EAAA6B,KAAchF,GAAMgF,CAA2B,GAEnDjB,GAAiB,gBAAgBgB,GACjC7S,EAAcpB,GAASiT,EAAgB;AACzC,GAOMkB,KAAiB,CAAC1R,MAAgB;AAChC,QAAA,EAAE,SAAAzC,GAAS,eAAAiU,EAAkB,IAAAxR;AACnCyM,EAAAA,GAAMlP,CAAO,GACb0T,GAAmBjR,GAAM,EAAI,GAE7BsQ,GAAgB,gBAAgBkB,GAChC7S,EAAcpB,GAAS+S,EAAe;AACxC,GAOMqB,KAAkB,CAAC3R,MAAgB;AACjC,QAAA,EAAE,SAAAzC,GAAS,SAAAiS,EAAY,IAAAxP;AAC7BiH,EAAAA,EAAgB1J,GAAS,EAAE,SAAS,QAAS,CAAA,GAE7CkT,GAAkBzQ,CAAI,GAEjBmP,GAAe5R,CAAO,KACzB0J,EAAgBsG,GAAgBhQ,CAAO,GAAG,EAAE,UAAU,UAAU,GAGlE4C,EAAS5C,GAAST,CAAS,GAC3B8U,GAAgBrU,GAASsU,EAAU,GACtBzR,EAAA7C,GAASuU,IAAW,MAAM,GAEnCtC,IAASlQ,EAAqB/B,GAAS,MAAMmU,GAAe1R,CAAI,CAAC,IAChE0R,GAAe1R,CAAI;AAC1B,GAOM+R,KAAkB,CAAC/R,MAAgB;AACvC,QAAM,EAAE,SAAAzC,GAAS,SAAA6E,GAAS,SAAAoN,EAAA,IAAYxP;AAIlC,EAAAoC,EAAQ,YAAYoN,KAAWpQ,EAAS8P,GAASpS,CAAS,KAAK,CAACqS,GAAe5R,CAAO,KAE5EmS,MACZpQ,EAAqB4P,GAAS,MAAMqC,GAAevR,CAAI,CAAC,KAExDuR,GAAevR,CAAI;AAEvB,GASMsR,KAAoB,CAAC9b,MAAkB;AACrC,QAAA,EAAE,QAAA6H,EAAW,IAAA7H,GAEb+R,IAAUlK,KAAU4D,EAAQ5D,GAAuByS,EAAmB,GACtEvS,IAAUgK,KAAW5G,EAAiB4G,CAAO,GAC7CvH,IAAOzC,KAAW2S,GAAiB3S,CAAO;AAGhD,EAAIyC,MAEEuH,KAAWA,EAAQ,YAAY,OAAK/R,EAAE,eAAe,GACzDwK,EAAK,gBAAgBuH,GACrBvH,EAAK,OAAO;AAEhB,GAQMoR,KAAkB,CAAC,EAAE,MAAApO,GAAM,QAAA3F,QAA4B;AAC3D,QAAME,IAAUC,EAAcwR,IAAqBlO,EAAYzD,CAAc,CAAC,GACxE2C,IAAOzC,KAAW2S,GAAiB3S,CAAO;AAGhD,MAAIyC,GAAM;AACF,UAAA,EAAE,SAAAoC,EAAY,IAAApC;AAGlB,IAAAoC,EAAQ,YACRY,MAAS0J;AAAAA,IACTtN,EAAS7B,GAAST,CAAS,MAG3BkD,EAAK,gBAAgB,MACrBA,EAAK,KAAK;AAAA;AAGhB;AAOA,SAASmR,GAAuC3b,GAAe;A3CnR/D,MAAAuO,GAAAiO;A2CoRQ,QAAAhS,IAAOkQ,GAAiB,IAAI;AAIlC,MAAIlQ,KAAQ,CAACyC,EAAM,IAAI,IAAI,GAAG;AAC5B,UAAM,EAAE,SAAAL,GAAS,UAAA6P,GAAU,aAAAC,EAAA,IAAgBlS,GACrC,EAAE,UAAAmS,EAAa,IAAA/P,GACf,EAAE,QAAA/E,EAAW,IAAA7H,GAEb4c,KAAetR,KAAAA,IAAAA,EAAY,IAAI,MAAhBA,gBAAAA,EAAmB,mBAAnBA,gBAAAA,EAAmC,WAAW,QAC7DuR,IAAqBH,EAAY,SAAS7U,CAAqB,GAC/D2B,IAAU3B,KAAU4D,EAAQ5D,GAAuB0S,EAAoB;AAGzE,IAAAkC,KAAY,CAACI,IACT5P,EAAA;AAAA,MACJ;AAAA,MACA,MAAM;AACJtC,QAAAA,EAAS,MAAM6P,EAAgB,GAC/B1Q,EAAqB4S,GAAa,MAAMI,GAAoBtS,CAAI,CAAC;AAAA,MACnE;AAAA,MACA;AAAA,IAAA,KAEOhB,KAAY,CAACoT,KAAgB,CAACH,KAAY,CAACI,KAAsBF,OAC1EnS,EAAK,gBAAgBhB,KAAW,MAChCgB,EAAK,KAAK,GACVxK,EAAE,eAAe;AAAA;AAGvB;AAOA,MAAM8c,KAAsB,CAACtS,MAAgB;AACrC,QAAA,EAAE,SAAAzC,GAAS,aAAA2U,EAAgB,IAAAlS,GAC3BuS,KAAY3M,GAA6BsM,CAAW,KAAK,KAAK;AACpE7S,EAAAA,EAAY9B,GAASyS,EAAgB,GAErCvN,EAAM,IAAIlF,GAAS,MAAMkF,EAAM,MAAMlF,CAAO,GAAGgV,CAAQ;AACzD;AAKA,MAAqBnC,WAAchT,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAe/C,YAAYC,GAA8BC,GAAgC;AACxE,UAAMD,GAAQC,CAAM;AAkHtB;AAAA;AAAA;AAAA,IAAA6B,EAAA,gBAAS,MAAM;AAET,MAAAC,EAAS,KAAK,SAAStC,CAAS,KAAG2T,GAAkB,IAAI;AAAA,IAAA;AAjHvD,UAAA,EAAE,SAAAlT,EAAY,IAAA,MAGd2U,IAAc1U,EAAc,IAAIqP,YAAsBtP,CAAO;AAGnE,IAAI2U,MACF,KAAK,cAAcA,GAEd,KAAA,WAAW,CAAC,GAAGjP,GAAiB6M,IAAqBhP,EAAYvD,CAAO,CAAC,CAAC,EAAE;AAAA,MAC/E,CAAA2J,MAAOvG,EAAiBuG,CAAG,MAAM3J;AAAA,IAAA,GAI9B,KAAA,WAAW,KAAK,QAAQ,aAAa,UACrC,KAAA,UAAU6B,EAAS7B,GAASV,CAAS,GAC1C,KAAK,gBAAgB,MAGrBwU,GAAmB,MAAM,EAAI;AAAA,EAEjC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAAvE;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAmD;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACH,IAAA7Q,EAAS,KAAK,SAAStC,CAAS,IAAG,KAAK,KAAK,IAC5C,KAAK,KAAK;AAAA,EACjB;AAAA;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAAS,GAAS,SAAA6E,GAAS,SAAAoN,GAAS,eAAAgC,MAAkB,MAC/C,EAAE,UAAAW,EAAa,IAAA/P;AACrB,QAAIoQ,IAAe;AAEnB,QAAI,CAACpT,EAAS7B,GAAST,CAAS,MAC9BuT,GAAe,gBAAgBmB,KAAiB,QAChD7S,EAAcpB,GAAS8S,EAAc,GACjC,CAACA,GAAe,mBAAkB;AAE9B,YAAAoC,IAActD,GAAe5R,CAAO;AAEtC,UAAAkV,KAAeA,MAAgBlV,GAAS;AACpC,cAAAkB,IACJyR,GAAiBuC,CAAW;AAAA,QAE5BvU,EAAyDuU,GAAa1F,EAAkB;AACtF,QAAAtO,KAAMA,EAAK,KAAK;AAAA;AAEtB,MAAI0T,KACGvD,GAASM,CAAO,IAGnBE,GAAkB,EAAI,IAFRG,GAAAhS,GAASiS,GAAS,EAAI,GAKtCgD,IAAe5M,GAA6BsJ,CAAO,GACvCO,MACZ,WAAW,MAAMkC,GAAgB,IAAI,GAAGa,CAAY,MAEpDb,GAAgB,IAAI,GAEhBc,KAAerT,EAAS8P,GAASpS,CAAS,KAChC4S;;EAKtB;AAAA;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAAnS,GAAS,SAAAiS,GAAS,eAAAgC,EAAA,IAAkB;AAExC,IAAApS,EAAS7B,GAAST,CAAS,MAC7ByT,GAAe,gBAAgBiB,KAAiB,QAChD7S,EAAcpB,GAASgT,EAAc,GAEhCA,GAAe,qBAClBlR,EAAY9B,GAAST,CAAS,GACjBsD,EAAA7C,GAASsU,IAAY,MAAM,GACxCD,GAAgBrU,GAASuU,EAAS,GAG9BtC,IACFlQ,EAAqB/B,GAAS,MAAMwU,GAAgB,IAAI,CAAC,IAEzDA,GAAgB,IAAI;AAAA,EAI5B;AAAA;AAAA,EAWA,UAAU;AACF,UAAAhM,IAAQ,EAAE,GAAG,QACb,EAAE,SAAAxI,GAAS,aAAA2U,EAAgB,IAAAnM,GAC3B2M,IAAW,MAAM,WAAW,MAAM,MAAM,QAAA,GAAW,EAAE;AAC3D,IAAArB,GAAmBtL,CAAK,GAGxB,KAAK,KAAK,GAEN3G,EAAS7B,GAAS,MAAM,IAC1B+B,EAAqB4S,GAAaQ,CAAQ,IAEjCA;EAEb;AACF;AAtJEvT,EADmBiR,IACZ,YAAWP,KAClB1Q,EAFmBiR,IAEZ,QAAOD,KACdhR,EAHmBiR,IAGZ,eAAcF;AC9QvB,MAAMyC,KAAoB,IAAIzE,KACxB0E,KAA0B,IAAIpT,OAAiB0O,OAC/C2E,KAA2B,IAAI9V,OAAkBmR,OACjD4E,KAAyB,GAAG5E,cAE5B6E,KAAoB;AAAA,EACxB,UAAU;AAAA;AAAA,EACV,UAAU;AAAA;AAAA,EACV,QAAQ;AAAA;AACV,GAMMC,KAAuB,CAACzV,MAAyBW,EAAuBX,GAASwP,EAAkB,GAKnGkG,KAAwB,CAAC1V,MAAyB,IAAI2V,GAAU3V,CAAO,GAIvE4V,KAAqB7U,EAAkC,WAAW4P,GAAiB,GACnFkF,KAAsB9U,EAAkC,YAAY4P,GAAiB,GACrFmF,KAAqB/U,EAAkC,WAAW4P,GAAiB,GACnFoF,KAAuBhV,EAAkC,aAAa4P,GAAiB,GAUvFqF,KAAwB,CAACvT,MAAoB;AAC3C,QAAA,EAAE,SAAAzC,EAAY,IAAAyC,GACd,EAAE,cAAAgK,GAAc,cAAA2G,EAAa,IAAI1G,GAAmB1M,CAAO;AACpD,EAAAqQ,GAAArQ,GAASyM,MAAiB2G,CAAY;AACrD,GAQM6C,KAAwB,CAACxT,GAAiBpB,MAAkB;AAC1D,QAAAC,IAASD,IAAME,IAAcC;AACnC,EAAAiB,EAAK,SAAS,QAAQ,CAAAkH,MAAOrI,EAAOqI,GAAKhI,GAAiBuU,EAAwC,CAAC;AACrG,GAQMC,KAAyB,CAAC1T,GAAiBpB,MAAkB;AAC3D,QAAAC,IAASD,IAAME,IAAcC,GAC7B8B,IAAMC,EAAYd,EAAK,OAAO;AAC7B,EAAAnB,EAAAgC,GAAKmE,IAAc2O,EAA2C,GAC9D9U,EAAAgC,GAAK3B,GAAiB0U,EAAwC;AACvE,GAOMC,KAAsB,CAAC7T,MAAoB;AACzC,QAAA,EAAE,SAAAzC,GAAS,SAAA6E,EAAY,IAAApC;AAGzB,EAACoC,EAAQ,WACXmR,GAAsBvT,CAAI,GAC1BiH,EAAgBsG,GAAgBhQ,CAAO,GAAG,EAAE,UAAU,UAAU,IAGlE4C,EAAS5C,GAASuV,EAAsB,GACxC3S,EAAS5C,GAAST,CAAS,GAC3BmK,EAAgB1J,GAAS,EAAE,YAAY,UAAW,CAAA,GAElD+B,EAAqB/B,GAAS,MAAMuW,GAAsB9T,CAAI,CAAC;AACjE,GAOM+T,KAAsB,CAAC/T,MAAoB;AACzC,QAAA,EAAE,SAAAzC,GAAS,SAAA6E,EAAY,IAAApC,GACvByS,IAActD,GAAe5R,CAAO;AAE1C,EAAAA,EAAQ,KAAK,GAET,CAACkV,KAAerQ,EAAQ,YAAYhD,EAAS8P,GAASpS,CAAS,KACrD4S,MACZpQ,EAAqB4P,GAAS,MAAM8E,GAAsBhU,CAAI,CAAC,KAC1DgU,GAAsBhU,CAAI;AACnC,GASMyT,KAA0B,CAACje,MAAkB;AACjD,QAAM+R,IAAUtG,EAAQzL,EAAE,QAAuBod,EAAuB,GAClErV,IAAUgK,KAAW5G,EAAiB4G,CAAO,GAC7CvH,IAAOzC,KAAWyV,GAAqBzV,CAAO;AAGpD,EAAIyC,MACFA,EAAK,gBAAgBuH,GACrBvH,EAAK,OAAO,GAERuH,KAAWA,EAAQ,YAAY,OACjC/R,EAAE,eAAe;AAGvB,GAOMoe,KAA0B,CAACpe,MAAkB;AAC3C,QAAA,EAAE,QAAA6H,EAAW,IAAA7H,GACb+H,IAAUC,EAAcyR,IAAyBnO,EAAYzD,CAAc,CAAC,GAC5E4W,IAAmBzW,EAAcqV,IAA0BtV,CAAkC,GAC7FyC,IAAOzC,KAAWyV,GAAqBzV,CAAO;AAGpD,MAAIyC,GAAM;AACF,UAAA,EAAE,SAAAoC,GAAS,UAAA2E,EAAa,IAAA/G,GACxB,EAAE,UAAAmS,EAAa,IAAA/P,GACfmF,IAAUtG,EAAQ5D,GAAuBuV,EAAuB,GAChEsB,IAAYpT,EAAYvD,CAAO,EAAE,aAAa;AAGpD,KAAI,CAAC2R,EAAQ,SAAS7R,CAAqB,KAAK8U,MAAa,cAGzD,EAAE+B,KAAaA,EAAU,WAAW,YAClC,CAAC3W,EAAQ,SAASF,CAAqB,KACvC8U;AAAA,KAC4B,CAAC5K,KAAWR,EAAS,SAAS1J,CAAqB,MAC9E4W,KAAoBA,EAAiB,SAAS5W,CAAqB,OAEtE2C,EAAK,gBACHiU,KAAoBA,EAAiB,SAAS5W,CAAqB,IAAI4W,IAAmB,MAC5FjU,EAAK,KAAK,IAIRuH,KAAWA,EAAQ,YAAY,OAAK/R,EAAE,eAAe;AAAA;AAG/D,GAQMme,KAA6B,CAAC,EAAE,MAAA3Q,GAAM,QAAA3F,QAA4B;AACtE,QAAME,IAAUC,EAAcyR,IAAyBnO,EAAYzD,CAAc,CAAC,GAC5E2C,IAAOzC,KAAWyV,GAAqBzV,CAAO;AAGpD,EAAIyC,KAEEA,EAAK,QAAQ,YAAYgD,MAAS0J,OACpC1M,EAAK,gBAAgB,MACrBA,EAAK,KAAK;AAGhB,GAOM8T,KAAwB,CAAC9T,MAAoB;AAC3C,QAAA,EAAE,SAAAzC,EAAY,IAAAyC;AACpBX,EAAAA,EAAY9B,GAASuV,EAAsB,GAE3ClB,GAAgBrU,GAASsU,EAAU,GACtBzR,EAAA7C,GAASuU,IAAW,MAAM,GAC1B1R,EAAA7C,GAAS,QAAQ,QAAQ,GAEtCoB,EAAcpB,GAAS6V,EAAmB,GAE1CM,GAAuB1T,GAAM,EAAI,GACjCyM,GAAMlP,CAAO;AACf,GAOMyW,KAAwB,CAAChU,MAAoB;AAC3C,QAAA,EAAE,SAAAzC,GAAS,UAAAwJ,EAAa,IAAA/G;AAEjBI,EAAAA,EAAA7C,GAASsU,IAAY,MAAM,GACxCD,GAAgBrU,GAASuU,EAAS,GAClCF,GAAgBrU,GAAS,MAAM,GAC/B0J,EAAgB1J,GAAS,EAAE,YAAY,GAAI,CAAA;AAE3C,QAAM4W,IAAiBhB,GAAmB,iBAAiBpM,EAAS,KAAK6I,EAAS;AAE9E,EAAAuE,KAAgB1H,GAAM0H,CAA6B,GAEvDxE,GAAcpS,CAAO,GAErBoB,EAAcpB,GAAS+V,EAAoB,GAC3CjU,EAAY9B,GAASuV,EAAsB,GAGtC3D,GAAe5R,CAAO,KACzBmW,GAAuB1T,CAAI;AAE/B;AAKA,MAAqBkT,WAAkB9V,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAYnD,YAAYC,GAA8BC,GAAoC;AAC5E,UAAMD,GAAQC,CAAM;AAGd,UAAA,EAAE,SAAAC,EAAY,IAAA;AAGf,SAAA,WAAW,CAAC,GAAG0F,GAAiB2P,IAAyB9R,EAAYvD,CAAO,CAAC,CAAC,EAAE;AAAA,MACnF,CAAA2J,MAAOvG,EAAiBuG,CAAG,MAAM3J;AAAA,IAAA,GAInC,KAAK,gBAAgB,MAGrBiW,GAAsB,MAAM,EAAI;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAAzG;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAgG;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACH,IAAA3T,EAAS,KAAK,SAAStC,CAAS,IAAG,KAAK,KAAK,IAC5C,KAAK,KAAK;AAAA,EACjB;AAAA;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAAS,GAAS,SAAA6E,GAAS,eAAAoP,EAAA,IAAkB;AAC5C,QAAIgB,IAAe;AAEnB,QAAI,CAACpT,EAAS7B,GAAST,CAAS,MAC9BqW,GAAmB,gBAAgB3B,KAAiB,QACpD4B,GAAoB,gBAAgB5B,KAAiB,QACrD7S,EAAcpB,GAAS4V,EAAkB,GAErC,CAACA,GAAmB,mBAAkB;AAElC,YAAAV,IAActD,GAAe5R,CAAO;AACtC,UAAAkV,KAAeA,MAAgBlV,GAAS;AACpC,cAAAkB,IACJuU,GAAqBP,CAAW;AAAA,QAEhCvU,EAAyDuU,GAAa3F,EAAc;AAClF,QAAArO,KAAMA,EAAK,KAAK;AAAA;AAGtB,MAAI2D,EAAQ,YACLwM,GAASM,CAAO,IAGDE,OAFlBG,GAAchS,GAAS,EAAI,GAK7BiV,IAAe5M,GAA6BsJ,CAAO,GACvCO,MAEZ,WAAW,MAAMoE,GAAoB,IAAI,GAAGrB,CAAY,MAExDqB,GAAoB,IAAI,GAEpBpB,KAAerT,EAAS8P,GAASpS,CAAS,KAChC4S;;EAKtB;AAAA;AAAA,EAGA,OAAO;AACC,UAAA,EAAE,SAAAnS,GAAS,eAAAiU,EAAkB,IAAA;AAE/B,IAAApS,EAAS7B,GAAST,CAAS,MAC7BuW,GAAmB,gBAAgB7B,KAAiB,QACpD8B,GAAqB,gBAAgB9B,KAAiB,QACtD7S,EAAcpB,GAAS8V,EAAkB,GACpCA,GAAmB,qBACtBlT,EAAS5C,GAASuV,EAAsB,GACxCzT,EAAY9B,GAAST,CAAS,GAC9BiX,GAAoB,IAAI;AAAA,EAG9B;AAAA;AAAA,EAGA,UAAU;AACF,UAAAhO,IAAQ,EAAE,GAAG,QACb,EAAE,SAAAxI,GAAS,SAAA6E,EAAY,IAAA2D,GACvBqO,IAAQhS,EAAQ,WAAWwD,GAA6BsJ,CAAO;AAAA;AAAA,MAA+B;AAAA,OAC9FwD,IAAW,MAAM,WAAW,MAAM,MAAM,WAAW0B,IAAQ,EAAE;AACnE,IAAAZ,GAAsBzN,CAAK,GAE3B,KAAK,KAAK,GACN3G,EAAS7B,GAAST,CAAS,IAC7BwC,EAAqB/B,GAASmV,CAAQ,IAG7BA;EAEb;AACF;AA7HEvT,EADmB+T,IACZ,YAAWP,KAClBxT,EAFmB+T,IAEZ,QAAOD,KACd9T,EAHmB+T,IAGZ,eAAcF;ACvSvB,MAAMqB,KAAgB,WCAhBC,KAAmB,WCAnBC,KAAgB,WCOhBC,KAAiB,CAACC,MAAoB;AAC1C,QAAMC,IAAYD,MAAYF,IACxBI,IAAYD,IAAY,GAAGD,YAAkB,GAAGA,UAChDG,IAAUF,IAAoD,KAAxC,cAAcD,mBACpC3P,IAAQ,eAAe2P,mBACvBI,IAAO,eAAeF;AAC5B,SAAO,eAAeF,YAAkBF,OAAkBK,IAAS9P,IAAQ+P;AAC7E,GCfMC,KAAoB;AAAA,EACxB,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AACT,GCkBMC,KAAW,CAAoB/U,MAAY;AAC/C,QAAMgV,IAAa,6BACb,EAAE,SAAAzX,GAAS,SAAA0X,GAAS,WAAAC,GAAW,SAAA9S,GAAS,OAAA0C,EAAU,IAAA9E;AAGxD,MAAIiV,GAAS;AACL,UAAAE,IAAe,EAAE,GAAGL,MACpB3R,IAAMC,GAAM7F,CAAO;AAGzB0J,IAAAA,EAAgBgO,GAAS;AAAA;AAAA,MAEvB,KAAK;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AACK,UAAAG,IAAYpV,EAAK,SAASsU,IAC1B,EAAE,aAAae,GAAU,cAAcC,MAAcL,GACrD,EAAE,aAAaM,GAAQ,cAAcC,GAAQ,aAAaC,EAAW,IAAAxL,GAAmB1M,CAAO;AACjG,QAAA,EAAE,WAAAmY,EAAc,IAAAtT;AACpB,UAAM,EAAE,aAAauT,GAAc,aAAaC,MAAiBV,GAE3DW,KADiBtM,EAAgB2L,GAA0B,UAAU,MACpC,SACjCxE,IAA+B,KAAK,IAAnBmF,KAAuBF,IAAeC,IAAyBL,IAASE,CAAtB,GACnEK,IAAc3S,KAAO0S;AAAA;AAAA,MAAyCnF;AAAA,QAAiB,GAC/EqF,KAAeR,KAAWpS,IAAuB,IAAjBuN,KAAsB,GACtD;AAAA,MACJ,OAAOsF;AAAA,MACP,QAAQC;AAAA,MACR,MAAMC;AAAA,MACN,OAAOC;AAAA,MACP,KAAKC;AAAA,IAAA,IACH9L,GAAsB/M,GAAS,EAAI,GACjC,EAAE,GAAA7E,GAAG,GAAAkC,OAAM;AAAA,MACf,GAAGsb;AAAA,MACH,GAAGE;AAAA,IAAA;AAGLnP,IAAAA,EAAgBnC,GAAsB;AAAA,MACpC,KAAK;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AACD,QAAIuR,KAA+B,GAC/BC,KAAkC,IAClCC,KAAgC,GAChCC,KAAiC,IACjCC,KAA4B,IAC5BC,KAA6B,IAC7BC,KAA8B;AAE5B,UAAAC,KAAc9R,EAAsB,eAAe,GACnD+R,KAAe/R,EAAsB,gBAAgB,GACrDgS,KAAcF,KAAa;AAG7B,QAAAjM,KAAYyL,KAAcd,IAAYuB,KAAc,GACpDpM,KAAe2L,KAAcd,IAAYW,IAAaY,MAAerB,GACrE5K,KAAasL,IAAeb,IAAWuB,KAAad,GACpDjL,KAAcqL,IAAeb,IAAWW,IAAYY,MAAcb;AAEhE,UAAAgB,KAAc,CAAC,QAAQ,OAAO,GAC9BC,KAAY,CAAC,OAAO,QAAQ;AAEtB,IAAArM,KAAAoM,GAAY,SAASrB,CAAS,IACtCU,KAAcH,IAAa,IAAIX,IAAY,IAAIuB,KAAc,IAC7DlM,IACWF,KAAAsM,GAAY,SAASrB,CAAS,IACzCU,KAAcd,IAAY,IAAIW,IAAa,IAAIY,MAAerB,IAC9D/K,IACSG,KAAAoM,GAAU,SAAStB,CAAS,IAAIQ,IAAeF,IAAY,IAAIX,IAAW,IAAIS,IAAclL,IAC3FC,KAAAmM,GAAU,SAAStB,CAAS,IACtCQ,IAAeb,IAAW,IAAIW,IAAY,KAAKD,KAC/ClL,IAIJ6K,IAAYqB,GAAY,SAASrB,CAAS,KAAK9K,MAAcC,KAAc,QAAQ6K,GAEvEA,IAAAA,MAAc,SAAS/K,KAAY,WAAW+K,GAC9CA,IAAAA,MAAc,YAAYjL,KAAe,QAAQiL,GACjDA,IAAAA,MAAc,UAAU9K,KAAa,UAAU8K,GAC3DA,IAAYA,MAAc,WAAW7K;AAAA;AAAA,MAAyC;AAAA,QAAS6K,GAGlFT,EAAQ,UAAU,SAASS,CAAS,MACvCT,EAAQ,YAAYA,EAAQ,UAAU,QAAQD,GAAYG,EAAaO,CAAS,CAAC,IAK/EqB,GAAY,SAASrB,CAAS,KAE5BA,MAAc,SAEDa,KAAA7d,IAAI2c,KAAYD,IAAYwB,KAAa,KAGzCL,KAAA7d,IAAIsd,KAAaZ,IAAYwB,KAAa,IAIvDjM,MAAaF,MACD4L,KAAA,GACGC,KAAA,GACNG,KAAAL,KAAcH,IAAa,IAAIY,KAAc,KAC/ClM,MACK0L,KAAAzb,IACG0b,KAAA,IACjBG,KAAWR,IAAa,IAAIW,MACnBnM,MACT4L,KAAczb,KAAI0a,IAAYW,GACbK,KAAA,IACNG,KAAAnB,IAAYW,IAAa,IAAIW,OAE1BP,KAAAzb,KAAI0a,IAAY,IAAIW,IAAa,GACpCQ,KAAAnB,IAAY,IAAIuB,KAAc,MAElCG,GAAU,SAAStB,CAAS,MACjCA,MAAc,QACFW,KAAAzb,KAAI0a,KAAaF,IAAYyB,KAAc,KAG3CR,KAAAzb,KAAIqb,KAAcb,IAAYyB,KAAc,IAIxDjM,MACa2L,KAAA,GACHG,KAAAhe,IAAIsd,IAAY,IAAIc,MACvBjM,MACM0L,KAAA,QACCC,KAAA,GACHG,KAAAX,IAAY,IAAID,KAAeI,KAAgBW,OAE7CP,KAAA7d,IAAI2c,IAAW,IAAIW,IAAY,GAC9CU,KAAYrB,IAAW,IAAIyB,MAK/B7P,EAAgBgO,GAAS;AAAA,MACvB,KAAK,GAAGoB;AAAA,MACR,QAAQC,OAAmB,KAAK,KAAK,GAAGA;AAAA,MACxC,MAAMC,OAAiB,SAASA,KAAe,GAAGA;AAAA,MAClD,OAAOC,OAAkB,KAAK,GAAGA,SAAoB;AAAA,IAAA,CACtD,GAIGvR,EAAcH,CAAK,MACjB2R,OAAa,OACT3R,EAAA,MAAM,MAAM,GAAG2R,SAEnBC,OAAc,KACV5R,EAAA,MAAM,OAAO,GAAG4R,SACbC,OAAe,OAClB7R,EAAA,MAAM,QAAQ,GAAG6R;AAG3B,UAAMM,KAAsB3Y,EAA+C,cAAc4Y,GAAYlX,EAAK,IAAI,GAAG;AACjHrB,IAAAA,EAAcpB,GAAS0Z,EAAmB;AAAA;AAE9C,GCxLME,KAAkC;AAAA,EACtC,UAAU3C,GAAeD,EAAa;AAAA,EACtC,OAAO;AAAA,EACP,aAAa;AAAA,EACb,SAAS;AAAA,EACT,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,OAAO;AAAA,EACP,WAAW,SAAS;AAAA,EACpB,SAAS;AAAA,EACT,aAAa;AAAA,EACb,UAAU;AACZ,GCdM6C,KAAoB,uBCFpBC,KAAmB,WCSnBC,KAAU,CAAC/Z,GAAsBga,GAAiCC,MAAuC;AAE7G,MAAI/Z,GAAS8Z,CAAO,KAAKA,EAAQ,QAAQ;AACnC,QAAAE,IAAQF,EAAQ;AACpB,IAAIG,GAAWF,CAAU,MAAGC,IAAQD,EAAWC,CAAK;AAGpD,UAAME,IADY,IAAI,YACS,gBAAgBF,GAAO,WAAW;AACjE,IAAAla,EAAQ,OAAW,GAAGoa,EAAa,KAAK,UAAW;AAAA;AACrD,IAAW1S,EAAcsS,CAAO,IAC9Bha,EAAQ,OAAOga,CAAO,KACbK,GAAWL,CAAO,KAAMM,GAAQN,CAAO,KAAKA,EAAQ,MAAM/I,CAAM,MACzEjR,EAAQ,OAAW,GAAGga,CAAQ;AAElC,GCRMO,KAAY,CAAC9X,MAA4B;AACvC,QAAA0U,IAAY1U,EAAK,SAASqX,IAE1B,EAAE,IAAAU,GAAI,SAAAxa,GAAS,SAAA6E,EAAA,IAAYpC,GAC3B,EAAE,OAAAgY,GAAO,WAAAtC,GAAW,UAAAuC,GAAU,WAAAC,GAAW,aAAAC,GAAa,YAAAX,GAAY,aAAAY,GAAa,SAAAb,GAAS,UAAAc,EAAA,IAAajW,GACrGkW,IAAY5D,IAAYH,KAAgBF,IACxCc,IAAe,EAAE,GAAGL;AAC1B,MAAIyD,IAAqB,CAAA,GACrBC,IAAuB,CAAA;AAEvB,EAAApV,GAAM7F,CAAO,MACf4X,EAAa,OAAO,OACpBA,EAAa,QAAQ;AAIvB,QAAMsD,KAAiB,MAAMH,KAAanD,EAAaO,CAAS;AAG5D,MAAAgD;AACA,MAAAzT,EAAcgT,CAAQ;AACN,IAAAS,KAAAT;AAAA,OACb;AACC,UAAAU,IAAavK,GAAc,KAAK;AAC9B,IAAAkJ,GAAAqB,GAAYV,GAAUT,CAAU,GACxCkB,KAAkBC,EAAW;AAAA;AAI/B,EAAA3Y,EAAK,UAAUiF,EAAcyT,EAAe,IACvCA,GAAgB,UAAU,EAAI;AAAA;AAAA,IACJ;AAAA;AAEzB,QAAA,EAAE,SAAAzD,EAAY,IAAAjV;AAEpB,MAAIiV,GAAS;AAEE7U,IAAAA,EAAA6U,GAAS,MAAM8C,CAAE,GACjB3X,EAAA6U,GAAS,QAAQV,EAAa;AAE3C,UAAMI,IAAYD,IAAY,GAAGH,aAAwB,GAAGF,WACtDuE,KAAgBlE,IAAY,OAAOlX,EAAc,IAAI6W,aAAwBY,CAAO,GACpF4D,IAAcrb,EAAc,IAAImX,KAAaM,CAAO;AAG1D,IAAAjV,EAAK,QAAQxC,EAAc,IAAI8a,WAAmBrD,CAAO;AACnD,UAAA,EAAE,OAAAnQ,EAAU,IAAA9E;AAElB,QAAIiF,EAAc+S,CAAK;AAAG,MAAAO,IAAa,CAACP,EAAM,UAAU,EAAI,CAAC;AAAA,SACxD;AACG,YAAAc,IAAY1K,GAAc,KAAK;AAC7B,MAAAkJ,GAAAwB,GAAWd,GAAOR,CAAU,GACpCe,IAAa,CAAK,GAAGO,EAAU,UAAW;AAAA;AAG5C,QAAI7T,EAAcsS,CAAO;AAAG,MAAAiB,IAAe,CAACjB,EAAQ,UAAU,EAAI,CAAC;AAAA,SAC9D;AACG,YAAAwB,IAAc3K,GAAc,KAAK;AAC/B,MAAAkJ,GAAAyB,GAAaxB,GAASC,CAAU,GACxCgB,IAAe,CAAK,GAAGO,EAAY,UAAW;AAAA;AAIhD,QAAIX;AACF,UAAIJ;AACF,YAAI/S,EAAcoT,CAAQ;AAAG,UAAAE,IAAa,CAAC,GAAGA,GAAYF,EAAS,UAAU,EAAI,CAAC;AAAA,aAC7E;AACG,gBAAAW,IAAU5K,GAAc,KAAK;AAC3B,UAAAkJ,GAAA0B,GAASX,GAAUb,CAAU,GACrCe,IAAa,CAAC,GAAGA,GAAYS,EAAQ,UAAkB;AAAA;AAAA,eAIrDJ,MAAeA,GAAc,OAAO,GACpC3T,EAAcoT,CAAQ;AAAG,QAAAG,IAAe,CAAC,GAAGA,GAAcH,EAAS,UAAU,EAAI,CAAC;AAAA,WACjF;AACG,cAAAW,IAAU5K,GAAc,KAAK;AAC3B,QAAAkJ,GAAA0B,GAASX,GAAUb,CAAU,GACrCgB,IAAe,CAAC,GAAGA,GAAcQ,EAAQ,UAAkB;AAAA;AAQjE,IAAKtE,IAOMsD,KAASa,KAAqBvB,GAAAuB,GAAab,GAAOR,CAAU,KALjEQ,KAASY,MAAuBtB,GAAAsB,IAAeL,GAAYf,CAAU,GAErED,KAAWsB,KAAqBvB,GAAAuB,GAAaL,GAAchB,CAAU,GAEzExX,EAAK,MAAMxC,EAAc,cAAcyX,CAAO,KAAK,SAKrD9U,EAAS8U,GAAS,gBAAgB,GAClC9U,EAAS2E,GAAO,mBAAmB,GAI9B1F,EAAS6V,GAASqD,CAAS,KAAGnY,EAAS8U,GAASqD,CAAS,GAE1DJ,KAAa,CAAC9Y,EAAS6V,GAASpY,CAAS,KAAGsD,EAAS8U,GAASpY,CAAS,GAEvEsb,KAAe,CAAC/Y,EAAS6V,GAASkD,CAAW,KAC/ChY,EAAS8U,GAASkD,CAAW,GAG1B/Y,EAAS6V,GAASwD,EAAc,KAAGtY,EAAS8U,GAASwD,EAAc;AAAA;AAE5E,GCrHMQ,KAAsB,CAAC1b,MAAqC;AAC1D,QAAA2b,IAAiB,CAAC,QAAQ,MAAM,GAChCC,IAA2B,CAAA;AAC7B,MAAA,EAAE,YAAAC,EAAe,IAAA7b;AAErB,SAAO6b,KAAc,CAACF,EAAe,SAASE,EAAW,QAAQ;AAC/D,IAAAA,IAAaC,GAAcD,CAAU,GAE/BE,GAAaF,CAAU,KAAKG,GAAeH,CAAU,KACzDD,EAAW,KAAKC,CAAU;AAI9B,SACED,EAAW,KAAK,CAACzjB,GAAG,MAEhB6T,EAAgB7T,GAAkB,UAAU,MAAM,cAClDyjB,EAAW,MAAM,IAAI,CAAC,EAAE,MAAM,CAAKpjB,MAAAwT,EAAgBxT,GAAkB,UAAU,MAAM,QAAQ,IAEtFL,IAEF,IACR;AAAA,EAAgDoL,EAAYvD,CAAO,EAAE;AAE1E,GC2BMic,KAAkB,IAAIha,OAAiB+U,mBAA8BA,QACrEkF,KAAY;AAOlB,IAAIC,KAAqB,CAACnc,MAAyBW,EAAqBX,GAAS8Z,EAAgB;AAKjG,MAAMsC,KAAsB,CAACpc,MAAyB,IAAIqc,GAAQrc,CAAO,GASnEsc,KAAgB,CAAC7Z,MAAkB;AACvC,QAAM,EAAE,SAAAzC,GAAS,SAAA0X,GAAS,WAAAC,GAAW,cAAA4E,MAAiB9Z;AACtD4R,EAAAA,GAAgBrU,GAASwc,EAAe,GACxCpL,GAAYsG,GAAwBC,MAAc4E,IAAe5E,IAAY4E,CAAY;AAC3F,GAOME,KAAS,CAACha,MAAuC;AACrD,QAAM,EAAE,SAAAiV,GAAS,WAAAC,GAAW,cAAA4E,EAAA,IAAiB9Z;AAE7C,SAAOiV,KAAWrG,GAASqG,GAASC,MAAc4E,IAAe5E,IAAY4E,CAAY;AAC3F,GAQMG,KAAyB,CAACja,GAAe0S,MAA0B;AACjE,QAAA,EAAE,SAAAnV,EAAY,IAAAyC;AACpB,EAAAka,GAAsBla,CAAI,GAGtB+H,GAAaxK,GAAS6Z,EAAiB,KAAKpX,EAAK,SAASqX,MAC5D8C,GAAmBna,CAAI,GAGrB0S,KAAmBA;AACzB,GAQM0H,KAAsB,CAACpa,GAAepB,MAAkB;AACtD,QAAAC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAAxB,EAAY,IAAAyC;AAEpB,EAAAnB,EAAOiC,EAAYvD,CAAO,GAAGqH,IAAiB5E,EAAK,aAA8BkE,EAAc,GAE/F,CAACsH,IAAaC,EAAW,EAAE,QAAQ,CAAMC,MAAA;AACvC,IAAA7M,EAAO8M,GAAUpO,CAAO,GAAGmO,GAAI1L,EAAK,QAAQkE,EAAc;AAAA,EAAA,CAC3D;AACH,GAOMmW,KAAqB,CAACra,MAAkB;AACtC,QAAA,EAAE,SAAAzC,EAAY,IAAAyC,GACdsa,IAAoBhc,EAA+C,YAAY4Y,GAAYlX,EAAK,IAAI,GAAG;AAE7G,EAAAoa,GAAoBpa,GAAM,EAAI,GAC9BrB,EAAcpB,GAAS+c,CAAiB,GAClC7X,EAAA,MAAMlF,GAAS,IAAI;AAC3B,GAOMgd,KAAsB,CAACva,MAAkB;AACvC,QAAA,EAAE,SAAAzC,EAAY,IAAAyC,GACdwa,IAAqBlc,EAA+C,aAAa4Y,GAAYlX,EAAK,IAAI,GAAG;AAE/G,EAAAoa,GAAoBpa,CAAI,GACxB6Z,GAAc7Z,CAAI,GAClBrB,EAAcpB,GAASid,CAAkB,GAEnC/X,EAAA,MAAMlF,GAAS,KAAK;AAC5B,GAQM2c,KAAwB,CAACla,GAAepB,MAAkB;AACxD,QAAAC,IAASD,IAAME,IAAcC,GAE7B,EAAE,SAAAxB,GAAS,SAAA6E,GAAS,KAAA8E,EAAA,IAAQlH,GAC5B,EAAE,SAAAuH,EAAY,IAAAnF,GAEdgW,IAAc,GADFpY,EAAK,SAASqX,MACEjV,EAA2B;AAG7D,EAAKmF,EAAQ,SAAS,QAAQ,MACvBvH,EAAA,UAAU,CAAC,CAACpB,GAEM2I,EAAQ,MAAM,GAAG,EAEzB,QAAQ,CAAMkT,MAAA;AAE3B,IAAIA,MAAOC,MACF7b,EAAAtB,GAAS4O,IAAgBnM,EAAK,UAAU,GACxCnB,EAAAtB,GAASkH,IAAiBzE,EAAK,UAAU,GAG3CoY,MACIvZ,EAAAtB,GAASmH,IAAiB1E,EAAK,UAAU,GAChDnB,EAAOiC,EAAYvD,CAAO,GAAGqH,IAAiB5E,EAAK,aAA8BkE,EAAc,MAExFuW,MAAOvb,IAChBL,EAAOtB,GAASkd,GAAKrC,IAA4BpY,EAAK,aAAnBA,EAAK,MAAwB,IACvDya,MAAOrP,OACTvM,EAAAtB,GAASod,IAAc3a,EAAK,UAAU,GAExCoY,KAAoBvZ,EAAAtB,GAASqd,IAAe5a,EAAK,UAAU,GAE5D6a,MACKhc,EAAAtB,GAAS2B,GAAiBc,EAAK,WAAW,IAIjDoY,KAAelR,KACVrI,EAAAqI,GAAKhI,GAAiBc,EAAK,UAAU;AAAA,EAC9C,CACD;AAEL,GAQM8a,KAA4B,CAAC9a,GAAepB,MAAkB;AAC5D,QAAAC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAAxB,GAAS,WAAA2X,GAAW,cAAA4E,EAAA,IAAiB9Z,GACvC,EAAE,cAAA+a,GAAc,cAAApK,EAAiB,IAAAuE,GACjC8F,IAAc/Z,EAAQ1D,GAAS,IAAIsP,GAAa,GAChDoO,IAAkBha,EAAQ1D,GAAS,IAAI2Q,GAAiB,GAGxDgN,IAAMvP,GAAUpO,CAAO,GAEvB4d,IAAejG,MAAc4E,KADlBiB,MAAiBpK,IAC4BuE,IAAYgG;AAC1E,EAAArc,EAAOsc,GAAc1P,IAAazL,EAAK,QAAQkE,EAAc,GAC7DrF,EAAOsc,GAAc3P,IAAaxL,EAAK,QAAQkE,EAAc,GAGzD8W,KAAanc,EAAOmc,GAAa,WAAWnO,KAAe7M,EAAK,UAAU,GAC1Eib,KAAiBpc,EAAOoc,GAAiB,WAAW/M,KAAmBlO,EAAK,UAAU;AAC5F,GAQMma,KAAqB,CAACna,GAAeuX,MAAqB;AAExD,QAAA6D,IAAW,CAAChE,IAAmBqC,EAAS,GACxC,EAAE,SAAAlc,EAAY,IAAAyC;AAEpBI,EAAAA;AAAAA,IACE7C;AAAA,IACA6d,EAAS7D,IAAU,IAAI,CAAC;AAAA,IACxBA,KAAWrX,GAAa3C,GAAS6d,EAAS,CAAC,CAAC;AAAA,IAAgC;AAAA,EAAA,GAE9ExJ,GAAgBrU,GAAS6d,EAAS7D,IAAU,IAAI,CAAC,CAAC;AACpD;AAKA,MAAqBqC,WAAgBxc,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBjD,YAAYC,GAA8BC,GAAkC;AAC1E,UAAMD,GAAQC,CAAM;AA6DtB;AAAA;AAAA;AAAA,IAAA6B,EAAA,qBAAc,MAAMsN,GAAM,KAAK,OAAO;AAEtC;AAAA,IAAAtN,EAAA,oBAAa,MAAM,KAAK;AAsCxB;AAAA,IAAAA,EAAA,oBAAa,MAAM,KAAK;AAgCxB;AAAA,IAAAA,EAAA,gBAAS,MAAM;AACb,MAAA4V,GAAkB,IAAI;AAAA,IAAA;AAIxB;AAAA,IAAA5V,EAAA,gBAAS,MAAM;AACP,YAAA,EAAE,SAAA8V,EAAY,IAAA;AAEhB,MAAAA,KAAW,CAAC+E,GAAO,IAAI,IAAG,KAAK,KAAK,IACnC,KAAK,KAAK;AAAA,IAAA;AAyCjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAA7a,EAAA,qBAAc,CAAC,EAAE,QAAA9B,QAAyB;AAClC,YAAA,EAAE,SAAA4X,GAAS,SAAA1X,EAAY,IAAA;AAI1B,MAAA0X,KAAWA,EAAQ,SAAS5X,CAAqB,KAClDA,MAAWE,KACVF,KAAUE,EAAQ,SAASF,CAAqB,KAIjD,KAAK,KAAK;AAAA,IACZ;AAjMM,UAAA,EAAE,SAAAE,EAAY,IAAA,MACdmX,IAAY,KAAK,SAAS2C,IAC1BiB,IAAY5D,IAAYH,KAAgBF,IACxCgH,IAAe3G,IAAY2C,KAAmB/C;AAGpD,IAAAoF,KAAqB,CAAoB4B,MAAsBpd,EAAeod,GAAMD,CAAY,GAGhG,KAAK,UAAU,IAEf,KAAK,KAAK,GAAG/C,KAAaiD,GAAOhe,GAAS+a,CAAS;AAG7C,UAAA,EAAE,SAAAlW,EAAY,IAAA;AAGhB,IAAG,CAACA,EAAQ,SAASsS,KAAe,CAACA,KAAa,CAACtS,EAAQ,YAE7DuD,GAAawR,IAAiB,EAAE,WAAW,GAAI,CAAA,GAI3CpP,GAAaxK,GAASkc,EAAS,KAAK/E,KAAa,OAAOtS,EAAQ,SAAU,YACzD+X,GAAA,MAAM/X,EAAQ,KAAK,GAInC,KAAA,YAAY6W,GAAoB1b,CAAO,GAC5C,KAAK,eAAe,CAAC,UAAU,OAAO,EAAE;AAAA,MACtC,CAAYie,MAAAjS,EAAgB,KAAK,WAA0B,UAAU,MAAMiS;AAAA,IAAA,IAExE,KAAK,YACN1a,EAAY,KAAK,OAAO,EAAE,MAG9BgX,GAAU,IAAI,GAGdoC,GAAsB,MAAM,EAAI;AAAA,EAEpC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAA7C;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAF;AAAA,EACT;AAAA,EAQA,OAAO;AACL,UAAM,EAAE,SAAA/U,GAAS,SAAA6S,GAAS,SAAA1X,GAAS,WAAA2X,GAAW,cAAA4E,GAAc,IAAA/B,EAAO,IAAA,MAC7D,EAAE,WAAAG,EAAc,IAAA9V,GAChBqZ,IAAWhZ,EAAM,IAAIlF,GAAS,KAAK,GACnCme,IAAexG,MAAc4E,IAAe5E,IAAY4E;AAExDrX,IAAAA,EAAA,MAAMlF,GAAS,KAAK,GAEtB0X,KAAW,CAACwG,KAAY,CAACzB,GAAO,IAAI,KAChCvX,EAAA;AAAA,MACJlF;AAAA,MACA,MAAM;AACJ,cAAMoe,IAAmBrd,EAA+C,WAAW4Y,GAAY,KAAK,IAAI,GAAG;AAC3GvY,QAAAA,EAAcpB,GAASoe,CAAgB,GAClCA,EAAiB,qBAEpBtN,GAAY4G,GAASyG,CAAY,GAEpBtb,EAAA7C,GAASwc,IAAiB,IAAIhC,GAAI,GAE/C,KAAK,OAAO,GACZ+C,GAA0B,MAAM,EAAI,GAG/B1b,EAAS6V,GAASnY,CAAS,KAAGqD,EAAS8U,GAASnY,CAAS,GAE1Dob,IAAW5Y,EAAqB2V,GAAS,MAAMoF,GAAmB,IAAI,CAAC,IACtEA,GAAmB,IAAI;AAAA,MAEhC;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,EAGN;AAAA,EAIA,OAAO;AACL,UAAM,EAAE,SAAAjY,GAAS,SAAA6S,GAAS,SAAA1X,EAAA,IAAY,MAChC,EAAE,WAAA2a,GAAW,OAAA9D,EAAU,IAAAhS;AAEvBK,IAAAA,EAAA,MAAMlF,GAAS,IAAI,GAGrB0X,KAAW+E,GAAO,IAAI,KAClBvX,EAAA;AAAA,MACJlF;AAAA,MACA,MAAM;AACJ,cAAMqe,IAAmBtd,EAA+C,WAAW4Y,GAAY,KAAK,IAAI,GAAG;AAC3GvY,QAAAA,EAAcpB,GAASqe,CAAgB,GAElCA,EAAiB,qBACpB,KAAK,OAAO,GACZvc,EAAY4V,GAASnY,CAAS,GAC9Bge,GAA0B,IAAI,GAG1B5C,IAAW5Y,EAAqB2V,GAAS,MAAMsF,GAAoB,IAAI,CAAC,IACvEA,GAAoB,IAAI;AAAA,MAEjC;AAAA,MACAnG,IAAQ;AAAA,MACR;AAAA,IAAA;AAAA,EAGN;AAAA;AAAA,EAgBA,SAAS;AACD,UAAA,EAAE,SAAAyH,EAAY,IAAA;AAEpB,IAAKA,MACH3B,GAAsB,MAAM,EAAI,GAChC,KAAK,UAAU,CAAC2B;AAAA,EAEpB;AAAA;AAAA,EAGA,UAAU;AACR,UAAM,EAAE,SAAA5G,GAAS,SAAA7S,GAAS,SAAAyZ,EAAA,IAAY,MAChC,EAAE,WAAA3D,EAAc,IAAA9V;AAEtB,IAAIyZ,MACE5G,KAAW+E,GAAO,IAAI,KAAK9B,KAC7B,KAAK,KAAK,GACV5Y,EAAqB2V,GAAS,MAAMiF,GAAsB,IAAI,CAAC,KAE/DA,GAAsB,IAAI,GAE5B,KAAK,UAAU,CAAC2B;AAAA,EAEpB;AAAA;AAAA,EAGA,gBAAgB;AACd,IAAK,KAAK,UACL,KAAK,QAAQ,IADC,KAAK,OAAO;AAAA,EAEjC;AAAA;AAAA,EAwBA,UAAU;AACF,UAAA,EAAE,SAAA5G,GAAS,SAAA7S,EAAY,IAAA,MACvB2D,IAAQ,EAAE,GAAG,MAAM,MAAM,KAAK,QAC9B2M,IAAW,MAAM,WAAW,MAAMuH,GAAuBlU,GAAO,MAAM,MAAM,QAAA,CAAS,GAAG,EAAE;AAEhG,IAAI3D,EAAQ,aAAa4X,GAAOjU,CAAK,KACnC,KAAK,QAAQ,QAAQ,GACrB,KAAK,KAAK,GACVzG,EAAqB2V,GAAwBvC,CAAQ,KAE5CA;EAEb;AACF;AAtOEvT,EADmBya,IACZ,YAAWJ,KAClBra,EAFmBya,IAEZ,QAAOD,KACdxa,EAHmBya,IAGZ,eAAcF,KACrBva,EAJmBya,IAIZ,YAAW7E;AC1PpB,MAAM+G,KAAkB,IAAItc,OAAiB6U,mBAA8BA,QAErE0H,KAAkCpW,GAAa,CAAC,GAAGwR,IAAiB;AAAA,EACxE,UAAU3C,GAAeH,EAAa;AAAA,EACtC,SAAS;AAAA,EACT,aAAa;AAAA,EACb,UAAU;AACZ,CAAC,GAOK2H,KAAqB,CAACze,MAAyBW,EAAqBX,GAAS+W,EAAgB,GAK7F2H,KAAsB,CAAC1e,MAAyB,IAAI2e,GAAQ3e,CAAO;AAKzE,MAAqB2e,WAAgBtC,GAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,EAW3C,YAAYvc,GAA8BC,GAAkC;AAC1E,UAAMD,GAAQC,CAAM;AAgBtB;AAAA,IAAA6B,EAAA,cAAO,MAAM;AACX,YAAM,KAAK;AAEL,YAAA,EAAE,SAAAiD,GAAS,KAAA8E,EAAQ,IAAA;AAEzB,MAAI9E,EAAQ,eAAe8E,KAAK,WAAW,MAAMuF,GAAMvF,CAAG,GAAG,EAAE;AAAA,IAAA;AAAA,EApBjE;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,OAAO;AACF,WAAAoN;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAyH;AAAA,EACT;AAUF;AAlCE5c,EADmB+c,IACZ,YAAWJ,KAClB3c,EAFmB+c,IAEZ,QAAOD,KACd9c,EAHmB+c,IAGZ,eAAcF,KACrB7c,EAJmB+c,IAIZ,YAAWnH;AC5CpB,MAAMoH,KAAkB,aCAlBC,KAAqB,aCkCrBC,KAAoB,0BAEpBC,KAAsC;AAAA,EAC1C,QAAQ;AAAA,EACR,QAAQ;AACV,GAMMC,KAAuB,CAAChf,MAAyBW,EAAuBX,GAAS6e,EAAkB,GAKnGI,KAAwB,CAACjf,MAAyB,IAAIkf,GAAUlf,CAAO,GAIvEmf,KAAoBpe,EAAkC,eAAe6d,IAAiB,GAStFQ,KAAmB,CAAC3c,MAAoB;AAC5C,QAAM,EAAE,QAAA3C,GAAQ,cAAA8d,GAAc,SAAA/Y,GAAS,aAAAwa,GAAa,cAAAjM,GAAc,SAAApT,EAAY,IAAAyC,GACxE,EAAE,QAAAsJ,EAAW,IAAAlH,GACbya,IAAQC,GAAS3B,CAA6B,GAE9C4B,IAAQ1f,KAAU2f,GAAqB,KAAK3f,CAAM,GAClD4f,IAAe9B,IAAe+B,GAAgB/B,CAAY;AAAA;AAAA,IAA+BxK;AAAA;AAM/F,MAJA3Q,EAAK,YAAY6c,IAAS1B,EAAwB,UAAWA,EAA6B,WAItF4B,MAAUE,MAAiBtM,KAAgBiM,MAAgBG,EAAM,SAAS;AACxE,QAAAI,GACAC,GACAC;AAGJ,IAAArd,EAAK,QAAQ,IACbA,EAAK,UAAU,IACfA,EAAK,eAAeid,GACpBjd,EAAK,YAAYA,EAAK,eAAesd,GAAgBtd,CAAI,GAEzD,CAAC,GAAG+c,CAAK,EAAE,QAAQ,CAAQQ,MAAA;AAClB,MAAAJ,IAAAjd,GAAaqd,GAAM,MAAM,GAChCH,IACED,KAAQA,EAAK,OAAO,CAAC,MAAM,OAAOA,EAAK,MAAM,EAAE,MAAM,OAAO3f,EAAc2f,GAAMrc,EAAYvD,CAAO,CAAC,GAElG6f,MACGpd,EAAA,MAAM,KAAKud,CAAI,GACpBF,IAAO/S,GAAsB8S,CAAU,GAClCpd,EAAA,QAAQ,MAAM6c,IAAQQ,EAAK,MAAMrd,EAAK,YAAYod,EAAW,aAAa9T,CAAM;AAAA,IACvF,CACD,GACItJ,EAAA,cAAcA,EAAK,MAAM;AAAA;AAElC,GAQMkd,KAAkB,CAAC/B,MAChBlW,EAAckW,CAAoB,IACpCA,EAA6B,eAC9BlR,GAAmBkR,CAAoB,EAAE,cAQzCmC,KAAkB,CAAC,EAAE,SAAA/f,GAAS,cAAA4d,QAC3B2B,GAAS3B,CAAoB,IAAKA,EAAwB,cAAc7Q,GAAsB/M,CAAO,EAAE,QAQ1GigB,KAAQ,CAACngB,MAAwB;AACrC,GAAC,GAAG2f,GAAqB,KAAK3f,CAAM,CAAC,EAAE,QAAQ,CAAQogB,MAAA;AACjD,IAAAre,EAASqe,GAAMle,CAAW,KAAGF,EAAYoe,GAAMle,CAAW;AAAA,EAAA,CAC/D;AACH,GAQMme,KAAW,CAAC1d,GAAiByd,MAAsB;AACjD,QAAA,EAAE,QAAApgB,GAAQ,SAAAE,EAAY,IAAAyC;AAC5B,EAAIiF,EAAc5H,CAAM,KAAGmgB,GAAMngB,CAAM,GACvC2C,EAAK,aAAayd,GAClBtd,EAASsd,GAAMle,CAAW;AAG1B,QAAMoe,IAAyB,CAAA;AAC/B,MAAIC,IAAaH;AACV,SAAAG,MAAerQ,GAAgBhQ,CAAO;AAC3C,IAAAqgB,IAAaA,EAAW,gBACpBxe,EAASwe,GAAY,KAAK,KAAKxe,EAASwe,GAAY,eAAe,MAAGD,EAAQ,KAAKC,CAAU;AAGnG,EAAAD,EAAQ,QAAQ,CAAYE,MAAA;AAC1B,UAAMC,IAAaD,EAAS;AAG5B,IAAIC,KAAc,CAAC1e,EAAS0e,GAAYve,CAAW,KACjDY,EAAS2d,GAAYve,CAAW;AAAA,EAClC,CACD,GAGDmd,GAAkB,gBAAgBe,GAClC9e,EAAcpB,GAASmf,EAAiB;AAC1C,GAQMqB,KAAoB,CAAC/d,GAAiBpB,MAAkB;AAE5D,GADeA,IAAME,IAAcC,GAC5BiB,EAAK,cAA6BwL,IAAaxL,EAAK,SAASkE,EAAc;AACpF;AAKA,MAAqBuY,WAAkBrf,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBnD,YAAYC,GAA8BC,GAAoC;AAC5E,UAAMD,GAAQC,CAAM;AAuCtB;AAAA;AAAA;AAAA;AAAA,IAAA6B,EAAA,iBAAU,MAAM;AACR,YAAA,EAAE,QAAA9B,EAAW,IAAA;AAInB,UAAI4H,EAAc5H,CAAM,KAAKA,EAAO,eAAe,GAAG;AACpD,QAAAsf,GAAiB,IAAI;AAErB,cAAM,EAAE,WAAAqB,GAAW,WAAAC,GAAW,aAAArB,GAAa,OAAAsB,GAAO,YAAA7b,EAAe,IAAA;AAEjE,YAAI2b,KAAaC,GAAW;AACpB,gBAAAE,IAAgBD,EAAMtB,IAAc,CAAC;AAG3C,UAAIva,MAAe8b,KACjBT,GAAS,MAAMS,CAAa;AAE9B;AAAA;AAGI,cAAA,EAAE,SAAAC,EAAY,IAAA;AAEhB,YAAA/b,KAAc2b,IAAYI,EAAQ,CAAC,KAAKA,EAAQ,CAAC,IAAI,GAAG;AAC1D,eAAK,aAAa,MACd/gB,KAAQmgB,GAAMngB,CAAM;AACxB;AAAA;AAGI,QAAA6gB,EAAA,QAAQ,CAACT,GAAM9nB,MAAM;AACzB,UACE0M,MAAeob,KACfO,KAAaI,EAAQzoB,CAAC,MACrB,OAAOyoB,EAAQzoB,IAAI,CAAC,IAAM,OAAeqoB,IAAYI,EAAQzoB,IAAI,CAAC,MAEnE+nB,GAAS,MAAMD,CAAI;AAAA,QACrB,CACD;AAAA;AAAA,IACH;AAzEM,UAAA,EAAE,SAAAlgB,GAAS,SAAA6E,EAAY,IAAA;AAG7B,SAAK,SAAS5E,EAAc4E,EAAQ,QAAgCtB,EAAYvD,CAAO,CAAC,GAGpF,KAAK,WAEP,KAAK,eAAeA,EAAQ,eAAeA,EAAQ,eAAeA,IAAUoO,GAAUpO,CAAO,GACxF,KAAA,eAAe2f,GAAgB,KAAK,YAAY,GAGrDa,GAAkB,MAAM,EAAI,GAE5B,KAAK,QAAQ;AAAA,EAEjB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,OAAO;AACF,WAAA3B;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAE;AAAA,EACT;AAAA;AAAA,EA+CA,UAAU;AACR,IAAAyB,GAAkB,IAAI,GACtB,MAAM,QAAQ;AAAA,EAChB;AACF;AAvGE5e,EADmBsd,IACZ,YAAWJ,KAClBld,EAFmBsd,IAEZ,QAAOD,KACdrd,EAHmBsd,IAGZ,eAAcF;ACxLvB,MAAM8B,KAAY,OCAZC,KAAe,OCsCfC,KAAc,IAAI/e,OAAiB6e,QAMnCG,KAAiB,CAACjhB,MAAyBW,EAAiBX,GAAS+gB,EAAY,GAGjFG,KAAkB,CAAClhB,MAAyB,IAAImhB,GAAInhB,CAAO,GAI3DohB,KAAergB,EAA4B,WAAW+f,IAAW,GACjEO,KAAgBtgB,EAA4B,YAAY+f,IAAW,GACnEQ,KAAevgB,EAA4B,WAAW+f,IAAW,GACjES,KAAiBxgB,EAA4B,aAAa+f,IAAW,GAarEU,yBAA+C,OAS/CC,KAAgB,CAAChf,MAAc;AAC7B,QAAA,EAAE,YAAAif,GAAY,KAAAC,EAAQ,IAAAlf;AAG5B,EAAIif,KAAc7f,EAAS6f,GAAYjZ,EAAe,MACpDiZ,EAAW,MAAM,SAAS,IAC1B5f,EAAY4f,GAAYjZ,EAAe,IAIrCkZ,KAAKzc,EAAM,MAAMyc,CAAG;AAC1B,GAOMC,KAAiB,CAACnf,MAAc;AACpC,QAAM,EAAE,SAAAzC,GAAS,YAAA0hB,GAAY,SAASG,GAAa,KAAAF,EAAQ,IAAAlf,GACrD,EAAE,KAAAqf,MAASpa,EAAcia,CAAG,KAAKH,GAAW,IAAIG,CAAG;AAAA,EAAiC,EAAE,KAAK;AAGjG,MAAID,KAAcG,KAAehgB,EAASggB,GAAaviB,CAAS,GAAG;AACjE,UAAM,EAAE,eAAAyiB,GAAe,YAAAC,EAAA,IAAeR,GAAW,IAAIxhB,CAAO;AAAA,IAAgC;AAAA,MAC1F,eAAe;AAAA,MACf,YAAY;AAAA,IAAA;AAEd,IAAI+hB,MAAkBC,IACpBP,GAAchf,CAAI,IAGlB,WAAW,MAAM;AACJ,MAAAif,EAAA,MAAM,SAAS,GAAGM,OAC7B1Z,GAAOoZ,CAAU,GACjB3f,EAAqB2f,GAAY,MAAMD,GAAchf,CAAI,CAAC;AAAA,OACzD,EAAE;AAAA;AAEE,IAAAkf,KAAKzc,EAAM,MAAMyc,CAAG;AAE/B,EAAAN,GAAc,gBAAgBS,GAE9B1gB,EAAcpB,GAASqhB,EAAa;AACtC,GAOMY,KAAiB,CAACxf,MAAc;AACpC,QAAM,EAAE,SAAAzC,GAAS,SAAS6hB,GAAa,YAAAH,GAAY,KAAAC,EAAQ,IAAAlf,GACrD,EAAE,KAAAqf,GAAK,SAAA9H,MAAa2H,KAAOH,GAAW,IAAIG,CAAG;AAAA,EAAiC,EAAE,KAAK,MAAM,SAAS,KAAK;AAC/G,MAAII,IAAgB;AAehB,MAZAL,KAAcG,KAAehgB,EAASggB,GAAaviB,CAAS,MAC9D,CAAC0a,GAAS6H,CAAW,EAAE,QAAQ,CAAK1pB,MAAA;AAClC,IAAIuP,EAAcvP,CAAC,KAAGyK,EAASzK,GAAG,iBAAiB;AAAA,EAAA,CACpD,GACe4pB,IAAAra,EAAcsS,CAAO,IAAIA,EAAQ;AAAA;AAAA,IAA0C;AAAA,MAI7FoH,GAAa,gBAAgBU,GAC7BP,GAAe,gBAAgBvhB,GAC/BoB,EAAcpB,GAASohB,EAAY,GAE/B,CAACA,GAAa,kBAAkB;AAKlC,QAJIS,KAAajf,EAASif,GAAa7f,CAAW,GAC9CgY,KAASlY,EAAYkY,GAAShY,CAAW,GAGzC0f,KAAcG,KAAehgB,EAASggB,GAAaviB,CAAS,GAAG;AACjE,YAAM0iB,IAAaH,EAAY;AACpB,MAAAL,GAAA,IAAIxhB,GAAS,EAAE,eAAA+hB,GAAe,YAAAC,GAAY,KAAK,MAAM,SAAS,KAAA,CAAM,GAE/Epf,EAAS8e,GAAYjZ,EAAe,GACzBiZ,EAAA,MAAM,SAAS,GAAGK,OAC7BzZ,GAAOoZ,CAAU,GACjB,CAAC1H,GAAS6H,CAAW,EAAE,QAAQ,CAAK1pB,MAAA;AAC9B,QAAAA,KAAG2J,EAAY3J,GAAG,iBAAiB;AAAA,MAAA,CACxC;AAAA;AAGH,IAAI0pB,KAAeA,KAAehgB,EAASggB,GAAaviB,CAAS,IAC/D,WAAW,MAAM;AACfsD,MAAAA,EAASif,GAAatiB,CAAS,GAC/BwC,EAAqB8f,GAAa,MAAM;AACtC,QAAAD,GAAenf,CAAI;AAAA,MAAA,CACpB;AAAA,OACA,CAAC,KAEAof,KAAajf,EAASif,GAAatiB,CAAS,GAChDqiB,GAAenf,CAAI,IAGjBqf,KAAK1gB,EAAc0gB,GAAKP,EAAc;AAAA;AAE9C,GAQMW,KAAe,CAACzf,MAAwE;AACtF,QAAA,EAAE,KAAAkf,EAAQ,IAAAlf;AAEZ,MAAA,CAACiF,EAAcia,CAA8B;AAAG,WAAO,EAAE,KAAK,MAAM,SAAS,KAAK;AAEhF,QAAAQ,IAAaxa,GAAuB3F,GAAa2f,CAAkB;AACzE,MAAIG,IAA0B;AAE9B,EAAIK,EAAW,WAAW,KAAK,CAACtX,GAAgB,KAAK,CAAA1S,MAAK0J,EAASsgB,EAAW,CAAC,EAAE,eAA8BhqB,CAAC,CAAC,IAC/G,CAAC2pB,CAAG,IAAIK,IACCA,EAAW,SAAS,MACvBL,IAAAK,EAAWA,EAAW,SAAS,CAAC;AAExC,QAAMnI,IAAUtS,EAAcoa,CAAkB,IAAI1e,EAAiB0e,CAAkB,IAAI;AACpF,SAAA,EAAE,KAAAA,GAAK,SAAA9H;AAChB,GAQMoI,KAAoB,CAACpiB,MAA8C;AAEnE,MAAA,CAAC0H,EAAc1H,CAAO;AAAU,WAAA;AACpC,QAAMqiB,IAAW3e,EAAQ1D,GAAS,IAAI6K,GAAgB,KAAK,IAAI,GAAG;AAClE,SAAOwX,IAAWpiB,EAAc,IAAI4K,GAAgB,CAAC,YAAYwX,CAAQ,IAAI;AAC/E,GAQMC,KAAmB,CAAC7f,GAAWpB,MAAkB;AAE9C,GADQA,IAAME,IAAcC,GAC5BiB,EAAK,SAASd,GAAiB4gB,EAAe;AACvD,GASMA,KAAkB,CAACtqB,MAAa;AAC9B,QAAAwK,IAAOwe,GAAehpB,EAAE,MAAqB;AAGnD,EAAIwK,MACFxK,EAAE,eAAe,GACjBwK,EAAK,KAAK;AAEd;AAKA,MAAqB0e,WAAYthB,GAAc;AAAA;AAAA,EAW7C,YAAYC,GAA8B;AACxC,UAAMA,CAAM;AAGN,UAAA,EAAE,SAAAE,EAAY,IAAA,MACdga,IAAU5W,EAAiBpD,CAAO;AAIxC,QAAIga,GAAS;AACL,YAAA2H,IAAMje,EAAQ1D,GAAS,MAAM,GAC7B2X,IAAYjU,EAAQsW,GAAS,cAAc;AAEjD,WAAK,MAAM2H,GACX,KAAK,UAAU3H,GACf,KAAK,aAAarC,GAGb,KAAA,WAAWyK,GAAkBpiB,CAAO;AAIzC,YAAM,EAAE,KAAA8hB,EAAA,IAAQI,GAAa,IAAI;AAC7B,UAAAP,KAAO,CAACG,GAAK;AACT,cAAAU,IAAWviB,EAAc+gB,IAAaW,CAAG,GACzCc,IAAkBD,KAAYpf,EAAiBof,CAAQ;AAG7D,QAAIC,MACF7f,EAAS4f,GAAUxgB,CAAW,GAC9BY,EAAS6f,GAAiBljB,CAAS,GACnCqD,EAAS6f,GAAiBzgB,CAAW,GACxBa,EAAA7C,GAAS0iB,IAAc,MAAM;AAAA;AAK9C,MAAAJ,GAAiB,MAAM,EAAI;AAAA;AAAA,EAE/B;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAAvB;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO;AACL,UAAM,EAAE,SAAA/gB,GAAS,SAAS6hB,GAAa,KAAAF,GAAK,UAAAU,EAAa,IAAA;AAGrD,QAAA,EAAEV,KAAOzc,EAAM,IAAIyc,CAAG,MAAM,CAAC9f,EAAS7B,GAASgC,CAAW,GAAG;AAC/D,YAAM,EAAE,KAAA8f,GAAK,SAAA9H,EAAQ,IAAIkI,GAAa,IAAI;AAStC,UANAP,KAAgBH,GAAA,IAAIG,GAAK,EAAE,KAAAG,GAAK,SAAA9H,GAAS,eAAe,GAAG,YAAY,EAAA,CAAG,GAG9EsH,GAAa,gBAAgBthB,GAGzB0H,EAAcoa,CAAG,MACnB1gB,EAAc0gB,GAAoBR,EAAY,GAE1C,CAACA,GAAa,mBAAkB;AAClC1e,QAAAA,EAAS5C,GAASgC,CAAW,GAChBa,EAAA7C,GAAS0iB,IAAc,MAAM;AAE1C,cAAMC,IAAiBjb,EAAcoa,CAAG,KAAKM,GAAkBN,CAAG;AAMlE,YALIa,KAAkB9gB,EAAS8gB,GAAgB3gB,CAAW,KACxDF,EAAY6gB,GAAgB3gB,CAAW,GAIrC2f,GAAK;AACP,gBAAMiB,IAAY,MAAM;AACtB,YAAId,MACFhgB,EAAYggB,GAAK9f,CAAW,GACfa,EAAAif,GAAKY,IAAc,OAAO,IAErCL,KAAY,CAACxgB,EAASwgB,GAAUrgB,CAAW,KAAGY,EAASyf,GAAUrgB,CAAW;AAAA,UAAA;AAG9E,UAAAgY,MAAYnY,EAASmY,GAAS1a,CAAS,KAAMuiB,KAAehgB,EAASggB,GAAaviB,CAAS,KACvF4F,EAAA,IAAIyc,GAAKiB,GAAW,CAAC,IACZA;;AAGnB,QAAI5I,MACFlY,EAAYkY,GAASza,CAAS,GAC1BsC,EAASmY,GAAS1a,CAAS,IAC7ByC,EAAqBiY,GAAS,MAAMiI,GAAe,IAAI,CAAC,IAExDA,GAAe,IAAI;AAAA;AAAA;AAAA,EAM/B;AAAA;AAAA,EAGA,UAAU;AACR,IAAAK,GAAiB,IAAI,GACrB,MAAM,QAAQ;AAAA,EAChB;AACF;AAxHE1gB,EADmBuf,IACZ,YAAWH,KAClBpf,EAFmBuf,IAEZ,QAAOD,KACdtf,EAHmBuf,IAGZ,eAAcF;ACvPvB,MAAM4B,IAAc,SCAdC,KAAiB,SCqCjBC,KAAgB,IAAIF,KACpBG,KAAuB,IAAIxjB,OAAkBqjB,OAC7CI,KAAsB,IAAIhhB,OAAiB4gB,OAC3CK,KAAe,WAEfC,KAAY,QAEZC,KAAgB;AAAA,EACpB,WAAW;AAAA,EACX,UAAU;AAAA,EACV,OAAO;AACT,GAMMC,KAAmB,CAACrjB,MAAyBW,EAAmBX,GAAS8iB,EAAc,GAKvFQ,KAAoB,CAACtjB,MAAyB,IAAIujB,GAAMvjB,CAAO,GAI/DwjB,KAAiBziB,EAA8B,WAAW8hB,GAAa,GACvEY,KAAkB1iB,EAA8B,YAAY8hB,GAAa,GACzEa,KAAiB3iB,EAA8B,WAAW8hB,GAAa,GACvEc,KAAmB5iB,EAA8B,aAAa8hB,GAAa,GAS3Ee,KAAoB,CAACnhB,MAAgB;AACnC,QAAA,EAAE,SAAAzC,GAAS,SAAA6E,EAAY,IAAApC;AAC7BX,EAAAA,EAAY9B,GAASkjB,EAAY,GAC3Bhe,EAAA,MAAMlF,GAASkjB,EAAY,GAEjC9hB,EAAcpB,GAASyjB,EAAe,GAElC5e,EAAQ,YACJK,EAAA,IAAIlF,GAAS,MAAMyC,EAAK,QAAQoC,EAAQ,OAAOge,CAAW;AAEpE,GAOMgB,KAAoB,CAACphB,MAAgB;AACnC,QAAA,EAAE,SAAAzC,EAAY,IAAAyC;AACpBX,EAAAA,EAAY9B,GAASkjB,EAAY,GACjCphB,EAAY9B,GAAST,CAAS,GAC9BqD,EAAS5C,GAASmjB,EAAS,GACrBje,EAAA,MAAMlF,GAAS6iB,CAAW,GAChCzhB,EAAcpB,GAAS2jB,EAAgB;AACzC,GAOMG,KAAY,CAACrhB,MAAgB;AAC3B,QAAA,EAAE,SAAAzC,GAAS,SAAA6E,EAAY,IAAApC;AAC7BG,EAAAA,EAAS5C,GAASkjB,EAAY,GAE1Bre,EAAQ,aACVyD,GAAOtI,CAAO,GACd+B,EAAqB/B,GAAS,MAAM6jB,GAAkBphB,CAAI,CAAC,KAE3DohB,GAAkBphB,CAAI;AAE1B,GAOMshB,KAAY,CAACthB,MAAgB;AAC3B,QAAA,EAAE,SAAAzC,GAAS,SAAA6E,EAAY,IAAApC;AACvByC,EAAAA,EAAA;AAAA,IACJlF;AAAA,IACA,MAAM;AACJ8B,MAAAA,EAAY9B,GAASmjB,EAAS,GAC9B7a,GAAOtI,CAAO,GACd4C,EAAS5C,GAAST,CAAS,GAC3BqD,EAAS5C,GAASkjB,EAAY,GAE1Bre,EAAQ,YACV9C,EAAqB/B,GAAS,MAAM4jB,GAAkBnhB,CAAI,CAAC,IAE3DmhB,GAAkBnhB,CAAI;AAAA,IAE1B;AAAA,IACA;AAAA,IACAygB;AAAA,EAAA;AAEJ,GAQMc,KAAsB,CAACvhB,GAAapB,MAAkB;AACpD,QAAAC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAAxB,GAAS,UAAAwJ,GAAU,SAAA/H,GAAS,SAAAoD,GAAS,MAAAof,EAAS,IAAAxhB;AAGtD,EAAIhB,KACKH,EAAAG,GAASE,GAAiBsiB,CAAI,GAInCpf,EAAQ,YACV,CAACuY,IAAcC,IAAenW,IAAiBC,EAAe,EAAE;AAAA,IAAQ,CACtElP,MAAAqJ,EAAOtB,GAAS/H,GAAGisB,EAAwC;AAAA,EAAA,GAI3D1a,EAAS,UACXA,EAAS,QAAQ,CAAOG,MAAArI,EAAOqI,GAAKhI,GAAiBwiB,EAAiB,CAAC;AAE3E,GASMC,KAAuB,CAAC3hB,MAAgB;AACtCyC,EAAAA,EAAA,MAAMzC,EAAK,SAASogB,CAAW,GACrCmB,GAAoBvhB,CAAI;AAC1B,GAOM0hB,KAAoB,CAAClsB,MAAa;AAChC,QAAA,EAAE,QAAA6H,EAAW,IAAA7H,GAEb+R,IAAUlK,KAAU4D,EAAQ5D,GAAuBmjB,EAAmB,GACtEjjB,IAAUgK,KAAW5G,EAAiB4G,CAAO,GAC7CvH,IAAOzC,KAAWqjB,GAAiBrjB,CAAO;AAGhD,EAAIyC,MAEEuH,KAAWA,EAAQ,YAAY,OAAK/R,EAAE,eAAe,GACzDwK,EAAK,gBAAgBuH,GACrBvH,EAAK,KAAK;AAEd,GAQMyhB,KAA0B,CAACjsB,MAAkB;AACjD,QAAM+H,IAAU/H,EAAE,QACZwK,IAAO4gB,GAAiBrjB,CAAO,GAC/B,EAAE,MAAA0O,GAAM,eAAAuF,EAAkB,IAAAhc;AAGhC,EAAIwK,KAAQzC,MAAYiU,KAAiB,CAACjU,EAAQ,SAASiU,CAAqB,MAC1E,CAAC/M,IAAiBkW,EAAY,EAAE,SAAS1O,CAAI,IACzCxJ,EAAA,MAAMlF,GAAS6iB,CAAW,IAE1B3d,EAAA,IAAIlF,GAAS,MAAMyC,EAAK,QAAQA,EAAK,QAAQ,OAAOogB,CAAW;AAG3E;AAKA,MAAqBU,WAAc1jB,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAa/C,YAAYC,GAA8BC,GAAgC;AACxE,UAAMD,GAAQC,CAAM;AAwCtB;AAAA;AAAA;AAAA,IAAA6B,EAAA,cAAO,MAAM;AACL,YAAA,EAAE,SAAA5B,GAAS,SAAAqkB,EAAY,IAAA;AAGzB,MAAArkB,KAAW,CAACqkB,MACdjjB,EAAcpB,GAASwjB,EAAc,GAChCA,GAAe,oBAClBO,GAAU,IAAI;AAAA,IAElB;AAIF;AAAA,IAAAniB,EAAA,cAAO,MAAM;AACL,YAAA,EAAE,SAAA5B,GAAS,SAAAqkB,EAAY,IAAA;AAG7B,MAAIrkB,KAAWqkB,MACbjjB,EAAcpB,GAAS0jB,EAAc,GAChCA,GAAe,oBAClBI,GAAU,IAAI;AAAA,IAElB;AA7DM,UAAA,EAAE,SAAA9jB,GAAS,SAAA6E,EAAY,IAAA;AAG7B,IAAIA,EAAQ,aAAa,CAAChD,EAAS7B,GAASV,CAAS,IAAGsD,EAAS5C,GAASV,CAAS,IAC1E,CAACuF,EAAQ,aAAahD,EAAS7B,GAASV,CAAS,KAAGwC,EAAY9B,GAASV,CAAS,GAGtF,KAAA,UAAUW,EAAc+iB,IAAsBhjB,CAAO,GAGrD,KAAA,WAAW,CAAC,GAAG0F,GAAiBud,IAAqB1f,EAAYvD,CAAO,CAAC,CAAC,EAAE;AAAA,MAC/E,CAAA2J,MAAOvG,EAAiBuG,CAAG,MAAM3J;AAAA,IAAA,GAInCgkB,GAAoB,MAAM,EAAI;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,OAAO;AACF,WAAAlB;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAM;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,UAAU;AACL,WAAAvhB,EAAS,KAAK,SAAStC,CAAS;AAAA,EACzC;AAAA;AAAA,EA+BA,UAAU;AACF,UAAA,EAAE,SAAAS,GAAS,SAAAqkB,EAAY,IAAA;AAG7B,IAAIA,KACFviB,EAAY9B,GAAST,CAAS,GAGhC6kB,GAAqB,IAAI,GAEzB,MAAM,QAAQ;AAAA,EAChB;AACF;AA3FExiB,EADmB2hB,IACZ,YAAWR,KAClBnhB,EAFmB2hB,IAEZ,QAAOD,KACd1hB,EAHmB2hB,IAGZ,eAAcF;ACvNvB,MAAMiB,yBAAqB;AAgB3B,CAACzjB,IAAO0B,IAAQ4B,IAAU8E,IAAUgC,IAAU4H,IAAO8C,IAAWgJ,IAASO,IAAWiC,IAAKoC,IAAOlH,EAAO,EAAE;AAAA,EAAQ,OAC/GiI,GAAe,IAAInsB,EAAE,UAAU,MAAMA,CAAC;AACxC;AAQA,MAAMosB,KAAuB,CAC3BpP,GACAqP,MACG;AACH,GAAC,GAAGA,CAAU,EAAE,QAAQ,CAAKrpB,MAAAga,EAASha,CAAC,CAAC;AAC1C,GAQMspB,KAAyB,CAAIC,GAAmBC,MAAwB;AACtE,QAAAC,IAAWxkB,GAAK,UAAUskB,CAAS;AAEzC,EAAIE,KACD,CAAA,GAAGA,CAAQ,EAAE,QAAQ,CAAC,CAAC5kB,GAAS6kB,CAAQ,MAAM;AACzC,IAAAF,EAAQ,SAAS3kB,CAAO,KAAI6kB,EAAyC,QAAQ;AAAA,EAAA,CAClF;AAEL,GAOaC,KAAe,CAACH,MAAyB;AACpD,QAAMI,IAASJ,KAAWA,EAAQ,WAAWA,IAAU,UACjDK,IAAiB,CAAC,GAAGvF,GAAqB,KAAKsF,CAAM,CAAC;AAE5D,EAAAT,GAAe,QAAQ,CAAMW,MAAA;AACrB,UAAA,EAAE,MAAAC,GAAM,UAAAC,EAAa,IAAAF;AAC3B,IAAAV;AAAA,MACEW;AAAA,MACAF,EAAe,OAAO,CAAA9E,MAAQpY,GAAQoY,GAAMiF,CAAQ,CAAC;AAAA,IAAA;AAAA,EACvD,CACD;AACH,GAOaC,KAAgB,CAACT,MAAyB;AACrD,QAAMI,IAASJ,KAAWA,EAAQ,WAAWA,IAAU;AAEvD,EAAAL,GAAe,QAAQ,CAAQe,MAAA;AACN,IAAAZ,GAAAY,EAAK,UAAU,MAAMN,CAAM;AAAA,EAAA,CACnD;AACH;AAGI,SAAS,OAAmBD,OAElBvjB,EAAA,UAAU,oBAAoB,MAAMujB,MAAgB,EAAE,MAAM,IAAM;","x_google_ignoreList":[0,1]}