{"version":3,"file":"bootstrap-native.mjs","sources":["../node_modules/@thednp/event-listener/dist/event-listener.mjs","../node_modules/@thednp/shorty/dist/shorty.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["const e = {}, f = (t) => {\n  const { type: c, currentTarget: i } = t;\n  [...e[c]].forEach(([n, s]) => {\n    i === n && [...s].forEach(([o, a]) => {\n      o.apply(n, [t]), typeof a == \"object\" && a.once && r(n, c, o, a);\n    });\n  });\n}, E = (t, c, i, n) => {\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const s = e[c];\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(t), { size: a } = o;\n  o.set(i, n), a || t.addEventListener(c, f, n);\n}, r = (t, c, i, n) => {\n  const s = e[c], o = s && s.get(t), a = o && o.get(i), d = a !== void 0 ? a : n;\n  o && o.has(i) && o.delete(i), s && (!o || !o.size) && s.delete(t), (!s || !s.size) && delete e[c], (!o || !o.size) && t.removeEventListener(c, f, d);\n}, g = E, M = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  r as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","const fe = \"aria-checked\", me = \"aria-description\", ge = \"aria-describedby\", Ee = \"aria-expanded\", ve = \"aria-haspopup\", be = \"aria-hidden\", he = \"aria-label\", ye = \"aria-labelledby\", we = \"aria-modal\", Ae = \"aria-pressed\", Se = \"aria-selected\", Me = \"aria-valuemin\", Ne = \"aria-valuemax\", ke = \"aria-valuenow\", Te = \"aria-valuetext\", j = \"abort\", J = \"beforeunload\", K = \"blur\", X = \"change\", Y = \"contextmenu\", H = \"DOMContentLoaded\", Z = \"DOMMouseScroll\", $ = \"error\", _ = \"focus\", tt = \"focusin\", et = \"focusout\", nt = \"gesturechange\", ot = \"gestureend\", st = \"gesturestart\", ct = \"keydown\", rt = \"keypress\", it = \"keyup\", at = \"load\", ut = \"click\", lt = \"dblclick\", dt = \"mousedown\", pt = \"mouseup\", ft = \"hover\", mt = \"mouseenter\", gt = \"mouseleave\", Et = \"mousein\", vt = \"mouseout\", bt = \"mouseover\", ht = \"mousemove\", yt = \"mousewheel\", wt = \"move\", At = \"orientationchange\", St = \"pointercancel\", Mt = \"pointerdown\", Nt = \"pointerleave\", kt = \"pointermove\", Tt = \"pointerup\", Dt = \"readystatechange\", Ct = \"reset\", Lt = \"resize\", Ot = \"select\", It = \"selectend\", zt = \"selectstart\", xt = \"scroll\", Vt = \"submit\", Bt = \"touchstart\", Ht = \"touchmove\", Pt = \"touchcancel\", Ut = \"touchend\", Ft = \"unload\", De = {\n  DOMContentLoaded: H,\n  DOMMouseScroll: Z,\n  abort: j,\n  beforeunload: J,\n  blur: K,\n  change: X,\n  click: ut,\n  contextmenu: Y,\n  dblclick: lt,\n  error: $,\n  focus: _,\n  focusin: tt,\n  focusout: et,\n  gesturechange: nt,\n  gestureend: ot,\n  gesturestart: st,\n  hover: ft,\n  keydown: ct,\n  keypress: rt,\n  keyup: it,\n  load: at,\n  mousedown: dt,\n  mousemove: ht,\n  mousein: Et,\n  mouseout: vt,\n  mouseenter: mt,\n  mouseleave: gt,\n  mouseover: bt,\n  mouseup: pt,\n  mousewheel: yt,\n  move: wt,\n  orientationchange: At,\n  pointercancel: St,\n  pointerdown: Mt,\n  pointerleave: Nt,\n  pointermove: kt,\n  pointerup: Tt,\n  readystatechange: Dt,\n  reset: Ct,\n  resize: Lt,\n  scroll: xt,\n  select: Ot,\n  selectend: It,\n  selectstart: zt,\n  submit: Vt,\n  touchcancel: Pt,\n  touchend: Ut,\n  touchmove: Ht,\n  touchstart: Bt,\n  unload: Ft\n}, Ce = \"loadstart\", Le = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Oe = { down: \"mousedown\", up: \"mouseup\" }, Ie = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : [\"mouseover\", \"mouseout\"], ze = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, xe = { in: \"focusin\", out: \"focusout\" }, Ve = {\n  Backspace: \"Backspace\",\n  Tab: \"Tab\",\n  Enter: \"Enter\",\n  Shift: \"Shift\",\n  Control: \"Control\",\n  Alt: \"Alt\",\n  Pause: \"Pause\",\n  CapsLock: \"CapsLock\",\n  Escape: \"Escape\",\n  Scape: \"Space\",\n  ArrowLeft: \"ArrowLeft\",\n  ArrowUp: \"ArrowUp\",\n  ArrowRight: \"ArrowRight\",\n  ArrowDown: \"ArrowDown\",\n  Insert: \"Insert\",\n  Delete: \"Delete\",\n  Meta: \"Meta\",\n  ContextMenu: \"ContextMenu\",\n  ScrollLock: \"ScrollLock\"\n}, Be = \"Alt\", He = \"ArrowDown\", Pe = \"ArrowUp\", Ue = \"ArrowLeft\", Fe = \"ArrowRight\", We = \"Backspace\", Re = \"CapsLock\", Qe = \"Control\", qe = \"Delete\", Ge = \"Enter\", je = \"Escape\", Je = \"Insert\", Ke = \"Meta\", Xe = \"Pause\", Ye = \"ScrollLock\", Ze = \"Shift\", $e = \"Space\", _e = \"Tab\", Wt = \"animationDuration\", Rt = \"animationDelay\", P = \"animationName\", T = \"animationend\", Qt = \"transitionDuration\", qt = \"transitionDelay\", D = \"transitionend\", U = \"transitionProperty\", tn = \"addEventListener\", en = \"removeEventListener\", nn = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, on = \"offsetHeight\", sn = \"offsetWidth\", cn = \"scrollHeight\", rn = \"scrollWidth\", an = \"tabindex\", Gt = navigator.userAgentData, S = Gt, { userAgent: jt } = navigator, M = jt, I = /iPhone|iPad|iPod|Android/i;\nlet C = !1;\nS ? C = S.brands.some((t) => I.test(t.brand)) : C = I.test(M);\nconst un = C, z = /(iPhone|iPod|iPad)/, ln = S ? S.brands.some((t) => z.test(t.brand)) : z.test(M), dn = M ? M.includes(\"Firefox\") : !1, { head: N } = document, pn = [\"webkitPerspective\", \"perspective\"].some((t) => t in N.style), Jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(e, n, s);\n}, Kt = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(e, n, s);\n}, Xt = (t, e, n, o) => {\n  const s = (c) => {\n    (c.target === t || c.currentTarget === t) && (n.apply(t, [c]), Kt(t, e, s, o));\n  };\n  Jt(t, e, s, o);\n}, Yt = () => {\n}, fn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    Xt(document, H, Yt, e);\n  } catch {\n  }\n  return t;\n})(), mn = [\"webkitTransform\", \"transform\"].some((t) => t in N.style), gn = \"ontouchstart\" in window || \"msMaxTouchPoints\" in navigator, En = [\"webkitAnimation\", \"animation\"].some((t) => t in N.style), vn = [\"webkitTransition\", \"transition\"].some((t) => t in N.style), Zt = (t, e) => t.getAttribute(e), bn = (t, e, n) => e.getAttributeNS(t, n), hn = (t, e) => t.hasAttribute(e), yn = (t, e, n) => e.hasAttributeNS(t, n), F = (t, e, n) => t.setAttribute(e, n), wn = (t, e, n, o) => e.setAttributeNS(t, n, o), An = (t, e) => t.removeAttribute(e), Sn = (t, e, n) => e.removeAttributeNS(t, n), Mn = (t, ...e) => {\n  t.classList.add(...e);\n}, Nn = (t, ...e) => {\n  t.classList.remove(...e);\n}, kn = (t, e) => t.classList.contains(e), { body: Tn } = document, { documentElement: Dn } = document, Cn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, a = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((e) => t.nodeType === e) || !1, u = (t) => a(t) && t.nodeType === 1 || !1, y = /* @__PURE__ */ new Map(), L = {\n  set: (t, e, n) => {\n    if (!u(t))\n      return;\n    y.has(e) || y.set(e, /* @__PURE__ */ new Map()), y.get(e).set(t, n);\n  },\n  getAllFor: (t) => y.get(t) || null,\n  get: (t, e) => {\n    if (!u(t) || !e)\n      return null;\n    const n = L.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  remove: (t, e) => {\n    const n = L.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && y.delete(e));\n  }\n}, Ln = (t, e) => L.get(t, e), g = (t) => typeof t == \"string\" || !1, W = (t) => v(t) && t.constructor.name === \"Window\" || !1, R = (t) => a(t) && t.nodeType === 9 || !1, d = (t) => W(t) ? t.document : R(t) ? t : a(t) ? t.ownerDocument : window.document, h = (t) => Object.entries(t), $t = (t) => {\n  if (!t)\n    return;\n  if (g(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = $t(e);\n  if (!n)\n    return;\n  const o = { ...t };\n  return delete o.tagName, h(o).forEach(([s, c]) => {\n    g(s) && g(c) && F(n, s, c);\n  }), n;\n}, _t = (t, e) => {\n  if (!t || !e)\n    return;\n  if (g(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = _t(t, n);\n  if (!o)\n    return;\n  const s = { ...e };\n  return delete s.tagName, h(s).forEach(([c, i]) => {\n    g(c) && g(i) && F(o, c, i);\n  }), o;\n}, Q = (t, e) => t.dispatchEvent(e), On = (t, e, n) => n.indexOf(t) === e, E = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, te = (t) => {\n  const e = E(t, P), n = E(t, Rt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, ee = (t) => {\n  const e = E(t, P), n = E(t, Wt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, In = (t, e) => {\n  let n = 0;\n  const o = new Event(T), s = ee(t), c = te(t);\n  if (s) {\n    const i = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(T, i), n = 1);\n    };\n    t.addEventListener(T, i), setTimeout(() => {\n      n || Q(t, o);\n    }, s + c + 17);\n  } else\n    e.apply(t, [o]);\n}, ne = (t) => {\n  const e = E(t, U), n = E(t, qt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, oe = (t) => {\n  const e = E(t, U), n = E(t, Qt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, zn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = oe(t), c = ne(t);\n  if (s) {\n    const i = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(D, i), n = 1);\n    };\n    t.addEventListener(D, i), setTimeout(() => {\n      n || Q(t, o);\n    }, s + c + 17);\n  } else\n    e.apply(t, [o]);\n}, xn = (t) => Float32Array.from(Array.from(t)), Vn = (t) => Float64Array.from(Array.from(t)), Bn = (t, e) => t.focus(e), x = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, se = (t) => t.toLowerCase(), Hn = (t, e, n, o) => {\n  const s = { ...n }, c = { ...t.dataset }, i = { ...e }, l = {}, p = \"title\";\n  return h(c).forEach(([r, f]) => {\n    const A = o && typeof r == \"string\" && r.includes(o) ? r.replace(o, \"\").replace(/[A-Z]/g, (G) => se(G)) : r;\n    l[A] = x(f);\n  }), h(s).forEach(([r, f]) => {\n    s[r] = x(f);\n  }), h(e).forEach(([r, f]) => {\n    r in s ? i[r] = s[r] : r in l ? i[r] = l[r] : i[r] = r === p ? Zt(t, p) : f;\n  }), i;\n}, q = (t, ...e) => Object.assign(t, ...e), Pn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Un = (t) => Object.keys(t), Fn = (t) => Object.values(t), Wn = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return v(e) && q(n, e), n;\n}, Rn = { passive: !0 }, Qn = (t) => t.offsetHeight, qn = (t, e) => {\n  h(e).forEach(([n, o]) => {\n    if (o && g(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, q(t.style, s);\n    }\n  });\n}, O = (t) => v(t) && t.constructor.name === \"Map\" || !1, ce = (t) => typeof t == \"number\" || !1, m = /* @__PURE__ */ new Map(), Gn = {\n  set: (t, e, n, o) => {\n    !u(t) || (o && o.length ? (m.has(t) || m.set(t, /* @__PURE__ */ new Map()), m.get(t).set(o, setTimeout(e, n))) : m.set(t, setTimeout(e, n)));\n  },\n  get: (t, e) => {\n    if (!u(t))\n      return null;\n    const n = m.get(t);\n    return e && n && O(n) ? n.get(e) || null : ce(n) ? n : null;\n  },\n  clear: (t, e) => {\n    if (!u(t))\n      return;\n    const n = m.get(t);\n    e && e.length && O(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && m.delete(t)) : (clearTimeout(n), m.delete(t));\n  }\n}, jn = (t) => t.toUpperCase(), w = (t, e) => {\n  const { width: n, height: o, top: s, right: c, bottom: i, left: l } = t.getBoundingClientRect();\n  let p = 1, r = 1;\n  if (e && u(t)) {\n    const { offsetWidth: f, offsetHeight: A } = t;\n    p = f > 0 ? Math.round(n) / f : 1, r = A > 0 ? Math.round(o) / A : 1;\n  }\n  return {\n    width: n / p,\n    height: o / r,\n    top: s / r,\n    right: c / p,\n    bottom: i / r,\n    left: l / p,\n    x: l / p,\n    y: s / r\n  };\n}, Jn = (t) => d(t).body, k = (t) => d(t).documentElement, Kn = (t) => d(t).head, Xn = (t) => {\n  const e = W(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, re = (t) => a(t) && t.constructor.name === \"ShadowRoot\" || !1, Yn = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || a(t) && t.parentNode || re(t) && t.host || k(t), ie = (t) => {\n  if (!u(t))\n    return !1;\n  const { width: e, height: n } = w(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, Zn = (t, e, n) => {\n  const o = u(e), s = w(t, o && ie(e)), c = { x: 0, y: 0 };\n  if (o) {\n    const i = w(e, !0);\n    c.x = i.x + e.clientLeft, c.y = i.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - c.x,\n    y: s.top + n.y - c.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet V = 0, B = 0;\nconst b = /* @__PURE__ */ new Map(), ae = (t, e) => {\n  let n = e ? V : B;\n  if (e) {\n    const o = ae(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), O(s) && !s.has(e) ? (s.set(e, n), V += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), B += 1);\n  }\n  return n;\n}, $n = (t) => {\n  var e;\n  return t ? R(t) ? t.defaultView : a(t) ? (e = t == null ? void 0 : t.ownerDocument) == null ? void 0 : e.defaultView : t : window;\n}, ue = (t) => Array.isArray(t) || !1, _n = (t) => a(t) && t.nodeName === \"CANVAS\" || !1, le = (t) => u(t) && !!t.shadowRoot || !1, to = (t) => a(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, eo = (t) => {\n  if (!a(t))\n    return !1;\n  const { top: e, bottom: n } = w(t), { clientHeight: o } = k(t);\n  return e <= o && n >= 0;\n}, no = (t) => {\n  if (!a(t))\n    return !1;\n  const { clientWidth: e, clientHeight: n } = k(t), { top: o, left: s, bottom: c, right: i } = w(t, !0);\n  return o >= 0 && s >= 0 && c <= n && i <= e;\n}, oo = (t) => ue(t) && t.every(u) || !1, so = (t) => typeof t == \"function\" || !1, co = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, ro = (t) => u(t) && t.tagName === \"IMG\" || !1, io = (t) => {\n  if (!g(t))\n    return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, ao = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, uo = (t) => a(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((e) => t.constructor.name.includes(e)) || !1, lo = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, po = (t) => k(t).dir === \"rtl\", fo = (t) => a(t) && t.constructor.name.includes(\"SVG\") || !1, mo = (t) => a(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, de = (t, e) => t ? t.closest(e) || de(t.getRootNode().host, e) : null, go = (t, e) => u(t) ? t : (a(e) ? e : d()).querySelector(t), pe = (t, e) => (a(e) ? e : d()).getElementsByTagName(t), Eo = (t) => [...pe(\"*\", t)].filter(le), vo = (t, e) => d(e).getElementById(t) || null, bo = (t, e) => (a(e) ? e : d()).querySelectorAll(t), ho = (t, e) => (e && a(e) ? e : d()).getElementsByClassName(\n  t\n), yo = (t, e) => t.matches(e);\nexport {\n  Cn as ArrayFrom,\n  H as DOMContentLoadedEvent,\n  Z as DOMMouseScrollEvent,\n  L as Data,\n  xn as Float32ArrayFrom,\n  Vn as Float64ArrayFrom,\n  q as ObjectAssign,\n  h as ObjectEntries,\n  Pn as ObjectHasOwn,\n  Un as ObjectKeys,\n  Fn as ObjectValues,\n  Gn as Timer,\n  j as abortEvent,\n  Mn as addClass,\n  tn as addEventListener,\n  Rt as animationDelay,\n  Wt as animationDuration,\n  T as animationEndEvent,\n  P as animationName,\n  fe as ariaChecked,\n  ge as ariaDescribedBy,\n  me as ariaDescription,\n  Ee as ariaExpanded,\n  ve as ariaHasPopup,\n  be as ariaHidden,\n  he as ariaLabel,\n  ye as ariaLabelledBy,\n  we as ariaModal,\n  Ae as ariaPressed,\n  Se as ariaSelected,\n  Ne as ariaValueMax,\n  Me as ariaValueMin,\n  ke as ariaValueNow,\n  Te as ariaValueText,\n  J as beforeunloadEvent,\n  nn as bezierEasings,\n  K as blurEvent,\n  X as changeEvent,\n  de as closest,\n  Y as contextmenuEvent,\n  Wn as createCustomEvent,\n  $t as createElement,\n  _t as createElementNS,\n  Q as dispatchEvent,\n  On as distinct,\n  Tn as documentBody,\n  Dn as documentElement,\n  N as documentHead,\n  In as emulateAnimationEnd,\n  zn as emulateTransitionEnd,\n  $ as errorEvent,\n  Bn as focus,\n  _ as focusEvent,\n  xe as focusEvents,\n  tt as focusinEvent,\n  et as focusoutEvent,\n  nt as gesturechangeEvent,\n  ot as gestureendEvent,\n  st as gesturestartEvent,\n  Zt as getAttribute,\n  bn as getAttributeNS,\n  w as getBoundingClientRect,\n  Eo as getCustomElements,\n  d as getDocument,\n  Jn as getDocumentBody,\n  k as getDocumentElement,\n  Kn as getDocumentHead,\n  te as getElementAnimationDelay,\n  ee as getElementAnimationDuration,\n  vo as getElementById,\n  E as getElementStyle,\n  ne as getElementTransitionDelay,\n  oe as getElementTransitionDuration,\n  ho as getElementsByClassName,\n  pe as getElementsByTagName,\n  Ln as getInstance,\n  Xn as getNodeScroll,\n  Yn as getParentNode,\n  Zn as getRectRelativeToOffsetParent,\n  ae as getUID,\n  $n as getWindow,\n  hn as hasAttribute,\n  yn as hasAttributeNS,\n  kn as hasClass,\n  ln as isApple,\n  ue as isArray,\n  _n as isCanvas,\n  le as isCustomElement,\n  R as isDocument,\n  to as isElement,\n  eo as isElementInScrollRange,\n  no as isElementInViewport,\n  oo as isElementsArray,\n  dn as isFirefox,\n  so as isFunction,\n  co as isHTMLCollection,\n  u as isHTMLElement,\n  ro as isHTMLImageElement,\n  io as isJSON,\n  O as isMap,\n  uo as isMedia,\n  un as isMobile,\n  a as isNode,\n  lo as isNodeList,\n  ce as isNumber,\n  v as isObject,\n  po as isRTL,\n  fo as isSVGElement,\n  ie as isScaledElement,\n  re as isShadowRoot,\n  g as isString,\n  mo as isTableElement,\n  ao as isWeakMap,\n  W as isWindow,\n  Be as keyAlt,\n  He as keyArrowDown,\n  Ue as keyArrowLeft,\n  Fe as keyArrowRight,\n  Pe as keyArrowUp,\n  We as keyBackspace,\n  Re as keyCapsLock,\n  Qe as keyControl,\n  qe as keyDelete,\n  Ge as keyEnter,\n  je as keyEscape,\n  Je as keyInsert,\n  Ke as keyMeta,\n  Xe as keyPause,\n  Ye as keyScrollLock,\n  Ze as keyShift,\n  $e as keySpace,\n  _e as keyTab,\n  Ve as keyboardEventKeys,\n  ct as keydownEvent,\n  rt as keypressEvent,\n  it as keyupEvent,\n  at as loadEvent,\n  Ce as loadstartEvent,\n  yo as matches,\n  Oe as mouseClickEvents,\n  Ie as mouseHoverEvents,\n  Le as mouseSwipeEvents,\n  ut as mouseclickEvent,\n  lt as mousedblclickEvent,\n  dt as mousedownEvent,\n  mt as mouseenterEvent,\n  ft as mousehoverEvent,\n  Et as mouseinEvent,\n  gt as mouseleaveEvent,\n  ht as mousemoveEvent,\n  vt as mouseoutEvent,\n  bt as mouseoverEvent,\n  pt as mouseupEvent,\n  yt as mousewheelEvent,\n  wt as moveEvent,\n  De as nativeEvents,\n  Yt as noop,\n  Hn as normalizeOptions,\n  x as normalizeValue,\n  Kt as off,\n  on as offsetHeight,\n  sn as offsetWidth,\n  Jt as on,\n  Xt as one,\n  At as orientationchangeEvent,\n  Rn as passiveHandler,\n  St as pointercancelEvent,\n  Mt as pointerdownEvent,\n  Nt as pointerleaveEvent,\n  kt as pointermoveEvent,\n  Tt as pointerupEvent,\n  go as querySelector,\n  bo as querySelectorAll,\n  Dt as readystatechangeEvent,\n  Qn as reflow,\n  An as removeAttribute,\n  Sn as removeAttributeNS,\n  Nn as removeClass,\n  en as removeEventListener,\n  Ct as resetEvent,\n  Lt as resizeEvent,\n  xt as scrollEvent,\n  cn as scrollHeight,\n  rn as scrollWidth,\n  Ot as selectEvent,\n  It as selectendEvent,\n  zt as selectstartEvent,\n  F as setAttribute,\n  wn as setAttributeNS,\n  qn as setElementStyle,\n  Vt as submitEvent,\n  pn as support3DTransform,\n  En as supportAnimation,\n  fn as supportPassive,\n  gn as supportTouch,\n  mn as supportTransform,\n  vn as supportTransition,\n  an as tabindex,\n  se as toLowerCase,\n  jn as toUpperCase,\n  ze as touchEvents,\n  Pt as touchcancelEvent,\n  Ut as touchendEvent,\n  Ht as touchmoveEvent,\n  Bt as touchstartEvent,\n  qt as transitionDelay,\n  Qt as transitionDuration,\n  D as transitionEndEvent,\n  U as transitionProperty,\n  Ft as unloadEvent,\n  M as userAgent,\n  S as userAgentData\n};\n//# sourceMappingURL=shorty.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  element: HTMLElement;\n  options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<this>(element, this.name);\n    if (prevInstance) prevInstance.dispose();\n\n    this.element = element;\n\n    /* istanbul ignore else */\n    if (this.defaults && ObjectKeys(this.defaults).length) {\n      this.options = normalizeOptions(element, this.defaults, config || {}, 'bs');\n    }\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /**\n   * Removes component from target element;\n   */\n  dispose() {\n    Data.remove(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  closest,\n  // ObjectAssign,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n// import type { BaseOptions } from 'src/interface/baseComponent';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (that: Alert) => {\n  const { element } = that;\n  toggleAlertHandler(that);\n\n  dispatchEvent(element, closedAlertEvent);\n\n  that.dispose();\n  element.remove();\n};\n\n// ALERT PRIVATE METHOD\n// ====================\n/**\n * Toggle on / off the `click` event listener.\n *\n * @param that the target alert instance\n * @param add when `true`, event listener is added\n */\nconst toggleAlertHandler = (that: Alert, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { dismiss } = that;\n  /* istanbul ignore else */\n  if (dismiss) action(dismiss, mouseclickEvent, that.close);\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    toggleAlertHandler(this, true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   *\n   * @param e the `click` event\n   */\n  close(e?: Event) {\n    const self = e ? (getAlertInstance(closest(e.target as HTMLElement, alertSelector) as HTMLElement) as Alert) : this;\n    const { element } = self;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n      if (closeAlertEvent.defaultPrevented) return;\n\n      removeClass(element, showClass);\n\n      if (hasClass(element, fadeClass)) {\n        emulateTransitionEnd(element, () => alertTransitionEnd(self));\n      } else alertTransitionEnd(self);\n    }\n  }\n\n  /** Remove the component from target element. */\n  dispose() {\n    toggleAlertHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  // ObjectAssign,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON PRIVATE METHOD\n// =====================\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Button` instance\n * @param add when `true`, event listener is added\n */\nconst toggleButtonHandler = (self: Button, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, self.toggle);\n};\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    toggleButtonHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle(e: Event) {\n    if (e) e.preventDefault();\n    const self = e ? (getButtonInstance(e.target as HTMLElement) as Button) : this;\n    if (!self.element) return;\n    const { element, isActive } = self;\n\n    if (hasClass(element, 'disabled')) return;\n\n    const action = isActive ? removeClass : addClass;\n    action(element, activeClass);\n    setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n    self.isActive = hasClass(element, activeClass);\n  }\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    toggleButtonHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  addClass,\n  hasClass,\n  removeClass,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  // discontinue disposed instances\n  /* istanbul ignore else */\n  if (self.isAnimating && getCarouselInstance(element)) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // check for element, might have been disposed\n    if (!getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n\n  const newIndex = +(getAttribute(this, dataBsSlideTo) || 0);\n\n  if (\n    this &&\n    !hasClass(this, activeClass) && // event target is not active\n    !Number.isNaN(newIndex)\n  ) {\n    // AND has the specific attribute\n    self.to(newIndex); // do the slide\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const control = this;\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n  const orientation = getAttribute(this, dataBsSlide);\n\n  /* istanbul ignore else */\n  if (orientation === 'next') {\n    self.next();\n  } else if (orientation === 'prev') {\n    self.prev();\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (!self || self.isAnimating || /textarea|input/i.test(target.nodeName)) return;\n  const RTL = isRTL(element);\n  const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n  const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n  /* istanbul ignore else */\n  if (code === arrowKeyPrev) self.prev();\n  else if (code === arrowKeyNext) self.next();\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  // const element = this;\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (!self || self.isAnimating || self.isTouch) {\n    return;\n  }\n\n  // filter pointer event on controls & indicators\n  const { controls, indicators } = self;\n  if ([...controls, ...indicators].some(el => el === target || el.contains(target as Node))) {\n    return;\n  }\n\n  startX = e.pageX;\n\n  /* istanbul ignore else */\n  if (this.contains(target as Node)) {\n    self.isTouch = true;\n    toggleCarouselTouchHandlers(self, true);\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore next */\n  if (!self) {\n    return;\n  }\n\n  const { element, index } = self;\n  const RTL = isRTL(element);\n\n  self.isTouch = false;\n  toggleCarouselTouchHandlers(self);\n\n  if (doc.getSelection()?.toString().length) {\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n    return;\n  }\n\n  endX = e.pageX;\n\n  // the event target is outside the carousel context\n  // OR swipe distance is less than 120px\n  /* istanbul ignore else */\n  if (!element.contains(target as HTMLElement) || Math.abs(startX - endX) < 120) {\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n    return;\n  }\n  // OR determine next index to slide to\n  /* istanbul ignore else */\n  if (currentX < startX) {\n    self.to(index + (RTL ? -1 : 1));\n  } else if (currentX > startX) {\n    self.to(index + (RTL ? 1 : -1));\n  }\n  // reset pointer position\n  startX = 0;\n  currentX = 0;\n  endX = 0;\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param pageIndex the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, pageIndex: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[pageIndex]) addClass(indicators[pageIndex], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler as EventListener, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler as EventListener, passiveHandler);\n};\n\n/**\n * Toggles all event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselHandlers = (self: Carousel, add?: boolean) => {\n  const { element, options, slides, controls, indicators } = self;\n  const { touch, pause, interval, keyboard } = options;\n  const action = add ? addListener : removeListener;\n\n  if (pause && interval) {\n    action(element, mouseenterEvent, carouselPauseHandler);\n    action(element, mouseleaveEvent, carouselResumeHandler);\n  }\n\n  if (touch && slides.length > 2) {\n    action(element, pointerdownEvent, carouselPointerDownHandler as EventListener, passiveHandler);\n  }\n\n  /* istanbul ignore else */\n  if (controls.length) {\n    controls.forEach(arrow => {\n      /* istanbul ignore else */\n      if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler as EventListener);\n    });\n  }\n\n  /* istanbul ignore else */\n  if (indicators.length) {\n    indicators.forEach(indicator => {\n      action(indicator, mouseclickEvent, carouselIndicatorHandler as EventListener);\n    });\n  }\n\n  if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler as EventListener);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.index = 0;\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length < 2) {\n      return;\n    }\n    // external controls must be within same document context\n    const doc = getDocument(element);\n\n    this.controls = [\n      ...querySelectorAll(`[${dataBsSlide}]`, element),\n      ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n    // a LIVE collection is prefferable\n    this.indicators = [\n      ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n      ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    // set JavaScript and DATA API options\n    const { options } = this;\n\n    // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n    this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n    // set first slide active if none\n    /* istanbul ignore else */\n    if (getActiveIndex(this) < 0) {\n      addClass(slides[0], activeClass);\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, 0);\n    }\n\n    // attach event handlers\n    toggleCarouselHandlers(this, true);\n\n    // start to cycle if interval is set\n    if (options.interval) this.cycle();\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (this.isAnimating || activeItem === next || Timer.get(element, dataBsSlide)) return;\n\n    // determine transition direction\n    /* istanbul ignore else */\n    if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n      this.direction = RTL ? 'right' : 'left'; // next\n    } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n      this.direction = RTL ? 'left' : 'right'; // prev\n    }\n    const { direction } = this;\n\n    // find the right next index\n    if (next < 0) {\n      next = slides.length - 1;\n    } else if (next >= slides.length) {\n      next = 0;\n    }\n\n    // orientation, class name, eventProperties\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    const eventProperties = {\n      relatedTarget: slides[next],\n      from: activeItem,\n      to: next,\n      direction,\n    };\n\n    // update event properties\n    ObjectAssign(carouselSlideEvent, eventProperties);\n    ObjectAssign(carouselSlidEvent, eventProperties);\n\n    // discontinue when prevented\n    dispatchEvent(element, carouselSlideEvent);\n    if (carouselSlideEvent.defaultPrevented) return;\n\n    // update index\n    this.index = next;\n    activateCarouselIndicator(this, next);\n\n    if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n      Timer.set(\n        element,\n        () => {\n          addClass(slides[next], `${carouselItem}-${orientation}`);\n          reflow(slides[next]);\n          addClass(slides[next], `${carouselItem}-${directionClass}`);\n          addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n          emulateTransitionEnd(slides[next], () => carouselTransitionEndHandler(this));\n        },\n        0,\n        dataBsSlide,\n      );\n    } else {\n      addClass(slides[next], activeClass);\n      removeClass(slides[activeItem], activeClass);\n\n      Timer.set(\n        element,\n        () => {\n          Timer.clear(element, dataBsSlide);\n          // check for element, might have been disposed\n          /* istanbul ignore else */\n          if (element && options.interval && !this.isPaused) {\n            this.cycle();\n          }\n\n          dispatchEvent(element, carouselSlidEvent);\n        },\n        0,\n        dataBsSlide,\n      );\n    }\n  }\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { slides } = this;\n    const itemClasses = ['start', 'end', 'prev', 'next'];\n\n    [...slides].forEach((slide, idx) => {\n      if (hasClass(slide, activeClass)) activateCarouselIndicator(this, idx);\n      itemClasses.forEach(c => removeClass(slide, `${carouselItem}-${c}`));\n    });\n\n    toggleCarouselHandlers(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  // ObjectAssign,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (showCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  addClass(element, collapsingClass);\n  removeClass(element, collapseString);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n    addClass(element, showClass);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, shownCollapseEvent);\n  });\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (hideCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  removeClass(element, collapseString);\n  removeClass(element, showClass);\n  addClass(element, collapsingClass);\n\n  reflow(element);\n  setElementStyle(element, { height: '0px' });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    /* istanbul ignore else */\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, hiddenCollapseEvent);\n  });\n};\n\n/**\n * Toggles on/off the event listener(s) of the `Collapse` instance.\n *\n * @param self the `Collapse` instance\n * @param add when `true`, the event listener is added\n */\nconst toggleCollapseHandler = (self: Collapse, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler as EventListener));\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = querySelector(options.parent as HTMLElement | string, doc) || getTargetElement(element) || null;\n\n    // add event listeners\n    toggleCollapseHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (Timer.get(element)) return;\n\n    collapseContent(this);\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    toggleCollapseHandler(this);\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (element as HTMLAnchorElement).href.slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor && hasAttribute(parentAnchor, 'href') && (parentAnchor as HTMLAnchorElement).href.slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  querySelector,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"],[${dataBsToggle}=\"${dropupString}\"],[${dataBsToggle}=\"${dropendString}\"],[${dataBsToggle}=\"${dropstartString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore next: this test requires a navbar */\n  if (getElementStyle(menu, 'position') === 'static') return;\n\n  const RTL = isRTL(element);\n  // const menuStart = hasClass(menu, dropdownMenuStartClass);\n  const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n  // reset menu offset and position\n  const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n  resetProps.forEach(p => {\n    // menu.style[p] = '';\n    const style: { [key: string]: string } = {};\n    style[p] = '';\n    setElementStyle(menu, style);\n  });\n\n  // set initial position class\n  // take into account .btn-group parent as .dropdown\n  // this requires navbar/btn-group/input-group\n  let positionClass =\n    dropdownClasses.find(c => hasClass(parentElement, c)) ||\n    /* istanbul ignore next: fallback position */ dropdownString;\n\n  const dropdownMargin: { [key: string]: number[] } = {\n    dropdown: [offset, 0, 0],\n    dropup: [0, 0, offset],\n    dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n    dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n  };\n\n  const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n    dropdown: { top: '100%' },\n    dropup: { top: 'auto', bottom: '100%' },\n    dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n    dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n    menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n    menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n  };\n\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const { left: targetLeft, top: targetTop, width: targetWidth, height: targetHeight } = getBoundingClientRect(element);\n\n  // dropstart | dropend\n  const leftFullExceed = targetLeft - menuWidth - offset < 0;\n  // dropend\n  const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n  // dropstart | dropend\n  const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n  // dropdown\n  const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n  // dropup\n  const topExceed = targetTop - menuHeight - offset < 0;\n  // dropdown / dropup\n  const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n  const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n  // recompute position\n  // handle RTL as well\n  if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropendString;\n  }\n  if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropstartString;\n  }\n  if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n    positionClass = dropupString;\n  }\n\n  // override position for horizontal classes\n  if (horizontalClass.includes(positionClass) && bottomExceed) {\n    ObjectAssign(dropdownPosition[positionClass], {\n      top: 'auto',\n      bottom: 0,\n    });\n  }\n\n  // override position for vertical classes\n  if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n    // don't realign when menu is wider than window\n    // in both RTL and non-RTL readability is KING\n    let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n    if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n    if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n    if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n  }\n\n  const margins: number[] = dropdownMargin[positionClass];\n  setElementStyle(menu, {\n    ...dropdownPosition[positionClass],\n    margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n  });\n\n  // override dropdown-menu-start | dropdown-menu-end\n  if (verticalClass.includes(positionClass) && menuEnd) {\n    /* istanbul ignore else */\n    if (menuEnd) {\n      const endAdjust =\n        (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n      setElementStyle(menu, dropdownPosition[endAdjust]);\n    }\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler as EventListener);\n  action(doc, focusEvent, dropdownDismissHandler as EventListener);\n  action(doc, keydownEvent, dropdownPreventScroll as EventListener);\n  action(doc, keyupEvent, dropdownKeyHandler as EventListener);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param self the `Dropdown` instance\n * @param add when `true`, it will add the event listener\n */\nconst toggleDropdownHandler = (self: Dropdown, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler as EventListener);\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore next: impossible to satisfy */\n  if (!target || !(target as HTMLElement).closest) return; // some weird FF bug #409\n\n  const element = getCurrentOpenDropdown(target as HTMLElement);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const hasData = closest(target as HTMLElement, dropdownSelector) !== null;\n  const isForm =\n    parentElement &&\n    parentElement.contains(target as HTMLElement) &&\n    ((target as HTMLElement).tagName === 'form' || closest(target as HTMLElement, 'form') !== null);\n\n  if (type === mouseclickEvent && isEmptyAnchor(target as HTMLElement)) {\n    e.preventDefault();\n  }\n  if (type === focusEvent && (target === element || target === menu || menu.contains(target as HTMLElement))) {\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (isForm || hasData) {\n    // smile to ESLint\n  } else if (self) {\n    self.hide();\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopImmediatePropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n  /* istanbul ignore next: impossible to satisfy */\n  if (!self || !activeElement) return;\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n    let idx = menuItems.indexOf(activeElement);\n    /* istanbul ignore else */\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    /* istanbul ignore else */\n    if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n\n    // set targets\n    this.parentElement = parentElement as HTMLElement;\n    this.menu = querySelector(`.${dropdownMenuClass}`, parentElement as HTMLElement) as HTMLElement;\n\n    // add event listener\n    toggleDropdownHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (open) return;\n\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement && getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, showDropdownEvent);\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'true');\n\n    // change menu position\n    styleDropdown(this);\n\n    this.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, hideDropdownEvent);\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'false');\n\n    this.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    toggleDropdownHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'div' }) as HTMLElement;\n\nconst appendPopup = (target?: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  const BODY =\n    isNode(customContainer) && customContainer.nodeName === 'BODY' ? customContainer : getDocumentBody(target);\n\n  if (isNode(target)) {\n    if (\n      (!customContainer && !BODY.contains(popupContainer)) ||\n      (isNode(customContainer) && customContainer.nodeName === 'BODY')\n    ) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target?: HTMLElement, customContainer?: ParentNode) => {\n  if (isNode(target)) {\n    target.remove();\n\n    if (!customContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  return lookup.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import {\n  createElement,\n  getDocument,\n  reflow,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getDocumentBody,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isHTMLElement,\n  isRTL,\n  isFunction,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  focus,\n  Timer,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  action(element, mouseclickEvent, modalDismissHandler as EventListener);\n  action(getWindow(element), resizeEvent, self.update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler as EventListener);\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Modal` instance.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listener is added\n */\nconst toggleModalHandler = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler as EventListener));\n  }\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n * @param callback the `Modal` instance\n */\nconst afterModalHide = (self: Modal, callback?: () => void) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  /* istanbul ignore else */\n  if (isFunction(callback)) callback();\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n * @param callback when `true` skip animation\n */\nconst beforeModalHide = (self: Modal, callback?: () => void) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && !callback && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self, callback);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.toggle();\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(modalActiveSelector, getDocument(target as Node));\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { options } = self;\n  /* istanbul ignore else */\n  if (\n    options.keyboard &&\n    code === keyEscape && // the keyboard option is enabled and the key is 27\n    hasClass(element, showClass)\n  ) {\n    // the modal is not visible\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nfunction modalDismissHandler(this: HTMLElement, e: MouseEvent) {\n  const self = getModalInstance(this);\n\n  // this timer is needed\n  /* istanbul ignore next: must have a filter */\n  if (!self || Timer.get(this)) return;\n\n  const { options, isStatic, modalDialog } = self;\n  const { backdrop } = options;\n  const { target } = e;\n\n  const selectedText = getDocument(this)?.getSelection()?.toString().length;\n  const targetInsideDialog = modalDialog?.contains(target as HTMLElement);\n  const dismiss = target && closest(target as HTMLElement, modalDismissSelector);\n\n  /* istanbul ignore else */\n  if (isStatic && !targetInsideDialog) {\n    Timer.set(\n      this,\n      () => {\n        addClass(this, modalStaticClass);\n        emulateTransitionEnd(modalDialog as HTMLElement, () => staticTransitionEnd(self));\n      },\n      17,\n    );\n  } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n    self.relatedTarget = dismiss || null;\n    self.hide();\n    e.preventDefault();\n  }\n}\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (isHTMLElement(modalDialog) ? getElementTransitionDuration(modalDialog) : 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    this.modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    // modal can have multiple triggering elements\n    this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional internals\n    this.isStatic = this.options.backdrop === 'static';\n    this.hasFade = hasClass(element, fadeClass);\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleModalHandler(this, true);\n\n    // bind\n    this.update = this.update.bind(this);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showModalEvent);\n    if (showModalEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n\n    if (currentOpen && currentOpen !== element) {\n      const that =\n        getModalInstance(currentOpen) ||\n        /* istanbul ignore next */\n        getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, offcanvasComponent);\n      if (that) that.hide();\n    }\n    if (backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(element, hasFade, true);\n      } else {\n        toggleOverlayType(true);\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n      setTimeout(() => beforeModalShow(this), overlayDelay);\n    } else {\n      beforeModalShow(this);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hide the modal from the user.\n   *\n   * @param callback when defined it will skip animation\n   */\n  hide(callback?: () => void) {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideModalEvent);\n    if (hideModalEvent.defaultPrevented) return;\n    removeClass(element, showClass);\n    setAttribute(element, ariaHidden, 'true');\n    removeAttribute(element, ariaModal);\n\n    // if (hasFade && callback) {\n    /* istanbul ignore else */\n    if (hasFade) {\n      emulateTransitionEnd(element, () => beforeModalHide(this, callback));\n    } else {\n      beforeModalHide(this, callback);\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update() {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  }\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    toggleModalHandler(this);\n    // use callback\n    this.hide(() => super.dispose());\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  isFunction,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the `click` event listeners.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true*, listeners are added\n */\nconst toggleOffcanvasEvents = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  self.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler as EventListener));\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler as EventListener);\n  action(doc, mouseclickEvent, offcanvasDismissHandler as EventListener);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param callback the hide callback\n */\nconst beforeOffcanvasHide = (self: Offcanvas, callback?: () => void) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => hideOffcanvasComplete(self, callback));\n  } else hideOffcanvasComplete(self, callback);\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must have a filter */\n  if (!self) return;\n\n  const { options, triggers } = self;\n  const { backdrop } = options;\n  const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n  const selection = getDocument(element).getSelection();\n\n  if (overlay.contains(target as HTMLElement) && backdrop === 'static') return;\n\n  /* istanbul ignore else */\n  if (\n    !(selection && selection.toString().length) &&\n    ((!element.contains(target as HTMLElement) &&\n      backdrop &&\n      /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n      (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n  ) {\n    self.relatedTarget = offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n    self.hide();\n  }\n\n  /* istanbul ignore next */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (self.options.keyboard && code === keyEscape) {\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param callback the hide callback\n */\nconst hideOffcanvasComplete = (self: Offcanvas, callback?: () => void) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n  // callback\n  if (isFunction(callback)) callback();\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleOffcanvasEvents(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showOffcanvasEvent);\n    if (showOffcanvasEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const that =\n        getOffcanvasInstance(currentOpen) ||\n        /* istanbul ignore next */\n        getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, modalComponent);\n      if (that) that.hide();\n    }\n\n    if (options.backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(element, true);\n      } else {\n        toggleOverlayType();\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n    } else {\n      beforeOffcanvasShow(this);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hides the offcanvas from the user.\n   *\n   * @param callback when `true` it will skip animation\n   */\n  hide(callback?: () => void) {\n    const { element, relatedTarget } = this;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideOffcanvasEvent);\n    if (hideOffcanvasEvent.defaultPrevented) return;\n\n    addClass(element, offcanvasTogglingClass);\n    removeClass(element, showClass);\n\n    if (!callback) {\n      emulateTransitionEnd(element, () => beforeOffcanvasHide(this, callback));\n    } else beforeOffcanvasHide(this, callback);\n  }\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    toggleOffcanvasEvents(this);\n    this.hide(() => super.dispose());\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  isMedia,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n * @param e event object\n */\nconst styleTip = <T extends Tooltip>(self: T, e?: Event & PointerEvent) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n  if (!tooltip) return;\n  const tipPositions = { ...tipClassPositions };\n\n  const RTL = isRTL(element);\n\n  // reset tooltip style (top: 0, left: 0 works best)\n  setElementStyle(tooltip, {\n    // top: '0px', left: '0px', right: '', bottom: '',\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  const isPopover = self.name === popoverComponent;\n  const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n  const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n  let { placement } = options;\n  const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n  const parentPosition = getElementStyle(container as HTMLElement, 'position');\n  const fixedParent = parentPosition === 'fixed';\n  const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n  const leftBoundry = RTL && fixedParent ? scrollbarWidth : 0;\n  const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n  const {\n    width: elemWidth,\n    height: elemHeight,\n    left: elemRectLeft,\n    right: elemRectRight,\n    top: elemRectTop,\n  } = getBoundingClientRect(element, true);\n  const { x, y } = {\n    x: elemRectLeft,\n    y: elemRectTop,\n  };\n  // reset arrow style\n  setElementStyle(arrow as HTMLElement, {\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  let topPosition: number | string = 0;\n  let leftPosition: number | string = 0;\n  let rightPosition: number | string = '';\n  let arrowTop: number | string = '';\n  let arrowLeft: number | string = '';\n  let arrowRight: number | string = '';\n\n  const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n  const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n  const arrowAdjust = arrowWidth / 2;\n\n  // check placement\n  let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n  let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n  let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n  let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n  const horizontals = ['left', 'right'];\n  const verticals = ['top', 'bottom'];\n\n  topExceed = horizontals.includes(placement)\n    ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n    : topExceed;\n  bottomExceed = horizontals.includes(placement)\n    ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n    : bottomExceed;\n  leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n  rightExceed = verticals.includes(placement)\n    ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n    : rightExceed;\n\n  // first remove side positions if both left and right limits are exceeded\n  // we usually fall back to top|bottom\n  placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n  // recompute placement\n  placement = placement === 'top' && topExceed ? 'bottom' : placement;\n  placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n  placement = placement === 'left' && leftExceed ? 'right' : placement;\n  placement = placement === 'right' && rightExceed ? 'left' : placement;\n\n  // update tooltip/popover class\n  if (!tooltip.className.includes(placement)) {\n    tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n  }\n\n  // compute tooltip / popover coordinates\n  /* istanbul ignore else */\n  if (horizontals.includes(placement)) {\n    // secondary|side positions\n    if (placement === 'left') {\n      // LEFT\n      leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n    } else {\n      // RIGHT\n      leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n    }\n\n    // adjust top and arrow\n    if (topExceed) {\n      topPosition = y;\n      // topPosition += (isSticky ? -parentTop - scroll.y : 0);\n      arrowTop = elemHeight / 2 - arrowWidth;\n    } else if (bottomExceed) {\n      topPosition = y - tipHeight + elemHeight;\n      // topPosition += (isSticky ? -parentTop - scroll.y : 0);\n      arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n    } else {\n      topPosition = y - tipHeight / 2 + elemHeight / 2;\n      // topPosition += (isSticky ? -parentTop - scroll.y : 0);\n      arrowTop = tipHeight / 2 - arrowHeight / 2;\n    }\n  } else if (verticals.includes(placement)) {\n    if (e && isMedia(element)) {\n      const eX = e.clientX;\n      const eY = e.clientY;\n\n      if (placement === 'top') {\n        topPosition = eY - tipHeight - arrowWidth;\n      } else {\n        topPosition = eY + arrowWidth;\n      }\n\n      // adjust (left | right) and also the arrow\n      if (e.clientX - tipWidth / 2 < leftBoundry) {\n        leftPosition = RTL ? scrollbarWidth : 0;\n        arrowLeft = eX - arrowAdjust;\n        arrowLeft -= fixedParent ? (RTL ? scrollbarWidth : 0) : 0;\n      } else if (e.clientX + tipWidth / 2 > rightBoundry) {\n        leftPosition = 'auto';\n        rightPosition = !RTL ? scrollbarWidth : 0;\n        arrowRight = rightBoundry - eX - arrowAdjust;\n        arrowRight += fixedParent ? (RTL ? scrollbarWidth : 0) : 0;\n\n        // normal top/bottom\n      } else {\n        leftPosition = eX - tipWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    } else {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        // arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n  }\n\n  // apply style to tooltip/popover\n  setElementStyle(tooltip, {\n    top: `${topPosition}px`,\n    left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n    right: rightPosition !== '' ? `${rightPosition}px` : '',\n  });\n\n  // update arrow placement\n  /* istanbul ignore else */\n  if (isHTMLElement(arrow)) {\n    if (arrowTop !== '') {\n      arrow.style.top = `${arrowTop}px`;\n    }\n    if (arrowLeft !== '') {\n      arrow.style.left = `${arrowLeft}px`;\n    } else if (arrowRight !== '') {\n      arrow.style.right = `${arrowRight}px`;\n    }\n  }\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","// import {getWindow} from '@thednp/shorty';\nimport { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: Node, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element) || (isString(content) && !content.length)) return;\n\n  /* istanbul ignore else */\n  if (isString(content)) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    // const win = getWindow(element);\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate) ? (tooltipTemplate.cloneNode(true) as HTMLElement) : undefined;\n\n  const { tooltip } = self;\n  if (!tooltip) return;\n\n  // set id and role attributes\n  setAttribute(tooltip, 'id', id);\n  setAttribute(tooltip, 'role', tooltipString);\n\n  const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n  const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n  const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n  // set arrow and enable access for styleTip\n  self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n  const { arrow } = self;\n\n  if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n  else {\n    const tempTitle = createElement('div') as Node;\n    setHtml(tempTitle, title, sanitizeFn);\n    titleParts = [...[...tempTitle.childNodes]];\n  }\n\n  if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n  else {\n    const tempContent = createElement('div') as Node;\n    setHtml(tempContent, content, sanitizeFn);\n    contentParts = [...[...tempContent.childNodes]];\n  }\n\n  // set dismissible button\n  if (dismissible) {\n    if (title) {\n      if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        titleParts = [...titleParts, tempBtn.firstChild as Node];\n      }\n    } else {\n      /* istanbul ignore else */\n      if (tooltipHeader) tooltipHeader.remove();\n      if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        contentParts = [...contentParts, tempBtn.firstChild as Node];\n      }\n    }\n  }\n\n  // fill the template with content from options / data attributes\n  // also sanitize title && content\n  /* istanbul ignore else */\n  if (!isTooltip) {\n    /* istanbul ignore else */\n    if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n    /* istanbul ignore else */\n    if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n    // set btn\n    self.btn = querySelector('.btn-close', tooltip) || undefined;\n  } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n  // Bootstrap 5.2.x\n  // addClass(tooltip, 'position-absolute');\n  addClass(tooltip, 'position-fixed');\n  addClass(arrow, 'position-absolute');\n\n  // set popover animation and placement\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n  /* istanbul ignore else */\n  if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n  /* istanbul ignore else */\n  if (customClass && !hasClass(tooltip, customClass)) {\n    addClass(tooltip, customClass);\n  }\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n};\n\nexport default createTip;\n","import { getDocumentBody, isShadowRoot, isTableElement, getParentNode, getElementStyle } from '@thednp/shorty';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = ['HTML', 'BODY'];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, 'position') !== 'relative' &&\n        containers.slice(i + 1).every(r => getElementStyle(r as HTMLElement, 'position') === 'static')\n      ) {\n        return c;\n      }\n      return null;\n    }) || getDocumentBody(element)\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mousemoveEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  isMedia,\n  isFunction,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementStyle,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip, container === offsetParent ? container : undefined);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  toggleTooltipHandlers(self);\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n\n  /* istanbul ignore else */\n  if (!isMedia(element)) {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, self.update, passiveHandler);\n    });\n  }\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n * @param callback the dispose callback\n */\nconst tooltipHiddenAction = (self: Tooltip, callback?: () => any) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n  if (isFunction(callback)) callback();\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  // btn is only for dismissible popover\n  const { element, options, btn } = self;\n  const { trigger } = options;\n  const isPopover = self.name !== tooltipComponent;\n  const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n  if (trigger?.includes('manual')) return;\n\n  self.enabled = !!add;\n\n  const triggerOptions = trigger?.split(' ');\n  const elemIsMedia = isMedia(element);\n\n  if (elemIsMedia) {\n    action(element, mousemoveEvent, self.update, passiveHandler);\n  }\n\n  triggerOptions?.forEach(tr => {\n    /* istanbul ignore else */\n    if (elemIsMedia || tr === mousehoverEvent) {\n      action(element, mousedownEvent, self.show);\n      action(element, mouseenterEvent, self.show);\n\n      /* istanbul ignore else */\n      if (dismissible && btn) {\n        action(btn, mouseclickEvent, self.hide);\n      } else {\n        action(element, mouseleaveEvent, self.hide);\n        action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n      }\n    } else if (tr === mouseclickEvent) {\n      action(element, tr, !dismissible ? self.toggle : self.show);\n    } else if (tr === focusEvent) {\n      action(element, focusinEvent, self.show);\n      /* istanbul ignore else */\n      if (!dismissible) action(element, focusoutEvent, self.hide);\n      /* istanbul ignore else */\n      if (isApple) {\n        action(element, mouseclickEvent, () => focus(element));\n      }\n    }\n  });\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, container, offsetParent } = self;\n  const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  if (!isMedia(element)) {\n    const win = getWindow(element);\n    const overflow = offsetHeight !== scrollHeight;\n    const scrollTarget = overflow && container === offsetParent ? container : win;\n    action(scrollTarget, resizeEvent, self.update, passiveHandler);\n    action(scrollTarget, scrollEvent, self.update, passiveHandler);\n  }\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.hide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.hide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(element, titleAtt[content ? 0 : 1], content || getAttribute(element, titleAtt[0]) || '');\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if ((!options.title && isTooltip) || (!isTooltip && !options.content)) {\n      // throw Error(`${this.name} Error: target has no content set.`);\n      return;\n    }\n\n    // reset default options\n    ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n    // all functions bind\n    this.handleTouch = this.handleTouch.bind(this);\n    this.update = this.update.bind(this);\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n    this.toggle = this.toggle.bind(this);\n\n    // set title attributes and add event listeners\n    /* istanbul ignore else */\n    if (hasAttribute(element, titleAttr) && isTooltip && typeof options.title === 'string') {\n      toggleTooltipTitle(this, options.title);\n    }\n\n    // set containers\n    this.container = getElementContainer(element);\n    this.offsetParent = ['sticky', 'fixed'].some(\n      position => getElementStyle(this.container as HTMLElement, 'position') === position,\n    )\n      ? (this.container as HTMLElement)\n      : getDocument(this.element).body;\n\n    // create tooltip here\n    createTip(this);\n\n    // attach events\n    toggleTooltipHandlers(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /**\n   * Shows the tooltip.\n   *\n   * @param e the `Event` object\n   */\n  show(e?: Event) {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasPopup(tooltip, container === offsetParent ? container : undefined)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (showTooltipEvent.defaultPrevented) return;\n\n          // append to container\n          appendPopup(tooltip, container === offsetParent ? container : undefined);\n\n          setAttribute(element, ariaDescribedBy, `#${id}`);\n\n          this.update(e);\n          toggleTooltipOpenHandlers(this, true);\n\n          /* istanbul ignore else */\n          if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n          /* istanbul ignore else */\n          if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n          else tooltipShownAction(this);\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /**\n   * Hides the tooltip.\n   *\n   * @param e the dispose callback\n   * @param callback the dispose callback\n   */\n  hide(e?: Event, callback?: () => void) {\n    const { options, tooltip, element, container, offsetParent } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasPopup(tooltip, container === offsetParent ? container : undefined)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (hideTooltipEvent.defaultPrevented) return;\n\n          this.update(e); // use Event\n          removeClass(tooltip, showClass);\n          toggleTooltipOpenHandlers(this);\n\n          /* istanbul ignore else */\n          if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this, callback));\n          else tooltipHiddenAction(this, callback);\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  }\n\n  /**\n   * Updates the tooltip position.\n   *\n   * @param e the `Event` object\n   */\n  update(e?: Event) {\n    styleTip<Tooltip>(this, e as (Event & PointerEvent) | undefined);\n  }\n\n  /**\n   * Toggles the tooltip visibility.\n   *\n   * @param e the `Event` object\n   */\n  toggle(e?: Event) {\n    const { tooltip, container, offsetParent } = this;\n\n    if (tooltip && !hasPopup(tooltip, container === offsetParent ? container : undefined)) this.show(e);\n    else this.hide();\n  }\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      toggleTooltipHandlers(this, true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, container, offsetParent, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasPopup(tooltip, container === offsetParent ? container : undefined) && animation) {\n        this.hide(undefined, () => toggleTooltipHandlers(this));\n      } else {\n        toggleTooltipHandlers(this);\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch({ target }: TouchEvent) {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore next */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  }\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, container, offsetParent, options } = this;\n    const callback = () => disposeTooltipComplete(this, () => super.dispose());\n\n    if (options.animation && tooltip && hasPopup(tooltip, container === offsetParent ? container : undefined)) {\n      this.options.delay = 0; // reset delay\n      this.hide(undefined, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show() {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  }\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  // ObjectAssign,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget && getScrollHeight(scrollTarget);\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (itemsLength !== links.length || scrollHEIGHT !== scrollHeight)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT as number;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n/**\n * Toggles on/off the component event listener.\n *\n * @param self the `ScrollSpy` instance\n * @param add when `true`, listener is added\n */\nconst toggleSpyHandlers = (self: ScrollSpy, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.scrollTarget as EventTarget, scrollEvent, self.refresh, passiveHandler);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window | null;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (!this.target) return;\n\n    // set initial state\n    this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n\n    // bind events\n    this.refresh = this.refresh.bind(this);\n\n    // add event handlers\n    toggleSpyHandlers(this, true);\n\n    this.refresh();\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh() {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore next */\n    if (target?.offsetHeight === 0) return;\n\n    updateSpyTargets(this);\n\n    const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n    if (scrollTop >= maxScroll) {\n      const newActiveItem = items[itemsLength - 1];\n\n      /* istanbul ignore else */\n      if (activeItem !== newActiveItem) {\n        activate(this, newActiveItem);\n      }\n      return;\n    }\n\n    const { offsets } = this;\n\n    if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n      this.activeItem = null;\n      if (isHTMLElement(target)) clear(target);\n      return;\n    }\n\n    items.forEach((item, i) => {\n      if (\n        activeItem !== item &&\n        scrollTop >= offsets[i] &&\n        (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n      ) {\n        activate(this, item);\n      }\n    });\n  }\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    toggleSpyHandlers(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  // ObjectAssign,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || { currentHeight: 0, nextHeight: 0 };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n  if (showTabEvent.defaultPrevented) return;\n\n  if (nextContent) addClass(nextContent, activeClass);\n  if (content) removeClass(content, activeClass);\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const nextHeight = nextContent.scrollHeight;\n    tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n    addClass(tabContent, collapsingClass);\n    tabContent.style.height = `${currentHeight}px`;\n    reflow(tabContent);\n    [content, nextContent].forEach(c => {\n      if (c) removeClass(c, 'overflow-hidden');\n    });\n  }\n\n  if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n    setTimeout(() => {\n      addClass(nextContent, showClass);\n      emulateTransitionEnd(nextContent, () => {\n        triggerTabShow(self);\n      });\n    }, 1);\n  } else {\n    if (nextContent) addClass(nextContent, showClass);\n    triggerTabShow(self);\n  }\n\n  if (tab) dispatchEvent(tab, hiddenTabEvent);\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Tab` instance\n * @param add when `true`, event listener is added\n */\nconst toggleTabHandler = (self: Tab, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, tabClickHandler);\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n  e.preventDefault();\n\n  self.show();\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    if (!content) return;\n\n    const nav = closest(element, '.nav');\n    const container = closest(content, '.tab-content');\n\n    this.nav = nav;\n    this.content = content;\n    this.tabContent = container;\n\n    // event targets\n    this.dropdown = getParentDropdown(element);\n\n    // show first Tab instance of none is shown\n    // suggested on #432\n    const { tab } = getActiveTab(this);\n    if (nav && !tab) {\n      const firstTab = querySelector(tabSelector, nav);\n      const firstTabContent = firstTab && getTargetElement(firstTab);\n\n      /* istanbul ignore else */\n      if (firstTabContent) {\n        addClass(firstTab, activeClass);\n        addClass(firstTabContent, showClass);\n        addClass(firstTabContent, activeClass);\n        setAttribute(element, ariaSelected, 'true');\n      }\n    }\n\n    // add event listener\n    toggleTabHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      if (isHTMLElement(tab as Node)) dispatchEvent(tab as EventTarget, hideTabEvent);\n      if (hideTabEvent.defaultPrevented) return;\n\n      addClass(element, activeClass);\n      setAttribute(element, ariaSelected, 'true');\n\n      const activeDropdown = isHTMLElement(tab as HTMLElement) && getParentDropdown(tab as HTMLElement);\n      if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n        removeClass(activeDropdown, activeClass);\n      }\n\n      /* istanbul ignore else */\n      if (nav) {\n        const toggleTab = () => {\n          if (tab) {\n            removeClass(tab, activeClass);\n            setAttribute(tab, ariaSelected, 'false');\n          }\n          if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n        };\n\n        if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n          Timer.set(nav, toggleTab, 1);\n        } else toggleTab();\n      }\n\n      if (content) {\n        removeClass(content, showClass);\n        if (hasClass(content, fadeClass)) {\n          emulateTransitionEnd(content, () => triggerTabHide(this));\n        } else {\n          triggerTabHide(this);\n        }\n      }\n    }\n  }\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    toggleTabHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  // ObjectAssign,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Toast` instance\n * @param add when `true`, it will add the listener\n */\nconst toggleToastHandlers = (self: Toast, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, triggers, dismiss, options } = self;\n\n  /* istanbul ignore else */\n  if (dismiss) {\n    action(dismiss, mouseclickEvent, self.hide);\n  }\n\n  /* istanbul ignore else */\n  if (options.autohide) {\n    [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n      action(element, e, interactiveToastHandler as EventListener),\n    );\n  }\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n  }\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  toggleToastHandlers(self);\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.show();\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore next: a solid filter is required */\n  if (!self || element === relatedTarget || element.contains(relatedTarget as Node)) return;\n\n  if ([mouseenterEvent, focusinEvent].includes(type)) {\n    Timer.clear(element, toastString);\n  } else {\n    Timer.set(element, () => self.hide(), self.options.delay, toastString);\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // bind\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n\n    // add event listener\n    toggleToastHandlers(this, true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (showToastEvent.defaultPrevented) return;\n\n      showToast(this);\n    }\n  }\n\n  /** Hides the toast. */\n  hide() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (hideToastEvent.defaultPrevented) return;\n      hideToast(this);\n    }\n  }\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","import { Data, ObjectKeys, ObjectValues, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = {\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n};\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  ObjectValues(componentsList).forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  ObjectKeys(componentsList).forEach(comp => {\n    removeComponentDataAPI(comp, lookUp);\n  });\n};\n\n// bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n"],"names":["e","f","c","i","s","o","a","r","E","d","g","M","ge","Ee","be","we","Ae","Se","H","_","tt","et","ct","it","ut","dt","ft","mt","gt","ht","Mt","kt","Tt","Lt","xt","Bt","He","Pe","Ue","Fe","je","Qt","qt","D","U","Gt","S","jt","I","z","ln","N","Jt","n","Kt","Xt","Yt","Zt","hn","F","An","Mn","Nn","kn","v","u","y","L","Ln","W","R","h","$t","Q","ne","oe","zn","l","Bn","x","se","Hn","p","A","G","q","Un","Fn","Wn","Rn","Qn","qn","O","ce","m","Gn","w","Jn","k","re","Yn","V","B","b","ae","$n","ue","eo","so","uo","lo","po","mo","de","go","pe","bo","ho","yo","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","version","BaseComponent","target","config","element","querySelector","isString","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","that","toggleAlertHandler","dispatchEvent","add","action","addListener","removeListener","dismiss","mouseclickEvent","self","closest","hasClass","removeClass","emulateTransitionEnd","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","toggleButtonHandler","setAttribute","ariaPressed","isActive","addClass","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","getAttribute","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","keyArrowRight","keyArrowLeft","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","activateCarouselIndicator","pageIndex","pointermoveEvent","passiveHandler","pointerupEvent","toggleCarouselHandlers","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","arrow","indicator","keydownEvent","isHTMLElement","getElementsByClassName","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","itemClasses","slide","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","toggleCollapseHandler","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","toggleDropdownHandler","dropdownClickHandler","getCurrentOpenDropdown","currentParent","type","hasData","isForm","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","lookup","isNode","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","pad","padStyle","toggleModalDismiss","modalDismissHandler","modalKeyHandler","toggleModalHandler","modalClickHandler","afterModalHide","callback","relatedTarget","focusElement","isFunction","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffcanvasEvents","offcanvasTriggerHandler","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offCanvasDismiss","selection","visibleTrigger","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","topPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","isMedia","eX","eY","tooltipDefaults","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","offsetParent","ariaDescribedBy","disposeTooltipComplete","toggleTooltipHandlers","toggleTooltipTitle","toggleTooltipAction","touchstartEvent","tooltipShownAction","shownTooltipEvent","toLowerCase","tooltipHiddenAction","hiddenTooltipEvent","triggerOptions","elemIsMedia","mousemoveEvent","tr","mousehoverEvent","mousedownEvent","focusinEvent","focusoutEvent","isApple","toggleTooltipOpenHandlers","offsetHeight","parentModal","parentOffcanvas","win","scrollTarget","titleAtt","tipComponent","elem","getUID","position","outTimer","showTooltipEvent","delay","hideTooltipEvent","enabled","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","itemsLength","isWin","isWindow","links","getElementsByTagName","scrollHEIGHT","getScrollHeight","href","targetItem","rect","getOffsetHeight","link","clear","item","activate","parents","parentItem","menuItem","parentLink","toggleSpyHandlers","scrollTop","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","toggleTabHandler","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toggleToastHandlers","interactiveToastHandler","toastClickHandler","completeDisposeToast","isShown","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","ObjectValues","cs","init","selector","matches","removeDataAPI","comp"],"mappings":"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"}