{"version":3,"file":"bootstrap-native.mjs","sources":["../node_modules/.pnpm/@thednp+shorty@2.0.6/node_modules/@thednp/shorty/dist/shorty.mjs","../node_modules/.pnpm/@thednp+event-listener@2.0.6/node_modules/@thednp/event-listener/dist/event-listener.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../node_modules/.pnpm/@thednp+position-observer@0.0.2/node_modules/@thednp/position-observer/dist/index.mjs","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["const he = \"aria-checked\", ye = \"aria-description\", we = \"aria-describedby\", Ae = \"aria-expanded\", Se = \"aria-haspopup\", X = \"aria-hidden\", Ne = \"aria-label\", Te = \"aria-labelledby\", Me = \"aria-modal\", ke = \"aria-pressed\", De = \"aria-selected\", Ce = \"aria-valuemin\", Oe = \"aria-valuemax\", Le = \"aria-valuenow\", Ie = \"aria-valuetext\", Y = \"abort\", Z = \"beforeunload\", _ = \"blur\", $ = \"change\", tt = \"contextmenu\", P = \"DOMContentLoaded\", et = \"DOMMouseScroll\", nt = \"error\", ot = \"focus\", st = \"focusin\", ct = \"focusout\", rt = \"gesturechange\", at = \"gestureend\", it = \"gesturestart\", ut = \"keydown\", lt = \"keypress\", dt = \"keyup\", pt = \"load\", ft = \"click\", mt = \"dblclick\", gt = \"mousedown\", vt = \"mouseup\", Et = \"hover\", bt = \"mouseenter\", ht = \"mouseleave\", yt = \"mousein\", wt = \"mouseout\", At = \"mouseover\", St = \"mousemove\", Nt = \"mousewheel\", Tt = \"move\", Mt = \"orientationchange\", kt = \"pointercancel\", Dt = \"pointerdown\", Ct = \"pointerleave\", Ot = \"pointermove\", Lt = \"pointerup\", It = \"readystatechange\", xt = \"reset\", zt = \"resize\", Vt = \"select\", Bt = \"selectend\", Ft = \"selectstart\", Ht = \"scroll\", Pt = \"submit\", Ut = \"touchstart\", Wt = \"touchmove\", Rt = \"touchcancel\", Qt = \"touchend\", jt = \"unload\", xe = {\n  DOMContentLoaded: P,\n  DOMMouseScroll: et,\n  abort: Y,\n  beforeunload: Z,\n  blur: _,\n  change: $,\n  click: ft,\n  contextmenu: tt,\n  dblclick: mt,\n  error: nt,\n  focus: ot,\n  focusin: st,\n  focusout: ct,\n  gesturechange: rt,\n  gestureend: at,\n  gesturestart: it,\n  hover: Et,\n  keydown: ut,\n  keypress: lt,\n  keyup: dt,\n  load: pt,\n  mousedown: gt,\n  mousemove: St,\n  mousein: yt,\n  mouseout: wt,\n  mouseenter: bt,\n  mouseleave: ht,\n  mouseover: At,\n  mouseup: vt,\n  mousewheel: Nt,\n  move: Tt,\n  orientationchange: Mt,\n  pointercancel: kt,\n  pointerdown: Dt,\n  pointerleave: Ct,\n  pointermove: Ot,\n  pointerup: Lt,\n  readystatechange: It,\n  reset: xt,\n  resize: zt,\n  scroll: Ht,\n  select: Vt,\n  selectend: Bt,\n  selectstart: Ft,\n  submit: Pt,\n  touchcancel: Rt,\n  touchend: Qt,\n  touchmove: Wt,\n  touchstart: Ut,\n  unload: jt\n}, ze = \"drag\", Ve = \"dragstart\", Be = \"dragenter\", Fe = \"dragleave\", He = \"dragover\", Pe = \"dragend\", Ue = \"loadstart\", We = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Re = { down: \"mousedown\", up: \"mouseup\" }, Qe = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : (\n  /* istanbul ignore next @preserve */\n  [\"mouseover\", \"mouseout\"]\n), je = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, qe = { in: \"focusin\", out: \"focusout\" }, qt = 'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"]', Ge = {\n  Backspace: \"Backspace\",\n  //  8\n  Tab: \"Tab\",\n  //  9\n  Enter: \"Enter\",\n  // 13\n  Shift: \"Shift\",\n  // 16\n  Control: \"Control\",\n  // 17\n  Alt: \"Alt\",\n  // 18\n  Pause: \"Pause\",\n  // 19\n  CapsLock: \"CapsLock\",\n  // 20\n  Escape: \"Escape\",\n  // 27\n  Scape: \"Space\",\n  // 32\n  ArrowLeft: \"ArrowLeft\",\n  // 37\n  ArrowUp: \"ArrowUp\",\n  // 38\n  ArrowRight: \"ArrowRight\",\n  // 39\n  ArrowDown: \"ArrowDown\",\n  // 40\n  Insert: \"Insert\",\n  // 45\n  Delete: \"Delete\",\n  // 46\n  Meta: \"Meta\",\n  // 91 windows key\n  ContextMenu: \"ContextMenu\",\n  // 93\n  ScrollLock: \"ScrollLock\"\n  // 145\n}, Ke = \"Alt\", Je = \"ArrowDown\", Xe = \"ArrowUp\", Ye = \"ArrowLeft\", Ze = \"ArrowRight\", _e = \"Backspace\", $e = \"CapsLock\", tn = \"Control\", en = \"Delete\", nn = \"Enter\", on = \"NumpadEnter\", sn = \"Escape\", cn = \"Insert\", rn = \"Meta\", an = \"Pause\", un = \"ScrollLock\", ln = \"Shift\", dn = \"Space\", pn = \"Tab\", Gt = \"animationDuration\", Kt = \"animationDelay\", U = \"animationName\", D = \"animationend\", Jt = \"transitionDuration\", Xt = \"transitionDelay\", C = \"transitionend\", W = \"transitionProperty\", fn = \"addEventListener\", mn = \"removeEventListener\", gn = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, vn = \"offsetHeight\", En = \"offsetWidth\", bn = \"scrollHeight\", hn = \"scrollWidth\", yn = \"tabindex\", Yt = navigator.userAgentData, A = Yt, { userAgent: Zt } = navigator, S = Zt, z = /iPhone|iPad|iPod|Android/i;\nlet O = !1;\n// istanbul ignore else @preserve\nA ? O = A.brands.some((t) => z.test(t.brand)) : O = z.test(S);\nconst wn = O, V = /(iPhone|iPod|iPad)/, An = A ? A.brands.some(\n  (t) => V.test(t.brand)\n) : (\n  /* istanbul ignore next @preserve */\n  V.test(S)\n), Sn = S ? S.includes(\"Firefox\") : (\n  /* istanbul ignore next @preserve */\n  !1\n), { head: N } = document, Nn = [\"webkitPerspective\", \"perspective\"].some(\n  (t) => t in N.style\n), R = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(\n    e,\n    n,\n    s\n  );\n}, Q = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(\n    e,\n    n,\n    s\n  );\n}, _t = (t, e, n, o) => {\n  const s = (c) => {\n    // istanbul ignore else @preserve\n    (c.target === t || c.currentTarget === t) && (n.apply(t, [c]), Q(t, e, s, o));\n  };\n  R(t, e, s, o);\n}, $t = () => {\n}, Tn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    // istanbul ignore next @preserve\n    _t(document, P, $t, e);\n  } catch {\n  }\n  return t;\n})(), Mn = [\"webkitTransform\", \"transform\"].some(\n  (t) => t in N.style\n), kn = \"ontouchstart\" in window || /* istanbul ignore next @preserve */\n\"msMaxTouchPoints\" in navigator, Dn = [\"webkitAnimation\", \"animation\"].some(\n  (t) => t in N.style\n), Cn = [\"webkitTransition\", \"transition\"].some(\n  (t) => t in N.style\n), j = (t, e) => t.getAttribute(e), On = (t, e, n) => e.getAttributeNS(t, n), te = (t, e) => t.hasAttribute(e), Ln = (t, e, n) => e.hasAttributeNS(t, n), In = (t, e, n) => t.setAttribute(e, n), xn = (t, e, n, o) => e.setAttributeNS(t, n, o), zn = (t, e) => t.removeAttribute(e), Vn = (t, e, n) => e.removeAttributeNS(t, n), Bn = (t, ...e) => {\n  t.classList.add(...e);\n}, Fn = (t, ...e) => {\n  t.classList.remove(...e);\n}, Hn = (t, e) => t.classList.contains(e), { body: Pn } = document, { documentElement: Un } = document, Wn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, i = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(\n  (e) => t.nodeType === e\n) || !1, l = (t) => i(t) && t.nodeType === 1 || !1, E = /* @__PURE__ */ new Map(), L = {\n  data: E,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (t, e, n) => {\n    if (!l(t)) return;\n    // istanbul ignore else @preserve\n    E.has(e) || E.set(e, /* @__PURE__ */ new Map()), E.get(e).set(t, n);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (t) => E.get(t) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (t, e) => {\n    if (!l(t) || !e) return null;\n    const n = L.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (t, e) => {\n    const n = L.getAllFor(e);\n    if (!n || !l(t)) return;\n    n.delete(t);\n    // istanbul ignore else @preserve\n    n.size === 0 && E.delete(e);\n  }\n}, Rn = (t, e) => L.get(t, e), T = (t) => typeof t == \"string\" || !1, q = (t) => v(t) && t.constructor.name === \"Window\" || !1, G = (t) => i(t) && t.nodeType === 9 || !1, d = (t) => q(t) ? t.document : G(t) ? t : i(t) ? t.ownerDocument : globalThis.document, M = (t, ...e) => Object.assign(t, ...e), ee = (t) => {\n  if (!t) return;\n  if (T(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = ee(e);\n  if (!n) return;\n  const o = { ...t };\n  return delete o.tagName, M(n, o);\n}, ne = (t, e) => {\n  if (!t || !e) return;\n  if (T(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = ne(t, n);\n  if (!o) return;\n  const s = { ...e };\n  return delete s.tagName, M(o, s);\n}, K = (t, e) => t.dispatchEvent(e), Qn = (t, e, n) => n.indexOf(t) === e, g = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, oe = (t) => {\n  const e = g(t, U), n = g(t, Kt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, se = (t) => {\n  const e = g(t, U), n = g(t, Gt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, jn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = se(t), c = oe(t);\n  if (s) {\n    const a = (u) => {\n      // istanbul ignore else @preserve\n      u.target === t && (e.apply(t, [u]), t.removeEventListener(D, a), n = 1);\n    };\n    t.addEventListener(D, a), setTimeout(() => {\n      // istanbul ignore next @preserve\n      n || K(t, o);\n    }, s + c + 17);\n  } else {\n    // istanbul ignore next @preserve\n    e.apply(t, [o]);\n  }\n}, ce = (t) => {\n  const e = g(t, W), n = g(t, Xt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, re = (t) => {\n  const e = g(t, W), n = g(t, Jt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, qn = (t, e) => {\n  let n = 0;\n  const o = new Event(C), s = re(t), c = ce(t);\n  if (s) {\n    const a = (u) => {\n      // istanbul ignore else @preserve\n      u.target === t && (e.apply(t, [u]), t.removeEventListener(C, a), n = 1);\n    };\n    t.addEventListener(C, a), setTimeout(() => {\n      // istanbul ignore next @preserve\n      n || K(t, o);\n    }, s + c + 17);\n  } else\n    e.apply(t, [o]);\n}, Gn = (t) => Float32Array.from(Array.from(t)), Kn = (t) => Float64Array.from(Array.from(t)), Jn = (t, e) => t.focus(e), B = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, w = (t) => Object.entries(t), ae = (t) => t.toLowerCase(), Xn = (t, e, n, o) => {\n  const s = { ...n }, c = { ...t.dataset }, a = { ...e }, u = {}, p = \"title\";\n  return w(c).forEach(([r, f]) => {\n    const y = o && typeof r == \"string\" && r.includes(o) ? r.replace(o, \"\").replace(\n      /[A-Z]/g,\n      (J) => ae(J)\n    ) : (\n      /* istanbul ignore next @preserve */\n      r\n    );\n    u[y] = B(f);\n  }), w(s).forEach(([r, f]) => {\n    s[r] = B(f);\n  }), w(e).forEach(([r, f]) => {\n    // istanbul ignore else @preserve\n    r in s ? a[r] = s[r] : r in u ? a[r] = u[r] : a[r] = r === p ? j(t, p) : f;\n  }), a;\n}, Yn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Zn = (t) => Object.keys(t), _n = (t) => Object.values(t), $n = (t) => Object.fromEntries(t), to = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  // istanbul ignore else @preserve\n  return v(e) && M(n, e), n;\n}, eo = { passive: !0 }, no = (t) => t.offsetHeight, oo = (t, e) => {\n  w(e).forEach(([n, o]) => {\n    if (o && T(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, M(t.style, s);\n    }\n  });\n}, I = (t) => v(t) && t.constructor.name === \"Map\" || !1, ie = (t) => typeof t == \"number\" || !1, m = /* @__PURE__ */ new Map(), so = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (t, e, n, o) => {\n    if (!l(t)) return;\n    // istanbul ignore else @preserve\n    if (o && o.length) {\n      // istanbul ignore else @preserve\n      m.has(t) || m.set(t, /* @__PURE__ */ new Map()), m.get(t).set(o, setTimeout(e, n));\n    } else\n      m.set(t, setTimeout(e, n));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (t, e) => {\n    if (!l(t)) return null;\n    const n = m.get(t);\n    return e && n && I(n) ? n.get(e) || /* istanbul ignore next @preserve */\n    null : ie(n) ? n : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (t, e) => {\n    if (!l(t)) return;\n    const n = m.get(t);\n    if (e && e.length && I(n)) {\n      clearTimeout(n.get(e)), n.delete(e);\n      // istanbul ignore else @preserve\n      n.size === 0 && m.delete(t);\n    } else\n      clearTimeout(n), m.delete(t);\n  }\n}, co = (t) => t.toUpperCase(), ue = (t, e) => (i(e) ? e : d()).querySelectorAll(t), x = /* @__PURE__ */ new Map();\nfunction le(t) {\n  const { shiftKey: e, code: n } = t, o = d(this), s = [\n    ...ue(qt, this)\n  ].filter(\n    (u) => !te(u, \"disabled\") && !j(u, X)\n  );\n  if (!s.length) return;\n  const c = s[0], a = s[s.length - 1];\n  // istanbul ignore else @preserve\n  n === \"Tab\" && (e && o.activeElement === c ? (a.focus(), t.preventDefault()) : !e && o.activeElement === a && (c.focus(), t.preventDefault()));\n}\nconst de = (t) => x.has(t) === !0, ro = (t) => {\n  const e = de(t);\n  (e ? Q : R)(t, \"keydown\", le), e ? x.delete(t) : x.set(t, !0);\n}, h = (t, e) => {\n  const { width: n, height: o, top: s, right: c, bottom: a, left: u } = t.getBoundingClientRect();\n  let p = 1, r = 1;\n  if (e && l(t)) {\n    const { offsetWidth: f, offsetHeight: y } = t;\n    p = f > 0 ? Math.round(n) / f : (\n      /* istanbul ignore next @preserve */\n      1\n    ), r = y > 0 ? Math.round(o) / y : (\n      /* istanbul ignore next @preserve */\n      1\n    );\n  }\n  return {\n    width: n / p,\n    height: o / r,\n    top: s / r,\n    right: c / p,\n    bottom: a / r,\n    left: u / p,\n    x: u / p,\n    y: s / r\n  };\n}, ao = (t) => d(t).body, k = (t) => d(t).documentElement, io = (t) => d(t).head, uo = (t) => {\n  const e = q(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, pe = (t) => i(t) && t.constructor.name === \"ShadowRoot\" || !1, lo = (t) => t.nodeName === \"HTML\" ? t : l(t) && t.assignedSlot || // step into the shadow DOM of the parent of a slotted node\ni(t) && t.parentNode || // DOM Element detected\npe(t) && t.host || // ShadowRoot detected\nk(t), fe = (t) => {\n  if (!l(t)) return !1;\n  const { width: e, height: n } = h(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, po = (t, e, n) => {\n  const o = l(e), s = h(\n    t,\n    o && fe(e)\n  ), c = { x: 0, y: 0 };\n  // istanbul ignore else @preserve\n  if (o) {\n    const a = h(e, !0);\n    c.x = a.x + e.clientLeft, c.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - c.x,\n    y: s.top + n.y - c.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet F = 0, H = 0;\nconst b = /* @__PURE__ */ new Map(), me = (t, e) => {\n  let n = e ? F : H;\n  if (e) {\n    const o = me(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), I(s) && !s.has(e) ? (s.set(e, n), F += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), H += 1);\n  }\n  return n;\n}, fo = (t) => t ? G(t) ? t.defaultView : i(t) ? t?.ownerDocument?.defaultView : t : window, ge = (t) => Array.isArray(t) || !1, mo = (t) => i(t) && t.nodeName === \"CANVAS\" || !1, ve = (t) => l(t) && !!t.shadowRoot || !1, go = (t) => i(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, vo = (t) => {\n  if (!i(t)) return !1;\n  const { top: e, bottom: n } = h(t), { clientHeight: o } = k(t);\n  return e <= o && n >= 0;\n}, Eo = (t) => {\n  if (!i(t)) return !1;\n  const { clientWidth: e, clientHeight: n } = k(t), { top: o, left: s, bottom: c, right: a } = h(t, !0);\n  return o >= 0 && s >= 0 && c <= n && a <= e;\n}, bo = (t) => ge(t) && t.every(l) || !1, ho = (t) => typeof t == \"function\" || !1, yo = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, wo = (t) => l(t) && t.tagName === \"IMG\" || !1, Ao = (t) => {\n  if (!T(t)) return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, So = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, No = (t) => i(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some(\n  (e) => t.constructor.name.includes(e)\n) || !1, To = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, Mo = (t) => k(t).dir === \"rtl\", ko = (t) => i(t) && t.constructor.name.includes(\"SVG\") || !1, Do = (t) => i(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, Ee = (t, e) => t ? t.closest(e) || // break out of `ShadowRoot`\nEe(t.getRootNode().host, e) : null, Co = (t, e) => l(t) ? t : (i(e) ? e : d()).querySelector(t), be = (t, e) => (i(e) ? e : d()).getElementsByTagName(\n  t\n), Oo = (t) => [...be(\"*\", t)].filter(ve), Lo = (t, e) => d(e).getElementById(t) || null, Io = (t, e) => (e && i(e) ? e : d()).getElementsByClassName(\n  t\n), xo = (t, e) => t.matches(e), zo = \"2.0.6\";\nexport {\n  Wn as ArrayFrom,\n  P as DOMContentLoadedEvent,\n  et as DOMMouseScrollEvent,\n  L as Data,\n  Gn as Float32ArrayFrom,\n  Kn as Float64ArrayFrom,\n  M as ObjectAssign,\n  w as ObjectEntries,\n  $n as ObjectFromEntries,\n  Yn as ObjectHasOwn,\n  Zn as ObjectKeys,\n  _n as ObjectValues,\n  so as Timer,\n  Y as abortEvent,\n  Bn as addClass,\n  fn as addEventListener,\n  Kt as animationDelay,\n  Gt as animationDuration,\n  D as animationEndEvent,\n  U as animationName,\n  he as ariaChecked,\n  we as ariaDescribedBy,\n  ye as ariaDescription,\n  Ae as ariaExpanded,\n  Se as ariaHasPopup,\n  X as ariaHidden,\n  Ne as ariaLabel,\n  Te as ariaLabelledBy,\n  Me as ariaModal,\n  ke as ariaPressed,\n  De as ariaSelected,\n  Oe as ariaValueMax,\n  Ce as ariaValueMin,\n  Le as ariaValueNow,\n  Ie as ariaValueText,\n  Z as beforeunloadEvent,\n  gn as bezierEasings,\n  _ as blurEvent,\n  $ as changeEvent,\n  Ee as closest,\n  tt as contextmenuEvent,\n  to as createCustomEvent,\n  ee as createElement,\n  ne as createElementNS,\n  K as dispatchEvent,\n  Qn as distinct,\n  Pn as documentBody,\n  Un as documentElement,\n  N as documentHead,\n  ze as dragEvent,\n  Pe as dragendEvent,\n  Be as dragenterEvent,\n  Fe as dragleaveEvent,\n  He as dragoverEvent,\n  Ve as dragstartEvent,\n  jn as emulateAnimationEnd,\n  qn as emulateTransitionEnd,\n  nt as errorEvent,\n  Jn as focus,\n  ot as focusEvent,\n  qe as focusEvents,\n  qt as focusableSelector,\n  st as focusinEvent,\n  ct as focusoutEvent,\n  rt as gesturechangeEvent,\n  at as gestureendEvent,\n  it as gesturestartEvent,\n  j as getAttribute,\n  On as getAttributeNS,\n  h as getBoundingClientRect,\n  Oo as getCustomElements,\n  d as getDocument,\n  ao as getDocumentBody,\n  k as getDocumentElement,\n  io as getDocumentHead,\n  oe as getElementAnimationDelay,\n  se as getElementAnimationDuration,\n  Lo as getElementById,\n  g as getElementStyle,\n  ce as getElementTransitionDelay,\n  re as getElementTransitionDuration,\n  Io as getElementsByClassName,\n  be as getElementsByTagName,\n  Rn as getInstance,\n  uo as getNodeScroll,\n  lo as getParentNode,\n  po as getRectRelativeToOffsetParent,\n  me as getUID,\n  fo as getWindow,\n  te as hasAttribute,\n  Ln as hasAttributeNS,\n  Hn as hasClass,\n  de as hasFocusTrap,\n  An as isApple,\n  ge as isArray,\n  mo as isCanvas,\n  ve as isCustomElement,\n  G as isDocument,\n  go as isElement,\n  vo as isElementInScrollRange,\n  Eo as isElementInViewport,\n  bo as isElementsArray,\n  Sn as isFirefox,\n  ho as isFunction,\n  yo as isHTMLCollection,\n  l as isHTMLElement,\n  wo as isHTMLImageElement,\n  Ao as isJSON,\n  I as isMap,\n  No as isMedia,\n  wn as isMobile,\n  i as isNode,\n  To as isNodeList,\n  ie as isNumber,\n  v as isObject,\n  Mo as isRTL,\n  ko as isSVGElement,\n  fe as isScaledElement,\n  pe as isShadowRoot,\n  T as isString,\n  Do as isTableElement,\n  So as isWeakMap,\n  q as isWindow,\n  Ke as keyAlt,\n  Je as keyArrowDown,\n  Ye as keyArrowLeft,\n  Ze as keyArrowRight,\n  Xe as keyArrowUp,\n  _e as keyBackspace,\n  $e as keyCapsLock,\n  tn as keyControl,\n  en as keyDelete,\n  nn as keyEnter,\n  sn as keyEscape,\n  cn as keyInsert,\n  rn as keyMeta,\n  on as keyNumpadEnter,\n  an as keyPause,\n  un as keyScrollLock,\n  ln as keyShift,\n  dn as keySpace,\n  pn as keyTab,\n  Ge as keyboardEventKeys,\n  ut as keydownEvent,\n  lt as keypressEvent,\n  dt as keyupEvent,\n  pt as loadEvent,\n  Ue as loadstartEvent,\n  xo as matches,\n  Re as mouseClickEvents,\n  Qe as mouseHoverEvents,\n  We as mouseSwipeEvents,\n  ft as mouseclickEvent,\n  mt as mousedblclickEvent,\n  gt as mousedownEvent,\n  bt as mouseenterEvent,\n  Et as mousehoverEvent,\n  yt as mouseinEvent,\n  ht as mouseleaveEvent,\n  St as mousemoveEvent,\n  wt as mouseoutEvent,\n  At as mouseoverEvent,\n  vt as mouseupEvent,\n  Nt as mousewheelEvent,\n  Tt as moveEvent,\n  xe as nativeEvents,\n  $t as noop,\n  Xn as normalizeOptions,\n  B as normalizeValue,\n  Q as off,\n  vn as offsetHeight,\n  En as offsetWidth,\n  R as on,\n  _t as one,\n  Mt as orientationchangeEvent,\n  eo as passiveHandler,\n  kt as pointercancelEvent,\n  Dt as pointerdownEvent,\n  Ct as pointerleaveEvent,\n  Ot as pointermoveEvent,\n  Lt as pointerupEvent,\n  Co as querySelector,\n  ue as querySelectorAll,\n  It as readystatechangeEvent,\n  no as reflow,\n  zn as removeAttribute,\n  Vn as removeAttributeNS,\n  Fn as removeClass,\n  mn as removeEventListener,\n  xt as resetEvent,\n  zt as resizeEvent,\n  Ht as scrollEvent,\n  bn as scrollHeight,\n  hn as scrollWidth,\n  Vt as selectEvent,\n  Bt as selectendEvent,\n  Ft as selectstartEvent,\n  In as setAttribute,\n  xn as setAttributeNS,\n  oo as setElementStyle,\n  Pt as submitEvent,\n  Nn as support3DTransform,\n  Dn as supportAnimation,\n  Tn as supportPassive,\n  kn as supportTouch,\n  Mn as supportTransform,\n  Cn as supportTransition,\n  yn as tabindex,\n  ae as toLowerCase,\n  co as toUpperCase,\n  ro as toggleFocusTrap,\n  je as touchEvents,\n  Rt as touchcancelEvent,\n  Qt as touchendEvent,\n  Wt as touchmoveEvent,\n  Ut as touchstartEvent,\n  Xt as transitionDelay,\n  Jt as transitionDuration,\n  C as transitionEndEvent,\n  W as transitionProperty,\n  jt as unloadEvent,\n  S as userAgent,\n  A as userAgentData,\n  zo as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","const e = {}, f = (t) => {\n  const { type: c, currentTarget: i } = t;\n  [...e[c]].forEach(([n, s]) => {\n    /* istanbul ignore else @preserve */\n    i === n && [...s].forEach(([o, a]) => {\n      o.apply(n, [t]), typeof a == \"object\" && a.once && r(n, c, o, a);\n    });\n  });\n}, E = (t, c, i, n) => {\n  /* istanbul ignore else @preserve */\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const s = e[c];\n  /* istanbul ignore else @preserve */\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(t), { size: a } = o;\n  o.set(i, n);\n  /* istanbul ignore else @preserve */\n  a || t.addEventListener(c, f, n);\n}, r = (t, c, i, n) => {\n  const s = e[c], o = s && s.get(t), a = o && o.get(i), d = a !== void 0 ? a : n;\n  /* istanbul ignore else @preserve */\n  o && o.has(i) && o.delete(i);\n  /* istanbul ignore else @preserve */\n  s && (!o || !o.size) && s.delete(t);\n  /* istanbul ignore else @preserve */\n  (!s || !s.size) && delete e[c];\n  /* istanbul ignore else @preserve */\n  (!o || !o.size) && t.removeEventListener(\n    c,\n    f,\n    d\n  );\n}, g = E, M = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  r as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = \"fade\";\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = \"show\";\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = \"data-bs-dismiss\";\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = \"alert\";\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = \"Alert\";\nexport default alertComponent;\n","import { version } from \"../package.json\";\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport {\n  Data,\n  isHTMLElement,\n  isString,\n  normalizeOptions,\n  ObjectKeys,\n  querySelector,\n} from \"@thednp/shorty\";\n\nimport type { BaseOptions } from \"../interface/baseComponent\";\nimport Version from \"../version\";\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: HTMLElement;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    let element: HTMLElement | null;\n\n    try {\n      if (isHTMLElement(target)) {\n        element = target;\n      } else if (isString(target)) {\n        element = querySelector<HTMLElement>(target);\n        // istanbul ignore else @preserve\n        if (!element) throw Error(`\"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`your target is not an instance of HTMLElement.`);\n      }\n    } catch (e) {\n      throw Error(`${this.name} Error: ${(e as Error).message}`);\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    // istanbul ignore else @preserve\n    if (prevInstance) {\n      // remove previously attached event listeners\n      // to avoid memory leaks\n      prevInstance._toggleEventListeners();\n    }\n\n    this.element = element;\n    this.options = this.defaults && ObjectKeys(this.defaults).length\n      ? normalizeOptions(element, this.defaults, config || {}, \"bs\")\n      // istanbul ignore next @preserve\n      : {};\n\n    Data.set(element, this.name, this);\n  }\n\n  // istanbul ignore next @preserve\n  get version() {\n    return Version;\n  }\n\n  // istanbul ignore next @preserve\n  get name() {\n    return \"BaseComponent\";\n  }\n\n  // istanbul ignore next @preserve\n  get defaults() {\n    return {};\n  }\n\n  /** just to have something to extend from */\n  // istanbul ignore next @preserve coverage wise this isn't important\n  _toggleEventListeners = () => {\n    // do something to please linters\n  };\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove<typeof this>(this.element, this.name);\n    ObjectKeys(this).forEach((prop) => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  querySelector,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport alertString from \"../strings/alertString\";\nimport alertComponent from \"../strings/alertComponent\";\nimport type { AlertEvent } from \"../interface/alert\";\n\nimport BaseComponent from \"./base-component\";\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n */\nconst getAlertInstance = (element: HTMLElement) =>\n  getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = (element: HTMLElement) => new Alert(element);\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<Record<string, never>, AlertEvent>(\n  `close.bs.${alertString}`,\n);\nconst closedAlertEvent = createCustomEvent<Record<string, never>, AlertEvent>(\n  `closed.bs.${alertString}`,\n);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (self: Alert) => {\n  const { element } = self;\n  dispatchEvent(element, closedAlertEvent);\n\n  self._toggleEventListeners();\n  self.dispose();\n  element.remove();\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    // istanbul ignore else @preserve\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n\n      if (!closeAlertEvent.defaultPrevented) {\n        removeClass(element, showClass);\n\n        if (hasClass(element, fadeClass)) {\n          emulateTransitionEnd(element, () => alertTransitionEnd(this));\n        } else alertTransitionEnd(this);\n      }\n    }\n  };\n  /**\n   * Toggle on / off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { dismiss, close } = this;\n    // istanbul ignore else @preserve\n    if (dismiss) action(dismiss, mouseclickEvent, close);\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = \"active\";\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = \"data-bs-toggle\";\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = \"button\";\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = \"Button\";\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  addClass,\n  ariaPressed,\n  getAttribute,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  removeClass,\n  setAttribute,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport activeClass from \"../strings/activeClass\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport buttonString from \"../strings/buttonString\";\nimport buttonComponent from \"../strings/buttonComponent\";\n\nimport BaseComponent from \"./base-component\";\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) =>\n  getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e?: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, \"disabled\") && !getAttribute(element, \"disabled\")) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? \"false\" : \"true\");\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  // BUTTON PRIVATE METHOD\n  // =====================\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, this.toggle);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = \"data-bs-target\";\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = \"carousel\";\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = \"Carousel\";\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = \"data-bs-parent\";\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = \"data-bs-container\";\nexport default dataBsContainer;\n","import {\n  closest,\n  getAttribute,\n  getDocument,\n  querySelector,\n} from \"@thednp/shorty\";\n\nimport dataBsTarget from \"../strings/dataBsTarget\";\nimport dataBsParent from \"../strings/dataBsParent\";\nimport dataBsContainer from \"../strings/dataBsContainer\";\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, \"href\"];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map((att) => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent\n          ? closest(element, attValue)\n          : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter((x) => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  addClass,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  dragstartEvent,\n  emulateTransitionEnd,\n  getAttribute,\n  getDocument,\n  getElementsByClassName,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  isElementInScrollRange,\n  isHTMLElement,\n  isRTL,\n  keyArrowLeft,\n  keyArrowRight,\n  keydownEvent,\n  matches,\n  mouseclickEvent,\n  mouseenterEvent,\n  mouseleaveEvent,\n  ObjectAssign,\n  passiveHandler,\n  pointerdownEvent,\n  pointermoveEvent,\n  pointerupEvent,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  Timer,\n  touchstartEvent,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport activeClass from \"../strings/activeClass\";\nimport dataBsTarget from \"../strings/dataBsTarget\";\nimport carouselString from \"../strings/carouselString\";\nimport carouselComponent from \"../strings/carouselComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { CarouselEvent, CarouselOptions } from \"../interface/carousel\";\n\ntype CarouselEventProperties = {\n  relatedTarget: HTMLElement;\n  from: number;\n  to: number;\n  direction: \"left\" | \"right\";\n};\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = \"data-bs-slide-to\";\nconst dataBsSlide = \"data-bs-slide\";\nconst pausedClass = \"paused\";\n\nconst carouselDefaults: CarouselOptions = {\n  pause: \"hover\",\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) =>\n  getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<\n  CarouselEventProperties,\n  CarouselEvent\n>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<\n  CarouselEventProperties,\n  CarouselEvent\n>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  // istanbul ignore else @preserve\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === \"left\" ? \"next\" : \"prev\";\n    const directionClass = direction === \"left\" ? \"start\" : \"end\";\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (\n      self.cycle && !getDocument(element).hidden && options.interval &&\n      !self.isPaused\n    ) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  const self = getCarouselInstance(this);\n  // istanbul ignore else @preserve\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  const self = getCarouselInstance(this);\n  // istanbul ignore else @preserve\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element =\n    (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating) {\n    const newIndex = +(\n      getAttribute(this, dataBsSlideTo) ||\n      // istanbul ignore next @preserve\n      0\n    );\n\n    // istanbul ignore else @preserve\n    if (\n      this &&\n      !hasClass(this, activeClass) && // event target is not active\n      !Number.isNaN(newIndex)\n    ) {\n      // AND has the specific attribute\n      self.to(newIndex); // do the slide\n    }\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) ||\n    (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating) {\n    const orientation = getAttribute(this, dataBsSlide);\n\n    // istanbul ignore else @preserve\n    if (orientation === \"next\") {\n      self.next();\n    } else if (orientation === \"prev\") {\n      self.prev();\n    }\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = (\n  { code, target }: KeyboardEvent & { target: Node },\n) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter((x) =>\n    isElementInScrollRange(x)\n  );\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore next @preserve\n  if (self && !self.isAnimating && !/textarea|input/i.test(target.nodeName)) {\n    const RTL = isRTL(element);\n    const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n    const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n    // istanbul ignore else @preserve\n    if (code === arrowKeyPrev) self.prev();\n    else if (code === arrowKeyNext) self.next();\n  }\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  // istanbul ignore next @preserve\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) ||\n      !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating && !self.isTouch) {\n    // filter pointer event on controls & indicators\n    const { controls, indicators } = self;\n    // istanbul ignore else @preserve\n    if (\n      ![...controls, ...indicators].every((el) =>\n        el === target || el.contains(target as Node)\n      )\n    ) {\n      startX = e.pageX;\n\n      // istanbul ignore else @preserve\n      if (this.contains(target as Node)) {\n        self.isTouch = true;\n        toggleCarouselTouchHandlers(self, true);\n      }\n    }\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map((c) => getCarouselInstance(c) as Carousel)\n    .find((i) => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  // istanbul ignore else @preserve\n  if (self) {\n    const { element, index } = self;\n    const RTL = isRTL(element);\n    endX = e.pageX;\n\n    self.isTouch = false;\n    toggleCarouselTouchHandlers(self);\n\n    if (\n      !doc.getSelection()?.toString().length &&\n      element.contains(target as HTMLElement) &&\n      Math.abs(startX - endX) > 120\n    ) {\n      // determine next index to slide to\n      // istanbul ignore else @preserve\n      if (currentX < startX) {\n        self.to(index + (RTL ? -1 : 1));\n      } else if (currentX > startX) {\n        self.to(index + (RTL ? 1 : -1));\n      }\n    }\n\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n  }\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach((x) => removeClass(x, activeClass));\n\n  // istanbul ignore else @preserve\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(\n    getDocument(element),\n    pointermoveEvent,\n    carouselPointerMoveHandler,\n    passiveHandler,\n  );\n  action(\n    getDocument(element),\n    pointerupEvent,\n    carouselPointerUpHandler,\n    passiveHandler,\n  );\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: \"right\" | \"left\";\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? \"right\" : \"left\";\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length >= 2) {\n      const activeIndex = getActiveIndex(this);\n      // recover item from disposed instance\n      const transitionItem = [...slides].find((s) =>\n        matches(s, `.${carouselItem}-next,.${carouselItem}-next`)\n      );\n      this.index = activeIndex;\n\n      // external controls must be within same document context\n      const doc = getDocument(element);\n\n      this.controls = [\n        ...querySelectorAll(`[${dataBsSlide}]`, element),\n        ...querySelectorAll(\n          `[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`,\n          doc,\n        ),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n      // a LIVE collection is prefferable\n      this.indicators = [\n        ...(this.indicator\n          ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator)\n          // istanbul ignore next @preserve\n          : []),\n        ...querySelectorAll(\n          `[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`,\n          doc,\n        ),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      // set JavaScript and DATA API options\n      const { options } = this;\n\n      // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n      this.options.interval = options.interval === true\n        ? carouselDefaults.interval\n        : options.interval;\n\n      // set first slide active if none\n      // istanbul ignore next @preserve - impossible to test\n      if (transitionItem) {\n        this.index = [...slides].indexOf(transitionItem);\n      } else if (activeIndex < 0) {\n        this.index = 0;\n        addClass(slides[0], activeClass);\n        if (this.indicators.length) activateCarouselIndicator(this, 0);\n      }\n\n      // istanbul ignore else @preserve\n      if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n      // attach event handlers\n      this._toggleEventListeners(true);\n\n      // start to cycle if interval is set\n      if (options.interval) this.cycle();\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(\n      `.${carouselItem}-next,.${carouselItem}-prev`,\n      this.element,\n    ) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        // istanbul ignore else @preserve\n        if (\n          this.element && !this.isPaused && !this.isTouch &&\n          isElementInScrollRange(element)\n        ) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    // istanbul ignore else @preserve\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    // istanbul ignore else @preserve\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    // istanbul ignore else @preserve\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (\n      !this.isAnimating && activeItem !== next &&\n      !Timer.get(element, dataBsSlide)\n    ) {\n      // determine transition direction\n      // istanbul ignore else @preserve\n      if (\n        activeItem < next || (activeItem === 0 && next === slides.length - 1)\n      ) {\n        this.direction = RTL ? \"right\" : \"left\"; // next\n      } else if (\n        activeItem > next || (activeItem === slides.length - 1 && next === 0)\n      ) {\n        this.direction = RTL ? \"left\" : \"right\"; // prev\n      }\n      const { direction } = this;\n\n      // find the right next index\n      if (next < 0) {\n        next = slides.length - 1;\n      } else if (next >= slides.length) {\n        next = 0;\n      }\n\n      // orientation, class name, eventProperties\n      const orientation = direction === \"left\" ? \"next\" : \"prev\";\n      const directionClass = direction === \"left\" ? \"start\" : \"end\";\n\n      const eventProperties = {\n        relatedTarget: slides[next],\n        from: activeItem,\n        to: next,\n        direction,\n      };\n\n      // update event properties\n      ObjectAssign(carouselSlideEvent, eventProperties);\n      ObjectAssign(carouselSlidEvent, eventProperties);\n\n      // discontinue when prevented\n      dispatchEvent(element, carouselSlideEvent);\n      if (!carouselSlideEvent.defaultPrevented) {\n        // update index\n        this.index = next;\n        activateCarouselIndicator(this, next);\n\n        if (\n          getElementTransitionDuration(slides[next]) &&\n          hasClass(element, \"slide\")\n        ) {\n          Timer.set(\n            element,\n            () => {\n              addClass(slides[next], `${carouselItem}-${orientation}`);\n              reflow(slides[next]);\n              addClass(slides[next], `${carouselItem}-${directionClass}`);\n              addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n              // the instance might get diposed mid-animation\n              emulateTransitionEnd(\n                slides[next],\n                () =>\n                  this.slides && this.slides.length &&\n                  carouselTransitionEndHandler(this),\n              );\n            },\n            0,\n            dataBsSlide,\n          );\n        } else {\n          addClass(slides[next], activeClass);\n          removeClass(slides[activeItem], activeClass);\n\n          Timer.set(\n            element,\n            () => {\n              Timer.clear(element, dataBsSlide);\n              // check for element, might have been disposed\n              // istanbul ignore else @preserve\n              if (element && options.interval && !this.isPaused) {\n                this.cycle();\n              }\n\n              dispatchEvent(element, carouselSlidEvent);\n            },\n            0,\n            dataBsSlide,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles all event listeners for the `Carousel` instance.\n   *\n   * @param add when `TRUE` event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const { element, options, slides, controls, indicators } = this;\n    const { touch, pause, interval, keyboard } = options;\n    const action = add ? addListener : removeListener;\n\n    if (pause && interval) {\n      action(element, mouseenterEvent, carouselPauseHandler);\n      action(element, mouseleaveEvent, carouselResumeHandler);\n    }\n\n    if (touch && slides.length > 2) {\n      action(\n        element,\n        pointerdownEvent,\n        carouselPointerDownHandler,\n        passiveHandler,\n      );\n      action(element, touchstartEvent, carouselDragHandler, { passive: false });\n      action(element, dragstartEvent, carouselDragHandler, { passive: false });\n    }\n\n    // istanbul ignore else @preserve\n    if (controls.length) {\n      controls.forEach((arrow) => {\n        // istanbul ignore else @preserve\n        if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler);\n      });\n    }\n\n    // istanbul ignore else @preserve\n    if (indicators.length) {\n      indicators.forEach((indicator) => {\n        action(indicator, mouseclickEvent, carouselIndicatorHandler);\n      });\n    }\n\n    if (keyboard) {\n      action(getDocument(element), keydownEvent, carouselKeyHandler);\n    }\n  };\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    this._toggleEventListeners();\n    super.dispose();\n\n    // istanbul ignore next @preserve - impossible to test in playwright\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = \"collapsing\";\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = \"collapse\";\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = \"Collapse\";\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getDocument,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isString,\n  mouseclickEvent,\n  noop,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport collapsingClass from \"../strings/collapsingClass\";\nimport showClass from \"../strings/showClass\";\nimport collapseString from \"../strings/collapseString\";\nimport collapseComponent from \"../strings/collapseComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { CollapseEvent, CollapseOptions } from \"../interface/collapse\";\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) =>\n  getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach((btn) => setAttribute(btn, ariaExpanded, \"true\"));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: \"\" });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element);\n    setElementStyle(element, { height: \"0px\" });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      // istanbul ignore else @preserve\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach((btn) => setAttribute(btn, ariaExpanded, \"false\"));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: \"\" });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target &&\n    closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  // istanbul ignore else @preserve\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === \"A\") e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent, doc)\n      : null;\n\n    // add event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    // istanbul ignore else @preserve\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach((btn) => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [\n        ...querySelectorAll(`.${collapseString}.${showClass}`, parent),\n      ].find((i) => getCollapseInstance(i));\n      activeCollapseInstance = activeCollapse &&\n        getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach((btn) => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach((btn) => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /**\n   * Toggles on/off the event listener(s) of the `Collapse` instance.\n   *\n   * @param add when `true`, the event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) =>\n        action(btn, mouseclickEvent, collapseClickHandler)\n      );\n    }\n  };\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    this._toggleEventListeners();\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = [\"dropdown\", \"dropup\", \"dropstart\", \"dropend\"];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = \"Dropdown\";\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = \"dropdown-menu\";\nexport default dropdownMenuClass;\n","import { closest, getAttribute, hasAttribute } from \"@thednp/shorty\";\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, \"A\");\n  return (\n    (element.tagName === \"A\" &&\n      // anchor href starts with #\n      hasAttribute(element, \"href\") &&\n      (getAttribute(element, \"href\") as string).slice(-1) === \"#\") ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, \"href\") &&\n      (getAttribute(parentAnchor, \"href\") as string).slice(-1) === \"#\")\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  focus,\n  focusEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  keyArrowDown,\n  keyArrowUp,\n  keydownEvent,\n  keyEscape,\n  keyupEvent,\n  mouseclickEvent,\n  mousedownEvent,\n  ObjectAssign,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport showClass from \"../strings/showClass\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dropdownClasses from \"../strings/dropdownClasses\";\nimport dropdownComponent from \"../strings/dropdownComponent\";\nimport dropdownMenuClass from \"../strings/dropdownMenuClass\";\n\nimport isEmptyAnchor from \"../util/isEmptyAnchor\";\nimport BaseComponent from \"./base-component\";\nimport type { DropdownEvent, DropdownOptions } from \"../interface/dropdown\";\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] =\n  dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) =>\n  getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = [\"A\", \"BUTTON\"];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: \"dynamic\", // [dynamic|static]\n};\n\ntype DropdownEventProps = { relatedTarget: HTMLElement };\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `show.bs.${dropdownString}`,\n);\nconst shownDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `shown.bs.${dropdownString}`,\n);\nconst hideDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `hide.bs.${dropdownString}`,\n);\nconst hiddenDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  // istanbul ignore else @preserve: this test requires a navbar\n  if (getElementStyle(menu, \"position\") !== \"static\") {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = [\"margin\", \"top\", \"bottom\", \"left\", \"right\"];\n    resetProps.forEach((p) => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = \"\";\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass = dropdownClasses.find((c) =>\n      hasClass(parentElement, c)\n    ) ||\n      // istanbul ignore next @preserve: fallback position\n      dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: \"100%\" },\n      dropup: { top: \"auto\", bottom: \"100%\" },\n      dropstart: RTL\n        ? { left: \"100%\", right: \"auto\" }\n        : { left: \"auto\", right: \"100%\" },\n      dropend: RTL\n        ? { left: \"auto\", right: \"100%\" }\n        : { left: \"100%\", right: \"auto\" },\n      menuStart: RTL\n        ? { right: \"0\", left: \"auto\" }\n        : { right: \"auto\", left: \"0\" },\n      menuEnd: RTL\n        ? { right: \"auto\", left: \"0\" }\n        : { right: \"0\", left: \"auto\" },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed =\n      targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed =\n      targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) &&\n      targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) &&\n      targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (\n      horizontalClass.includes(positionClass) && leftFullExceed &&\n      rightFullExceed\n    ) {\n      positionClass = dropdownString;\n    }\n    if (\n      positionClass === dropstartString &&\n      (!RTL ? leftFullExceed : rightFullExceed)\n    ) {\n      positionClass = dropendString;\n    }\n    if (\n      positionClass === dropendString &&\n      (RTL ? leftFullExceed : rightFullExceed)\n    ) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: \"auto\",\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust:\n        | { left: \"auto\" | number; right: \"auto\" | number }\n        | undefined = { left: \"auto\", right: \"auto\" };\n      // istanbul ignore else @preserve\n      if (!leftExceed && rightExceed && !RTL) {\n        posAjust = { left: \"auto\", right: 0 };\n      }\n      // istanbul ignore else @preserve\n      if (leftExceed && !rightExceed && RTL) {\n        posAjust = { left: 0, right: \"auto\" };\n      }\n      // istanbul ignore else @preserve\n      if (posAjust) {\n        ObjectAssign(dropdownPosition[positionClass], posAjust);\n      }\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map((x) => (x ? `${x}px` : x)).join(\" \")}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      // istanbul ignore else @preserve\n      if (menuEnd) {\n        const endAdjust = (!RTL && leftExceed) || (RTL && rightExceed)\n          ? \"menuStart\"\n          // istanbul ignore next @preserve\n          : \"menuEnd\";\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map((c) => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (\n        firstElementChild && menuFocusTags.includes(firstElementChild.tagName)\n      ) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter((c) => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options, menu } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  // istanbul ignore else @preserve\n  if (options.display === \"dynamic\") {\n    if (self.open) self._observer.observe(menu);\n    else self._observer.disconnect();\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (\n  element: HTMLElement,\n): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, \"btn-group\", \"input-group\"]\n    .map((c) =>\n      getElementsByClassName(`${c} ${showClass}`, getDocument(element))\n    )\n    .find((x) => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)]\n      .find((x) =>\n        dropdownClasses.some((c) => c === getAttribute(x, dataBsToggle))\n      );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  // istanbul ignore else @preserve\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    // istanbul ignore else @preserve\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm = parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === \"form\" || closest(target, \"form\") !== null);\n\n      if (\n        [mouseclickEvent, mousedownEvent].includes(type) &&\n        isEmptyAnchor(target)\n      ) {\n        e.preventDefault();\n      }\n\n      // istanbul ignore else @preserve\n      if (\n        !isForm && type !== focusEvent && target !== element && target !== menu\n      ) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    e.stopPropagation();\n    self.toggle();\n    // istanbul ignore else @preserve\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  // istanbul ignore else @preserve\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  // istanbul ignore else @preserve\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (\n      menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)\n    ) {\n      let idx = menuItems.indexOf(activeElement);\n      // istanbul ignore else @preserve\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      // istanbul ignore else @preserve\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownIntersectionHandler(target: HTMLElement) {\n  const element = getCurrentOpenDropdown(target);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n  declare _observer: IntersectionObserver;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(\n      dropdownMenuClass,\n      parentElement as ParentNode,\n    );\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n      this._observer = new IntersectionObserver(\n        ([entry]) => dropdownIntersectionHandler(entry.target as HTMLElement),\n        { threshold: 1 },\n      );\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore else @preserve\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement &&\n        getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(\n        (e) => {\n          e.relatedTarget = element;\n        },\n      );\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, \"true\");\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore else @preserve\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach((e) => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, \"false\");\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = \"modal\";\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = \"Modal\";\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = \"Offcanvas\";\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = \"fixed-top\";\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = \"fixed-bottom\";\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = \"sticky-top\";\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = \"position-sticky\";\nexport default positionStickyClass;\n","import {\n  getDocumentBody,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getWindow,\n  hasClass,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport fixedTopClass from \"../strings/fixedTopClass\";\nimport fixedBottomClass from \"../strings/fixedBottomClass\";\nimport stickyTopClass from \"../strings/stickyTopClass\";\nimport positionStickyClass from \"../strings/positionStickyClass\";\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName(\"is-fixed\", parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: \"\",\n    overflow: \"\",\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore else @preserve\n  if (fixedItems.length) {\n    fixedItems.forEach((fixed) => {\n      setElementStyle(fixed, {\n        paddingRight: \"\",\n        marginRight: \"\",\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, \"paddingRight\"), 10);\n  const isOpen = getElementStyle(bd, \"overflow\") === \"hidden\";\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore else @preserve\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: \"hidden\",\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    // istanbul ignore else @preserve\n    if (fixedItems.length) {\n      fixedItems.forEach((fixed) => {\n        const itemPadValue = getElementStyle(fixed, \"paddingRight\");\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        // istanbul ignore else @preserve\n        if (\n          [stickyTopClass, positionStickyClass].some((c) => hasClass(fixed, c))\n        ) {\n          const itemMValue = getElementStyle(fixed, \"marginRight\");\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = \"offcanvas\";\nexport default offcanvasString;\n","import { createElement, getDocumentBody, isNode } from \"@thednp/shorty\";\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({\n  tagName: \"div\",\n  className: \"popup-container\",\n}) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) &&\n    customContainer.nodeName === \"BODY\";\n  const lookup = isNode(customContainer) && !containerIsBody\n    ? customContainer\n    : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  // istanbul ignore else @preserve\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) &&\n    customContainer.nodeName === \"BODY\";\n  const lookup = isNode(customContainer) && !containerIsBody\n    ? customContainer\n    : popupContainer;\n\n  // istanbul ignore else @preserve\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== \"BODY\"\n    ? customContainer\n    : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { appendPopup, hasPopup, popupContainer, removePopup };\n","import {\n  addClass,\n  createElement,\n  getDocument,\n  getDocumentBody,\n  hasClass,\n  querySelector,\n  reflow,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport modalString from \"../strings/modalString\";\nimport offcanvasString from \"../strings/offcanvasString\";\nimport { resetScrollbar } from \"./scrollbar\";\nimport { appendPopup, removePopup } from \"./popupContainer\";\n\nconst backdropString = \"backdrop\";\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement(\"div\") as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(\n    `${modalActiveSelector},${offcanvasActiveSelector}`,\n    getDocument(element),\n  );\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach((c) => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (\n  element: HTMLElement,\n  hasFade: boolean,\n  isModal?: boolean,\n) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  modalBackdropClass,\n  offcanvasActiveSelector,\n  offcanvasBackdropClass,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n};\n","import { getElementStyle, isHTMLElement } from \"@thednp/shorty\";\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) &&\n    getElementStyle(element, \"visibility\") !== \"hidden\" &&\n    element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  addClass,\n  ariaHidden,\n  ariaModal,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  isRTL,\n  KeyboardEvent,\n  keydownEvent,\n  keyEscape,\n  mouseclickEvent,\n  MouseEvent,\n  querySelector,\n  querySelectorAll,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  Timer,\n  toggleFocusTrap,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport modalString from \"../strings/modalString\";\nimport modalComponent from \"../strings/modalComponent\";\nimport offcanvasComponent from \"../strings/offcanvasComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport { measureScrollbar, setScrollbar } from \"../util/scrollbar\";\nimport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n} from \"../util/backdrop\";\nimport isVisible from \"../util/isVisible\";\nimport BaseComponent from \"./base-component\";\nimport { ModalEvent, ModalOptions } from \"../interface/modal\";\nimport { hasPopup } from \"../util/popupContainer\";\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\ntype ModalEventProps = {\n  relatedTarget: HTMLElement | undefined;\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) =>\n  getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `show.bs.${modalString}`,\n);\nconst shownModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `shown.bs.${modalString}`,\n);\nconst hideModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `hide.bs.${modalString}`,\n);\nconst hiddenModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `hidden.bs.${modalString}`,\n);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } =\n    element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  // istanbul ignore next @preserve: impossible to test?\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element)\n      ? \"paddingRight\"\n      // istanbul ignore next @preserve\n      : \"paddingLeft\";\n    const padStyle = { [pad]: `${scrollbarWidth}px` } as Partial<\n      CSS4Declaration\n    >;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n\n  if (add) self._observer.observe(element);\n  else self._observer.disconnect();\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: \"\", display: \"\" });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  // istanbul ignore else @preserve\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n  toggleFocusTrap(element);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n  toggleFocusTrap(element);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: \"block\" });\n  setModalScrollbar(self);\n  // istanbul ignore else @preserve\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: \"hidden\" });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, \"true\");\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (\n    options.backdrop && hasFade && hasClass(overlay, showClass) &&\n    !getCurrentOpen(element)\n  ) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n\n  const trigger = target && closest(target, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    // istanbul ignore else @preserve\n    if (trigger && trigger.tagName === \"A\") e.preventDefault();\n    self.relatedTarget = trigger;\n    self.toggle();\n  }\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent<HTMLElement>) => {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    const { options } = self;\n    // istanbul ignore else @preserve\n    if (\n      options.keyboard &&\n      code === keyEscape && // the keyboard option is enabled and the key is 27\n      hasClass(element, showClass)\n    ) {\n      // the modal is not visible\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nconst modalDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { currentTarget } = e;\n  const self = currentTarget && getModalInstance(currentTarget);\n\n  // this timer is needed\n  // istanbul ignore else @preserve\n  if (self && currentTarget && !Timer.get(currentTarget)) {\n    const { options, isStatic, modalDialog } = self;\n    const { backdrop } = options;\n    const { target } = e;\n\n    const selectedText = getDocument(currentTarget)?.getSelection()?.toString()\n      .length;\n    const targetInsideDialog = modalDialog.contains(target);\n    const dismiss = target && closest(target, modalDismissSelector);\n\n    // istanbul ignore else @preserve\n    if (isStatic && !targetInsideDialog) {\n      Timer.set(\n        currentTarget,\n        () => {\n          addClass(currentTarget, modalStaticClass);\n          emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n        },\n        17,\n      );\n    } else if (\n      dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)\n    ) {\n      self.relatedTarget = dismiss || null;\n      self.hide();\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n  declare _observer: ResizeObserver;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    // istanbul ignore else @preserve\n    if (modalDialog) {\n      this.modalDialog = modalDialog;\n      // modal can have multiple triggering elements\n      this.triggers = [\n        ...querySelectorAll(modalToggleSelector, getDocument(element)),\n      ].filter(\n        (btn) => getTargetElement(btn) === element,\n      );\n\n      // additional internals\n      this.isStatic = this.options.backdrop === \"static\";\n      this.hasFade = hasClass(element, fadeClass);\n      this.relatedTarget = null;\n      this._observer = new ResizeObserver(() => this.update());\n\n      // attach event listeners\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    // istanbul ignore else @preserve\n    if (!hasClass(element, showClass)) {\n      showModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showModalEvent);\n      if (!showModalEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n\n        // istanbul ignore else @preserve\n        if (currentOpen && currentOpen !== element) {\n          const that = getModalInstance(currentOpen) ||\n            // istanbul ignore next @preserve\n            getInstance<typeof BaseComponent & { hide: () => void }>(\n              currentOpen,\n              offcanvasComponent,\n            );\n          // istanbul ignore else @preserve\n          if (that) that.hide();\n        }\n        if (backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, hasFade, true);\n          } else {\n            toggleOverlayType(true);\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeModalShow(this), overlayDelay);\n        } else {\n          beforeModalShow(this);\n          // istanbul ignore else @preserve\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    // istanbul ignore else @preserve\n    if (hasClass(element, showClass)) {\n      hideModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideModalEvent);\n\n      // istanbul ignore else @preserve\n      if (!hideModalEvent.defaultPrevented) {\n        removeClass(element, showClass);\n        setAttribute(element, ariaHidden, \"true\");\n        removeAttribute(element, ariaModal);\n\n        if (hasFade) {\n          emulateTransitionEnd(element, () => beforeModalHide(this));\n        } else {\n          beforeModalHide(this);\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    // istanbul ignore else @preserve\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener of the `Modal` instance.\n   *\n   * @param add when `true`, event listener(s) is/are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) =>\n        action(btn, mouseclickEvent, modalClickHandler)\n      );\n    }\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { modalDialog, hasFade } = clone;\n    const callback = () => setTimeout(() => super.dispose(), 17);\n\n    this.hide();\n    this._toggleEventListeners();\n\n    if (hasFade) {\n      // use transitionend callback\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  addClass,\n  ariaHidden,\n  ariaModal,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  keydownEvent,\n  keyEscape,\n  mouseclickEvent,\n  querySelector,\n  querySelectorAll,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  toggleFocusTrap,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport showClass from \"../strings/showClass\";\nimport offcanvasString from \"../strings/offcanvasString\";\nimport offcanvasComponent from \"../strings/offcanvasComponent\";\nimport modalComponent from \"../strings/modalComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport isVisible from \"../util/isVisible\";\nimport { setScrollbar } from \"../util/scrollbar\";\nimport { hasPopup } from \"../util/popupContainer\";\nimport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  offcanvasActiveSelector,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n} from \"../util/backdrop\";\nimport BaseComponent from \"./base-component\";\nimport { OffcanvasEvent, OffcanvasOptions } from \"../interface/offcanvas\";\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\ntype OffCanvasEventProps = {\n  relatedTarget: HTMLElement | undefined;\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) =>\n  getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  // istanbul ignore else @preserve\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: \"hidden\" });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: \"visible\" });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n  }\n  emulateTransitionEnd(element, () => hideOffcanvasComplete(self));\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    // istanbul ignore else @preserve\n    if (trigger && trigger.tagName === \"A\") {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(\n    offcanvasActiveSelector,\n    getDocument(target as Node),\n  );\n  const offCanvasDismiss = querySelector(\n    offcanvasDismissSelector,\n    element as HTMLElement | undefined,\n  );\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    const { options, triggers } = self;\n    const { backdrop } = options;\n    const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n    const selection = getDocument(element).getSelection();\n\n    // istanbul ignore else: a filter is required here @preserve\n    if (!overlay.contains(target as HTMLElement) || backdrop !== \"static\") {\n      // istanbul ignore else @preserve\n      if (\n        !(selection && selection.toString().length) &&\n        ((!element.contains(target as HTMLElement) &&\n          backdrop &&\n          // istanbul ignore next @preserve\n          (!trigger || triggers.includes(target as HTMLElement))) ||\n          (offCanvasDismiss &&\n            offCanvasDismiss.contains(target as HTMLElement)))\n      ) {\n        self.relatedTarget =\n          offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)\n            ? offCanvasDismiss\n            : null;\n        self.hide();\n      }\n\n      // istanbul ignore next @preserve\n      if (trigger && trigger.tagName === \"A\") e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(\n    offcanvasActiveSelector,\n    getDocument(target as Node),\n  );\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    // istanbul ignore else @preserve\n    if (self.options.keyboard && code === keyEscape) {\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, \"true\");\n  setAttribute(element, \"role\", \"dialog\");\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n  toggleFocusTrap(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, \"true\");\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, \"role\");\n  setElementStyle(element, { visibility: \"\" });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget ||\n    triggers.find(isVisible);\n  // istanbul ignore else @preserve\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n  toggleFocusTrap(element);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(\n    target: HTMLElement | string,\n    config?: Partial<OffcanvasOptions>,\n  ) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [\n      ...querySelectorAll(offcanvasToggleSelector, getDocument(element)),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showOffcanvasEvent);\n\n      if (!showOffcanvasEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n        if (currentOpen && currentOpen !== element) {\n          const that = getOffcanvasInstance(currentOpen) ||\n            // istanbul ignore next @preserve\n            getInstance<typeof BaseComponent & { hide: () => void }>(\n              currentOpen,\n              modalComponent,\n            );\n\n          // istanbul ignore else @preserve\n          if (that) that.hide();\n        }\n\n        if (options.backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, true);\n          } else {\n            toggleOverlayType();\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n        } else {\n          beforeOffcanvasShow(this);\n          // istanbul ignore next @preserve - this test was done on Modal\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideOffcanvasEvent);\n      if (!hideOffcanvasEvent.defaultPrevented) {\n        addClass(element, offcanvasTogglingClass);\n        removeClass(element, showClass);\n        beforeOffcanvasHide(this);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listeners.\n   *\n   * @param self the `Offcanvas` instance\n   * @param add when *true*, listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    this.triggers.forEach((btn) =>\n      action(btn, mouseclickEvent, offcanvasTriggerHandler)\n    );\n  };\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const { element } = this;\n    const isOpen = hasClass(element, showClass);\n    const callback = () => setTimeout(() => super.dispose(), 1);\n\n    this.hide();\n    this._toggleEventListeners();\n\n    if (isOpen) {\n      emulateTransitionEnd(element, callback);\n      // istanbul ignore next @preserve\n    } else {\n      callback();\n    }\n  }\n}\n","/** @type {string} */\nconst popoverString = \"popover\";\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = \"Popover\";\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = \"tooltip\";\nexport default tooltipString;\n","import tooltipString from \"../strings/tooltipString\";\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : \"\";\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${\n    header + arrow + body\n  }</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: \"top\",\n  bottom: \"bottom\",\n  left: \"start\",\n  right: \"end\",\n};\n\nexport default tipClassPositions;\n","import {\n  createCustomEvent,\n  dispatchEvent,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isHTMLElement,\n  isRTL,\n  setElementStyle,\n  toLowerCase,\n} from \"@thednp/shorty\";\n\nimport popoverComponent from \"../strings/popoverComponent\";\nimport tipClassPositions from \"./tipClassPositions\";\nimport Tooltip from \"../components/tooltip\";\nimport type { TooltipEvent } from \"../interface/tooltip\";\nimport type { PopoverEvent } from \"../interface/popover\";\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n\n  // istanbul ignore else @preserve\n  if (tooltip) {\n    const tipPositions = { ...tipClassPositions };\n    const RTL = isRTL(element);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      // top: '0px', left: '0px', right: '', bottom: '',\n      top: \"\",\n      left: \"\",\n      right: \"\",\n      bottom: \"\",\n    });\n    const isPopover = self.name === popoverComponent;\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } =\n      getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } =\n      container as HTMLElement;\n    const parentPosition = getElementStyle(\n      container as HTMLElement,\n      \"position\",\n    );\n    const fixedParent = parentPosition === \"fixed\";\n    const scrollbarWidth = fixedParent\n      ? Math.abs(parentCWidth - parentOWidth)\n      : Math.abs(htmlcw - htmlow);\n    const leftBoundry = RTL && fixedParent\n      // istanbul ignore next @preserve\n      ? scrollbarWidth\n      : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = getBoundingClientRect(element, true);\n    const { x, y } = {\n      x: elemRectLeft,\n      y: elemRectTop,\n    };\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: \"\",\n      left: \"\",\n      right: \"\",\n      bottom: \"\",\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = \"\";\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = \"\";\n    let arrowTop: number | string = \"\";\n    let arrowLeft: number | string = \"\";\n    let arrowRight: number | string = \"\";\n\n    const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n    const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed =\n      elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed =\n      elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = [\"left\", \"right\"];\n    const verticals = [\"top\", \"bottom\"];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement)\n      ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry\n      : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed\n      ? \"top\"\n      : placement;\n    // recompute placement\n    placement = placement === \"top\" && topExceed ? \"bottom\" : placement;\n    placement = placement === \"bottom\" && bottomExceed ? \"top\" : placement;\n    placement = placement === \"left\" && leftExceed ? \"right\" : placement;\n    placement = placement === \"right\" && rightExceed\n      ? \"left\"\n      // istanbul ignore next @preserve\n      : placement;\n\n    // update tooltip/popover class\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(\n        tipClasses,\n        tipPositions[placement],\n      );\n    }\n\n    // compute tooltip / popover coordinates\n    // istanbul ignore else @preserve\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === \"left\") {\n        // LEFT\n        leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n      } else {\n        // RIGHT\n        leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = y;\n        bottomPosition = \"\";\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = y - tipHeight + elemHeight;\n        bottomPosition = \"\";\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = y - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === \"top\") {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = \"auto\";\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === \"\" ? \"\" : `${bottomPosition}px`,\n      left: leftPosition === \"auto\" ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== \"\" ? `${rightPosition}px` : \"\",\n    });\n\n    // update arrow placement\n    // istanbul ignore else @preserve\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== \"\") {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== \"\") {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== \"\") {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<\n      Record<string, unknown>,\n      TooltipEvent | PopoverEvent\n    >(\n      `updated.bs.${toLowerCase(self.name)}`,\n    );\n    dispatchEvent(element, updatedTooltipEvent);\n  }\n};\n\nexport default styleTip;\n","import getTipTemplate from \"./getTipTemplate\";\nimport tooltipString from \"../strings/tooltipString\";\nimport { TooltipOptions } from \"../interface/tooltip\";\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: \"\",\n  customClass: \"\",\n  trigger: \"hover focus\",\n  placement: \"top\",\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: \"\",\n  dismissible: false,\n  btnClose: \"\",\n};\nexport default tooltipDefaults;\n","var x = Object.defineProperty;\nvar A = (t, e, n) => e in t ? x(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n;\nvar a = (t, e, n) => A(t, typeof e != \"symbol\" ? e + \"\" : e, n);\nconst E = \"DOMContentLoaded\", B = navigator.userAgentData, b = B, { userAgent: T } = navigator, m = T, k = /iPhone|iPad|iPod|Android/i;\n// istanbul ignore else @preserve\nb ? b.brands.some((t) => k.test(t.brand)) : k.test(m);\nconst v = /(iPhone|iPod|iPad)/;\nb ? b.brands.some(\n  (t) => v.test(t.brand)\n) : (\n  /* istanbul ignore next @preserve */\n  v.test(m)\n);\nm && m.includes(\"Firefox\");\nconst { head: g } = document;\n[\"webkitPerspective\", \"perspective\"].some(\n  (t) => t in g.style\n);\nconst C = (t, e, n, i) => {\n  const o = i || !1;\n  t.addEventListener(\n    e,\n    n,\n    o\n  );\n}, $ = (t, e, n, i) => {\n  const o = i || !1;\n  t.removeEventListener(\n    e,\n    n,\n    o\n  );\n}, F = (t, e, n, i) => {\n  const o = (s) => {\n    // istanbul ignore else @preserve\n    (s.target === t || s.currentTarget === t) && (n.apply(t, [s]), $(t, e, o, i));\n  };\n  C(t, e, o, i);\n}, L = () => {\n};\n(() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    // istanbul ignore next @preserve\n    F(document, E, L, e);\n  } catch {\n  }\n  return t;\n})();\n[\"webkitTransform\", \"transform\"].some(\n  (t) => t in g.style\n);\n[\"webkitAnimation\", \"animation\"].some(\n  (t) => t in g.style\n);\n[\"webkitTransition\", \"transition\"].some(\n  (t) => t in g.style\n);\nconst O = (t) => t != null && typeof t == \"object\" || !1, V = (t) => O(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(\n  (e) => t.nodeType === e\n) || !1, H = (t) => V(t) && t.nodeType === 1 || !1, w = (t, e) => {\n  const { width: n, height: i, top: o, right: s, bottom: d, left: h } = t.getBoundingClientRect();\n  let r = 1, c = 1;\n  return {\n    width: n / r,\n    height: i / c,\n    top: o / c,\n    right: s / r,\n    bottom: d / c,\n    left: h / r,\n    x: h / r,\n    y: o / c\n  };\n}, j = (t) => typeof t == \"function\" || !1, P = \"PositionObserver Error\";\nclass D {\n  /**\n   * The constructor takes a single argument, callback, which is called\n   * whenever the position of an observed element changes. The callback function\n   * should take an array of `PositionObserverEntry` objects as its only argument.\n   *\n   * @param callback the callback that applies to all targets of this observer\n   */\n  constructor(e, n) {\n    a(this, \"entries\");\n    a(this, \"_tick\");\n    a(this, \"_root\");\n    a(this, \"_callback\");\n    /**\n     * Start observing the position of the specified element.\n     * If the element is not currently attached to the DOM,\n     * it will be attached before observation begins.\n     * @param target\n     */\n    a(this, \"observe\", (e) => {\n      if (!H(e))\n        throw new Error(\n          `${P}: ${e} is not an instance of HTMLElement.`\n        );\n      const { clientWidth: n, clientHeight: i } = this._root, o = w(e), { left: s, top: d, bottom: h, right: r, width: c, height: l } = o, u = d > 1 - l && s > 1 - c && h <= i + l - 1 && r <= n + c - 1;\n      this.entries.push({ target: e, boundingBox: o, isVisible: u }), this._tick = requestAnimationFrame(this._runCallback);\n    });\n    /**\n     * Stop observing the position of the specified element.\n     * @param target\n     */\n    a(this, \"unobserve\", (e) => {\n      const n = this.entries.findIndex((i) => i.target === e);\n      this.entries.splice(n, 1);\n    });\n    /**\n     * Private method responsible for all the heavy duty.\n     */\n    a(this, \"_runCallback\", () => {\n      /* istanbul ignore if @preserve - a guard must be set */\n      if (!this.entries.length) return;\n      const e = [], { clientWidth: n, clientHeight: i } = this._root;\n      this.entries.forEach((o, s) => {\n        const { target: d, boundingBox: h } = o, r = w(d), { left: c, top: l, bottom: u, right: f, width: p, height: _ } = r;\n        if (h.left !== c || h.top !== l || h.right !== f || h.bottom !== u) {\n          const y = l > 1 - _ && c > 1 - p && u <= i + _ - 1 && f <= n + p - 1;\n          this.entries[s].boundingBox = r, this.entries[s].isVisible = y, e.push({ target: d, boundingBox: r, isVisible: y });\n        }\n      }), e.length && this._callback(e), requestAnimationFrame(this._runCallback);\n    });\n    /**\n     * Immediately stop observing all elements.\n     */\n    a(this, \"disconnect\", () => {\n      cancelAnimationFrame(this._tick), this.entries.length = 0, this._tick = 0;\n    });\n    if (!j(e))\n      throw new Error(`${P}: ${e} is not a function.`);\n    this.entries = [], this._callback = e, this._root = (n == null ? void 0 : n.root) || (document == null ? void 0 : document.documentElement), this._tick = 0;\n  }\n}\nexport {\n  D as default\n};\n//# sourceMappingURL=index.mjs.map\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = \"data-original-title\";\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = \"Tooltip\";\nexport default tooltipComponent;\n","import {\n  isArray,\n  isFunction,\n  isHTMLElement,\n  isNode,\n  isNodeList,\n  isString,\n} from \"@thednp/shorty\";\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (\n  element: HTMLElement,\n  content: Node[] | Node | string,\n  sanitizeFn?: (s: string) => string,\n) => {\n  // istanbul ignore else @preserve\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, \"text/html\");\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (\n    isNodeList(content) || (isArray(content) && content.every(isNode))\n  ) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import {\n  addClass,\n  createElement,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  querySelector,\n  setAttribute,\n} from \"@thednp/shorty\";\n\nimport tooltipComponent from \"../strings/tooltipComponent\";\nimport tooltipString from \"../strings/tooltipString\";\nimport popoverString from \"../strings/popoverString\";\nimport fadeClass from \"../strings/fadeClass\";\nimport tipClassPositions from \"./tipClassPositions\";\nimport setHtml from \"./setHtml\";\nimport Tooltip from \"../components/tooltip\";\nimport Popover from \"../components/popover\";\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const {\n    title,\n    placement,\n    template,\n    animation,\n    customClass,\n    sanitizeFn,\n    dismissible,\n    content,\n    btnClose,\n  } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = \"end\";\n    tipPositions.right = \"start\";\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement(\"div\") as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    // istanbul ignore next @preserve\n    : undefined;\n\n  const { tooltip } = self;\n  // istanbul ignore else @preserve\n  if (tooltip) {\n    // set id and role attributes\n    setAttribute(tooltip, \"id\", id);\n    setAttribute(tooltip, \"role\", tooltipString);\n\n    const bodyClass = isTooltip\n      ? `${tooltipString}-inner`\n      : `${popoverString}-body`;\n    const tooltipHeader = isTooltip\n      ? null\n      : querySelector(`.${popoverString}-header`, tooltip);\n    const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n    // set arrow and enable access for styleTip\n    self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n    const { arrow } = self;\n\n    if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n    else {\n      const tempTitle = createElement(\"div\") as HTMLElement;\n      setHtml(tempTitle, title, sanitizeFn);\n      titleParts = [...[...tempTitle.childNodes]];\n    }\n\n    if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n    else {\n      const tempContent = createElement(\"div\") as HTMLElement;\n      setHtml(tempContent, content, sanitizeFn);\n      contentParts = [...[...tempContent.childNodes]];\n    }\n\n    // set dismissible button\n    if (dismissible) {\n      if (title) {\n        if (isHTMLElement(btnClose)) {\n          titleParts = [...titleParts, btnClose.cloneNode(true)];\n        } else {\n          const tempBtn = createElement(\"div\") as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          titleParts = [...titleParts, tempBtn.firstChild as Node];\n        }\n      } else {\n        // istanbul ignore else @preserve\n        if (tooltipHeader) tooltipHeader.remove();\n        if (isHTMLElement(btnClose)) {\n          contentParts = [...contentParts, btnClose.cloneNode(true)];\n        } else {\n          const tempBtn = createElement(\"div\") as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          contentParts = [...contentParts, tempBtn.firstChild as Node];\n        }\n      }\n    }\n\n    // fill the template with content from options / data attributes\n    // also sanitize title && content\n    // istanbul ignore else @preserve\n    if (!isTooltip) {\n      // istanbul ignore else @preserve\n      if (title && tooltipHeader) {\n        setHtml(tooltipHeader, titleParts, sanitizeFn);\n      }\n      // istanbul ignore else @preserve\n      if (content && tooltipBody) {\n        setHtml(tooltipBody, contentParts, sanitizeFn);\n      }\n      // set btn\n      self.btn = querySelector(\".btn-close\", tooltip) || undefined;\n    } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n    // Bootstrap 5.2.x\n    // addClass(tooltip, 'position-absolute');\n    addClass(tooltip, \"position-fixed\");\n    addClass(arrow, \"position-absolute\");\n\n    // set popover animation and placement\n    // istanbul ignore else @preserve\n    if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n    // istanbul ignore else @preserve\n    if (animation && !hasClass(tooltip, fadeClass)) {\n      addClass(tooltip, fadeClass);\n    }\n    // istanbul ignore else @preserve\n    if (customClass && !hasClass(tooltip, customClass)) {\n      addClass(tooltip, customClass);\n    }\n    // istanbul ignore else @preserve\n    if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n  }\n};\n\nexport default createTip;\n","import {\n  getDocument,\n  getElementStyle,\n  getParentNode,\n  isShadowRoot,\n  isTableElement,\n} from \"@thednp/shorty\";\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = [\"HTML\", \"BODY\"];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    // istanbul ignore else @preserve\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, \"position\") !== \"relative\" &&\n        containers.slice(i + 1).every((r) =>\n          getElementStyle(r as HTMLElement, \"position\") === \"static\"\n        )\n      ) {\n        return c;\n      }\n      return null;\n    }) ||\n    // istanbul ignore next: optional guard\n    getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  addClass,\n  ariaDescribedBy,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  focusEvent,\n  focusinEvent,\n  focusoutEvent,\n  getAttribute,\n  getDocument,\n  getElementStyle,\n  getInstance,\n  getUID,\n  hasAttribute,\n  hasClass,\n  isApple,\n  mouseclickEvent,\n  mousedownEvent,\n  mouseenterEvent,\n  mousehoverEvent,\n  mouseleaveEvent,\n  ObjectAssign,\n  passiveHandler,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  Timer,\n  toLowerCase,\n  touchstartEvent,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\nimport PositionObserver from \"@thednp/position-observer\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dataOriginalTitle from \"../strings/dataOriginalTitle\";\nimport showClass from \"../strings/showClass\";\nimport tooltipString from \"../strings/tooltipString\";\nimport tooltipComponent from \"../strings/tooltipComponent\";\nimport popoverString from \"../strings/popoverString\";\nimport popoverComponent from \"../strings/popoverComponent\";\nimport modalString from \"../strings/modalString\";\nimport offcanvasString from \"../strings/offcanvasString\";\n\nimport styleTip from \"../util/styleTip\";\nimport createTip from \"../util/createTip\";\nimport { appendPopup, hasPopup, removePopup } from \"../util/popupContainer\";\nimport getElementContainer from \"../util/getElementContainer\";\nimport tooltipDefaults from \"../util/tooltipDefaults\";\nimport BaseComponent from \"./base-component\";\nimport type { TooltipEvent, TooltipOptions } from \"../interface/tooltip\";\nimport type { PopoverEvent, PopoverOptions } from \"../interface/popover\";\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector =\n  `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = \"title\";\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n */\nlet getTooltipInstance = (element: HTMLElement) =>\n  getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(\n    tooltip as HTMLElement,\n    container === offsetParent ? container : offsetParent,\n  );\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container, offsetParent } = self;\n\n  return tooltip &&\n    hasPopup(tooltip, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  self._toggleEventListeners();\n\n  // istanbul ignore else @preserve\n  if (\n    hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent\n  ) {\n    toggleTooltipTitle(self);\n  }\n  // istanbul ignore else @preserve\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(\n    getDocument(element),\n    touchstartEvent,\n    self.handleTouch,\n    passiveHandler,\n  );\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<\n    Record<string, never>,\n    TooltipEvent | PopoverEvent\n  >(\n    `shown.bs.${toLowerCase(self.name)}`,\n  );\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, \"in\");\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<\n    Record<string, never>,\n    TooltipEvent | PopoverEvent\n  >(\n    `hidden.bs.${toLowerCase(self.name)}`,\n  );\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, \"out\");\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  // const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  if (add) self._observer.observe(self.element);\n  else self._observer.disconnect();\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) {\n    action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  }\n  if (parentOffcanvas) {\n    action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n  }\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content ||\n      getAttribute(element, titleAtt[0]) ||\n      // istanbul ignore next @preserve\n      \"\",\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n  declare _observer: PositionObserver;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    // istanbul ignore next @preserve: this is to set Popover too\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) =>\n      getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if (!((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      // reset default options\n      ObjectAssign(tooltipDefaults, { titleAttr: \"\" });\n\n      // set title attributes and add event listeners\n      // istanbul ignore else @preserve\n      if (\n        hasAttribute(element, titleAttr) && isTooltip &&\n        typeof options.title === \"string\"\n      ) {\n        toggleTooltipTitle(this, options.title);\n      }\n\n      // set containers\n      this.container = getElementContainer(element);\n      this.offsetParent = [\"sticky\", \"fixed\"].some(\n          (position) =>\n            getElementStyle(this.container as HTMLElement, \"position\") ===\n              position,\n        )\n        ? (this.container as HTMLElement)\n        : getDocument(this.element).body;\n\n      // create tooltip here\n      createTip(this);\n\n      // create observer\n      this._observer = new PositionObserver(() => this.update());\n\n      // attach events\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  // istanbul ignore next @preserve - impossible to test without Apple device\n  handleFocus = () => focus(this.element);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, \"out\");\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, \"out\");\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<\n            Record<string, never>,\n            TooltipEvent | PopoverEvent\n          >(\n            `show.bs.${toLowerCase(this.name)}`,\n          );\n          dispatchEvent(element, showTooltipEvent);\n\n          // istanbul ignore else @preserve\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, tipContainer);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            // istanbul ignore else @preserve\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            // istanbul ignore else @preserve\n            if (animation) {\n              emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            } else tooltipShownAction(this);\n          }\n        },\n        17,\n        \"in\",\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, \"in\");\n\n    // istanbul ignore else @preserve\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<\n            Record<string, never>,\n            TooltipEvent | PopoverEvent\n          >(\n            `hide.bs.${toLowerCase(this.name)}`,\n          );\n          dispatchEvent(element, hideTooltipEvent);\n\n          // istanbul ignore else @preserve\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            // istanbul ignore else @preserve\n            if (animation) {\n              emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            } else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        \"out\",\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip<Tooltip>(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    // istanbul ignore else @preserve\n    if (!enabled) {\n      this._toggleEventListeners(true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, enabled } = this;\n    // istanbul ignore else @preserve\n    if (enabled) {\n      if (tooltip && hasTip(this)) this.hide();\n      this._toggleEventListeners();\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    // istanbul ignore if @preserve\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Toggles on/off the `Tooltip` event listeners.\n   *\n   * @param add when `true`, event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    // btn is only for dismissible popover\n    const { element, options, btn } = this;\n    const { trigger } = options;\n    const isPopover = this.name !== tooltipComponent;\n    const dismissible = isPopover && (options as PopoverOptions).dismissible\n      ? true\n      : false;\n\n    // istanbul ignore else @preserve\n    if (!trigger.includes(\"manual\")) {\n      this.enabled = !!add;\n\n      const triggerOptions = trigger.split(\" \");\n\n      triggerOptions.forEach((tr) => {\n        // istanbul ignore else @preserve\n        if (tr === mousehoverEvent) {\n          action(element, mousedownEvent, this.handleShow);\n          action(element, mouseenterEvent, this.handleShow);\n\n          // istanbul ignore else @preserve\n          if (!dismissible) {\n            action(element, mouseleaveEvent, this.handleHide);\n            action(\n              getDocument(element),\n              touchstartEvent,\n              this.handleTouch,\n              passiveHandler,\n            );\n          }\n        } else if (tr === mouseclickEvent) {\n          action(element, tr, !dismissible ? this.toggle : this.handleShow);\n        } else if (tr === focusEvent) {\n          action(element, focusinEvent, this.handleShow);\n          // istanbul ignore else @preserve\n          if (!dismissible) action(element, focusoutEvent, this.handleHide);\n          // istanbul ignore else @preserve\n          if (isApple) {\n            action(element, mouseclickEvent, this.handleFocus);\n          }\n        }\n        // istanbul ignore else @preserve\n        if (dismissible && btn) {\n          action(btn, mouseclickEvent, this.handleHide);\n        }\n      });\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () =>\n      setTimeout(\n        () => disposeTooltipComplete(clone, () => super.dispose()),\n        17,\n      );\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip as HTMLElement, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { focus, getInstance, ObjectAssign } from \"@thednp/shorty\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport popoverString from \"../strings/popoverString\";\nimport popoverComponent from \"../strings/popoverComponent\";\n\nimport getTipTemplate from \"../util/getTipTemplate\";\nimport styleTip from \"../util/styleTip\";\nimport tooltipDefaults from \"../util/tooltipDefaults\";\nimport Tooltip from \"./tooltip\";\n\nimport type { PopoverOptions /* , PopoverEvent */ } from \"../interface/popover\";\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector =\n  `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: \"\",\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n */\nconst getPopoverInstance = (element: HTMLElement) =>\n  getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    // istanbul ignore else @preserve\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = \"scrollspy\";\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = \"ScrollSpy\";\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  addClass,\n  createCustomEvent,\n  dispatchEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementsByTagName,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  querySelector,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport PositionObserver from \"@thednp/position-observer\";\n\nimport activeClass from \"../strings/activeClass\";\nimport scrollspyString from \"../strings/scrollspyString\";\nimport scrollspyComponent from \"../strings/scrollspyComponent\";\n\nimport BaseComponent from \"./base-component\";\nimport { ScrollSpyEvent, ScrollSpyOptions } from \"../interface/scrollspy\";\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\ntype ScrollSpyEventProps = {\n  relatedTarget: HTMLElement;\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) =>\n  getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<\n  ScrollSpyEventProps,\n  ScrollSpyEvent\n>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } =\n    self;\n  const { offset } = options;\n  const isWin = scrollTarget !== element;\n\n  const links = target && getElementsByTagName(\"A\", target);\n  const doc = getDocument(element);\n  const scrollHEIGHT = scrollTarget\n    ? getScrollHeight(scrollTarget)\n    // istanbul ignore next @preserve\n    : scrollHeight;\n\n  self.scrollTop = scrollTarget.scrollTop;\n\n  // only update items/offsets once or with each mutation\n  // istanbul ignore else @preserve\n  if (\n    links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)\n  ) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.targets = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    Array.from(links).forEach((link) => {\n      href = getAttribute(link, \"href\");\n      targetItem = href && href.charAt(0) === \"#\" && href.slice(-1) !== \"#\" &&\n        querySelector(href, doc);\n\n      if (targetItem) {\n        self.items.push(link);\n        self.targets.push(targetItem);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push(\n          (isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset,\n        );\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return scrollTarget !== element\n    ? scrollTarget.clientHeight\n    : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName(\"A\", target)].forEach((item) => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n\n  // istanbul ignore else @preserve\n  if (isHTMLElement(target)) clear(target);\n\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, \"nav\") || hasClass(parentItem, \"dropdown-menu\")) {\n      parents.push(parentItem);\n    }\n  }\n\n  parents.forEach((menuItem) => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    // istanbul ignore else @preserve\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare targets: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n  declare _observer: PositionObserver;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(\n    target: HTMLElement | string,\n    config?: Partial<ScrollSpyOptions>,\n  ) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(\n      options.target as HTMLElement | string,\n      getDocument(element),\n    );\n\n    // invalidate\n    if (this.target) {\n      // set initial state\n      this.scrollTarget = element.clientHeight < element.scrollHeight\n        ? element\n        : getDocumentElement(element);\n      this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n      // run an initial burst, we need to know the targets\n      this.refresh();\n\n      // create observer\n      this._observer = new PositionObserver(() => this.refresh(), {\n        root: this.scrollTarget,\n      });\n\n      // add event handlers\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    // istanbul ignore else @preserve\n    if (isHTMLElement(target) && target.offsetHeight > 0) {\n      updateSpyTargets(this);\n\n      const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n      if (scrollTop >= maxScroll) {\n        const newActiveItem = items[itemsLength - 1];\n\n        // istanbul ignore else @preserve\n        if (activeItem !== newActiveItem) {\n          activate(this, newActiveItem);\n        }\n        return;\n      }\n\n      const { offsets } = this;\n\n      // istanbul ignore else @preserve\n      if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n        this.activeItem = null;\n        // istanbul ignore else @preserve\n        if (target) clear(target);\n        return;\n      }\n\n      items.forEach((item, i) => {\n        if (\n          activeItem !== item &&\n          scrollTop >= offsets[i] &&\n          (typeof offsets[i + 1] === \"undefined\" || scrollTop < offsets[i + 1])\n        ) {\n          activate(this, item);\n        }\n      });\n    }\n  };\n\n  /**\n   * Toggles on/off the component event listener.\n   *\n   * @param add when `true`, listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    if (add) {\n      if (this.scrollTarget === this.element) {\n        this.targets.forEach((targetItem) =>\n          this._observer.observe(targetItem)\n        );\n      } else {\n        this._observer.observe(this.element);\n      }\n    } else this._observer.disconnect();\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = \"tab\";\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = \"Tab\";\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  addClass,\n  ariaSelected,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getElementsByClassName,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  mouseclickEvent,\n  querySelector,\n  reflow,\n  removeClass,\n  setAttribute,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport collapsingClass from \"../strings/collapsingClass\";\nimport activeClass from \"../strings/activeClass\";\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dropdownClasses from \"../strings/dropdownClasses\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport tabString from \"../strings/tabString\";\nimport tabComponent from \"../strings/tabComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { /* TabOptions, */ TabEvent } from \"../interface/tab\";\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) =>\n  getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\ntype TabEventProps = {\n  relatedTarget: HTMLElement | undefined;\n};\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `show.bs.${tabString}`,\n);\nconst shownTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `shown.bs.${tabString}`,\n);\nconst hideTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `hide.bs.${tabString}`,\n);\nconst hiddenTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `hidden.bs.${tabString}`,\n);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  // istanbul ignore else @preserve\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = \"\";\n    removeClass(tabContent, collapsingClass);\n  }\n\n  // istanbul ignore else @preserve\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) ||\n    // istanbul ignore next @preserve\n    { tab: null };\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) ||\n      // istanbul ignore next @preserve\n      { currentHeight: 0, nextHeight: 0 };\n    // istanbul ignore else @preserve: vitest won't validate this branch\n    if (currentHeight !== nextHeight) {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    } else {\n      triggerTabEnd(self);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) ||\n    // istanbul ignore next @preserve\n    { tab: null, content: null };\n  let currentHeight = 0;\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach((c) => {\n      // istanbul ignore else @preserve\n      if (isHTMLElement(c)) addClass(c, \"overflow-hidden\");\n    });\n    currentHeight = isHTMLElement(content)\n      ? content.scrollHeight // istanbul ignore next @preserve\n      : 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n\n  // istanbul ignore else @preserve\n  if (!showTabEvent.defaultPrevented) {\n    // istanbul ignore else @preserve\n    if (nextContent) addClass(nextContent, activeClass);\n    // istanbul ignore else @preserve\n    if (content) removeClass(content, activeClass);\n\n    // istanbul ignore else @preserve\n    if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n      const nextHeight = nextContent.scrollHeight;\n      tabPrivate.set(element, {\n        currentHeight,\n        nextHeight,\n        tab: null,\n        content: null,\n      });\n\n      addClass(tabContent, collapsingClass);\n      tabContent.style.height = `${currentHeight}px`;\n      reflow(tabContent);\n      [content, nextContent].forEach((c) => {\n        // istanbul ignore else @preserve\n        if (c) removeClass(c, \"overflow-hidden\");\n      });\n    }\n\n    if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n      setTimeout(() => {\n        addClass(nextContent, showClass);\n        emulateTransitionEnd(nextContent, () => {\n          triggerTabShow(self);\n        });\n      }, 1);\n    } else {\n      // istanbul ignore else @preserve\n      if (nextContent) addClass(nextContent, showClass);\n      triggerTabShow(self);\n    }\n\n    // istanbul ignore else @preserve\n    if (tab) dispatchEvent(tab, hiddenTabEvent);\n  }\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (\n  self: Tab,\n): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(nav as HTMLElement | undefined)) {\n    return { tab: null, content: null };\n  }\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  // istanbul ignore else @preserve\n  if (\n    activeTabs.length === 1 &&\n    !dropdownClasses.some((c) =>\n      hasClass(activeTabs[0].parentElement as HTMLElement, c)\n    )\n  ) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement)\n    ? getTargetElement(tab as HTMLElement)\n    : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(\",.\")}`);\n  return dropdown\n    ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown)\n    : null;\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    e.preventDefault();\n    self.show();\n  }\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    // istanbul ignore else @preserve\n    if (content) {\n      const nav = closest(element, \".nav\");\n      const container = closest(content, \".tab-content\");\n\n      this.nav = nav;\n      this.content = content;\n      this.tabContent = container;\n\n      // event targets\n      this.dropdown = getParentDropdown(element);\n\n      // show first Tab instance of none is shown\n      // suggested on #432\n      const { tab } = getActiveTab(this);\n      if (nav && !tab) {\n        const firstTab = querySelector(tabSelector, nav);\n        const firstTabContent = firstTab && getTargetElement(firstTab);\n\n        // istanbul ignore else @preserve\n        if (firstTabContent) {\n          addClass(firstTab, activeClass);\n          addClass(firstTabContent, showClass);\n          addClass(firstTabContent, activeClass);\n          setAttribute(element, ariaSelected, \"true\");\n        }\n      }\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    // istanbul ignore else @preserve\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      // istanbul ignore else @preserve\n      if (nav) {\n        tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n      }\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      // istanbul ignore else @preserve\n      if (isHTMLElement(tab)) {\n        dispatchEvent(tab as EventTarget, hideTabEvent);\n        // istanbul ignore else @preserve\n        if (!hideTabEvent.defaultPrevented) {\n          addClass(element, activeClass);\n          setAttribute(element, ariaSelected, \"true\");\n\n          const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n          if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n            removeClass(activeDropdown, activeClass);\n          }\n\n          // istanbul ignore else @preserve\n          if (nav) {\n            const toggleTab = () => {\n              // istanbul ignore else @preserve\n              if (tab) {\n                removeClass(tab, activeClass);\n                setAttribute(tab, ariaSelected, \"false\");\n              }\n              if (dropdown && !hasClass(dropdown, activeClass)) {\n                addClass(dropdown, activeClass);\n              }\n            };\n\n            if (\n              content &&\n              (hasClass(content, fadeClass) ||\n                (nextContent && hasClass(nextContent, fadeClass)))\n            ) {\n              Timer.set(nav, toggleTab, 1);\n            } else toggleTab();\n          }\n\n          // istanbul ignore else @preserve\n          if (content) {\n            removeClass(content, showClass);\n            if (hasClass(content, fadeClass)) {\n              emulateTransitionEnd(content, () => triggerTabHide(this));\n            } else {\n              triggerTabHide(this);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, tabClickHandler);\n  };\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = \"toast\";\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = \"Toast\";\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  addClass,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focusinEvent,\n  focusoutEvent,\n  getDocument,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  mouseenterEvent,\n  mouseleaveEvent,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport toastString from \"../strings/toastString\";\nimport toastComponent from \"../strings/toastComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport { ToastEvent, ToastOptions } from \"../interface/toast\";\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = \"showing\";\n/** @deprecated */\nconst hideClass = \"hide\";\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) =>\n  getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `show.bs.${toastString}`,\n);\nconst shownToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `shown.bs.${toastString}`,\n);\nconst hideToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `hide.bs.${toastString}`,\n);\nconst hiddenToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `hidden.bs.${toastString}`,\n);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  // istanbul ignore else @preserve\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    // istanbul ignore else @preserve\n    if (trigger && trigger.tagName === \"A\") e.preventDefault();\n    self.relatedTarget = trigger;\n    self.show();\n  }\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  // istanbul ignore else @preserve: a solid filter is required\n  if (\n    self && element !== relatedTarget &&\n    !element.contains(relatedTarget as Node)\n  ) {\n    if ([mouseenterEvent, focusinEvent].includes(type)) {\n      Timer.clear(element, toastString);\n    } else {\n      Timer.set(element, () => self.hide(), self.options.delay, toastString);\n    }\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) {\n      addClass(element, fadeClass);\n    } else if (!options.animation && hasClass(element, fadeClass)) {\n      removeClass(element, fadeClass);\n    }\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [\n      ...querySelectorAll(toastToggleSelector, getDocument(element)),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    // istanbul ignore else @preserve\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (!showToastEvent.defaultPrevented) {\n        showToast(this);\n      }\n    }\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    // istanbul ignore else @preserve\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (!hideToastEvent.defaultPrevented) {\n        hideToast(this);\n      }\n    }\n  };\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, it will add the listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { element, triggers, dismiss, options, hide } = this;\n\n    // istanbul ignore else @preserve\n    if (dismiss) {\n      action(dismiss, mouseclickEvent, hide);\n    }\n\n    // istanbul ignore else @preserve\n    if (options.autohide) {\n      [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(\n        (e) => action(element, e, interactiveToastHandler),\n      );\n    }\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) =>\n        action(btn, mouseclickEvent, toastClickHandler)\n      );\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n    this._toggleEventListeners();\n    Timer.clear(element, toastString);\n\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from \"@thednp/shorty\";\n\nimport { addListener } from \"@thednp/event-listener\";\n\nimport Alert from \"../components/alert\";\nimport Button from \"../components/button\";\nimport Carousel from \"../components/carousel\";\nimport Collapse from \"../components/collapse\";\nimport Dropdown from \"../components/dropdown\";\nimport Modal from \"../components/modal\";\nimport Offcanvas from \"../components/offcanvas\";\nimport Popover from \"../components/popover\";\nimport ScrollSpy from \"../components/scrollspy\";\nimport Tab from \"../components/tab\";\nimport Toast from \"../components/toast\";\nimport Tooltip from \"../components/tooltip\";\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\ntype Component =\n  | Alert\n  | Button\n  | Carousel\n  | Collapse\n  | Dropdown\n  | Modal\n  | Offcanvas\n  | Popover\n  | ScrollSpy\n  | Tab\n  | Toast\n  | Tooltip;\n\n[\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n].forEach((c) => componentsList.set(c.prototype.name, c));\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = (\n  callback: (el: HTMLElement) => Component,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach((x) => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) {\n        (instance as T & { dispose: () => void }).dispose();\n      }\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName(\"*\", lookUp)];\n\n  componentsList.forEach((cs) => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter((item) => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach((comp) => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, \"DOMContentLoaded\", () => initCallback(), {\n    once: true,\n  });\n}\n"],"names":["we","Ae","X","Me","ke","De","P","ot","st","ct","ut","dt","ft","gt","Et","bt","ht","Dt","Ot","Lt","Ut","Ve","qt","Je","Xe","Ye","Ze","sn","Jt","Xt","C","W","Yt","A","Zt","S","z","V","An","N","R","e","n","o","s","Q","_t","c","$t","j","te","In","zn","Bn","Fn","Hn","v","i","l","E","L","Rn","T","q","G","d","M","ee","K","g","ce","re","qn","a","u","Jn","B","w","ae","Xn","p","r","f","y","J","Zn","to","eo","no","oo","I","ie","m","so","ue","x","le","de","ro","h","ao","k","pe","lo","F","H","b","me","fo","_a","ge","vo","ho","To","Mo","Do","Ee","Co","be","Io","xo","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","version","BaseComponent","target","config","__publicField","element","isHTMLElement","isString","querySelector","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","self","dispatchEvent","hasClass","removeClass","emulateTransitionEnd","add","action","addListener","removeListener","dismiss","close","mouseclickEvent","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","isActive","getAttribute","addClass","setAttribute","ariaPressed","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","closest","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","arrowKeyNext","keyArrowLeft","keyArrowRight","arrowKeyPrev","carouselDragHandler","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","activateCarouselIndicator","pointermoveEvent","passiveHandler","pointerupEvent","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","touchstartEvent","dragstartEvent","arrow","indicator","keydownEvent","getElementsByClassName","activeIndex","transitionItem","matches","ar","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","isAnimating","clone","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","getCurrentOpenDropdown","currentParent","type","isForm","mousedownEvent","dropdownClickHandler","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","dropdownIntersectionHandler","entry","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","getWindow","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","padStyle","toggleModalDismiss","modalDismissHandler","modalKeyHandler","afterModalHide","relatedTarget","focusElement","toggleFocusTrap","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","modalClickHandler","_b","currentTarget","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","that","callback","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offcanvasTriggerHandler","offCanvasDismiss","selection","visibleTrigger","isOpen","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","toLowerCase","tooltipDefaults","$","O","D","_","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","isFunction","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","offsetParent","ariaDescribedBy","hasTip","disposeTooltipComplete","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","toggleTooltipOpenHandlers","parentModal","parentOffcanvas","titleAtt","tr","mousehoverEvent","focusinEvent","focusoutEvent","isApple","tipComponent","elem","getUID","position","PositionObserver","outTimer","tipContainer","showTooltipEvent","delay","hideTooltipEvent","enabled","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","scrollTarget","itemsLength","isWin","links","getElementsByTagName","scrollHEIGHT","getScrollHeight","href","targetItem","rect","getOffsetHeight","link","clear","item","activate","parents","parentItem","menuItem","parentLink","scrollTop","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toastClickHandler","interactiveToastHandler","isShown","hide","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","cs","init","selector","removeDataAPI","comp"],"mappings":"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","x_google_ignoreList":[0,1,52]}