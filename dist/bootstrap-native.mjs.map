{"version":3,"file":"bootstrap-native.mjs","sources":["../node_modules/.pnpm/@thednp+shorty@https+++codeload.github.com+thednp+shorty+tar.gz+309d581b370f747cb15531ca6c201def3827e05c/node_modules/@thednp/shorty/dist/shorty.mjs","../node_modules/.pnpm/@thednp+event-listener@2.0.8/node_modules/@thednp/event-listener/dist/event-listener.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../node_modules/.pnpm/@thednp+position-observer@https+++codeload.github.com+thednp+position-observer+tar.gz+d693d53_hyk7lpzuqi6vnifksl6nzudy5a/node_modules/@thednp/position-observer/dist/index.mjs","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["const Ce = \"2.0.8\", Le = \"aria-checked\", Me = \"aria-description\", De = \"aria-describedby\", Oe = \"aria-expanded\", xe = \"aria-haspopup\", $ = \"aria-hidden\", ze = \"aria-label\", Ie = \"aria-labelledby\", Pe = \"aria-modal\", Be = \"aria-pressed\", Fe = \"aria-selected\", He = \"aria-valuemin\", Ve = \"aria-valuemax\", Ue = \"aria-valuenow\", We = \"aria-valuetext\", J = \"abort\", X = \"beforeunload\", tt = \"blur\", et = \"change\", nt = \"contextmenu\", V = \"DOMContentLoaded\", ot = \"DOMMouseScroll\", st = \"error\", rt = \"focus\", ct = \"focusin\", at = \"focusout\", it = \"gesturechange\", ut = \"gestureend\", lt = \"gesturestart\", dt = \"keydown\", ft = \"keypress\", pt = \"keyup\", gt = \"load\", mt = \"click\", vt = \"dblclick\", bt = \"mousedown\", Et = \"mouseup\", ht = \"hover\", yt = \"mouseenter\", wt = \"mouseleave\", At = \"mousein\", St = \"mouseout\", Tt = \"mouseover\", kt = \"mousemove\", Nt = \"mousewheel\", Ct = \"move\", Lt = \"orientationchange\", Mt = \"pointercancel\", Dt = \"pointerdown\", Ot = \"pointerleave\", xt = \"pointermove\", zt = \"pointerup\", It = \"readystatechange\", Pt = \"reset\", Bt = \"resize\", Ft = \"select\", Ht = \"selectend\", Vt = \"selectstart\", Ut = \"scroll\", Wt = \"submit\", Rt = \"touchstart\", Qt = \"touchmove\", jt = \"touchcancel\", Gt = \"touchend\", Kt = \"unload\", Re = {\n  DOMContentLoaded: V,\n  DOMMouseScroll: ot,\n  abort: J,\n  beforeunload: X,\n  blur: tt,\n  change: et,\n  click: mt,\n  contextmenu: nt,\n  dblclick: vt,\n  error: st,\n  focus: rt,\n  focusin: ct,\n  focusout: at,\n  gesturechange: it,\n  gestureend: ut,\n  gesturestart: lt,\n  hover: ht,\n  keydown: dt,\n  keypress: ft,\n  keyup: pt,\n  load: gt,\n  mousedown: bt,\n  mousemove: kt,\n  mousein: At,\n  mouseout: St,\n  mouseenter: yt,\n  mouseleave: wt,\n  mouseover: Tt,\n  mouseup: Et,\n  mousewheel: Nt,\n  move: Ct,\n  orientationchange: Lt,\n  pointercancel: Mt,\n  pointerdown: Dt,\n  pointerleave: Ot,\n  pointermove: xt,\n  pointerup: zt,\n  readystatechange: It,\n  reset: Pt,\n  resize: Bt,\n  scroll: Ut,\n  select: Ft,\n  selectend: Ht,\n  selectstart: Vt,\n  submit: Wt,\n  touchcancel: jt,\n  touchend: Gt,\n  touchmove: Qt,\n  touchstart: Rt,\n  unload: Kt\n}, Qe = \"drag\", je = \"dragstart\", Ge = \"dragenter\", Ke = \"dragleave\", qe = \"dragover\", Ze = \"dragend\", Ye = \"loadstart\", _e = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, $e = { down: \"mousedown\", up: \"mouseup\" }, Je = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : [\"mouseover\", \"mouseout\"], Xe = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, tn = { in: \"focusin\", out: \"focusout\" }, qt = 'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"]', en = {\n  Backspace: \"Backspace\",\n  Tab: \"Tab\",\n  Enter: \"Enter\",\n  Shift: \"Shift\",\n  Control: \"Control\",\n  Alt: \"Alt\",\n  Pause: \"Pause\",\n  CapsLock: \"CapsLock\",\n  Escape: \"Escape\",\n  Scape: \"Space\",\n  ArrowLeft: \"ArrowLeft\",\n  ArrowUp: \"ArrowUp\",\n  ArrowRight: \"ArrowRight\",\n  ArrowDown: \"ArrowDown\",\n  Insert: \"Insert\",\n  Delete: \"Delete\",\n  Meta: \"Meta\",\n  ContextMenu: \"ContextMenu\",\n  ScrollLock: \"ScrollLock\"\n}, nn = \"Alt\", on = \"ArrowDown\", sn = \"ArrowUp\", rn = \"ArrowLeft\", cn = \"ArrowRight\", an = \"Backspace\", un = \"CapsLock\", ln = \"Control\", dn = \"Delete\", fn = \"Enter\", pn = \"NumpadEnter\", gn = \"Escape\", mn = \"Insert\", vn = \"Meta\", bn = \"Pause\", En = \"ScrollLock\", hn = \"Shift\", yn = \"Space\", wn = \"Tab\", Zt = \"animationDuration\", Yt = \"animationDelay\", U = \"animationName\", L = \"animationend\", _t = \"transitionDuration\", $t = \"transitionDelay\", M = \"transitionend\", W = \"transitionProperty\", An = \"addEventListener\", Sn = \"removeEventListener\", Tn = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, kn = \"offsetHeight\", Nn = \"offsetWidth\", Cn = \"scrollHeight\", Ln = \"scrollWidth\", Mn = \"tabindex\", Dn = navigator.userAgentData, { userAgent: Jt } = navigator, On = Jt, xn = () => {\n  const t = /iPhone|iPad|iPod|Android/i;\n  return navigator?.userAgentData?.brands.some(\n    (e) => t.test(e.brand)\n  ) || t.test(navigator?.userAgent) || !1;\n}, zn = () => {\n  const t = /(iPhone|iPod|iPad)/;\n  return navigator?.userAgentData?.brands.some(\n    (e) => t.test(e.brand)\n  ) || t.test(\n    navigator?.userAgent\n  ) || !1;\n}, In = () => navigator?.userAgent?.includes(\"Firefox\") || !1, Xt = () => typeof CSS > \"u\" || !CSS.supports ? !1 : CSS.supports(\"-webkit-backdrop-filter\", \"none\"), Pn = () => [\"webkitPerspective\", \"perspective\"].some((t) => t in document.head.style), te = () => {\n}, R = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(\n    e,\n    n,\n    s\n  );\n}, Q = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(\n    e,\n    n,\n    s\n  );\n}, ee = (t, e, n, o) => {\n  const s = (r) => {\n    (r.target === t || r.currentTarget === t) && (n.apply(t, [r]), Q(t, e, s, o));\n  };\n  R(t, e, s, o);\n}, Bn = () => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    ee(document, V, te, e);\n  } catch {\n  }\n  return t;\n}, Fn = () => [\"webkitTransform\", \"transform\"].some((t) => t in document.head.style), Hn = () => \"ontouchstart\" in window || \"msMaxTouchPoints\" in navigator, Vn = () => [\"webkitAnimation\", \"animation\"].some((t) => t in document.head.style), Un = () => [\"webkitTransition\", \"transition\"].some((t) => t in document.head.style), j = (t, e) => t.getAttribute(e), Wn = (t, e, n) => e.getAttributeNS(t, n), ne = (t, e) => t.hasAttribute(e), Rn = (t, e, n) => e.hasAttributeNS(t, n), Qn = (t, e, n) => t.setAttribute(e, n), jn = (t, e, n, o) => e.setAttributeNS(t, n, o), Gn = (t, e) => t.removeAttribute(e), Kn = (t, e, n) => e.removeAttributeNS(t, n), qn = (t, ...e) => {\n  t.classList.add(...e);\n}, Zn = (t, ...e) => {\n  t.classList.remove(...e);\n}, Yn = (t, e) => t.classList.contains(e), { body: _n } = document, { documentElement: $n } = document, { head: Jn } = document, Xn = (t) => Array.from(t), b = (t) => t != null && typeof t == \"object\" || !1, l = (t) => b(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(\n  (e) => t.nodeType === e\n) || !1, u = (t) => l(t) && t.nodeType === 1 || !1, h = /* @__PURE__ */ new Map(), O = {\n  data: h,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (t, e, n) => {\n    if (!u(t)) return;\n    h.has(e) || h.set(e, /* @__PURE__ */ new Map()), h.get(e).set(t, n);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (t) => h.get(t) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (t, e) => {\n    if (!u(t) || !e) return null;\n    const n = O.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (t, e) => {\n    const n = O.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && h.delete(e));\n  }\n}, to = (t, e) => O.get(t, e), eo = (t) => t?.charAt(0).toUpperCase() + t?.slice(1), no = (t) => t?.trim().replace(\n  /(?:^\\w|[A-Z]|\\b\\w)/g,\n  (e, n) => n === 0 ? e.toLowerCase() : e.toUpperCase()\n).replace(/\\s+/g, \"\"), k = (t) => typeof t == \"string\" || !1, G = (t) => b(t) && t.constructor.name === \"Window\" || !1, K = (t) => l(t) && t.nodeType === 9 || !1, d = (t) => K(t) ? t : l(t) ? t.ownerDocument : G(t) ? t.document : globalThis.document, N = (t, ...e) => Object.assign(t, ...e), oe = (t) => {\n  if (!t) return;\n  if (k(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = oe(e);\n  if (!n) return;\n  const o = { ...t };\n  return delete o.tagName, N(n, o);\n}, se = (t, e) => {\n  if (!t || !e) return;\n  if (k(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = se(t, n);\n  if (!o) return;\n  const s = { ...e };\n  return delete s.tagName, N(o, s);\n}, q = (t, e) => t.dispatchEvent(e), oo = (t, e, n) => n.indexOf(t) === e, g = (t, e, n) => {\n  const o = getComputedStyle(t, n), s = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return o.getPropertyValue(s);\n}, re = (t) => {\n  const e = g(t, U), n = g(t, Yt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, ce = (t) => {\n  const e = g(t, U), n = g(t, Zt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, so = (t, e) => {\n  let n = 0;\n  const o = new Event(L), s = ce(t), r = re(t);\n  if (s) {\n    const a = (i) => {\n      i.target === t && (e.apply(t, [i]), t.removeEventListener(L, a), n = 1);\n    };\n    t.addEventListener(L, a), setTimeout(() => {\n      n || q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, ae = (t) => {\n  const e = g(t, W), n = g(t, $t), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, ie = (t) => {\n  const e = g(t, W), n = g(t, _t), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, ro = (t, e) => {\n  let n = 0;\n  const o = new Event(M), s = ie(t), r = ae(t);\n  if (s) {\n    const a = (i) => {\n      i.target === t && (e.apply(t, [i]), t.removeEventListener(M, a), n = 1);\n    };\n    t.addEventListener(M, a), setTimeout(() => {\n      n || q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, co = (t) => Float32Array.from(Array.from(t)), ao = (t) => Float64Array.from(Array.from(t)), io = (t, e) => t.focus(e), uo = (t) => t?.trim().replace(/([a-z])([A-Z])/g, \"$1-$2\").replace(/\\s+/g, \"-\").toLowerCase(), P = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, T = (t) => Object.entries(t), ue = (t) => t.toLowerCase(), lo = (t, e, n, o) => {\n  if (!u(t)) return e;\n  const s = { ...n }, r = { ...t.dataset }, a = { ...e }, i = {}, f = \"title\";\n  return T(r).forEach(([c, p]) => {\n    const E = o && typeof c == \"string\" && c.includes(o) ? c.replace(o, \"\").replace(\n      /[A-Z]/g,\n      (C) => ue(C)\n    ) : c;\n    i[E] = P(p);\n  }), T(s).forEach(([c, p]) => {\n    s[c] = P(p);\n  }), T(e).forEach(([c, p]) => {\n    c in s ? a[c] = s[c] : c in i ? a[c] = i[c] : a[c] = c === f ? j(t, f) : p;\n  }), a;\n}, fo = (t, e) => b(t) && (Object.hasOwn(t, e) || e in t), po = (t) => Object.keys(t), go = (t) => Object.values(t), mo = (t) => Object.fromEntries(t), vo = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return b(e) && N(n, e), n;\n}, bo = { passive: !0 }, Eo = (t) => t.offsetHeight, ho = (t, e) => {\n  T(e).forEach(([n, o]) => {\n    if (o && k(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, N(t.style, s);\n    }\n  });\n}, x = (t) => b(t) && t.constructor.name === \"Map\" || !1, le = (t) => typeof t == \"number\" || !1, v = /* @__PURE__ */ new Map(), yo = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (t, e, n, o) => {\n    u(t) && (o && o.length ? (v.has(t) || v.set(t, /* @__PURE__ */ new Map()), v.get(t).set(o, setTimeout(e, n))) : v.set(t, setTimeout(e, n)));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (t, e) => {\n    if (!u(t)) return null;\n    const n = v.get(t);\n    return e && n && x(n) ? n.get(e) || null : le(n) ? n : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (t, e) => {\n    if (!u(t)) return;\n    const n = v.get(t);\n    e && e.length && x(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && v.delete(t)) : (clearTimeout(n), v.delete(t));\n  }\n}, wo = (t) => t.toUpperCase(), de = (t, e) => (l(e) ? e : d()).querySelectorAll(t), z = /* @__PURE__ */ new Map();\nfunction fe(t) {\n  const { shiftKey: e, code: n } = t, o = d(this), s = [\n    ...de(qt, this)\n  ].filter(\n    (i) => !ne(i, \"disabled\") && !j(i, $)\n  );\n  if (!s.length) return;\n  const r = s[0], a = s[s.length - 1];\n  n === \"Tab\" && (e && o.activeElement === r ? (a.focus(), t.preventDefault()) : !e && o.activeElement === a && (r.focus(), t.preventDefault()));\n}\nconst pe = (t) => z.has(t) === !0, Ao = (t) => {\n  const e = pe(t);\n  (e ? Q : R)(t, \"keydown\", fe), e ? z.delete(t) : z.set(t, !0);\n}, m = (t) => u(t) && \"offsetWidth\" in t || !1, w = (t, e) => {\n  const { width: n, height: o, top: s, right: r, bottom: a, left: i } = t.getBoundingClientRect();\n  let f = 1, c = 1;\n  if (e && m(t)) {\n    const { offsetWidth: p, offsetHeight: E } = t;\n    f = p > 0 ? Math.round(n) / p : 1, c = E > 0 ? Math.round(o) / E : 1;\n  }\n  return {\n    width: n / f,\n    height: o / c,\n    top: s / c,\n    right: r / f,\n    bottom: a / c,\n    left: i / f,\n    x: i / f,\n    y: s / c\n  };\n}, So = (t) => d(t).body, S = (t) => d(t).documentElement, To = (t) => d(t).head, ge = (t) => l(t) ? (t.nodeName || \"\").toLowerCase() : \"#document\", ko = (t) => {\n  const e = G(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, me = (t) => l(t) && t.constructor.name === \"ShadowRoot\" || !1, A = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || l(t) && t.parentNode || me(t) && t.host || S(t), ve = (t) => t ? K(t) ? t.defaultView : l(t) ? t?.ownerDocument?.defaultView : t : window, be = (t) => l(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, Ee = (t, e) => t.matches(e), D = (t) => g(t, \"position\") === \"static\", he = (t) => g(t, \"position\") === \"fixed\", Z = (t) => [\":popover-open\", \":modal\"].some((e) => {\n  try {\n    return Ee(t, e);\n  } catch {\n    return !1;\n  }\n}), Y = (t) => {\n  const e = Xt(), n = u(t) ? getComputedStyle(t) : t;\n  return n.transform !== \"none\" || n.perspective !== \"none\" || (n.containerType ? n.containerType !== \"normal\" : !1) || !e && (n.backdropFilter ? n.backdropFilter !== \"none\" : !1) || !e && (n.filter ? n.filter !== \"none\" : !1) || [\"transform\", \"perspective\", \"filter\"].some(\n    (o) => (n.willChange || \"\").includes(o)\n  ) || [\"paint\", \"layout\", \"strict\", \"content\"].some(\n    (o) => (n.contain || \"\").includes(o)\n  );\n}, ye = (t) => {\n  let e = A(t);\n  for (; u(e) && !I(e); ) {\n    if (Y(e))\n      return e;\n    if (Z(e))\n      return null;\n    e = A(e);\n  }\n  return null;\n}, I = (t) => [\"html\", \"body\", \"#document\"].includes(ge(t)), B = (t) => {\n  if (!m(t) || he(t))\n    return null;\n  let e = t.offsetParent;\n  return S(t) === e && (e = e.ownerDocument.body), e;\n}, No = (t) => {\n  const e = ve(t);\n  if (!l(t) || Z(t))\n    return e;\n  if (!m(t)) {\n    let o = A(t);\n    for (; o && !I(o); ) {\n      if (u(o) && !D(o))\n        return o;\n      o = A(o);\n    }\n    return e;\n  }\n  let n = B(t);\n  for (; n && be(n) && D(n); )\n    n = B(n);\n  return n && I(n) && D(n) && !Y(n) ? e : n || ye(t) || e;\n}, we = (t) => {\n  if (!m(t)) return !1;\n  const { width: e, height: n } = w(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, Co = (t, e, n) => {\n  const o = m(e), s = w(\n    t,\n    o && we(e)\n  ), r = { x: 0, y: 0 };\n  if (o) {\n    const a = w(e, !0);\n    r.x = a.x + e.clientLeft, r.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - r.x,\n    y: s.top + n.y - r.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet F = 0, H = 0;\nconst y = /* @__PURE__ */ new Map(), Ae = (t, e) => {\n  let n = e ? F : H;\n  if (e) {\n    const o = Ae(t), s = y.get(o) || /* @__PURE__ */ new Map();\n    y.has(o) || y.set(o, s), x(s) && !s.has(e) ? (s.set(e, n), F += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    y.has(o) ? n = y.get(o) : (y.set(o, n), H += 1);\n  }\n  return n;\n}, Lo = (t) => {\n  const e = [\"HTML\", \"BODY\"];\n  let { parentNode: n } = t;\n  if (!m(n))\n    for (; n && !e.includes(n.nodeName) && (n = A(n), !m(n)); )\n      ;\n  const {\n    offsetLeft: o,\n    offsetTop: s,\n    offsetParent: r\n  } = n, { top: a, left: i } = n.getBoundingClientRect(), { top: f, left: c, width: p, height: E } = t.getBoundingClientRect(), C = s + (f - a), _ = o + (c - i);\n  return {\n    offsetTop: C,\n    offsetLeft: _,\n    offsetWidth: p,\n    offsetHeight: E,\n    offsetParent: r\n  };\n}, Se = (t) => Array.isArray(t) || !1, Mo = (t) => l(t) && t.nodeName === \"CANVAS\" || !1, Te = (t) => m(t) && !!t.shadowRoot || !1, Do = (t) => {\n  if (!l(t)) return !1;\n  const { top: e, bottom: n } = w(t), { clientHeight: o } = S(t);\n  return e <= o && n >= 0;\n}, Oo = (t) => {\n  if (!u(t)) return !1;\n  const { clientWidth: e, clientHeight: n } = S(t), { top: o, left: s, bottom: r, right: a } = w(t, !0);\n  return o >= 0 && s >= 0 && r <= n && a <= e;\n}, xo = (t) => Se(t) && t.every(u) || !1, zo = (t) => typeof t == \"function\" || !1, Io = (t) => b(t) && t.constructor.name === \"HTMLCollection\" || !1, Po = (t) => m(t) && t.tagName === \"IMG\" || !1, Bo = (t) => {\n  if (!k(t)) return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, Fo = (t) => b(t) && t.constructor.name === \"WeakMap\" || !1, Ho = (t) => l(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some(\n  (e) => t.constructor.name.includes(e)\n) || !1, Vo = (t) => b(t) && t.constructor.name === \"NodeList\" || !1, Uo = (t) => S(t).dir === \"rtl\", Wo = (t) => l(t) && t.constructor.name.includes(\"SVG\") || !1, ke = (t, e) => !t || !e ? null : t.closest(e) || ke(t.getRootNode().host, e) || null, Ro = (t, e) => u(t) ? t : (u(e) ? e : d()).querySelector(t), Ne = (t, e) => (l(e) ? e : d()).getElementsByTagName(\n  t\n), Qo = (t) => [...Ne(\"*\", t)].filter(Te), jo = (t, e) => d(e).getElementById(t), Go = (t, e) => (e && l(e) ? e : d()).getElementsByClassName(\n  t\n);\nexport {\n  Xn as ArrayFrom,\n  V as DOMContentLoadedEvent,\n  ot as DOMMouseScrollEvent,\n  O as Data,\n  co as Float32ArrayFrom,\n  ao as Float64ArrayFrom,\n  N as ObjectAssign,\n  T as ObjectEntries,\n  mo as ObjectFromEntries,\n  fo as ObjectHasOwn,\n  po as ObjectKeys,\n  go as ObjectValues,\n  yo as Timer,\n  J as abortEvent,\n  qn as addClass,\n  An as addEventListener,\n  Yt as animationDelay,\n  Zt as animationDuration,\n  L as animationEndEvent,\n  U as animationName,\n  Le as ariaChecked,\n  De as ariaDescribedBy,\n  Me as ariaDescription,\n  Oe as ariaExpanded,\n  xe as ariaHasPopup,\n  $ as ariaHidden,\n  ze as ariaLabel,\n  Ie as ariaLabelledBy,\n  Pe as ariaModal,\n  Be as ariaPressed,\n  Fe as ariaSelected,\n  Ve as ariaValueMax,\n  He as ariaValueMin,\n  Ue as ariaValueNow,\n  We as ariaValueText,\n  X as beforeunloadEvent,\n  Tn as bezierEasings,\n  tt as blurEvent,\n  no as camelCase,\n  eo as capitalize,\n  et as changeEvent,\n  ke as closest,\n  nt as contextmenuEvent,\n  vo as createCustomEvent,\n  oe as createElement,\n  se as createElementNS,\n  q as dispatchEvent,\n  oo as distinct,\n  _n as documentBody,\n  $n as documentElement,\n  Jn as documentHead,\n  Qe as dragEvent,\n  Ze as dragendEvent,\n  Ge as dragenterEvent,\n  Ke as dragleaveEvent,\n  qe as dragoverEvent,\n  je as dragstartEvent,\n  so as emulateAnimationEnd,\n  ro as emulateTransitionEnd,\n  st as errorEvent,\n  io as focus,\n  rt as focusEvent,\n  tn as focusEvents,\n  qt as focusableSelector,\n  ct as focusinEvent,\n  at as focusoutEvent,\n  it as gesturechangeEvent,\n  ut as gestureendEvent,\n  lt as gesturestartEvent,\n  j as getAttribute,\n  Wn as getAttributeNS,\n  w as getBoundingClientRect,\n  Qo as getCustomElements,\n  d as getDocument,\n  So as getDocumentBody,\n  S as getDocumentElement,\n  To as getDocumentHead,\n  re as getElementAnimationDelay,\n  ce as getElementAnimationDuration,\n  jo as getElementById,\n  g as getElementStyle,\n  ae as getElementTransitionDelay,\n  ie as getElementTransitionDuration,\n  Go as getElementsByClassName,\n  Ne as getElementsByTagName,\n  to as getInstance,\n  ge as getNodeName,\n  ko as getNodeScroll,\n  No as getOffsetParent,\n  A as getParentNode,\n  Co as getRectRelativeToOffsetParent,\n  Lo as getSVGOffset,\n  Ae as getUID,\n  ve as getWindow,\n  ne as hasAttribute,\n  Rn as hasAttributeNS,\n  Yn as hasClass,\n  pe as hasFocusTrap,\n  zn as isApple,\n  Se as isArray,\n  Mo as isCanvas,\n  Te as isCustomElement,\n  K as isDocument,\n  u as isElement,\n  Do as isElementInScrollRange,\n  Oo as isElementInViewport,\n  xo as isElementsArray,\n  In as isFirefox,\n  zo as isFunction,\n  Io as isHTMLCollection,\n  m as isHTMLElement,\n  Po as isHTMLImageElement,\n  Bo as isJSON,\n  x as isMap,\n  Ho as isMedia,\n  xn as isMobile,\n  l as isNode,\n  Vo as isNodeList,\n  le as isNumber,\n  b as isObject,\n  Uo as isRTL,\n  Wo as isSVGElement,\n  we as isScaledElement,\n  me as isShadowRoot,\n  k as isString,\n  be as isTableElement,\n  Fo as isWeakMap,\n  Xt as isWebKit,\n  G as isWindow,\n  uo as kebabCase,\n  nn as keyAlt,\n  on as keyArrowDown,\n  rn as keyArrowLeft,\n  cn as keyArrowRight,\n  sn as keyArrowUp,\n  an as keyBackspace,\n  un as keyCapsLock,\n  ln as keyControl,\n  dn as keyDelete,\n  fn as keyEnter,\n  gn as keyEscape,\n  mn as keyInsert,\n  vn as keyMeta,\n  pn as keyNumpadEnter,\n  bn as keyPause,\n  En as keyScrollLock,\n  hn as keyShift,\n  yn as keySpace,\n  wn as keyTab,\n  en as keyboardEventKeys,\n  dt as keydownEvent,\n  ft as keypressEvent,\n  pt as keyupEvent,\n  gt as loadEvent,\n  Ye as loadstartEvent,\n  Ee as matches,\n  $e as mouseClickEvents,\n  Je as mouseHoverEvents,\n  _e as mouseSwipeEvents,\n  mt as mouseclickEvent,\n  vt as mousedblclickEvent,\n  bt as mousedownEvent,\n  yt as mouseenterEvent,\n  ht as mousehoverEvent,\n  At as mouseinEvent,\n  wt as mouseleaveEvent,\n  kt as mousemoveEvent,\n  St as mouseoutEvent,\n  Tt as mouseoverEvent,\n  Et as mouseupEvent,\n  Nt as mousewheelEvent,\n  Ct as moveEvent,\n  Re as nativeEvents,\n  te as noop,\n  lo as normalizeOptions,\n  P as normalizeValue,\n  Q as off,\n  kn as offsetHeight,\n  Nn as offsetWidth,\n  R as on,\n  ee as one,\n  Lt as orientationchangeEvent,\n  bo as passiveHandler,\n  Mt as pointercancelEvent,\n  Dt as pointerdownEvent,\n  Ot as pointerleaveEvent,\n  xt as pointermoveEvent,\n  zt as pointerupEvent,\n  Ro as querySelector,\n  de as querySelectorAll,\n  It as readystatechangeEvent,\n  Eo as reflow,\n  Gn as removeAttribute,\n  Kn as removeAttributeNS,\n  Zn as removeClass,\n  Sn as removeEventListener,\n  Pt as resetEvent,\n  Bt as resizeEvent,\n  Ut as scrollEvent,\n  Cn as scrollHeight,\n  Ln as scrollWidth,\n  Ft as selectEvent,\n  Ht as selectendEvent,\n  Vt as selectstartEvent,\n  Qn as setAttribute,\n  jn as setAttributeNS,\n  ho as setElementStyle,\n  Wt as submitEvent,\n  Pn as support3DTransform,\n  Vn as supportAnimation,\n  Bn as supportPassive,\n  Hn as supportTouch,\n  Fn as supportTransform,\n  Un as supportTransition,\n  Mn as tabindex,\n  ue as toLowerCase,\n  wo as toUpperCase,\n  Ao as toggleFocusTrap,\n  Xe as touchEvents,\n  jt as touchcancelEvent,\n  Gt as touchendEvent,\n  Qt as touchmoveEvent,\n  Rt as touchstartEvent,\n  $t as transitionDelay,\n  _t as transitionDuration,\n  M as transitionEndEvent,\n  W as transitionProperty,\n  Kt as unloadEvent,\n  On as userAgent,\n  Dn as userAgentData,\n  Ce as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","const g = \"2.0.8\", e = {}, f = (t) => {\n  const { type: n, currentTarget: c } = t;\n  e[n].forEach((a, s) => {\n    c === s && a.forEach((o, i) => {\n      i.apply(s, [t]), typeof o == \"object\" && o.once && r(s, n, i, o);\n    });\n  });\n}, E = (t, n, c, a) => {\n  e[n] || (e[n] = /* @__PURE__ */ new Map());\n  const s = e[n];\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(\n    t\n  ), { size: i } = o;\n  o.set(c, a), i || t.addEventListener(\n    n,\n    f,\n    a\n  );\n}, r = (t, n, c, a) => {\n  const s = e[n], o = s && s.get(t), i = o && o.get(c), d = i !== void 0 ? i : a;\n  o && o.has(c) && o.delete(c), s && (!o || !o.size) && s.delete(t), (!s || !s.size) && delete e[n], (!o || !o.size) && t.removeEventListener(\n    n,\n    f,\n    d\n  );\n}, M = E, p = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  p as off,\n  M as on,\n  e as registry,\n  r as removeListener,\n  g as version\n};\n//# sourceMappingURL=event-listener.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = \"fade\";\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = \"show\";\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = \"data-bs-dismiss\";\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = \"alert\";\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = \"Alert\";\nexport default alertComponent;\n","import { version } from \"../package.json\";\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport {\n  Data,\n  isElement,\n  isString,\n  normalizeOptions,\n  ObjectKeys,\n  querySelector,\n} from \"@thednp/shorty\";\n\nimport type { BaseOptions } from \"../interface/baseComponent\";\nimport Version from \"../version\";\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: Element;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `Element` or selector string\n   * @param config component instance options\n   */\n  constructor(target: Element | string, config?: BaseOptions) {\n    let element: Element | null;\n\n    try {\n      if (isElement(target)) {\n        element = target as Element;\n      } else if (isString(target)) {\n        element = querySelector(target);\n        // istanbul ignore else @preserve\n        if (!element) throw Error(`\"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`your target is not an instance of HTMLElement.`);\n      }\n    } catch (e) {\n      throw Error(`${this.name} Error: ${(e as Error).message}`);\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    /* istanbul ignore else @preserve */\n    if (prevInstance) {\n      // remove previously attached event listeners\n      // to avoid memory leaks\n      prevInstance._toggleEventListeners();\n    }\n\n    this.element = element;\n    this.options = this.defaults && ObjectKeys(this.defaults).length\n      ? normalizeOptions(element, this.defaults, config || {}, \"bs\")\n      // istanbul ignore next @preserve\n      : {};\n\n    Data.set(element, this.name, this);\n  }\n\n  // istanbul ignore next @preserve\n  get version() {\n    return Version;\n  }\n\n  // istanbul ignore next @preserve\n  get name() {\n    return \"BaseComponent\";\n  }\n\n  // istanbul ignore next @preserve\n  get defaults() {\n    return {};\n  }\n\n  /** just to have something to extend from */\n  // istanbul ignore next @preserve coverage wise this isn't important\n  _toggleEventListeners = () => {\n    // do something to please linters\n  };\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove<typeof this>(this.element, this.name);\n    ObjectKeys(this).forEach((prop) => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  querySelector,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport alertString from \"../strings/alertString\";\nimport alertComponent from \"../strings/alertComponent\";\nimport type { AlertEvent } from \"../interface/alert\";\n\nimport BaseComponent from \"./base-component\";\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n */\nconst getAlertInstance = (element: Element) =>\n  getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = (element: Element) => new Alert(element);\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<Record<string, never>, AlertEvent>(\n  `close.bs.${alertString}`,\n);\nconst closedAlertEvent = createCustomEvent<Record<string, never>, AlertEvent>(\n  `closed.bs.${alertString}`,\n);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (self: Alert) => {\n  const { element } = self;\n  dispatchEvent(element, closedAlertEvent);\n\n  self._toggleEventListeners();\n  self.dispose();\n  element.remove();\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: Element | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector<HTMLElement>(\n      alertDismissSelector,\n      this.element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    // istanbul ignore else @preserve\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n\n      if (!closeAlertEvent.defaultPrevented) {\n        removeClass(element, showClass);\n\n        if (hasClass(element, fadeClass)) {\n          emulateTransitionEnd(element, () => alertTransitionEnd(this));\n        } else alertTransitionEnd(this);\n      }\n    }\n  };\n  /**\n   * Toggle on / off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { dismiss, close } = this;\n    // istanbul ignore else @preserve\n    if (dismiss) action(dismiss, mouseclickEvent, close);\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = \"active\";\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = \"data-bs-toggle\";\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = \"button\";\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = \"Button\";\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  addClass,\n  ariaPressed,\n  getAttribute,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  removeClass,\n  setAttribute,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport activeClass from \"../strings/activeClass\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport buttonString from \"../strings/buttonString\";\nimport buttonComponent from \"../strings/buttonComponent\";\n\nimport BaseComponent from \"./base-component\";\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: Element) =>\n  getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: Element) => new Button(element);\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  declare isActive: boolean;\n  declare element: HTMLElement;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: Element | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e?: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, \"disabled\") && !getAttribute(element, \"disabled\")) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? \"false\" : \"true\");\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  // BUTTON PRIVATE METHOD\n  // =====================\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, this.toggle);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = \"data-bs-target\";\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = \"carousel\";\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = \"Carousel\";\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = \"data-bs-parent\";\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = \"data-bs-container\";\nexport default dataBsContainer;\n","import {\n  closest,\n  getAttribute,\n  getDocument,\n  querySelector,\n} from \"@thednp/shorty\";\n\nimport dataBsTarget from \"../strings/dataBsTarget\";\nimport dataBsParent from \"../strings/dataBsParent\";\nimport dataBsContainer from \"../strings/dataBsContainer\";\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = <T extends Element = HTMLElement>(element: T) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, \"href\"];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map((att) => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent\n          ? closest<T>(element, attValue)\n          : querySelector<T>(attValue, doc);\n      }\n      return null;\n    })\n    .filter((x) => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  addClass,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  DragEvent,\n  dragstartEvent,\n  emulateTransitionEnd,\n  getAttribute,\n  getDocument,\n  getElementsByClassName,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  isElementInScrollRange,\n  isHTMLElement,\n  isRTL,\n  keyArrowLeft,\n  keyArrowRight,\n  keydownEvent,\n  matches,\n  mouseclickEvent,\n  mouseenterEvent,\n  mouseleaveEvent,\n  ObjectAssign,\n  passiveHandler,\n  pointerdownEvent,\n  pointermoveEvent,\n  pointerupEvent,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  Timer,\n  TouchEvent,\n  touchstartEvent,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport activeClass from \"../strings/activeClass\";\nimport dataBsTarget from \"../strings/dataBsTarget\";\nimport carouselString from \"../strings/carouselString\";\nimport carouselComponent from \"../strings/carouselComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { CarouselEvent, CarouselOptions } from \"../interface/carousel\";\n\ntype CarouselEventProperties = {\n  relatedTarget: EventTarget & HTMLElement;\n  from: number;\n  to: number;\n  direction: \"left\" | \"right\";\n};\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = \"data-bs-slide-to\";\nconst dataBsSlide = \"data-bs-slide\";\nconst pausedClass = \"paused\";\n\nconst carouselDefaults: CarouselOptions = {\n  pause: \"hover\",\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: Element) =>\n  getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: Element) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<\n  CarouselEventProperties,\n  CarouselEvent\n>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<\n  CarouselEventProperties,\n  CarouselEvent\n>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  // istanbul ignore else @preserve\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === \"left\" ? \"next\" : \"prev\";\n    const directionClass = direction === \"left\" ? \"start\" : \"end\";\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (\n      self.cycle && !getDocument(element).hidden && options.interval &&\n      !self.isPaused\n    ) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  const self = getCarouselInstance(this);\n  // istanbul ignore else @preserve\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  const self = getCarouselInstance(this);\n  // istanbul ignore else @preserve\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) || getTargetElement(this);\n  const self = getCarouselInstance(element as HTMLElement);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating) {\n    const newIndex = +(\n      getAttribute(this, dataBsSlideTo) ||\n      // istanbul ignore next @preserve\n      0\n    );\n\n    // istanbul ignore else @preserve\n    if (\n      this &&\n      !hasClass(this, activeClass) && // event target is not active\n      !Number.isNaN(newIndex)\n    ) {\n      // AND has the specific attribute\n      self.to(newIndex); // do the slide\n    }\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) ||\n    (getTargetElement(this));\n  const self = getCarouselInstance(element as HTMLElement);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating) {\n    const orientation = getAttribute(this, dataBsSlide);\n\n    // istanbul ignore else @preserve\n    if (orientation === \"next\") {\n      self.next();\n    } else if (orientation === \"prev\") {\n      self.prev();\n    }\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = (\n  { code, target }: KeyboardEvent & { target: Node },\n) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll<HTMLElement>(carouselSelector, doc)]\n    .filter((x) => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore next @preserve\n  if (self && !self.isAnimating && !/textarea|input/i.test(target.nodeName)) {\n    const RTL = isRTL(element);\n    const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n    const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n    // istanbul ignore else @preserve\n    if (code === arrowKeyPrev) self.prev();\n    else if (code === arrowKeyNext) self.next();\n  }\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler<T extends HTMLElement>(\n  this: T,\n  e: Event & (DragEvent<T> | TouchEvent<T>),\n) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  // istanbul ignore next @preserve\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) ||\n      !self.controls.includes(target))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating && !self.isTouch) {\n    // filter pointer event on controls & indicators\n    const { controls, indicators } = self;\n    // istanbul ignore else @preserve\n    if (\n      ![...controls, ...indicators].every((el) =>\n        el === target || el.contains(target as Node)\n      )\n    ) {\n      startX = e.pageX;\n\n      // istanbul ignore else @preserve\n      if (this.contains(target as Node)) {\n        self.isTouch = true;\n        toggleCarouselTouchHandlers(self, true);\n      }\n    }\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map((c) => getCarouselInstance(c) as Carousel)\n    .find((i) => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  // istanbul ignore else @preserve\n  if (self) {\n    const { element, index } = self;\n    const RTL = isRTL(element);\n    endX = e.pageX;\n\n    self.isTouch = false;\n    toggleCarouselTouchHandlers(self);\n\n    if (\n      !doc.getSelection()?.toString().length &&\n      element.contains(target as HTMLElement) &&\n      Math.abs(startX - endX) > 120\n    ) {\n      // determine next index to slide to\n      // istanbul ignore else @preserve\n      if (currentX < startX) {\n        self.to(index + (RTL ? -1 : 1));\n      } else if (currentX > startX) {\n        self.to(index + (RTL ? 1 : -1));\n      }\n    }\n\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n  }\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach((x) => removeClass(x, activeClass));\n\n  // istanbul ignore else @preserve\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(\n    getDocument(element),\n    pointermoveEvent,\n    carouselPointerMoveHandler,\n    passiveHandler,\n  );\n  action(\n    getDocument(element),\n    pointerupEvent,\n    carouselPointerUpHandler,\n    passiveHandler,\n  );\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare element: HTMLElement;\n  declare options: CarouselOptions;\n  declare direction: \"right\" | \"left\";\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: Element | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? \"right\" : \"left\";\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length >= 2) {\n      const activeIndex = getActiveIndex(this);\n      // recover item from disposed instance\n      const transitionItem = [...slides].find((s) =>\n        matches(s, `.${carouselItem}-next,.${carouselItem}-next`)\n      );\n      this.index = activeIndex;\n\n      // external controls must be within same document context\n      const doc = getDocument(element);\n\n      this.controls = [\n        ...querySelectorAll<HTMLElement>(`[${dataBsSlide}]`, element),\n        ...querySelectorAll<HTMLElement>(\n          `[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`,\n          doc,\n        ),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      this.indicator = querySelector<HTMLElement>(\n        `.${carouselString}-indicators`,\n        element,\n      );\n\n      // a LIVE collection is preffered\n      this.indicators = [\n        ...(this.indicator\n          ? querySelectorAll<HTMLElement>(`[${dataBsSlideTo}]`, this.indicator)\n          /* istanbul ignore next @preserve */ : []),\n        ...querySelectorAll<HTMLElement>(\n          `[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`,\n          doc,\n        ),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      // set JavaScript and DATA API options\n      const { options } = this;\n\n      // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n      this.options.interval = options.interval === true\n        ? carouselDefaults.interval\n        : options.interval;\n\n      // set first slide active if none\n      // istanbul ignore next @preserve - impossible to test\n      if (transitionItem) {\n        this.index = [...slides].indexOf(transitionItem);\n      } else if (activeIndex < 0) {\n        this.index = 0;\n        addClass(slides[0], activeClass);\n        if (this.indicators.length) activateCarouselIndicator(this, 0);\n      }\n\n      // istanbul ignore else @preserve\n      if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n      // attach event handlers\n      this._toggleEventListeners(true);\n\n      // start to cycle if interval is set\n      if (options.interval) this.cycle();\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(\n      `.${carouselItem}-next,.${carouselItem}-prev`,\n      this.element,\n    ) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        // istanbul ignore else @preserve\n        if (\n          this.element && !this.isPaused && !this.isTouch &&\n          isElementInScrollRange(element)\n        ) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    // istanbul ignore else @preserve\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    // istanbul ignore else @preserve\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    // istanbul ignore else @preserve\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (\n      !this.isAnimating && activeItem !== next &&\n      !Timer.get(element, dataBsSlide)\n    ) {\n      // determine transition direction\n      // istanbul ignore else @preserve\n      if (\n        activeItem < next || (activeItem === 0 && next === slides.length - 1)\n      ) {\n        this.direction = RTL ? \"right\" : \"left\"; // next\n      } else if (\n        activeItem > next || (activeItem === slides.length - 1 && next === 0)\n      ) {\n        this.direction = RTL ? \"left\" : \"right\"; // prev\n      }\n      const { direction } = this;\n\n      // find the right next index\n      if (next < 0) {\n        next = slides.length - 1;\n      } else if (next >= slides.length) {\n        next = 0;\n      }\n\n      // orientation, class name, eventProperties\n      const orientation = direction === \"left\" ? \"next\" : \"prev\";\n      const directionClass = direction === \"left\" ? \"start\" : \"end\";\n\n      const eventProperties = {\n        relatedTarget: slides[next],\n        from: activeItem,\n        to: next,\n        direction,\n      };\n\n      // update event properties\n      ObjectAssign(carouselSlideEvent, eventProperties);\n      ObjectAssign(carouselSlidEvent, eventProperties);\n\n      // discontinue when prevented\n      dispatchEvent(element, carouselSlideEvent);\n      if (!carouselSlideEvent.defaultPrevented) {\n        // update index\n        this.index = next;\n        activateCarouselIndicator(this, next);\n\n        if (\n          getElementTransitionDuration(slides[next]) &&\n          hasClass(element, \"slide\")\n        ) {\n          Timer.set(\n            element,\n            () => {\n              addClass(slides[next], `${carouselItem}-${orientation}`);\n              reflow(slides[next]);\n              addClass(slides[next], `${carouselItem}-${directionClass}`);\n              addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n              // the instance might get diposed mid-animation\n              emulateTransitionEnd(\n                slides[next],\n                () =>\n                  this.slides && this.slides.length &&\n                  carouselTransitionEndHandler(this),\n              );\n            },\n            0,\n            dataBsSlide,\n          );\n        } else {\n          addClass(slides[next], activeClass);\n          removeClass(slides[activeItem], activeClass);\n\n          Timer.set(\n            element,\n            () => {\n              Timer.clear(element, dataBsSlide);\n              // check for element, might have been disposed\n              // istanbul ignore else @preserve\n              if (element && options.interval && !this.isPaused) {\n                this.cycle();\n              }\n\n              dispatchEvent(element, carouselSlidEvent);\n            },\n            0,\n            dataBsSlide,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles all event listeners for the `Carousel` instance.\n   *\n   * @param add when `TRUE` event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const { element, options, slides, controls, indicators } = this;\n    const { touch, pause, interval, keyboard } = options;\n    const action = add ? addListener : removeListener;\n\n    if (pause && interval) {\n      action(element, mouseenterEvent, carouselPauseHandler);\n      action(element, mouseleaveEvent, carouselResumeHandler);\n    }\n\n    if (touch && slides.length > 2) {\n      action(\n        element,\n        pointerdownEvent,\n        carouselPointerDownHandler,\n        passiveHandler,\n      );\n      action(element, touchstartEvent, carouselDragHandler, { passive: false });\n      action(element, dragstartEvent, carouselDragHandler, { passive: false });\n    }\n\n    // istanbul ignore else @preserve\n    if (controls.length) {\n      controls.forEach((arrow) => {\n        // istanbul ignore else @preserve\n        if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler);\n      });\n    }\n\n    // istanbul ignore else @preserve\n    if (indicators.length) {\n      indicators.forEach((indicator) => {\n        action(indicator, mouseclickEvent, carouselIndicatorHandler);\n      });\n    }\n\n    if (keyboard) {\n      action(getDocument(element), keydownEvent, carouselKeyHandler);\n    }\n  };\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    this._toggleEventListeners();\n    super.dispose();\n\n    // istanbul ignore next @preserve - impossible to test in playwright\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = \"collapsing\";\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = \"collapse\";\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = \"Collapse\";\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getDocument,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isString,\n  mouseclickEvent,\n  MouseEvent,\n  noop,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport collapsingClass from \"../strings/collapsingClass\";\nimport showClass from \"../strings/showClass\";\nimport collapseString from \"../strings/collapseString\";\nimport collapseComponent from \"../strings/collapseComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { CollapseEvent, CollapseOptions } from \"../interface/collapse\";\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: Element) =>\n  getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: Element) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach((btn) => setAttribute(btn, ariaExpanded, \"true\"));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: \"\" });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element as HTMLElement);\n    setElementStyle(element, { height: \"0px\" });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      // istanbul ignore else @preserve\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach((btn) => setAttribute(btn, ariaExpanded, \"false\"));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: \"\" });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target &&\n    closest(target, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  // istanbul ignore else @preserve\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === \"A\") e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare element: HTMLElement;\n  declare options: CollapseOptions;\n  declare parent: Element | null;\n  declare triggers: Element[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: Element | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent, doc)\n      : null;\n\n    // add event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    // istanbul ignore else @preserve\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach((btn) => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [\n        ...querySelectorAll(`.${collapseString}.${showClass}`, parent),\n      ].find((i) => getCollapseInstance(i));\n      activeCollapseInstance = activeCollapse &&\n        getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach((btn) => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach((btn) => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /**\n   * Toggles on/off the event listener(s) of the `Collapse` instance.\n   *\n   * @param add when `true`, the event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) =>\n        action(btn, mouseclickEvent, collapseClickHandler)\n      );\n    }\n  };\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    this._toggleEventListeners();\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = [\"dropdown\", \"dropup\", \"dropstart\", \"dropend\"];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = \"Dropdown\";\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = \"dropdown-menu\";\nexport default dropdownMenuClass;\n","import { closest, getAttribute, hasAttribute } from \"@thednp/shorty\";\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, \"A\");\n  return (\n    (element.tagName === \"A\" &&\n      // anchor href starts with #\n      hasAttribute(element, \"href\") &&\n      (getAttribute(element, \"href\") as string).slice(-1) === \"#\") ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, \"href\") &&\n      (getAttribute(parentAnchor, \"href\") as string).slice(-1) === \"#\")\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  focus,\n  focusEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  keyArrowDown,\n  keyArrowUp,\n  KeyboardEvent,\n  keydownEvent,\n  keyEscape,\n  keyupEvent,\n  mouseclickEvent,\n  mousedownEvent,\n  MouseEvent,\n  ObjectAssign,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport showClass from \"../strings/showClass\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dropdownClasses from \"../strings/dropdownClasses\";\nimport dropdownComponent from \"../strings/dropdownComponent\";\nimport dropdownMenuClass from \"../strings/dropdownMenuClass\";\n\nimport isEmptyAnchor from \"../util/isEmptyAnchor\";\nimport BaseComponent from \"./base-component\";\nimport type { DropdownEvent, DropdownOptions } from \"../interface/dropdown\";\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] =\n  dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: Element) =>\n  getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: Element) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = [\"A\", \"BUTTON\"];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: \"dynamic\", // [dynamic|static]\n};\n\ntype DropdownEventProps = { relatedTarget: Element & EventTarget };\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `show.bs.${dropdownString}`,\n);\nconst shownDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `shown.bs.${dropdownString}`,\n);\nconst hideDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `hide.bs.${dropdownString}`,\n);\nconst hiddenDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  // istanbul ignore else @preserve: this test requires a navbar\n  if (getElementStyle(menu, \"position\") !== \"static\") {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = [\"margin\", \"top\", \"bottom\", \"left\", \"right\"];\n    resetProps.forEach((p) => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = \"\";\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass = dropdownClasses.find((c) =>\n      hasClass(parentElement, c)\n    ) ||\n      // istanbul ignore next @preserve: fallback position\n      dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: \"100%\" },\n      dropup: { top: \"auto\", bottom: \"100%\" },\n      dropstart: RTL\n        ? { left: \"100%\", right: \"auto\" }\n        : { left: \"auto\", right: \"100%\" },\n      dropend: RTL\n        ? { left: \"auto\", right: \"100%\" }\n        : { left: \"100%\", right: \"auto\" },\n      menuStart: RTL\n        ? { right: \"0\", left: \"auto\" }\n        : { right: \"auto\", left: \"0\" },\n      menuEnd: RTL\n        ? { right: \"auto\", left: \"0\" }\n        : { right: \"0\", left: \"auto\" },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed =\n      targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed =\n      targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) &&\n      targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) &&\n      targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (\n      horizontalClass.includes(positionClass) && leftFullExceed &&\n      rightFullExceed\n    ) {\n      positionClass = dropdownString;\n    }\n    if (\n      positionClass === dropstartString &&\n      (!RTL ? leftFullExceed : rightFullExceed)\n    ) {\n      positionClass = dropendString;\n    }\n    if (\n      positionClass === dropendString &&\n      (RTL ? leftFullExceed : rightFullExceed)\n    ) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: \"auto\",\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust:\n        | { left: \"auto\" | number; right: \"auto\" | number }\n        | undefined = { left: \"auto\", right: \"auto\" };\n      // istanbul ignore else @preserve\n      if (!leftExceed && rightExceed && !RTL) {\n        posAjust = { left: \"auto\", right: 0 };\n      }\n      // istanbul ignore else @preserve\n      if (leftExceed && !rightExceed && RTL) {\n        posAjust = { left: 0, right: \"auto\" };\n      }\n      // istanbul ignore else @preserve\n      if (posAjust) {\n        ObjectAssign(dropdownPosition[positionClass], posAjust);\n      }\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map((x) => (x ? `${x}px` : x)).join(\" \")}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      // istanbul ignore else @preserve\n      if (menuEnd) {\n        const endAdjust = (!RTL && leftExceed) || (RTL && rightExceed)\n          ? \"menuStart\"\n          : /* istanbul ignore next @preserve */ \"menuEnd\";\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return Array.from(menu.children)\n    .map((c) => {\n      if (c && menuFocusTags.includes(c.tagName)) return c as HTMLElement;\n      const { firstElementChild } = c;\n      if (\n        firstElementChild && menuFocusTags.includes(firstElementChild.tagName)\n      ) {\n        return firstElementChild as HTMLElement;\n      }\n      return null;\n    })\n    .filter((c) => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options, menu } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  // istanbul ignore else @preserve\n  if (options.display === \"dynamic\") {\n    if (self.open) self._observer.observe(menu);\n    else self._observer.disconnect();\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (\n  element: Element,\n): Element | undefined => {\n  const currentParent = [...dropdownClasses, \"btn-group\", \"input-group\"]\n    .map((c) =>\n      getElementsByClassName(`${c} ${showClass}`, getDocument(element))\n    )\n    .find((x) => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<Element>)]\n      .find((x) =>\n        dropdownClasses.some((c) => c === getAttribute(x, dataBsToggle))\n      );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  // istanbul ignore if @preserve\n  if (!isHTMLElement(target)) return;\n\n  // some weird FF bug #409\n  const element = getCurrentOpenDropdown(target);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const isForm = parentElement &&\n    parentElement.contains(target) &&\n    (target.tagName === \"form\" || closest(target, \"form\") !== null);\n\n  if (\n    [mouseclickEvent, mousedownEvent].includes(type) &&\n    isEmptyAnchor(target)\n  ) {\n    e.preventDefault();\n  }\n\n  // istanbul ignore else @preserve\n  if (\n    !isForm && type !== focusEvent && target !== element && target !== menu\n  ) {\n    self.hide();\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n  const element = target && closest(target, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  e.stopPropagation();\n  self.toggle();\n  // istanbul ignore else @preserve\n  if (element && isEmptyAnchor(element)) e.preventDefault();\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  // istanbul ignore else @preserve\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: Element, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this) as HTMLElement;\n  /* istanbul ignore if @preserve */\n  if (!element) return;\n\n  const self = getDropdownInstance(element);\n  const { activeElement } = getDocument(element) as Document & {\n    activeElement: HTMLElement;\n  };\n\n  // istanbul ignore if @preserve\n  if (!self || !activeElement) return;\n\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (\n    menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)\n  ) {\n    let idx = menuItems.indexOf(activeElement);\n    // istanbul ignore else @preserve\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    // istanbul ignore else @preserve\n    if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownIntersectionHandler(target: Element) {\n  const element = getCurrentOpenDropdown(target);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare element: HTMLElement;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n  declare _observer: IntersectionObserver;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: Element | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName<HTMLElement>(\n      dropdownMenuClass,\n      parentElement as ParentNode,\n    );\n\n    // invalidate when dropdown-menu is missing\n    // istanbul ignore if @preserve\n    if (!menu) return;\n\n    // set targets\n    this.parentElement = parentElement as HTMLElement;\n    this.menu = menu;\n    this._observer = new IntersectionObserver(\n      ([entry]) => dropdownIntersectionHandler(entry.target),\n      { threshold: 1 },\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore if @preserve\n    if (open) return;\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement &&\n      getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(\n      (e) => {\n        e.relatedTarget = element;\n      },\n    );\n\n    dispatchEvent(parentElement, showDropdownEvent);\n    // istanbul ignore if @preserve\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, \"true\");\n\n    // change menu position\n    styleDropdown(this);\n\n    this.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore if @preserve\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach((e) => {\n      e.relatedTarget = element as HTMLElement;\n    });\n\n    dispatchEvent(parentElement, hideDropdownEvent);\n    // istanbul ignore if @preserve\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, \"false\");\n\n    this.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = \"modal\";\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = \"Modal\";\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = \"Offcanvas\";\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = \"fixed-top\";\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = \"fixed-bottom\";\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = \"sticky-top\";\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = \"position-sticky\";\nexport default positionStickyClass;\n","import {\n  getDocumentBody,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getWindow,\n  hasClass,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport fixedTopClass from \"../strings/fixedTopClass\";\nimport fixedBottomClass from \"../strings/fixedBottomClass\";\nimport stickyTopClass from \"../strings/stickyTopClass\";\nimport positionStickyClass from \"../strings/positionStickyClass\";\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName<HTMLElement>(fixedTopClass, parent),\n  ...getElementsByClassName<HTMLElement>(fixedBottomClass, parent),\n  ...getElementsByClassName<HTMLElement>(stickyTopClass, parent),\n  ...getElementsByClassName<HTMLElement>(positionStickyClass, parent),\n  ...getElementsByClassName<HTMLElement>(\"is-fixed\", parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: Element) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: \"\",\n    overflow: \"\",\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore else @preserve\n  if (fixedItems.length) {\n    fixedItems.forEach((fixed) => {\n      setElementStyle(fixed, {\n        paddingRight: \"\",\n        marginRight: \"\",\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: Element) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: Element, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, \"paddingRight\"), 10);\n  const isOpen = getElementStyle(bd, \"overflow\") === \"hidden\";\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore if @preserve\n  if (!overflow) return;\n\n  setElementStyle(bd, {\n    overflow: \"hidden\",\n    paddingRight: `${bodyPad + sbWidth}px`,\n  });\n\n  // istanbul ignore if @preserve\n  if (!fixedItems.length) return;\n\n  fixedItems.forEach((fixed) => {\n    const itemPadValue = getElementStyle(fixed, \"paddingRight\");\n    fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n    // istanbul ignore else @preserve\n    if (\n      [stickyTopClass, positionStickyClass].some((c) => hasClass(fixed, c))\n    ) {\n      const itemMValue = getElementStyle(fixed, \"marginRight\");\n      fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n    }\n  });\n};\n","/** @type {string} */\nconst offcanvasString = \"offcanvas\";\nexport default offcanvasString;\n","import { createElement, getDocumentBody, isNode } from \"@thednp/shorty\";\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({\n  tagName: \"div\",\n  className: \"popup-container\",\n}) as HTMLElement;\n\nconst appendPopup = (target: Element, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) &&\n    customContainer.nodeName === \"BODY\";\n  const lookup = isNode(customContainer) && !containerIsBody\n    ? customContainer\n    : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  // istanbul ignore else @preserve\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: Element, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) &&\n    customContainer.nodeName === \"BODY\";\n  const lookup = isNode(customContainer) && !containerIsBody\n    ? customContainer\n    : popupContainer;\n\n  // istanbul ignore else @preserve\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: Element, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== \"BODY\"\n    ? customContainer\n    : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { appendPopup, hasPopup, popupContainer, removePopup };\n","import {\n  addClass,\n  createElement,\n  getDocument,\n  getDocumentBody,\n  hasClass,\n  querySelector,\n  reflow,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport modalString from \"../strings/modalString\";\nimport offcanvasString from \"../strings/offcanvasString\";\nimport { resetScrollbar } from \"./scrollbar\";\nimport { appendPopup, removePopup } from \"./popupContainer\";\n\nconst backdropString = \"backdrop\";\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement(\"div\") as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: Element) => {\n  return querySelector(\n    `${modalActiveSelector},${offcanvasActiveSelector}`,\n    getDocument(element),\n  );\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach((c) => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (\n  element: Element,\n  hasFade: boolean,\n  isModal?: boolean,\n) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: Element): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  modalBackdropClass,\n  offcanvasActiveSelector,\n  offcanvasBackdropClass,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n};\n","import { getElementStyle, isHTMLElement } from \"@thednp/shorty\";\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) &&\n    getElementStyle(element, \"visibility\") !== \"hidden\" &&\n    element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  addClass,\n  ariaHidden,\n  ariaModal,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  isRTL,\n  KeyboardEvent,\n  keydownEvent,\n  keyEscape,\n  mouseclickEvent,\n  MouseEvent,\n  querySelector,\n  querySelectorAll,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  Timer,\n  toggleFocusTrap,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport modalString from \"../strings/modalString\";\nimport modalComponent from \"../strings/modalComponent\";\nimport offcanvasComponent from \"../strings/offcanvasComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport { measureScrollbar, setScrollbar } from \"../util/scrollbar\";\nimport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n} from \"../util/backdrop\";\nimport isVisible from \"../util/isVisible\";\nimport BaseComponent from \"./base-component\";\nimport { ModalEvent, ModalOptions } from \"../interface/modal\";\nimport { hasPopup } from \"../util/popupContainer\";\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\ntype ModalEventProps = {\n  relatedTarget: Element & EventTarget | null;\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: Element) =>\n  getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: Element) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `show.bs.${modalString}`,\n);\nconst shownModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `shown.bs.${modalString}`,\n);\nconst hideModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `hide.bs.${modalString}`,\n);\nconst hiddenModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `hidden.bs.${modalString}`,\n);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } =\n    element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  // istanbul ignore next @preserve: impossible to test?\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element)\n      ? \"paddingRight\"\n      // istanbul ignore next @preserve\n      : \"paddingLeft\";\n    const padStyle = { [pad]: `${scrollbarWidth}px` } as Partial<\n      CSS4Declaration\n    >;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n\n  if (add) self._observer.observe(element);\n  else self._observer.disconnect();\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: \"\", display: \"\" });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  // istanbul ignore else @preserve\n  if (focusElement) focus(focusElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget || undefined;\n  dispatchEvent(element, hiddenModalEvent);\n  toggleFocusTrap(element);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element as HTMLElement);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget || undefined;\n  dispatchEvent(element, shownModalEvent);\n  toggleFocusTrap(element);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: \"block\" });\n  setModalScrollbar(self);\n  // istanbul ignore else @preserve\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: \"hidden\" });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, \"true\");\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (\n    options.backdrop && hasFade && hasClass(overlay, showClass) &&\n    !getCurrentOpen(element)\n  ) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n\n  const trigger = target && closest(target, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  // istanbul ignore else @preserve\n  if (trigger && trigger.tagName === \"A\") e.preventDefault();\n  self.relatedTarget = trigger;\n  self.toggle();\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent<Element>) => {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  const { options } = self;\n  // istanbul ignore else @preserve\n  if (\n    options.keyboard &&\n    code === keyEscape && // the keyboard option is enabled and the key is 27\n    hasClass(element, showClass)\n  ) {\n    // the modal is not visible\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nconst modalDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { currentTarget } = e;\n  const self = currentTarget && getModalInstance(currentTarget);\n\n  // the timer is needed\n  // istanbul ignore if @preserve\n  if (!self || !currentTarget || Timer.get(currentTarget)) return;\n\n  const { options, isStatic, modalDialog } = self;\n  const { backdrop } = options;\n  const { target } = e;\n\n  const selectedText = getDocument(currentTarget)?.getSelection()?.toString()\n    .length;\n  const targetInsideDialog = modalDialog.contains(target);\n  const dismiss = target && closest(target, modalDismissSelector);\n\n  // istanbul ignore else @preserve\n  if (isStatic && !targetInsideDialog) {\n    Timer.set(\n      currentTarget,\n      () => {\n        addClass(currentTarget, modalStaticClass);\n        emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n      },\n      17,\n    );\n  } else if (\n    dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)\n  ) {\n    self.relatedTarget = dismiss || null;\n    self.hide();\n    e.preventDefault();\n  }\n};\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare element: HTMLElement;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: EventTarget & HTMLElement | null;\n  declare _observer: ResizeObserver;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: Element | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector<HTMLElement>(\n      `.${modalString}-dialog`,\n      element,\n    );\n\n    // istanbul ignore if @preserve\n    if (!modalDialog) return;\n\n    this.modalDialog = modalDialog;\n    // modal can have multiple triggering elements\n    this.triggers = [\n      ...querySelectorAll<HTMLElement>(\n        modalToggleSelector,\n        getDocument(element),\n      ),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // additional internals\n    this.isStatic = this.options.backdrop === \"static\";\n    this.hasFade = hasClass(element, fadeClass);\n    this.relatedTarget = null;\n    this._observer = new ResizeObserver(() => this.update());\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    // istanbul ignore if @preserve\n    if (hasClass(element, showClass)) return;\n\n    showModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showModalEvent);\n\n    // allow the event to be prevented\n    // istanbul ignore else @preserve\n    if (showModalEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n\n    // istanbul ignore else @preserve\n    if (currentOpen && currentOpen !== element) {\n      const that = getModalInstance(currentOpen) ||\n        // istanbul ignore next @preserve\n        getInstance<typeof BaseComponent & { hide: () => void }>(\n          currentOpen,\n          offcanvasComponent,\n        );\n      // istanbul ignore else @preserve\n      if (that) that.hide();\n    }\n    if (backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(element, hasFade, true);\n      } else {\n        toggleOverlayType(true);\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeModalShow(this), overlayDelay);\n    } else {\n      beforeModalShow(this);\n      // istanbul ignore else @preserve\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    // istanbul ignore if @preserve\n    if (!hasClass(element, showClass)) return;\n\n    hideModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideModalEvent);\n\n    // istanbul ignore if @preserve\n    if (hideModalEvent.defaultPrevented) return;\n\n    removeClass(element, showClass);\n    setAttribute(element, ariaHidden, \"true\");\n    removeAttribute(element, ariaModal);\n\n    if (hasFade) emulateTransitionEnd(element, () => beforeModalHide(this));\n    else beforeModalHide(this);\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    // istanbul ignore else @preserve\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener of the `Modal` instance.\n   *\n   * @param add when `true`, event listener(s) is/are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore if @preserve\n    if (!triggers.length) return;\n\n    triggers.forEach((btn) => action(btn, mouseclickEvent, modalClickHandler));\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { modalDialog, hasFade } = clone;\n    const callback = () => setTimeout(() => super.dispose(), 17);\n\n    this.hide();\n    this._toggleEventListeners();\n\n    if (hasFade) {\n      // use transitionend callback\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  addClass,\n  ariaHidden,\n  ariaModal,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  keydownEvent,\n  keyEscape,\n  mouseclickEvent,\n  MouseEvent,\n  querySelector,\n  querySelectorAll,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  toggleFocusTrap,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport showClass from \"../strings/showClass\";\nimport offcanvasString from \"../strings/offcanvasString\";\nimport offcanvasComponent from \"../strings/offcanvasComponent\";\nimport modalComponent from \"../strings/modalComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport isVisible from \"../util/isVisible\";\nimport { setScrollbar } from \"../util/scrollbar\";\nimport { hasPopup } from \"../util/popupContainer\";\nimport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  offcanvasActiveSelector,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n} from \"../util/backdrop\";\nimport BaseComponent from \"./base-component\";\nimport { OffcanvasEvent, OffcanvasOptions } from \"../interface/offcanvas\";\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\ntype OffCanvasEventProps = {\n  relatedTarget: Element & EventTarget | undefined;\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: Element) =>\n  getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: Element) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  // istanbul ignore else @preserve\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: \"hidden\" });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: \"visible\" });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  (element as HTMLElement).blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n  }\n  emulateTransitionEnd(element, () => hideOffcanvasComplete(self));\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent<HTMLElement>) => {\n  const trigger = closest(e.target, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  self.relatedTarget = trigger;\n  self.toggle();\n\n  // istanbul ignore else @preserve\n  if (trigger?.tagName === \"A\") e.preventDefault();\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n  const element = querySelector(\n    offcanvasActiveSelector,\n    getDocument(target),\n  );\n  // istanbul ignore else @preserve\n  if (!element) return;\n\n  const offCanvasDismiss = querySelector<HTMLElement>(\n    offcanvasDismissSelector,\n    element,\n  );\n  const self = getOffcanvasInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  const { options, triggers } = self;\n  const { backdrop } = options;\n  const trigger = closest(target, offcanvasToggleSelector);\n  const selection = getDocument(element).getSelection();\n\n  // istanbul ignore if: a filter is required here @preserve\n  if (overlay.contains(target) && backdrop === \"static\") return;\n\n  // istanbul ignore else @preserve\n  if (\n    !(selection && selection.toString().length) &&\n    ((!element.contains(target) &&\n      backdrop &&\n      // istanbul ignore next @preserve\n      (!trigger || triggers.includes(target))) ||\n      (offCanvasDismiss &&\n        offCanvasDismiss.contains(target)))\n  ) {\n    self.relatedTarget = offCanvasDismiss && offCanvasDismiss.contains(target)\n      ? offCanvasDismiss\n      : undefined;\n    self.hide();\n  }\n\n  // istanbul ignore next @preserve\n  if (trigger && trigger.tagName === \"A\") e.preventDefault();\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(\n    offcanvasActiveSelector,\n    getDocument(target as Node),\n  );\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  // istanbul ignore else @preserve\n  if (self.options.keyboard && code === keyEscape) {\n    self.relatedTarget = undefined;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, \"true\");\n  setAttribute(element, \"role\", \"dialog\");\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n  toggleFocusTrap(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, \"true\");\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, \"role\");\n  setElementStyle(element, { visibility: \"\" });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget ||\n    triggers.find(isVisible);\n  // istanbul ignore else @preserve\n  if (visibleTrigger) focus(visibleTrigger);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n  toggleFocusTrap(element);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare element: HTMLElement;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: EventTarget & HTMLElement | undefined;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(\n    target: Element | string,\n    config?: Partial<OffcanvasOptions>,\n  ) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [\n      ...querySelectorAll<HTMLElement>(\n        offcanvasToggleSelector,\n        getDocument(element),\n      ),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = undefined;\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    // istanbul ignore else @preserve\n    if (hasClass(element, showClass)) return;\n\n    showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showOffcanvasEvent);\n\n    // istanbul ignore else @preserve\n    if (showOffcanvasEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const that = getOffcanvasInstance(currentOpen) ||\n        // istanbul ignore next @preserve\n        getInstance<typeof BaseComponent & { hide: () => void }>(\n          currentOpen,\n          modalComponent,\n        );\n\n      // istanbul ignore else @preserve\n      if (that) that.hide();\n    }\n\n    if (options.backdrop) {\n      if (!hasPopup(overlay)) appendOverlay(element, true);\n      else toggleOverlayType();\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n    } else {\n      beforeOffcanvasShow(this);\n      // istanbul ignore next @preserve - this test was done on Modal\n      if (currentOpen && hasClass(overlay, showClass)) hideOverlay();\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n\n    // istanbul ignore else @preserve\n    if (!hasClass(element, showClass)) return;\n\n    hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideOffcanvasEvent);\n\n    // istanbul ignore else @preserve\n    if (hideOffcanvasEvent.defaultPrevented) return;\n\n    addClass(element, offcanvasTogglingClass);\n    removeClass(element, showClass);\n    beforeOffcanvasHide(this);\n  }\n\n  /**\n   * Toggles on/off the `click` event listeners.\n   *\n   * @param self the `Offcanvas` instance\n   * @param add when *true*, listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    this.triggers.forEach((btn) =>\n      action(btn, mouseclickEvent, offcanvasTriggerHandler)\n    );\n  };\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const { element } = this;\n    const isOpen = hasClass(element, showClass);\n    const callback = () => setTimeout(() => super.dispose(), 1);\n\n    this.hide();\n    this._toggleEventListeners();\n\n    if (isOpen) emulateTransitionEnd(element, callback);\n    // istanbul ignore next @preserve\n    else callback();\n  }\n}\n","/** @type {string} */\nconst popoverString = \"popover\";\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = \"Popover\";\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = \"tooltip\";\nexport default tooltipString;\n","import tooltipString from \"../strings/tooltipString\";\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : \"\";\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${\n    header + arrow + body\n  }</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: \"top\",\n  bottom: \"bottom\",\n  left: \"start\",\n  right: \"end\",\n};\n\nexport default tipClassPositions;\n","import {\n  createCustomEvent,\n  dispatchEvent,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  getNodeScroll,\n  getRectRelativeToOffsetParent,\n  isHTMLElement,\n  isRTL,\n  setElementStyle,\n  toLowerCase,\n} from \"@thednp/shorty\";\n\nimport tipClassPositions from \"./tipClassPositions\";\nimport Tooltip from \"../components/tooltip\";\nimport type { TooltipEvent } from \"../interface/tooltip\";\nimport type { PopoverEvent } from \"../interface/popover\";\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = (self: Tooltip) => {\n  requestAnimationFrame(() => {\n    const tipClasses = /\\b(top|bottom|start|end)+/;\n    const { element, tooltip, container, offsetParent, options, arrow } = self;\n\n    // istanbul ignore if @preserve\n    if (!tooltip) return;\n    const RTL = isRTL(element);\n    const { x: scrollLeft, y: scrollTop } = getNodeScroll(offsetParent);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      top: \"\",\n      left: \"\",\n      right: \"\",\n      bottom: \"\",\n    });\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } =\n      getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container;\n    const parentPosition = getElementStyle(\n      container,\n      \"position\",\n    );\n    const fixedParent = parentPosition === \"fixed\";\n    const scrollbarWidth = fixedParent\n      ? Math.abs(parentCWidth - parentOWidth)\n      : Math.abs(htmlcw - htmlow);\n    const leftBoundry = RTL && fixedParent\n      ? /* istanbul ignore next @preserve */ scrollbarWidth\n      : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n\n    // reuse observer entry bounding box\n    const observerEntry = self._observer.getEntry(element);\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = observerEntry?.boundingClientRect ||\n      getBoundingClientRect(element, true);\n\n    const {\n      x: elemOffsetLeft,\n      y: elemOffsetTop,\n    } = getRectRelativeToOffsetParent(\n      element,\n      offsetParent,\n      { x: scrollLeft, y: scrollTop },\n    );\n\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: \"\",\n      left: \"\",\n      right: \"\",\n      bottom: \"\",\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = \"\";\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = \"\";\n    let arrowTop: number | string = \"\";\n    let arrowLeft: number | string = \"\";\n    let arrowRight: number | string = \"\";\n\n    const arrowWidth = arrow.offsetWidth || 0;\n    const arrowHeight = arrow.offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed =\n      elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed =\n      elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = [\"left\", \"right\"];\n    const verticals = [\"top\", \"bottom\"];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement)\n      ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry\n      : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed\n      ? \"top\"\n      : placement;\n    // recompute placement\n    placement = placement === \"top\" && topExceed ? \"bottom\" : placement;\n    placement = placement === \"bottom\" && bottomExceed ? \"top\" : placement;\n    placement = placement === \"left\" && leftExceed ? \"right\" : placement;\n    placement = placement === \"right\" && rightExceed\n      ? \"left\"\n      // istanbul ignore next @preserve\n      : placement;\n\n    // update tooltip/popover class\n    // istanbul ignore else @preserve\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(\n        tipClasses,\n        tipClassPositions[placement],\n      );\n    }\n\n    // compute tooltip / popover coordinates\n    // istanbul ignore else @preserve\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === \"left\") {\n        // LEFT\n        leftPosition = elemOffsetLeft - tipWidth - arrowWidth;\n      } else {\n        // RIGHT\n        leftPosition = elemOffsetLeft + elemWidth + arrowWidth;\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemOffsetTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = elemOffsetTop;\n        bottomPosition = \"\";\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = elemOffsetTop - tipHeight + elemHeight;\n        bottomPosition = \"\";\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = elemOffsetTop - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === \"top\") {\n        topPosition = elemOffsetTop - tipHeight - arrowHeight;\n      } else {\n        // BOTTOM\n        topPosition = elemOffsetTop + elemHeight + arrowHeight;\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = elemOffsetLeft + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = \"auto\";\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = elemOffsetLeft - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === \"\" ? \"\" : `${bottomPosition}px`,\n      left: leftPosition === \"auto\" ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== \"\" ? `${rightPosition}px` : \"\",\n    });\n\n    // update arrow placement\n    // istanbul ignore else @preserve\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== \"\") {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== \"\") {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== \"\") {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<\n      Record<string, unknown>,\n      TooltipEvent | PopoverEvent\n    >(\n      `updated.bs.${toLowerCase(self.name)}`,\n    );\n    dispatchEvent(element, updatedTooltipEvent);\n  });\n};\n\nexport default styleTip;\n","import getTipTemplate from \"./getTipTemplate\";\nimport tooltipString from \"../strings/tooltipString\";\nimport { TooltipOptions } from \"../interface/tooltip\";\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: \"\",\n  customClass: \"\",\n  trigger: \"hover focus\",\n  placement: \"top\",\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: \"\",\n  dismissible: false,\n  btnClose: \"\",\n};\nexport default tooltipDefaults;\n","const p = (e) => e != null && typeof e == \"object\" || !1, k = (e) => p(e) && typeof e.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(\n  (t) => e.nodeType === t\n) || !1, b = (e) => k(e) && e.nodeType === 1 || !1, v = (e) => typeof e == \"function\" || !1, y = \"1.0.2\", m = \"PositionObserver Error\";\nclass E {\n  entries;\n  static version = y;\n  _tick;\n  _root;\n  _callback;\n  /**\n   * The constructor takes two arguments, a `callback`, which is called\n   * whenever the position of an observed element changes and an `options` object.\n   * The callback function should take an array of `PositionObserverEntry` objects\n   * as its only argument, but it's not required.\n   *\n   * @param callback the callback that applies to all targets of this observer\n   * @param options the options of this observer\n   */\n  constructor(t, i) {\n    if (!v(t))\n      throw new Error(`${m}: ${t} is not a function.`);\n    this.entries = /* @__PURE__ */ new Map(), this._callback = t, this._root = b(i?.root) ? i.root : document?.documentElement, this._tick = 0;\n  }\n  /**\n   * Start observing the position of the specified element.\n   * If the element is not currently attached to the DOM,\n   * it will NOT be added to the entries.\n   *\n   * @param target an `Element` target\n   */\n  observe = (t) => {\n    if (!b(t))\n      throw new Error(\n        `${m}: ${t} is not an instance of Element.`\n      );\n    this._root.contains(t) && this._new(t).then((i) => {\n      this.getEntry(t) || this.entries.set(t, i), this._tick || (this._tick = requestAnimationFrame(this._runCallback));\n    });\n  };\n  /**\n   * Stop observing the position of the specified element.\n   *\n   * @param target an `HTMLElement` target\n   */\n  unobserve = (t) => {\n    this.entries.has(t) && this.entries.delete(t);\n  };\n  /**\n   * Private method responsible for all the heavy duty,\n   * the observer's runtime.\n   */\n  _runCallback = () => {\n    if (!this.entries.size) return;\n    const t = new Promise((i) => {\n      const c = [];\n      this.entries.forEach(\n        ({ target: s, boundingClientRect: n }) => {\n          this._root.contains(s) && this._new(s).then(({ boundingClientRect: o, isVisible: h }) => {\n            const { left: a, top: f, bottom: _, right: l } = o;\n            if (n.top !== f || n.left !== a || n.right !== l || n.bottom !== _) {\n              const r = { target: s, boundingClientRect: o, isVisible: h };\n              this.entries.set(s, r), c.push(r);\n            }\n          });\n        }\n      ), i(c);\n    });\n    this._tick = requestAnimationFrame(async () => {\n      const i = await t;\n      i.length && this._callback(i, this), this._runCallback();\n    });\n  };\n  /**\n   * Calculate the target bounding box and determine\n   * the value of `isVisible`.\n   *\n   * @param target an `Element` target\n   */\n  _new = (t) => {\n    const { clientWidth: i, clientHeight: c } = this._root;\n    return new Promise((s) => {\n      new IntersectionObserver(\n        ([{ boundingClientRect: o }], h) => {\n          h.disconnect();\n          const { left: a, top: f, bottom: _, right: l, width: r, height: u } = o, w = f > 1 - u && a > 1 - r && _ <= c + u - 1 && l <= i + r - 1;\n          s({\n            target: t,\n            isVisible: w,\n            boundingClientRect: o\n          });\n        }\n      ).observe(t);\n    });\n  };\n  /**\n   * Find the entry for a given target.\n   *\n   * @param target an `HTMLElement` target\n   */\n  getEntry = (t) => this.entries.get(t);\n  /**\n   * Immediately stop observing all elements.\n   */\n  disconnect = () => {\n    cancelAnimationFrame(this._tick), this.entries.clear(), this._tick = 0;\n  };\n}\nexport {\n  E as default\n};\n//# sourceMappingURL=index.mjs.map\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = \"data-original-title\";\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = \"Tooltip\";\nexport default tooltipComponent;\n","import {\n  isArray,\n  isFunction,\n  isHTMLElement,\n  isNode,\n  isNodeList,\n  isString,\n} from \"@thednp/shorty\";\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (\n  element: HTMLElement,\n  content: Node[] | Node | string,\n  sanitizeFn?: (s: string) => string,\n) => {\n  // istanbul ignore else @preserve\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, \"text/html\");\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (\n    isNodeList(content) || (isArray(content) && content.every(isNode))\n  ) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import {\n  addClass,\n  createElement,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  querySelector,\n  setAttribute,\n} from \"@thednp/shorty\";\n\nimport tooltipComponent from \"../strings/tooltipComponent\";\nimport tooltipString from \"../strings/tooltipString\";\nimport popoverString from \"../strings/popoverString\";\nimport fadeClass from \"../strings/fadeClass\";\nimport tipClassPositions from \"./tipClassPositions\";\nimport setHtml from \"./setHtml\";\nimport Tooltip from \"../components/tooltip\";\nimport Popover from \"../components/popover\";\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const {\n    title,\n    placement,\n    template,\n    animation,\n    customClass,\n    sanitizeFn,\n    dismissible,\n    content,\n    btnClose,\n  } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = \"end\";\n    tipPositions.right = \"start\";\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement(\"div\") as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  /* istanbul ignore if @preserve */\n  if (!isHTMLElement(tooltipTemplate)) return;\n\n  // set popover markup\n  self.tooltip = tooltipTemplate.cloneNode(true) as HTMLElement;\n  const { tooltip } = self;\n\n  // set id and role attributes\n  setAttribute(tooltip, \"id\", id);\n  setAttribute(tooltip, \"role\", tooltipString);\n\n  const bodyClass = isTooltip\n    ? `${tooltipString}-inner`\n    : `${popoverString}-body`;\n  const tooltipHeader = isTooltip\n    ? null\n    : querySelector<HTMLElement>(`.${popoverString}-header`, tooltip);\n  const tooltipBody = querySelector<HTMLElement>(`.${bodyClass}`, tooltip);\n\n  // set arrow and enable access for styleTip\n  self.arrow = querySelector<HTMLElement>(\n    `.${tipString}-arrow`,\n    tooltip,\n  ) as HTMLElement;\n  const { arrow } = self;\n\n  if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n  else {\n    const tempTitle = createElement(\"div\") as HTMLElement;\n    setHtml(tempTitle, title, sanitizeFn);\n    titleParts = [...[...tempTitle.childNodes]];\n  }\n\n  if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n  else {\n    const tempContent = createElement(\"div\") as HTMLElement;\n    setHtml(tempContent, content, sanitizeFn);\n    contentParts = [...[...tempContent.childNodes]];\n  }\n\n  // set dismissible button\n  if (dismissible) {\n    if (title) {\n      if (isHTMLElement(btnClose)) {\n        titleParts = [...titleParts, btnClose.cloneNode(true)];\n      } else {\n        const tempBtn = createElement(\"div\") as HTMLElement;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        titleParts = [...titleParts, tempBtn.firstChild as Node];\n      }\n    } else {\n      // istanbul ignore else @preserve\n      if (tooltipHeader) tooltipHeader.remove();\n      if (isHTMLElement(btnClose)) {\n        contentParts = [...contentParts, btnClose.cloneNode(true)];\n      } else {\n        const tempBtn = createElement(\"div\") as HTMLElement;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        contentParts = [...contentParts, tempBtn.firstChild as Node];\n      }\n    }\n  }\n\n  // fill the template with content from options / data attributes\n  // also sanitize title && content\n  // istanbul ignore else @preserve\n  if (!isTooltip) {\n    // istanbul ignore else @preserve\n    if (title && tooltipHeader) {\n      setHtml(tooltipHeader, titleParts, sanitizeFn);\n    }\n    // istanbul ignore else @preserve\n    if (content && tooltipBody) {\n      setHtml(tooltipBody, contentParts, sanitizeFn);\n    }\n    // set btn\n    self.btn = querySelector<HTMLButtonElement>(\".btn-close\", tooltip) ||\n      undefined;\n  } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n  // Bootstrap 5.2.x\n  addClass(tooltip, \"position-absolute\");\n  addClass(arrow, \"position-absolute\");\n\n  // set popover animation and placement\n  // istanbul ignore else @preserve\n  if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n  // istanbul ignore else @preserve\n  if (animation && !hasClass(tooltip, fadeClass)) {\n    addClass(tooltip, fadeClass);\n  }\n  // istanbul ignore else @preserve\n  if (customClass && !hasClass(tooltip, customClass)) {\n    addClass(tooltip, customClass);\n  }\n  // istanbul ignore else @preserve\n  if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n};\n\nexport default createTip;\n","import {\n  getDocument,\n  getElementStyle,\n  getParentNode,\n  isShadowRoot,\n  isTableElement,\n} from \"@thednp/shorty\";\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: Element) => {\n  const majorBlockTags = [\"HTML\", \"BODY\"];\n  const containers: HTMLElement[] = [];\n  let { parentNode } = element;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as HTMLElement;\n    // istanbul ignore else @preserve\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode as HTMLElement);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        ((getElementStyle(c, \"position\") !== \"relative\" ||\n          getElementStyle(c, \"position\") === \"relative\" &&\n            c.offsetHeight !== c.scrollHeight) &&\n          containers.slice(i + 1).every((r) =>\n            getElementStyle(r, \"position\") === \"static\"\n          ))\n      ) {\n        return c;\n      }\n      return null;\n    }) ||\n    /* istanbul ignore next: optional guard */\n    getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  addClass,\n  ariaDescribedBy,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  focusEvent,\n  focusinEvent,\n  focusoutEvent,\n  getAttribute,\n  getDocument,\n  getElementStyle,\n  getInstance,\n  getUID,\n  getWindow,\n  hasAttribute,\n  hasClass,\n  isApple,\n  mouseclickEvent,\n  mousedownEvent,\n  mouseenterEvent,\n  mousehoverEvent,\n  mouseleaveEvent,\n  ObjectAssign,\n  passiveHandler,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  Timer,\n  toLowerCase,\n  TouchEvent,\n  touchstartEvent,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\nimport PositionObserver from \"@thednp/position-observer\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dataOriginalTitle from \"../strings/dataOriginalTitle\";\nimport showClass from \"../strings/showClass\";\nimport tooltipString from \"../strings/tooltipString\";\nimport tooltipComponent from \"../strings/tooltipComponent\";\nimport popoverString from \"../strings/popoverString\";\nimport popoverComponent from \"../strings/popoverComponent\";\nimport modalString from \"../strings/modalString\";\nimport offcanvasString from \"../strings/offcanvasString\";\n\nimport styleTip from \"../util/styleTip\";\nimport createTip from \"../util/createTip\";\nimport { appendPopup, hasPopup, removePopup } from \"../util/popupContainer\";\nimport getElementContainer from \"../util/getElementContainer\";\nimport tooltipDefaults from \"../util/tooltipDefaults\";\nimport BaseComponent from \"./base-component\";\nimport type { TooltipEvent, TooltipOptions } from \"../interface/tooltip\";\nimport type { PopoverEvent, PopoverOptions } from \"../interface/popover\";\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector =\n  `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = \"title\";\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n */\nlet getTooltipInstance = (element: Element) =>\n  getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: Element) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(\n    tooltip,\n    container,\n  );\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container } = self;\n\n  return tooltip &&\n    hasPopup(tooltip, container);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  self._toggleEventListeners();\n\n  // istanbul ignore else @preserve\n  if (\n    hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent\n  ) {\n    toggleTooltipTitle(self);\n  }\n  // istanbul ignore else @preserve\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(\n    getDocument(element),\n    touchstartEvent,\n    self.handleTouch,\n    passiveHandler,\n  );\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<\n    Record<string, never>,\n    TooltipEvent | PopoverEvent\n  >(\n    `shown.bs.${toLowerCase(self.name)}`,\n  );\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, \"in\");\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<\n    Record<string, never>,\n    TooltipEvent | PopoverEvent\n  >(\n    `hidden.bs.${toLowerCase(self.name)}`,\n  );\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, \"out\");\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, tooltip } = self;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  if (add) {\n    [element, tooltip]\n      .forEach((target) => self._observer.observe(target));\n  } else self._observer.disconnect();\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) {\n    action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  }\n  if (parentOffcanvas) {\n    action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n  }\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content ||\n      getAttribute(element, titleAtt[0]) ||\n      // istanbul ignore next @preserve\n      \"\",\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare element: Element & HTMLOrSVGElement;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip: HTMLElement;\n  declare container: HTMLElement;\n  declare offsetParent: Element | Window;\n  declare arrow: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n  declare _observer: PositionObserver;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: Element | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    // istanbul ignore next @preserve: this is to set Popover too\n    getTooltipInstance = <T extends Tooltip>(elem: Element) =>\n      getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    // istanbul ignore else @preserve\n    if (((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      return;\n    }\n\n    // reset default options\n    ObjectAssign(tooltipDefaults, { titleAttr: \"\" });\n\n    // set title attributes and add event listeners\n    // istanbul ignore else @preserve\n    if (\n      hasAttribute(element, titleAttr) && isTooltip &&\n      typeof options.title === \"string\"\n    ) {\n      toggleTooltipTitle(this, options.title);\n    }\n\n    // set containers\n    const container = getElementContainer(element);\n    const offsetParent = [\"sticky\", \"fixed\", \"relative\"].some(\n        (position) =>\n          getElementStyle(container, \"position\") ===\n            position,\n      )\n      ? container\n      : getWindow(element);\n\n    this.container = container;\n    this.offsetParent = offsetParent;\n\n    // create tooltip here\n    createTip(this);\n\n    /* istanbul ignore if @preserve */\n    if (!this.tooltip) return;\n\n    // create observer\n    this._observer = new PositionObserver((entries) => {\n      /* istanbul ignore else */\n      if (!entries.some((entry) => entry.isVisible)) return;\n      this.update();\n    });\n\n    // attach events\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  // istanbul ignore next @preserve - impossible to test without Apple device\n  handleFocus = () => focus(this.element as HTMLElement);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, \"out\");\n\n    Timer.clear(element, \"out\");\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<\n            Record<string, never>,\n            TooltipEvent | PopoverEvent\n          >(\n            `show.bs.${toLowerCase(this.name)}`,\n          );\n          dispatchEvent(element, showTooltipEvent);\n\n          // istanbul ignore else @preserve\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, container);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            // istanbul ignore else @preserve\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            // istanbul ignore else @preserve\n            if (animation) {\n              emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            } else tooltipShownAction(this);\n          }\n        },\n        17,\n        \"in\",\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, \"in\");\n\n    // istanbul ignore else @preserve\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<\n            Record<string, never>,\n            TooltipEvent | PopoverEvent\n          >(\n            `hide.bs.${toLowerCase(this.name)}`,\n          );\n          dispatchEvent(element, hideTooltipEvent);\n\n          // istanbul ignore else @preserve\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            // istanbul ignore else @preserve\n            if (animation) {\n              emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            } else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        \"out\",\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    // istanbul ignore else @preserve\n    if (!enabled) {\n      this._toggleEventListeners(true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, enabled } = this;\n    // istanbul ignore else @preserve\n    if (enabled) {\n      if (tooltip && hasTip(this)) this.hide();\n      this._toggleEventListeners();\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    // istanbul ignore if @preserve\n    if (\n      (tooltip && tooltip.contains(target)) ||\n      target === element ||\n      (target && element.contains(target))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Toggles on/off the `Tooltip` event listeners.\n   *\n   * @param add when `true`, event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    // btn is only for dismissible popover\n    const { element, options, btn } = this;\n    const { trigger } = options;\n    const isPopover = this.name !== tooltipComponent;\n    const dismissible = isPopover && (options as PopoverOptions).dismissible\n      ? true\n      : false;\n\n    // istanbul ignore else @preserve\n    if (!trigger.includes(\"manual\")) {\n      this.enabled = !!add;\n\n      const triggerOptions = trigger.split(\" \");\n\n      triggerOptions.forEach((tr) => {\n        // istanbul ignore else @preserve\n        if (tr === mousehoverEvent) {\n          action(element, mousedownEvent, this.handleShow);\n          action(element, mouseenterEvent, this.handleShow);\n\n          // istanbul ignore else @preserve\n          if (!dismissible) {\n            action(element, mouseleaveEvent, this.handleHide);\n            action(\n              getDocument(element),\n              touchstartEvent,\n              this.handleTouch,\n              passiveHandler,\n            );\n          }\n        } else if (tr === mouseclickEvent) {\n          action(element, tr, !dismissible ? this.toggle : this.handleShow);\n        } else if (tr === focusEvent) {\n          action(element, focusinEvent, this.handleShow);\n          // istanbul ignore else @preserve\n          if (!dismissible) action(element, focusoutEvent, this.handleHide);\n          // istanbul ignore else @preserve\n          if (isApple()) {\n            action(element, mouseclickEvent, this.handleFocus);\n          }\n        }\n        // istanbul ignore else @preserve\n        if (dismissible && btn) {\n          action(btn, mouseclickEvent, this.handleHide);\n        }\n      });\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () =>\n      setTimeout(\n        () => disposeTooltipComplete(clone, () => super.dispose()),\n        17,\n      );\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { focus, getInstance, ObjectAssign } from \"@thednp/shorty\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport popoverString from \"../strings/popoverString\";\nimport popoverComponent from \"../strings/popoverComponent\";\n\nimport getTipTemplate from \"../util/getTipTemplate\";\nimport styleTip from \"../util/styleTip\";\nimport tooltipDefaults from \"../util/tooltipDefaults\";\nimport Tooltip from \"./tooltip\";\n\nimport type { PopoverOptions /* , PopoverEvent */ } from \"../interface/popover\";\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector =\n  `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: \"\",\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n */\nconst getPopoverInstance = (element: Element) =>\n  getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: Element) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: Element | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    // istanbul ignore else @preserve\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = \"scrollspy\";\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = \"ScrollSpy\";\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  addClass,\n  createCustomEvent,\n  dispatchEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementsByTagName,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  querySelector,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport PositionObserver from \"@thednp/position-observer\";\n\nimport activeClass from \"../strings/activeClass\";\nimport scrollspyString from \"../strings/scrollspyString\";\nimport scrollspyComponent from \"../strings/scrollspyComponent\";\n\nimport BaseComponent from \"./base-component\";\nimport { ScrollSpyEvent, ScrollSpyOptions } from \"../interface/scrollspy\";\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: Partial<ScrollSpyOptions> = {\n  offset: 10,\n  target: undefined,\n};\n\ntype ScrollSpyEventProps = {\n  relatedTarget: HTMLElement;\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: Element) =>\n  getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: Element) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<\n  ScrollSpyEventProps,\n  ScrollSpyEvent\n>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const {\n    target,\n    scrollTarget,\n    options,\n    itemsLength,\n    scrollHeight,\n    element,\n    _observer,\n  } = self;\n  const { offset } = options;\n  const isRoot = scrollTarget !== element;\n\n  const links = target && getElementsByTagName<HTMLAnchorElement>(\"A\", target);\n  const doc = getDocument(element);\n  const scrollHEIGHT = scrollTarget.scrollHeight;\n\n  self.scrollTop = scrollTarget.scrollTop;\n\n  // only update items/offsets once or with each mutation\n  // istanbul ignore else @preserve\n  if (\n    links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)\n  ) {\n    let href: string | null;\n    let ref: string | undefined;\n    let targetItem: HTMLElement | null;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.targets = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    Array.from(links).forEach((link) => {\n      href = getAttribute(link, \"href\");\n      ref = href?.slice(1);\n      targetItem = ref?.length ? doc.getElementById(ref) : null;\n\n      if (targetItem) {\n        self.items.push(link);\n        self.targets.push(targetItem);\n        rect = _observer?.getEntry(targetItem)?.boundingClientRect ||\n          getBoundingClientRect(targetItem);\n        self.offsets.push(\n          (isRoot ? rect.top + self.scrollTop : targetItem.offsetTop) - offset,\n        );\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Toggles on/off the component observer.\n *\n * @param self the ScrollSpy instance\n * @param add when `true`, listener is added\n */\nconst toggleObservers = (\n  { targets, scrollTarget, element, _observer }: ScrollSpy,\n  add?: boolean,\n) => {\n  if (add) {\n    if (scrollTarget === element) {\n      targets?.forEach((targetItem) => _observer.observe(targetItem));\n    } else {\n      _observer.observe(element);\n    }\n  } else _observer.disconnect();\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Element) => {\n  return scrollTarget.scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return scrollTarget !== element\n    ? scrollTarget.clientHeight\n    : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: Element) => {\n  Array.from(getElementsByTagName<HTMLAnchorElement>(\"A\", target)).forEach(\n    (item) => {\n      if (hasClass(item, activeClass)) removeClass(item, activeClass);\n    },\n  );\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n\n  // istanbul ignore else @preserve\n  if (isHTMLElement(target)) clear(target);\n\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, \"nav\") || hasClass(parentItem, \"dropdown-menu\")) {\n      parents.push(parentItem);\n    }\n  }\n\n  parents.forEach((menuItem) => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    // istanbul ignore else @preserve\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare element: HTMLElement;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare targets: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n  declare _observer: PositionObserver;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(\n    target: Element | string,\n    config?: Partial<ScrollSpyOptions>,\n  ) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // get target\n    const spyTarget = querySelector(\n      options.target,\n      getDocument(element),\n    );\n\n    // invalidate\n    if (!spyTarget) return;\n    this.target = spyTarget;\n\n    // set initial state\n    this.scrollTarget = element.clientHeight < element.scrollHeight\n      ? element\n      : getDocumentElement(element);\n    this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n    // run an initial burst, we need to know the targets\n    this.refresh();\n\n    // create observer\n    this._observer = new PositionObserver((entries) => {\n      requestAnimationFrame(() => {\n        // istanbul ignore else @preserve\n        if (entries.some((entry) => entry.isVisible)) {\n          this.refresh();\n        }\n      });\n    }, {\n      root: this.scrollTarget,\n    });\n\n    // add event handlers\n    toggleObservers(this, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n    // check if target is visible and invalidate\n    // istanbul ignore if @preserve\n    if (!isHTMLElement(target) || target.offsetHeight === 0) return;\n\n    updateSpyTargets(this);\n\n    const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n    if (scrollTop >= maxScroll) {\n      const newActiveItem = items[itemsLength - 1];\n\n      // istanbul ignore else @preserve\n      if (activeItem !== newActiveItem) activate(this, newActiveItem);\n      return;\n    }\n\n    const { offsets } = this;\n\n    // istanbul ignore else @preserve\n    if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n      this.activeItem = null;\n      // istanbul ignore else @preserve\n      if (target) clear(target);\n      return;\n    }\n\n    items.forEach((item, i) => {\n      if (\n        activeItem !== item &&\n        scrollTop >= offsets[i] &&\n        (typeof offsets[i + 1] === \"undefined\" || scrollTop < offsets[i + 1])\n      ) {\n        activate(this, item);\n      }\n    });\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    const clone = { ...this };\n    toggleObservers(clone);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = \"tab\";\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = \"Tab\";\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  addClass,\n  ariaSelected,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getElementsByClassName,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  mouseclickEvent,\n  MouseEvent,\n  querySelector,\n  reflow,\n  removeClass,\n  setAttribute,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport collapsingClass from \"../strings/collapsingClass\";\nimport activeClass from \"../strings/activeClass\";\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dropdownClasses from \"../strings/dropdownClasses\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport tabString from \"../strings/tabString\";\nimport tabComponent from \"../strings/tabComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { /* TabOptions, */ TabEvent } from \"../interface/tab\";\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: Element) =>\n  getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: Element) => new Tab(element);\n\ntype TabEventProps = {\n  relatedTarget: Element & EventTarget | undefined;\n};\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `show.bs.${tabString}`,\n);\nconst shownTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `shown.bs.${tabString}`,\n);\nconst hideTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `hide.bs.${tabString}`,\n);\nconst hiddenTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `hidden.bs.${tabString}`,\n);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  // istanbul ignore else @preserve\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = \"\";\n    removeClass(tabContent, collapsingClass);\n  }\n\n  // istanbul ignore else @preserve\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) ||\n    // istanbul ignore next @preserve\n    { tab: null };\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) ||\n      // istanbul ignore next @preserve\n      { currentHeight: 0, nextHeight: 0 };\n    // istanbul ignore else @preserve: vitest won't validate this branch\n    if (currentHeight !== nextHeight) {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    } else {\n      triggerTabEnd(self);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) ||\n    // istanbul ignore next @preserve\n    { tab: null, content: null };\n  let currentHeight = 0;\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach((c) => {\n      // istanbul ignore else @preserve\n      if (c) addClass(c, \"overflow-hidden\");\n    });\n    currentHeight = content\n      ? content.scrollHeight\n      : /* istanbul ignore next @preserve */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element as HTMLElement;\n  dispatchEvent(element, showTabEvent);\n\n  // istanbul ignore if @preserve\n  if (showTabEvent.defaultPrevented) return;\n  // istanbul ignore else @preserve\n  if (nextContent) addClass(nextContent, activeClass);\n  // istanbul ignore else @preserve\n  if (content) removeClass(content, activeClass);\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const nextHeight = nextContent.scrollHeight;\n    tabPrivate.set(element, {\n      currentHeight,\n      nextHeight,\n      tab: null,\n      content: null,\n    });\n\n    addClass(tabContent, collapsingClass);\n    tabContent.style.height = `${currentHeight}px`;\n    reflow(tabContent);\n    [content, nextContent].forEach((c) => {\n      // istanbul ignore else @preserve\n      if (c) removeClass(c, \"overflow-hidden\");\n    });\n  }\n\n  if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n    setTimeout(() => {\n      addClass(nextContent, showClass);\n      emulateTransitionEnd(nextContent, () => {\n        triggerTabShow(self);\n      });\n    }, 1);\n  } else {\n    // istanbul ignore else @preserve\n    if (nextContent) addClass(nextContent, showClass);\n    triggerTabShow(self);\n  }\n\n  // istanbul ignore else @preserve\n  if (tab) dispatchEvent(tab, hiddenTabEvent);\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (\n  self: Tab,\n): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(nav)) {\n    return { tab: null, content: null };\n  }\n\n  const activeTabs = getElementsByClassName<HTMLElement>(\n    activeClass,\n    nav,\n  );\n  let tab: HTMLElement | null = null;\n  // istanbul ignore else @preserve\n  if (\n    activeTabs.length === 1 &&\n    !dropdownClasses.some((c) =>\n      hasClass(activeTabs[0].parentElement as HTMLElement, c)\n    )\n  ) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab) ? getTargetElement(tab) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement) => {\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(\",.\")}`);\n  return dropdown\n    ? querySelector<HTMLElement>(`.${dropdownClasses[0]}-toggle`, dropdown)\n    : null;\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: MouseEvent<Element>) => {\n  const self = getTabInstance(e.target);\n  e.preventDefault();\n\n  // istanbul ignore else @preserve\n  if (self) self.show();\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare element: HTMLElement;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: Element | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    // istanbul ignore else @preserve\n    if (!content) return;\n\n    const nav = closest<HTMLElement>(element, \".nav\");\n    const container = closest<HTMLElement>(\n      content as HTMLElement,\n      \".tab-content\",\n    );\n\n    this.nav = nav;\n    this.content = content;\n    this.tabContent = container;\n\n    // event targets\n    this.dropdown = getParentDropdown(element as HTMLElement);\n\n    // show first Tab instance of none is shown\n    // suggested on #432\n    const { tab } = getActiveTab(this);\n    if (nav && !tab) {\n      const firstTab = querySelector(tabSelector, nav);\n      const firstTabContent = firstTab && getTargetElement(firstTab);\n\n      // istanbul ignore else @preserve\n      if (firstTabContent) {\n        addClass(firstTab, activeClass);\n        addClass(firstTabContent, showClass);\n        addClass(firstTabContent, activeClass);\n        setAttribute(element, ariaSelected, \"true\");\n      }\n    }\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    // istanbul ignore else @preserve\n    if ((nav && Timer.get(nav)) || hasClass(element, activeClass)) return;\n    const { tab, content } = getActiveTab(this);\n\n    // istanbul ignore else @preserve\n    if (nav && tab) {\n      tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n    }\n\n    // update relatedTarget and dispatch\n    hideTabEvent.relatedTarget = element as HTMLElement;\n\n    // istanbul ignore if @preserve\n    if (!isHTMLElement(tab)) return;\n\n    dispatchEvent(tab, hideTabEvent);\n\n    // istanbul ignore else @preserve\n    if (hideTabEvent.defaultPrevented) return;\n\n    addClass(element, activeClass);\n    setAttribute(element, ariaSelected, \"true\");\n\n    const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n    if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n      removeClass(activeDropdown, activeClass);\n    }\n\n    // istanbul ignore else @preserve\n    if (nav) {\n      const toggleTab = () => {\n        // istanbul ignore else @preserve\n        if (tab) {\n          removeClass(tab, activeClass);\n          setAttribute(tab, ariaSelected, \"false\");\n        }\n        if (dropdown && !hasClass(dropdown, activeClass)) {\n          addClass(dropdown, activeClass);\n        }\n      };\n\n      if (\n        content &&\n        (hasClass(content, fadeClass) ||\n          (nextContent && hasClass(nextContent, fadeClass)))\n      ) {\n        Timer.set(nav, toggleTab, 1);\n      } else toggleTab();\n    }\n\n    // istanbul ignore else @preserve\n    if (content) {\n      removeClass(content, showClass);\n      if (hasClass(content, fadeClass)) {\n        emulateTransitionEnd(content, () => triggerTabHide(this));\n      } else {\n        triggerTabHide(this);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, tabClickHandler);\n  };\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = \"toast\";\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = \"Toast\";\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  addClass,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focusinEvent,\n  focusoutEvent,\n  getDocument,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  mouseenterEvent,\n  MouseEvent,\n  mouseleaveEvent,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport toastString from \"../strings/toastString\";\nimport toastComponent from \"../strings/toastComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport { ToastEvent, ToastOptions } from \"../interface/toast\";\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = \"showing\";\n/** @deprecated */\nconst hideClass = \"hide\";\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: Element) =>\n  getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: Element) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `show.bs.${toastString}`,\n);\nconst shownToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `shown.bs.${toastString}`,\n);\nconst hideToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `hide.bs.${toastString}`,\n);\nconst hiddenToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `hidden.bs.${toastString}`,\n);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  // istanbul ignore else @preserve\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element as HTMLElement);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element as HTMLElement);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n  // istanbul ignore else @preserve\n  if (trigger && trigger.tagName === \"A\") e.preventDefault();\n  self.relatedTarget = trigger;\n  self.show();\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent<HTMLElement>) => {\n  const element = e.target;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  // istanbul ignore if @preserve: a solid filter is required\n  if (\n    !self || element === relatedTarget ||\n    element.contains(relatedTarget as Node)\n  ) return;\n\n  if ([mouseenterEvent, focusinEvent].includes(type)) {\n    Timer.clear(element, toastString);\n  } else {\n    Timer.set(element, () => self.hide(), self.options.delay, toastString);\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare element: HTMLElement;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: Element | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) {\n      addClass(element, fadeClass);\n    } else if (!options.animation && hasClass(element, fadeClass)) {\n      removeClass(element, fadeClass);\n    }\n\n    // dismiss button\n    this.dismiss = querySelector<HTMLElement>(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [\n      ...querySelectorAll<HTMLElement>(\n        toastToggleSelector,\n        getDocument(element),\n      ),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    // istanbul ignore if @preserve\n    if (!element || isShown) return;\n\n    dispatchEvent(element, showToastEvent);\n    if (!showToastEvent.defaultPrevented) showToast(this);\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    // istanbul ignore if @preserve\n    if (!element || !isShown) return;\n\n    dispatchEvent(element, hideToastEvent);\n    if (!hideToastEvent.defaultPrevented) hideToast(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, it will add the listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { element, triggers, dismiss, options, hide } = this;\n\n    // istanbul ignore else @preserve\n    if (dismiss) {\n      action(dismiss, mouseclickEvent, hide);\n    }\n\n    // istanbul ignore else @preserve\n    if (options.autohide) {\n      [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(\n        (e) => action(element, e, interactiveToastHandler),\n      );\n    }\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) =>\n        action(btn, mouseclickEvent, toastClickHandler)\n      );\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n    this._toggleEventListeners();\n    Timer.clear(element, toastString);\n\n    if (isShown) removeClass(element, showClass);\n\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from \"@thednp/shorty\";\n\nimport { addListener } from \"@thednp/event-listener\";\n\nimport Alert from \"../components/alert\";\nimport Button from \"../components/button\";\nimport Carousel from \"../components/carousel\";\nimport Collapse from \"../components/collapse\";\nimport Dropdown from \"../components/dropdown\";\nimport Modal from \"../components/modal\";\nimport Offcanvas from \"../components/offcanvas\";\nimport Popover from \"../components/popover\";\nimport ScrollSpy from \"../components/scrollspy\";\nimport Tab from \"../components/tab\";\nimport Toast from \"../components/toast\";\nimport Tooltip from \"../components/tooltip\";\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\ntype Component =\n  | Alert\n  | Button\n  | Carousel\n  | Collapse\n  | Dropdown\n  | Modal\n  | Offcanvas\n  | Popover\n  | ScrollSpy\n  | Tab\n  | Toast\n  | Tooltip;\n\n[\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n].forEach((c) => componentsList.set(c.prototype.name, c));\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = (\n  callback: (el: Element) => Component,\n  collection: HTMLCollectionOf<Element> | Element[],\n) => {\n  [...collection].forEach((x) => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<Element, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) {\n        (instance as T & { dispose: () => void }).dispose();\n      }\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName<Element>(\"*\", lookUp)];\n\n  componentsList.forEach((cs) => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter((item) => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach((comp) => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, \"DOMContentLoaded\", () => initCallback(), {\n    once: true,\n  });\n}\n"],"names":["De","Oe","$","Pe","Be","Fe","rt","ct","at","dt","pt","mt","bt","ht","yt","wt","Dt","xt","zt","Rt","je","qt","on","sn","rn","cn","gn","_t","$t","M","W","zn","t","e","te","R","n","o","s","Q","j","ne","Qn","Gn","qn","Zn","Yn","b","l","u","h","O","to","k","G","K","d","N","oe","q","g","ae","ie","ro","r","a","i","io","P","T","ue","lo","f","c","p","E","C","po","vo","bo","Eo","ho","x","le","v","yo","de","z","fe","pe","Ao","m","w","So","S","ko","me","A","ve","be","Ee","we","Co","F","H","y","Ae","Se","Do","zo","Vo","Uo","ke","Ro","Ne","Go","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","version","BaseComponent","target","config","element","isElement","isString","querySelector","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","self","dispatchEvent","hasClass","removeClass","emulateTransitionEnd","add","action","addListener","removeListener","dismiss","close","mouseclickEvent","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","setAttribute","ariaPressed","isActive","getAttribute","addClass","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","closest","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","keyArrowRight","keyArrowLeft","carouselDragHandler","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","activateCarouselIndicator","pointermoveEvent","passiveHandler","pointerupEvent","isHTMLElement","getElementsByClassName","activeIndex","transitionItem","matches","ar","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","touchstartEvent","dragstartEvent","arrow","indicator","keydownEvent","isAnimating","clone","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","getCurrentOpenDropdown","currentParent","type","isForm","mousedownEvent","dropdownClickHandler","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","dropdownIntersectionHandler","entry","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","getWindow","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","padStyle","toggleModalDismiss","modalDismissHandler","modalKeyHandler","afterModalHide","relatedTarget","focusElement","toggleFocusTrap","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","modalClickHandler","currentTarget","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","that","callback","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offcanvasTriggerHandler","offCanvasDismiss","selection","visibleTrigger","isOpen","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","offsetParent","scrollLeft","scrollTop","getNodeScroll","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","observerEntry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","elemOffsetLeft","elemOffsetTop","getRectRelativeToOffsetParent","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","toLowerCase","tooltipDefaults","_","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","isFunction","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","tipPositions","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","ariaDescribedBy","hasTip","disposeTooltipComplete","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","toggleTooltipOpenHandlers","parentModal","parentOffcanvas","titleAtt","tipComponent","elem","getUID","position","PositionObserver","entries","outTimer","showTooltipEvent","delay","hideTooltipEvent","enabled","tr","mousehoverEvent","focusinEvent","focusoutEvent","isApple","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","scrollTarget","itemsLength","_observer","isRoot","links","getElementsByTagName","scrollHEIGHT","href","ref","targetItem","rect","getOffsetHeight","link","toggleObservers","targets","getScrollHeight","clear","item","activate","parents","parentItem","menuItem","parentLink","spyTarget","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toastClickHandler","interactiveToastHandler","isShown","hide","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","cs","init","selector","removeDataAPI","comp"],"mappings":"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","x_google_ignoreList":[0,1,52]}