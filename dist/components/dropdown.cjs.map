{"version":3,"file":"dropdown.cjs","sources":["../../src/strings/dropdownComponent.ts","../../src/strings/dropdownMenuClass.ts","../../src/components/dropdown.ts"],"sourcesContent":["/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  querySelector,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"],[${dataBsToggle}=\"${dropupString}\"],[${dataBsToggle}=\"${dropendString}\"],[${dataBsToggle}=\"${dropstartString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore next: this test requires a navbar */\n  if (getElementStyle(menu, 'position') === 'static') return;\n\n  const RTL = isRTL(element);\n  // const menuStart = hasClass(menu, dropdownMenuStartClass);\n  const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n  // reset menu offset and position\n  const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n  resetProps.forEach(p => {\n    // menu.style[p] = '';\n    const style: { [key: string]: string } = {};\n    style[p] = '';\n    setElementStyle(menu, style);\n  });\n\n  // set initial position class\n  // take into account .btn-group parent as .dropdown\n  // this requires navbar/btn-group/input-group\n  let positionClass =\n    dropdownClasses.find(c => hasClass(parentElement, c)) ||\n    /* istanbul ignore next: fallback position */ dropdownString;\n\n  const dropdownMargin: { [key: string]: number[] } = {\n    dropdown: [offset, 0, 0],\n    dropup: [0, 0, offset],\n    dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n    dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n  };\n\n  const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n    dropdown: { top: '100%' },\n    dropup: { top: 'auto', bottom: '100%' },\n    dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n    dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n    menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n    menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n  };\n\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const { left: targetLeft, top: targetTop, width: targetWidth, height: targetHeight } = getBoundingClientRect(element);\n\n  // dropstart | dropend\n  const leftFullExceed = targetLeft - menuWidth - offset < 0;\n  // dropend\n  const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n  // dropstart | dropend\n  const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n  // dropdown\n  const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n  // dropup\n  const topExceed = targetTop - menuHeight - offset < 0;\n  // dropdown / dropup\n  const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n  const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n  // recompute position\n  // handle RTL as well\n  if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropendString;\n  }\n  if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropstartString;\n  }\n  if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n    positionClass = dropupString;\n  }\n\n  // override position for horizontal classes\n  if (horizontalClass.includes(positionClass) && bottomExceed) {\n    ObjectAssign(dropdownPosition[positionClass], {\n      top: 'auto',\n      bottom: 0,\n    });\n  }\n\n  // override position for vertical classes\n  if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n    // don't realign when menu is wider than window\n    // in both RTL and non-RTL readability is KING\n    let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n    if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n    if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n    if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n  }\n\n  const margins: number[] = dropdownMargin[positionClass];\n  setElementStyle(menu, {\n    ...dropdownPosition[positionClass],\n    margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n  });\n\n  // override dropdown-menu-start | dropdown-menu-end\n  if (verticalClass.includes(positionClass) && menuEnd) {\n    /* istanbul ignore else */\n    if (menuEnd) {\n      const endAdjust =\n        (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n      setElementStyle(menu, dropdownPosition[endAdjust]);\n    }\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler as EventListener);\n  action(doc, focusEvent, dropdownDismissHandler as EventListener);\n  action(doc, keydownEvent, dropdownPreventScroll as EventListener);\n  action(doc, keyupEvent, dropdownKeyHandler as EventListener);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param self the `Dropdown` instance\n * @param add when `true`, it will add the event listener\n */\nconst toggleDropdownHandler = (self: Dropdown, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler as EventListener);\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore next: impossible to satisfy */\n  if (!target || !(target as HTMLElement).closest) return; // some weird FF bug #409\n\n  const element = getCurrentOpenDropdown(target as HTMLElement);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const hasData = closest(target as HTMLElement, dropdownSelector) !== null;\n  const isForm =\n    parentElement &&\n    parentElement.contains(target as HTMLElement) &&\n    ((target as HTMLElement).tagName === 'form' || closest(target as HTMLElement, 'form') !== null);\n\n  if (type === mouseclickEvent && isEmptyAnchor(target as HTMLElement)) {\n    e.preventDefault();\n  }\n  if (type === focusEvent && (target === element || target === menu || menu.contains(target as HTMLElement))) {\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (isForm || hasData) {\n    // smile to ESLint\n  } else if (self) {\n    self.hide();\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopImmediatePropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n  /* istanbul ignore next: impossible to satisfy */\n  if (!self || !activeElement) return;\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n    let idx = menuItems.indexOf(activeElement);\n    /* istanbul ignore else */\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    /* istanbul ignore else */\n    if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n\n    // set targets\n    this.parentElement = parentElement as HTMLElement;\n    this.menu = querySelector(`.${dropdownMenuClass}`, parentElement as HTMLElement) as HTMLElement;\n\n    // add event listener\n    toggleDropdownHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (open) return;\n\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement && getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, showDropdownEvent);\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'true');\n\n    // change menu position\n    styleDropdown(this);\n\n    this.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, hideDropdownEvent);\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'false');\n\n    this.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    toggleDropdownHandler(this);\n    super.dispose();\n  }\n}\n"],"names":["dropdownComponent","dropdownMenuClass","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","dataBsToggle","getDropdownInstance","element","getInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","createCustomEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","styleDropdown","self","menu","parentElement","options","offset","getElementStyle","RTL","isRTL","menuEnd","hasClass","p","style","setElementStyle","positionClass","c","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","ObjectAssign","posAjust","margins","x","endAdjust","getMenuItems","firstElementChild","toggleDropdownDismiss","action","addListener","removeListener","doc","getDocument","mouseclickEvent","dropdownDismissHandler","focusEvent","keydownEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","passiveHandler","toggleDropdownHandler","add","dropdownClickHandler","getCurrentOpenDropdown","currentParent","getElementsByClassName","showClass","getAttribute","e","target","type","hasData","closest","isForm","isEmptyAnchor","keyArrowDown","keyArrowUp","code","activeElement","open","menuItems","idx","focus","keyEscape","BaseComponent","config","querySelector","currentElement","currentInstance","dispatchEvent","addClass","setAttribute","ariaExpanded","removeClass"],"mappings":"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"}