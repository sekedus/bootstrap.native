{"version":3,"file":"dropdown.cjs","sources":["../../src/strings/dropdownComponent.ts","../../src/strings/dropdownMenuClass.ts","../../src/util/isEmptyAnchor.ts","../../src/components/dropdown.ts"],"sourcesContent":["/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest, getAttribute } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (getAttribute(element, 'href') as string).slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, 'href') &&\n      (getAttribute(parentAnchor, 'href') as string).slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n  isHTMLElement,\n  mousedownEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<DropdownEvent>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore else: this test requires a navbar */\n  if (getElementStyle(menu, 'position') !== 'static') {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n    resetProps.forEach(p => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = '';\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass =\n      dropdownClasses.find(c => hasClass(parentElement, c)) ||\n      /* istanbul ignore next: fallback position */ dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: '100%' },\n      dropup: { top: 'auto', bottom: '100%' },\n      dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n      dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n      menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n      menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropendString;\n    }\n    if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: 'auto',\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n      if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n      if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n      if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      /* istanbul ignore else */\n      if (menuEnd) {\n        const endAdjust =\n          (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore else */\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    /* istanbul ignore else */\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm =\n        parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === 'form' || closest(target, 'form') !== null);\n\n      if ([mouseclickEvent, mousedownEvent].includes(type) && isEmptyAnchor(target)) {\n        e.preventDefault();\n      }\n\n      /* istanbul ignore else */\n      if (!isForm && type !== focusEvent && target !== element && target !== menu) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopPropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  /* istanbul ignore else */\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n      let idx = menuItems.indexOf(activeElement);\n      /* istanbul ignore else */\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      /* istanbul ignore else */\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(dropdownMenuClass, parentElement as ParentNode);\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement && getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'true');\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'false');\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n"],"names":["dropdownComponent","dropdownMenuClass","isEmptyAnchor","element","parentAnchor","closest","hasAttribute","getAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","dataBsToggle","getDropdownInstance","getInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","createCustomEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","self","menu","parentElement","options","offset","getElementStyle","RTL","isRTL","menuEnd","hasClass","p","style","setElementStyle","positionClass","c","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","ObjectAssign","posAjust","margins","x","endAdjust","dispatchEvent","getMenuItems","firstElementChild","toggleDropdownDismiss","action","addListener","removeListener","doc","getDocument","mouseclickEvent","dropdownDismissHandler","focusEvent","keydownEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","passiveHandler","getCurrentOpenDropdown","currentParent","getElementsByClassName","showClass","e","target","type","isHTMLElement","isForm","mousedownEvent","dropdownClickHandler","keyArrowDown","keyArrowUp","code","activeElement","open","menuItems","idx","focus","keyEscape","BaseComponent","config","__publicField","add","currentElement","currentInstance","addClass","setAttribute","ariaExpanded","removeClass"],"mappings":"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"}