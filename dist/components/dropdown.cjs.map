{"version":3,"file":"dropdown.cjs","sources":["../../src/strings/dropdownComponent.ts","../../src/strings/dropdownMenuClass.ts","../../src/util/isEmptyAnchor.ts","../../src/components/dropdown.ts"],"sourcesContent":["/** @type {string} */\nconst dropdownComponent = \"Dropdown\";\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = \"dropdown-menu\";\nexport default dropdownMenuClass;\n","import { closest, getAttribute, hasAttribute } from \"@thednp/shorty\";\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, \"A\");\n  return (\n    (element.tagName === \"A\" &&\n      // anchor href starts with #\n      hasAttribute(element, \"href\") &&\n      (getAttribute(element, \"href\") as string).slice(-1) === \"#\") ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, \"href\") &&\n      (getAttribute(parentAnchor, \"href\") as string).slice(-1) === \"#\")\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  focus,\n  focusEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  keyArrowDown,\n  keyArrowUp,\n  keydownEvent,\n  keyEscape,\n  keyupEvent,\n  mouseclickEvent,\n  mousedownEvent,\n  ObjectAssign,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport showClass from \"../strings/showClass\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dropdownClasses from \"../strings/dropdownClasses\";\nimport dropdownComponent from \"../strings/dropdownComponent\";\nimport dropdownMenuClass from \"../strings/dropdownMenuClass\";\n\nimport isEmptyAnchor from \"../util/isEmptyAnchor\";\nimport BaseComponent from \"./base-component\";\nimport type { DropdownEvent, DropdownOptions } from \"../interface/dropdown\";\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] =\n  dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) =>\n  getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = [\"A\", \"BUTTON\"];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: \"dynamic\", // [dynamic|static]\n};\n\ntype DropdownEventProps = { relatedTarget: HTMLElement };\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `show.bs.${dropdownString}`,\n);\nconst shownDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `shown.bs.${dropdownString}`,\n);\nconst hideDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `hide.bs.${dropdownString}`,\n);\nconst hiddenDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  // istanbul ignore else @preserve: this test requires a navbar\n  if (getElementStyle(menu, \"position\") !== \"static\") {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = [\"margin\", \"top\", \"bottom\", \"left\", \"right\"];\n    resetProps.forEach((p) => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = \"\";\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass = dropdownClasses.find((c) =>\n      hasClass(parentElement, c)\n    ) ||\n      // istanbul ignore next @preserve: fallback position\n      dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: \"100%\" },\n      dropup: { top: \"auto\", bottom: \"100%\" },\n      dropstart: RTL\n        ? { left: \"100%\", right: \"auto\" }\n        : { left: \"auto\", right: \"100%\" },\n      dropend: RTL\n        ? { left: \"auto\", right: \"100%\" }\n        : { left: \"100%\", right: \"auto\" },\n      menuStart: RTL\n        ? { right: \"0\", left: \"auto\" }\n        : { right: \"auto\", left: \"0\" },\n      menuEnd: RTL\n        ? { right: \"auto\", left: \"0\" }\n        : { right: \"0\", left: \"auto\" },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed =\n      targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed =\n      targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) &&\n      targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) &&\n      targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (\n      horizontalClass.includes(positionClass) && leftFullExceed &&\n      rightFullExceed\n    ) {\n      positionClass = dropdownString;\n    }\n    if (\n      positionClass === dropstartString &&\n      (!RTL ? leftFullExceed : rightFullExceed)\n    ) {\n      positionClass = dropendString;\n    }\n    if (\n      positionClass === dropendString &&\n      (RTL ? leftFullExceed : rightFullExceed)\n    ) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: \"auto\",\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust:\n        | { left: \"auto\" | number; right: \"auto\" | number }\n        | undefined = { left: \"auto\", right: \"auto\" };\n      // istanbul ignore else @preserve\n      if (!leftExceed && rightExceed && !RTL) {\n        posAjust = { left: \"auto\", right: 0 };\n      }\n      // istanbul ignore else @preserve\n      if (leftExceed && !rightExceed && RTL) {\n        posAjust = { left: 0, right: \"auto\" };\n      }\n      // istanbul ignore else @preserve\n      if (posAjust) {\n        ObjectAssign(dropdownPosition[positionClass], posAjust);\n      }\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map((x) => (x ? `${x}px` : x)).join(\" \")}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      // istanbul ignore else @preserve\n      if (menuEnd) {\n        const endAdjust = (!RTL && leftExceed) || (RTL && rightExceed)\n          ? \"menuStart\"\n          // istanbul ignore next @preserve\n          : \"menuEnd\";\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map((c) => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (\n        firstElementChild && menuFocusTags.includes(firstElementChild.tagName)\n      ) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter((c) => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options, menu } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  // istanbul ignore else @preserve\n  if (options.display === \"dynamic\") {\n    if (self.open) self._observer.observe(menu);\n    else self._observer.disconnect();\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (\n  element: HTMLElement,\n): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, \"btn-group\", \"input-group\"]\n    .map((c) =>\n      getElementsByClassName(`${c} ${showClass}`, getDocument(element))\n    )\n    .find((x) => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)]\n      .find((x) =>\n        dropdownClasses.some((c) => c === getAttribute(x, dataBsToggle))\n      );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  // istanbul ignore else @preserve\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    // istanbul ignore else @preserve\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm = parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === \"form\" || closest(target, \"form\") !== null);\n\n      if (\n        [mouseclickEvent, mousedownEvent].includes(type) &&\n        isEmptyAnchor(target)\n      ) {\n        e.preventDefault();\n      }\n\n      // istanbul ignore else @preserve\n      if (\n        !isForm && type !== focusEvent && target !== element && target !== menu\n      ) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    e.stopPropagation();\n    self.toggle();\n    // istanbul ignore else @preserve\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  // istanbul ignore else @preserve\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  // istanbul ignore else @preserve\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (\n      menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)\n    ) {\n      let idx = menuItems.indexOf(activeElement);\n      // istanbul ignore else @preserve\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      // istanbul ignore else @preserve\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownIntersectionHandler(target: HTMLElement) {\n  const element = getCurrentOpenDropdown(target);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n  declare _observer: IntersectionObserver;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(\n      dropdownMenuClass,\n      parentElement as ParentNode,\n    );\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n      this._observer = new IntersectionObserver(\n        ([entry]) => dropdownIntersectionHandler(entry.target as HTMLElement),\n        { threshold: 1 },\n      );\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore else @preserve\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement &&\n        getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(\n        (e) => {\n          e.relatedTarget = element;\n        },\n      );\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, \"true\");\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore else @preserve\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach((e) => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, \"false\");\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n"],"names":["dropdownComponent","dropdownMenuClass","isEmptyAnchor","element","parentAnchor","closest","hasAttribute","getAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","dataBsToggle","getDropdownInstance","getInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","createCustomEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","self","menu","parentElement","options","offset","getElementStyle","RTL","isRTL","menuEnd","hasClass","p","style","setElementStyle","positionClass","c","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","ObjectAssign","posAjust","margins","x","endAdjust","dispatchEvent","getMenuItems","firstElementChild","toggleDropdownDismiss","action","addListener","removeListener","doc","getDocument","mouseclickEvent","dropdownDismissHandler","focusEvent","keydownEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","getCurrentOpenDropdown","currentParent","getElementsByClassName","showClass","e","target","type","isHTMLElement","isForm","mousedownEvent","dropdownClickHandler","keyArrowDown","keyArrowUp","code","activeElement","open","menuItems","idx","focus","keyEscape","dropdownIntersectionHandler","BaseComponent","config","entry","currentElement","currentInstance","addClass","setAttribute","ariaExpanded","removeClass","add"],"mappings":"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"}