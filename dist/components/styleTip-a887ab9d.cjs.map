{"version":3,"file":"styleTip-a887ab9d.cjs","sources":["../../src/strings/popoverComponent.ts","../../src/util/styleTip.ts"],"sourcesContent":["/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  isMedia,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n * @param e event object\n */\nconst styleTip = <T extends Tooltip>(self: T, e?: Event & PointerEvent) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n  if (!tooltip) return;\n  const tipPositions = { ...tipClassPositions };\n\n  const RTL = isRTL(element);\n\n  // reset tooltip style (top: 0, left: 0 works best)\n  setElementStyle(tooltip, {\n    // top: '0px', left: '0px', right: '', bottom: '',\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  const isPopover = self.name === popoverComponent;\n  const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n  const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n  let { placement } = options;\n  const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n  const parentPosition = getElementStyle(container as HTMLElement, 'position');\n  const fixedParent = parentPosition === 'fixed';\n  const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n  const leftBoundry = RTL && fixedParent ? scrollbarWidth : 0;\n  const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n  const {\n    width: elemWidth,\n    height: elemHeight,\n    left: elemRectLeft,\n    right: elemRectRight,\n    top: elemRectTop,\n  } = getBoundingClientRect(element, true);\n  const { x, y } = {\n    x: elemRectLeft,\n    y: elemRectTop,\n  };\n  // reset arrow style\n  setElementStyle(arrow as HTMLElement, {\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  let topPosition: number | string = 0;\n  let leftPosition: number | string = 0;\n  let rightPosition: number | string = '';\n  let arrowTop: number | string = '';\n  let arrowLeft: number | string = '';\n  let arrowRight: number | string = '';\n\n  const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n  const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n  const arrowAdjust = arrowWidth / 2;\n\n  // check placement\n  let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n  let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n  let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n  let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n  const horizontals = ['left', 'right'];\n  const verticals = ['top', 'bottom'];\n\n  topExceed = horizontals.includes(placement)\n    ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n    : topExceed;\n  bottomExceed = horizontals.includes(placement)\n    ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n    : bottomExceed;\n  leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n  rightExceed = verticals.includes(placement)\n    ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n    : rightExceed;\n\n  // first remove side positions if both left and right limits are exceeded\n  // we usually fall back to top|bottom\n  placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n  // recompute placement\n  placement = placement === 'top' && topExceed ? 'bottom' : placement;\n  placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n  placement = placement === 'left' && leftExceed ? 'right' : placement;\n  placement = placement === 'right' && rightExceed ? 'left' : placement;\n\n  // update tooltip/popover class\n  if (!tooltip.className.includes(placement)) {\n    tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n  }\n\n  // compute tooltip / popover coordinates\n  /* istanbul ignore else */\n  if (horizontals.includes(placement)) {\n    // secondary|side positions\n    if (placement === 'left') {\n      // LEFT\n      leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n    } else {\n      // RIGHT\n      leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n    }\n\n    // adjust top and arrow\n    if (topExceed) {\n      topPosition = y;\n      // topPosition += (isSticky ? -parentTop - scroll.y : 0);\n      arrowTop = elemHeight / 2 - arrowWidth;\n    } else if (bottomExceed) {\n      topPosition = y - tipHeight + elemHeight;\n      // topPosition += (isSticky ? -parentTop - scroll.y : 0);\n      arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n    } else {\n      topPosition = y - tipHeight / 2 + elemHeight / 2;\n      // topPosition += (isSticky ? -parentTop - scroll.y : 0);\n      arrowTop = tipHeight / 2 - arrowHeight / 2;\n    }\n  } else if (verticals.includes(placement)) {\n    if (e && isMedia(element)) {\n      const eX = e.clientX;\n      const eY = e.clientY;\n\n      if (placement === 'top') {\n        topPosition = eY - tipHeight - arrowWidth;\n      } else {\n        topPosition = eY + arrowWidth;\n      }\n\n      // adjust (left | right) and also the arrow\n      if (e.clientX - tipWidth / 2 < leftBoundry) {\n        leftPosition = RTL ? scrollbarWidth : 0;\n        arrowLeft = eX - arrowAdjust;\n        arrowLeft -= fixedParent ? (RTL ? scrollbarWidth : 0) : 0;\n      } else if (e.clientX + tipWidth / 2 > rightBoundry) {\n        leftPosition = 'auto';\n        rightPosition = !RTL ? scrollbarWidth : 0;\n        arrowRight = rightBoundry - eX - arrowAdjust;\n        arrowRight += fixedParent ? (RTL ? scrollbarWidth : 0) : 0;\n\n        // normal top/bottom\n      } else {\n        leftPosition = eX - tipWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    } else {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        // arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n  }\n\n  // apply style to tooltip/popover\n  setElementStyle(tooltip, {\n    top: `${topPosition}px`,\n    left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n    right: rightPosition !== '' ? `${rightPosition}px` : '',\n  });\n\n  // update arrow placement\n  /* istanbul ignore else */\n  if (isHTMLElement(arrow)) {\n    if (arrowTop !== '') {\n      arrow.style.top = `${arrowTop}px`;\n    }\n    if (arrowLeft !== '') {\n      arrow.style.left = `${arrowLeft}px`;\n    } else if (arrowRight !== '') {\n      arrow.style.right = `${arrowRight}px`;\n    }\n  }\n};\n\nexport default styleTip;\n"],"names":["popoverComponent","styleTip","self","e","tipClasses","element","tooltip","container","options","arrow","tipPositions","tipClassPositions","RTL","isRTL","setElementStyle","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","getDocumentElement","placement","parentCWidth","parentOWidth","fixedParent","getElementStyle","scrollbarWidth","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","getBoundingClientRect","x","y","topPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","topExceed","bottomExceed","leftExceed","rightExceed","horizontals","verticals","isMedia","eX","eY","isHTMLElement"],"mappings":"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"}