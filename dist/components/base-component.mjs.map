{"version":3,"file":"base-component.mjs","sources":["../../src/version.ts","../../src/components/base-component.ts"],"sourcesContent":["import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  element: HTMLElement;\n  options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<this>(element, this.name);\n    if (prevInstance) prevInstance.dispose();\n\n    this.element = element;\n\n    /* istanbul ignore else */\n    if (this.defaults && ObjectKeys(this.defaults).length) {\n      this.options = normalizeOptions(element, this.defaults, config || {}, 'bs');\n    }\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /**\n   * Removes component from target element;\n   */\n  dispose() {\n    Data.remove(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n"],"names":["Version","version","BaseComponent","target","config","element","querySelector","isString","prevInstance","Data","ObjectKeys","normalizeOptions","prop"],"mappings":";0BAEMA,IAAUC;ACMhB,MAAqBC,EAAc;AAAA,EACjC;AAAA,EACA;AAAA,EAMA,YAAYC,GAA8BC,GAAsB;AACxD,UAAAC,IAAUC,EAAcH,CAAM;AAEpC,QAAI,CAACE;AACC,YAAAE,EAASJ,CAAM,IACX,MAAM,GAAG,KAAK,gBAAgBA,6BAAkC,IAEhE,MAAM,GAAG,KAAK,4DAA4D;AAIpF,UAAMK,IAAeC,EAAK,IAAUJ,GAAS,KAAK,IAAI;AAClD,IAAAG,KAAcA,EAAa,QAAQ,GAEvC,KAAK,UAAUH,GAGX,KAAK,YAAYK,EAAW,KAAK,QAAQ,EAAE,WACxC,KAAA,UAAUC,EAAiBN,GAAS,KAAK,UAAUD,KAAU,IAAI,IAAI,IAG5EK,EAAK,IAAIJ,GAAS,KAAK,MAAM,IAAI;AAAA,EACnC;AAAA,EAGA,IAAI,UAAU;AACL,WAAAL;AAAA,EACT;AAAA,EAGA,IAAI,OAAO;AACF,WAAA;AAAA,EACT;AAAA,EAGA,IAAI,WAAW;AACb,WAAO;EACT;AAAA,EAKA,UAAU;AACRS,IAAAA,EAAK,OAAO,KAAK,SAAS,KAAK,IAAI,GACxBC,EAAA,IAAI,EAAE,QAAQ,CAAQE,MAAA;AAC/B,aAAO,KAAKA;AAAA,IAAA,CACb;AAAA,EACH;AACF;"}