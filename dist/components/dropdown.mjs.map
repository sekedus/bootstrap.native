{"version":3,"file":"dropdown.mjs","sources":["../../src/strings/dropdownComponent.ts","../../src/strings/dropdownMenuClass.ts","../../src/util/isEmptyAnchor.ts","../../src/components/dropdown.ts"],"sourcesContent":["/** @type {string} */\nconst dropdownComponent = \"Dropdown\";\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = \"dropdown-menu\";\nexport default dropdownMenuClass;\n","import { closest, getAttribute, hasAttribute } from \"@thednp/shorty\";\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, \"A\");\n  return (\n    (element.tagName === \"A\" &&\n      // anchor href starts with #\n      hasAttribute(element, \"href\") &&\n      (getAttribute(element, \"href\") as string).slice(-1) === \"#\") ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, \"href\") &&\n      (getAttribute(parentAnchor, \"href\") as string).slice(-1) === \"#\")\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  focus,\n  focusEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  keyArrowDown,\n  keyArrowUp,\n  keydownEvent,\n  keyEscape,\n  keyupEvent,\n  mouseclickEvent,\n  mousedownEvent,\n  ObjectAssign,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport showClass from \"../strings/showClass\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dropdownClasses from \"../strings/dropdownClasses\";\nimport dropdownComponent from \"../strings/dropdownComponent\";\nimport dropdownMenuClass from \"../strings/dropdownMenuClass\";\n\nimport isEmptyAnchor from \"../util/isEmptyAnchor\";\nimport BaseComponent from \"./base-component\";\nimport type { DropdownEvent, DropdownOptions } from \"../interface/dropdown\";\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] =\n  dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) =>\n  getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = [\"A\", \"BUTTON\"];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: \"dynamic\", // [dynamic|static]\n};\n\ntype DropdownEventProps = { relatedTarget: HTMLElement };\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `show.bs.${dropdownString}`,\n);\nconst shownDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `shown.bs.${dropdownString}`,\n);\nconst hideDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `hide.bs.${dropdownString}`,\n);\nconst hiddenDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  // istanbul ignore else @preserve: this test requires a navbar\n  if (getElementStyle(menu, \"position\") !== \"static\") {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = [\"margin\", \"top\", \"bottom\", \"left\", \"right\"];\n    resetProps.forEach((p) => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = \"\";\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass = dropdownClasses.find((c) =>\n      hasClass(parentElement, c)\n    ) ||\n      // istanbul ignore next @preserve: fallback position\n      dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: \"100%\" },\n      dropup: { top: \"auto\", bottom: \"100%\" },\n      dropstart: RTL\n        ? { left: \"100%\", right: \"auto\" }\n        : { left: \"auto\", right: \"100%\" },\n      dropend: RTL\n        ? { left: \"auto\", right: \"100%\" }\n        : { left: \"100%\", right: \"auto\" },\n      menuStart: RTL\n        ? { right: \"0\", left: \"auto\" }\n        : { right: \"auto\", left: \"0\" },\n      menuEnd: RTL\n        ? { right: \"auto\", left: \"0\" }\n        : { right: \"0\", left: \"auto\" },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed =\n      targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed =\n      targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) &&\n      targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) &&\n      targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (\n      horizontalClass.includes(positionClass) && leftFullExceed &&\n      rightFullExceed\n    ) {\n      positionClass = dropdownString;\n    }\n    if (\n      positionClass === dropstartString &&\n      (!RTL ? leftFullExceed : rightFullExceed)\n    ) {\n      positionClass = dropendString;\n    }\n    if (\n      positionClass === dropendString &&\n      (RTL ? leftFullExceed : rightFullExceed)\n    ) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: \"auto\",\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust:\n        | { left: \"auto\" | number; right: \"auto\" | number }\n        | undefined = { left: \"auto\", right: \"auto\" };\n      // istanbul ignore else @preserve\n      if (!leftExceed && rightExceed && !RTL) {\n        posAjust = { left: \"auto\", right: 0 };\n      }\n      // istanbul ignore else @preserve\n      if (leftExceed && !rightExceed && RTL) {\n        posAjust = { left: 0, right: \"auto\" };\n      }\n      // istanbul ignore else @preserve\n      if (posAjust) {\n        ObjectAssign(dropdownPosition[positionClass], posAjust);\n      }\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map((x) => (x ? `${x}px` : x)).join(\" \")}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      // istanbul ignore else @preserve\n      if (menuEnd) {\n        const endAdjust = (!RTL && leftExceed) || (RTL && rightExceed)\n          ? \"menuStart\"\n          // istanbul ignore next @preserve\n          : \"menuEnd\";\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map((c) => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (\n        firstElementChild && menuFocusTags.includes(firstElementChild.tagName)\n      ) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter((c) => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options, menu } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  // istanbul ignore else @preserve\n  if (options.display === \"dynamic\") {\n    if (self.open) self._observer.observe(menu);\n    else self._observer.disconnect();\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (\n  element: HTMLElement,\n): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, \"btn-group\", \"input-group\"]\n    .map((c) =>\n      getElementsByClassName(`${c} ${showClass}`, getDocument(element))\n    )\n    .find((x) => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)]\n      .find((x) =>\n        dropdownClasses.some((c) => c === getAttribute(x, dataBsToggle))\n      );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  // istanbul ignore else @preserve\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    // istanbul ignore else @preserve\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm = parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === \"form\" || closest(target, \"form\") !== null);\n\n      if (\n        [mouseclickEvent, mousedownEvent].includes(type) &&\n        isEmptyAnchor(target)\n      ) {\n        e.preventDefault();\n      }\n\n      // istanbul ignore else @preserve\n      if (\n        !isForm && type !== focusEvent && target !== element && target !== menu\n      ) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    e.stopPropagation();\n    self.toggle();\n    // istanbul ignore else @preserve\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  // istanbul ignore else @preserve\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  // istanbul ignore else @preserve\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (\n      menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)\n    ) {\n      let idx = menuItems.indexOf(activeElement);\n      // istanbul ignore else @preserve\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      // istanbul ignore else @preserve\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownIntersectionHandler(target: HTMLElement) {\n  const element = getCurrentOpenDropdown(target);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n  declare _observer: IntersectionObserver;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(\n      dropdownMenuClass,\n      parentElement as ParentNode,\n    );\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n      this._observer = new IntersectionObserver(\n        ([entry]) => dropdownIntersectionHandler(entry.target as HTMLElement),\n        { threshold: 1 },\n      );\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore else @preserve\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement &&\n        getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(\n        (e) => {\n          e.relatedTarget = element;\n        },\n      );\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, \"true\");\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore else @preserve\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach((e) => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, \"false\");\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n"],"names":["dropdownComponent","dropdownMenuClass","isEmptyAnchor","element","parentAnchor","closest","hasAttribute","getAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","dataBsToggle","getDropdownInstance","getInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","createCustomEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","self","menu","parentElement","options","offset","getElementStyle","RTL","isRTL","menuEnd","hasClass","p","style","setElementStyle","positionClass","c","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","ObjectAssign","posAjust","margins","x","dispatchEvent","getMenuItems","firstElementChild","toggleDropdownDismiss","action","addListener","removeListener","doc","getDocument","mouseclickEvent","dropdownDismissHandler","focusEvent","keydownEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","getCurrentOpenDropdown","currentParent","getElementsByClassName","showClass","e","target","type","isHTMLElement","isForm","mousedownEvent","dropdownClickHandler","keyArrowDown","keyArrowUp","code","activeElement","open","menuItems","idx","focus","keyEscape","dropdownIntersectionHandler","BaseComponent","config","__publicField","add","entry","currentElement","currentInstance","addClass","setAttribute","ariaExpanded","removeClass"],"mappings":";;;;;;;;;AACA,MAAMA,KAAoB,YCEpBC,KAAoB,iBCMpBC,KAAgB,CAACC,MAAyB;AAExC,QAAAC,IAAeC,EAAQF,GAAS,GAAG;AACzC,SACGA,EAAQ,YAAY;AAAA,EAEnBG,EAAaH,GAAS,MAAM,KAC3BI,EAAaJ,GAAS,MAAM,EAAa,MAAM,EAAE,MAAM;AAAA,EAEzDC,KACCE,EAAaF,GAAc,MAAM,KAChCG,EAAaH,GAAc,MAAM,EAAa,MAAM,EAAE,MAAM;AAEnE,GC0BM,CAACI,GAAgBC,GAAcC,GAAiBC,CAAa,IACjEC,GACIC,KAAmB,IAAIC,EAAY,KAAKN,CAAc,MAMtDO,IAAsB,CAACZ,MAC3Ba,GAAsBb,GAASH,EAAiB,GAK5CiB,KAAuB,CAACd,MAAyB,IAAIe,EAASf,CAAO,GAKrEgB,KAAuB,GAAGlB,EAAiB,QAC3CmB,KAAgB,CAACZ,GAAgBC,CAAY,GAC7CY,KAAkB,CAACX,GAAiBC,CAAa,GACjDW,KAAgB,CAAC,KAAK,QAAQ,GAE9BC,KAAmB;AAAA,EACvB,QAAQ;AAAA;AAAA,EACR,SAAS;AAAA;AACX,GAMMC,IAAoBC;AAAA,EACxB,WAAWjB,CAAc;AAC3B,GACMkB,KAAqBD;AAAA,EACzB,YAAYjB,CAAc;AAC5B,GACMmB,IAAoBF;AAAA,EACxB,WAAWjB,CAAc;AAC3B,GACMoB,KAAsBH,EAG1B,aAAajB,CAAc,EAAE,GACzBqB,KAAuBJ,EAG3B,cAAcjB,CAAc,EAAE,GAU1BsB,KAAgB,CAACC,MAAmB;AACxC,QAAM,EAAE,SAAA5B,GAAS,MAAA6B,GAAM,eAAAC,GAAe,SAAAC,EAAY,IAAAH,GAC5C,EAAE,QAAAI,MAAWD;AAAA,EAAA;AAInB,MAAIE,GAAgBJ,GAAM,UAAU,MAAM,UAAU;AAC5C,UAAAK,IAAMC,GAAMnC,CAAO,GAEnBoC,IAAUC,EAASR,GAAMb,EAAoB;AAIxC,IADQ,CAAC,UAAU,OAAO,UAAU,QAAQ,OAAO,EACnD,QAAQ,CAACsB,MAAM;AAExB,YAAMC,IAAmC,CAAC;AAC1C,MAAAA,EAAMD,CAAC,IAAI,IACXE,EAAgBX,GAAMU,CAAK;AAAA,IAAA,CAC5B;AAKD,QAAIE,IAAgBhC,EAAgB;AAAA,MAAK,CAACiC,MACxCL,EAASP,GAAeY,CAAC;AAAA,IAC3B;AAAA,IAEErC;AAEF,UAAMsC,KAA8C;AAAA,MAClD,UAAU,CAACX,GAAQ,GAAG,CAAC;AAAA,MACvB,QAAQ,CAAC,GAAG,GAAGA,CAAM;AAAA,MACrB,WAAWE,IAAM,CAAC,IAAI,GAAG,GAAGF,CAAM,IAAI,CAAC,IAAIA,GAAQ,CAAC;AAAA,MACpD,SAASE,IAAM,CAAC,IAAIF,GAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAGA,CAAM;AAAA,IACpD,GAEMY,IAAgE;AAAA,MACpE,UAAU,EAAE,KAAK,OAAO;AAAA,MACxB,QAAQ,EAAE,KAAK,QAAQ,QAAQ,OAAO;AAAA,MACtC,WAAWV,IACP,EAAE,MAAM,QAAQ,OAAO,OAAO,IAC9B,EAAE,MAAM,QAAQ,OAAO,OAAO;AAAA,MAClC,SAASA,IACL,EAAE,MAAM,QAAQ,OAAO,OAAO,IAC9B,EAAE,MAAM,QAAQ,OAAO,OAAO;AAAA,MAClC,WAAWA,IACP,EAAE,OAAO,KAAK,MAAM,OAAO,IAC3B,EAAE,OAAO,QAAQ,MAAM,IAAI;AAAA,MAC/B,SAASA,IACL,EAAE,OAAO,QAAQ,MAAM,IAAI,IAC3B,EAAE,OAAO,KAAK,MAAM,OAAO;AAAA,IACjC,GAEM,EAAE,aAAaW,GAAW,cAAcC,EAAe,IAAAjB,GAEvD,EAAE,aAAAkB,GAAa,cAAAC,MAAiBC,GAAmBjD,CAAO,GAC1D;AAAA,MACJ,MAAMkD;AAAA,MACN,KAAKC;AAAA,MACL,OAAOC;AAAA,MACP,QAAQC;AAAA,IAAA,IACNC,GAAsBtD,CAAO,GAG3BuD,IAAiBL,IAAaL,IAAYb,IAAS,GAEnDwB,IACJN,IAAaL,IAAYO,IAAcpB,KAAUe,GAE7CU,KAAeN,IAAYL,IAAad,KAAUgB,GAElDU,IACJP,IAAYL,IAAaO,KAAerB,KAAUgB,GAE9CW,IAAYR,IAAYL,IAAad,IAAS,GAE9C4B,KAAe,CAAC1B,KAAOE,KAAaF,KAAO,CAACE,MAChDc,IAAaE,IAAcP,IAAY,GACnCgB,KAAgB3B,KAAOE,KAAa,CAACF,KAAO,CAACE,MACjDc,IAAaL,KAAaE;AAsC5B,QAjCE7B,GAAgB,SAASuB,CAAa,KAAKc,KAC3CC,MAEgBf,IAAApC,IAGhBoC,MAAkBlC,MAChB2B,IAAuBsB,IAAjBD,OAEQd,IAAAjC,IAGhBiC,MAAkBjC,MACjB0B,IAAMqB,IAAiBC,OAERf,IAAAlC,IAEdkC,MAAkBnC,KAAgBqD,KAAa,CAACD,MAClCjB,IAAApC,IAEdoC,MAAkBpC,KAAkBqD,KAAoB,CAACC,MAC3ClB,IAAAnC,IAIdY,GAAgB,SAASuB,CAAa,KAAKgB,MAChCK,GAAAlB,EAAiBH,CAAa,GAAG;AAAA,MAC5C,KAAK;AAAA,MACL,QAAQ;AAAA,IAAA,CACT,GAICxB,GAAc,SAASwB,CAAa,MAAMmB,KAAcC,IAAc;AAGxE,UAAIE,IAEY,EAAE,MAAM,QAAQ,OAAO,OAAO;AAAA,MAAA;AAE9C,MAAI,CAACH,KAAcC,KAAe,CAAC3B,MACjC6B,IAAW,EAAE,MAAM,QAAQ,OAAO,EAAE;AAAA,MACtC;AAEI,MAAAH,KAAc,CAACC,KAAe3B,MAChC6B,IAAW,EAAE,MAAM,GAAG,OAAO,OAAO;AAAA,MACtC;AAEA,MAAIA,KACWD,GAAAlB,EAAiBH,CAAa,GAAGsB,CAAQ;AAAA,IACxD;AAGI,UAAAC,KAAoBrB,GAAeF,CAAa;AAOtD,QANAD,EAAgBX,GAAM;AAAA,MACpB,GAAGe,EAAiBH,CAAa;AAAA,MACjC,QAAQ,GAAGuB,GAAQ,IAAI,CAACC,MAAOA,KAAI,GAAGA,CAAC,IAAS,EAAE,KAAK,GAAG,CAAC;AAAA,IAAA,CAC5D,GAGGhD,GAAc,SAASwB,CAAa,KAAKL,GAAS;AAAA,MAAA;AAEpD,MAAIA,KAKcI,EAAAX,GAAMe,EAJH,CAACV,KAAO0B,KAAgB1B,KAAO2B,IAC9C,cAEA,SAC4C,CAAC;AAAA,IACnD;AAGF,IAAAK,EAAcpC,GAAeJ,EAAoB;AAAA,EAAA;AAErD,GAQMyC,KAAe,CAACtC,MACb,CAAC,GAAGA,EAAK,QAAQ,EACrB,IAAI,CAACa,MAAM;AACV,MAAIA,KAAKvB,GAAc,SAASuB,EAAE,OAAO,EAAU,QAAAA;AAC7C,QAAA,EAAE,mBAAA0B,MAAsB1B;AAC9B,SACE0B,KAAqBjD,GAAc,SAASiD,EAAkB,OAAO,IAE9DA,IAEF;AACR,CAAA,EACA,OAAO,CAAC1B,MAAMA,CAAC,GASd2B,KAAwB,CAACzC,MAAmB;AAChD,QAAM,EAAE,SAAA5B,GAAS,SAAA+B,GAAS,MAAAF,EAAS,IAAAD,GAC7B0C,IAAS1C,EAAK,OAAO2C,KAAcC,IACnCC,IAAMC,EAAY1E,CAAO;AAExB,EAAAsE,EAAAG,GAAKE,GAAiBC,EAAsB,GAC5CN,EAAAG,GAAKI,IAAYD,EAAsB,GACvCN,EAAAG,GAAKK,IAAcC,EAAqB,GACxCT,EAAAG,GAAKO,IAAYC,EAAkB;AAAA,EAAA;AAGtC,EAAAlD,EAAQ,YAAY,cAClBH,EAAK,OAAWA,EAAA,UAAU,QAAQC,CAAI,IACrCD,EAAK,UAAU,WAAW;AAEnC,GAQMsD,IAAyB,CAC7BlF,MAC4B;AAC5B,QAAMmF,IAAgB,CAAC,GAAG1E,GAAiB,aAAa,aAAa,EAClE;AAAA,IAAI,CAACiC,MACJ0C,GAAuB,GAAG1C,CAAC,IAAI2C,CAAS,IAAIX,EAAY1E,CAAO,CAAC;AAAA,EAEjE,EAAA,KAAK,CAACiE,MAAMA,EAAE,MAAM;AAEnB,MAAAkB,KAAiBA,EAAc;AACjC,WAAO,CAAC,GAAIA,EAAc,CAAC,EAAE,QAA0C,EACpE;AAAA,MAAK,CAAClB,MACLxD,EAAgB,KAAK,CAACiC,MAAMA,MAAMtC,EAAa6D,GAAGtD,EAAY,CAAC;AAAA,IACjE;AAGN,GASMiE,KAAyB,CAACU,MAAkB;AAC1C,QAAA,EAAE,QAAAC,GAAQ,MAAAC,EAAA,IAASF;AAAA,EAAA;AAGrB,MAAAC,KAAUE,GAAcF,CAAM,GAAG;AAE7B,UAAAvF,IAAUkF,EAAuBK,CAAM,GACvC3D,IAAO5B,KAAWY,EAAoBZ,CAAO;AAAA,IAAA;AAGnD,QAAI4B,GAAM;AACF,YAAA,EAAE,eAAAE,GAAe,MAAAD,EAAA,IAASD,GAE1B8D,IAAS5D,KACbA,EAAc,SAASyD,CAAM,MAC5BA,EAAO,YAAY,UAAUrF,EAAQqF,GAAQ,MAAM,MAAM;AAG1D,MAAA,CAACZ,GAAiBgB,EAAc,EAAE,SAASH,CAAI,KAC/CzF,GAAcwF,CAAM,KAEpBD,EAAE,eAAe;AAAA,MACnB;AAGA,MACE,CAACI,KAAUF,MAASX,MAAcU,MAAWvF,KAAWuF,MAAW1D,KAEnED,EAAK,KAAK;AAAA,IACZ;AAAA,EACF;AAEJ,GAOMgE,KAAuB,CAACN,MAAkB;AACxC,QAAA,EAAE,QAAAC,MAAWD,GACbtF,IAAUuF,KAAUrF,EAAQqF,GAAuB7E,EAAgB,GACnEkB,IAAO5B,KAAWY,EAAoBZ,CAAO;AAAA,EAAA;AAGnD,MAAI4B,GAAM;AACR,IAAA0D,EAAE,gBAAgB,GAClB1D,EAAK,OAAO;AAAA,IAAA;AAEZ,IAAI5B,KAAWD,GAAcC,CAAO,OAAK,eAAe;AAAA,EAAA;AAE5D,GAOM+E,KAAwB,CAACO,MAAqB;AAAA,EAAA;AAE9C,EAAA,CAACO,GAAcC,CAAU,EAAE,SAASR,EAAE,IAAI,KAAGA,EAAE,eAAe;AACpE;AAOA,SAASL,GAAsCK,GAAkB;AACzD,QAAA,EAAE,MAAAS,MAAST,GACXtF,IAAUkF,EAAuB,IAAI,GACrCtD,IAAO5B,KAAWY,EAAoBZ,CAAO,GAC7C,EAAE,eAAAgG,EAAmB,IAAAhG,KAAW0E,EAAY1E,CAAO;AAAA,EAAA;AAGzD,MAAI4B,KAAQoE,GAAe;AACnB,UAAA,EAAE,MAAAnE,GAAM,MAAAoE,EAAA,IAASrE,GACjBsE,IAAY/B,GAAatC,CAAI;AAIjC,QAAAqE,KAAaA,EAAU,UAAU,CAACL,GAAcC,CAAU,EAAE,SAASC,CAAI,GACzE;AACI,UAAAI,IAAMD,EAAU,QAAQF,CAAa;AAAA,MAAA;AAEzC,MAAIA,MAAkBhG,IACdmG,IAAA,IACGJ,MAASD,IACZK,IAAAA,IAAM,IAAIA,IAAM,IAAI,IACjBJ,MAASF,MAClBM,IAAMA,IAAMD,EAAU,SAAS,IAAIC,IAAM,IAAIA;AAAA,MAC/C;AAEA,MAAID,EAAUC,CAAG,KAASC,EAAAF,EAAUC,CAAG,CAAgB;AAAA,IAAA;AAGrD,IAAAE,OAAcN,KAAQE,MACxBrE,EAAK,OAAO,GACZwE,EAAMpG,CAAO;AAAA,EACf;AAEJ;AAGA,SAASsG,GAA4Bf,GAAqB;AAClD,QAAAvF,IAAUkF,EAAuBK,CAAM,GACvC3D,IAAO5B,KAAWY,EAAoBZ,CAAO;AAAA,EAAA;AAGnD,EAAI4B,KAAQA,EAAK,QAAMD,GAAcC,CAAI;AAC3C;AAKA,MAAqBb,UAAiBwF,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAclD,YAAYhB,GAA8BiB,GAAmC;AAC3E,UAAMjB,GAAQiB,CAAM;AA8GtB;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC,EAAA,+BAAwB,CAACC,MAAkB;AAElC,OADQA,IAAMnC,KAAcC,IAC5B,KAAK,SAASG,GAAiBiB,EAAoB;AAAA,IAC5D;AA9GQ,UAAA,EAAE,eAAA9D,MAAkB,KAAK,SACzB,CAACD,CAAI,IAAIuD;AAAA,MACbtF;AAAA,MACAgC;AAAA,IACF;AAGA,IAAID,MAEF,KAAK,gBAAgBC,GACrB,KAAK,OAAOD,GACZ,KAAK,YAAY,IAAI;AAAA,MACnB,CAAC,CAAC8E,CAAK,MAAML,GAA4BK,EAAM,MAAqB;AAAA,MACpE,EAAE,WAAW,EAAE;AAAA,IACjB,GAGA,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAMF,IAAI,OAAO;AACF,WAAA9G;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAKT,IAAI,WAAW;AACN,WAAAuB;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAMT,SAAS;AACH,IAAA,KAAK,OAAM,KAAK,KAAK,SACf,KAAK;AAAA,EAAA;AAAA;AAAA,EAIjB,OAAO;AACL,UAAM,EAAE,SAAApB,GAAS,MAAAiG,GAAM,MAAApE,GAAM,eAAAC,EAAkB,IAAA;AAAA,IAAA;AAG/C,QAAI,CAACmE,GAAM;AACH,YAAAW,IAAiB1B,EAAuBlF,CAAO,GAC/C6G,IAAkBD,KACtBhG,EAAoBgG,CAAc;AAChC,MAAAC,OAAiC,KAAK,GAGzC,CAAAxF,GAAmBE,IAAoBG,EAAoB,EAAE;AAAA,QAC5D,CAAC4D,MAAM;AACL,UAAAA,EAAE,gBAAgBtF;AAAA,QAAA;AAAA,MAEtB,GAEAkE,EAAcpC,GAAeT,CAAiB,GACzCA,EAAkB,qBACrByF,EAASjF,GAAMwD,CAAS,GACxByB,EAAShF,GAAeuD,CAAS,GACpB0B,EAAA/G,GAASgH,GAAc,MAAM,GAG1CrF,GAAc,IAAI,GAElB,KAAK,OAAO,CAACsE,GAEbG,EAAMpG,CAAO,GACbqE,GAAsB,IAAI,GAC1BH,EAAcpC,GAAeP,EAAkB;AAAA,IACjD;AAAA,EACF;AAAA;AAAA,EAIF,OAAO;AACL,UAAM,EAAE,SAAAvB,GAAS,MAAAiG,GAAM,MAAApE,GAAM,eAAAC,EAAkB,IAAA;AAAA,IAAA;AAG/C,IAAImE,MACF,CAACzE,GAAmBC,EAAmB,EAAE,QAAQ,CAAC6D,MAAM;AACtD,MAAAA,EAAE,gBAAgBtF;AAAA,IAAA,CACnB,GAEDkE,EAAcpC,GAAeN,CAAiB,GACzCA,EAAkB,qBACrByF,EAAYpF,GAAMwD,CAAS,GAC3B4B,EAAYnF,GAAeuD,CAAS,GACvB0B,EAAA/G,GAASgH,GAAc,OAAO,GAE3C,KAAK,OAAO,CAACf,GAEb5B,GAAsB,IAAI,GAC1BH,EAAcpC,GAAeL,EAAmB;AAAA,EAEpD;AAAA;AAAA,EAcF,UAAU;AACJ,IAAA,KAAK,QAAM,KAAK,KAAK,GAEzB,KAAK,sBAAsB,GAC3B,MAAM,QAAQ;AAAA,EAAA;AAElB;AAxIEgF,EADmB1F,GACZ,YAAWL,KAClB+F,EAFmB1F,GAEZ,QAAOD,KACd2F,EAHmB1F,GAGZ,eAAcH;"}