{"version":3,"file":"dropdown.mjs","sources":["../../src/strings/dropdownComponent.ts","../../src/strings/dropdownMenuClass.ts","../../src/components/dropdown.ts"],"sourcesContent":["/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  querySelector,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"],[${dataBsToggle}=\"${dropupString}\"],[${dataBsToggle}=\"${dropendString}\"],[${dataBsToggle}=\"${dropstartString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore next: this test requires a navbar */\n  if (getElementStyle(menu, 'position') === 'static') return;\n\n  const RTL = isRTL(element);\n  // const menuStart = hasClass(menu, dropdownMenuStartClass);\n  const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n  // reset menu offset and position\n  const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n  resetProps.forEach(p => {\n    // menu.style[p] = '';\n    const style: { [key: string]: string } = {};\n    style[p] = '';\n    setElementStyle(menu, style);\n  });\n\n  // set initial position class\n  // take into account .btn-group parent as .dropdown\n  // this requires navbar/btn-group/input-group\n  let positionClass =\n    dropdownClasses.find(c => hasClass(parentElement, c)) ||\n    /* istanbul ignore next: fallback position */ dropdownString;\n\n  const dropdownMargin: { [key: string]: number[] } = {\n    dropdown: [offset, 0, 0],\n    dropup: [0, 0, offset],\n    dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n    dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n  };\n\n  const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n    dropdown: { top: '100%' },\n    dropup: { top: 'auto', bottom: '100%' },\n    dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n    dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n    menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n    menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n  };\n\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const { left: targetLeft, top: targetTop, width: targetWidth, height: targetHeight } = getBoundingClientRect(element);\n\n  // dropstart | dropend\n  const leftFullExceed = targetLeft - menuWidth - offset < 0;\n  // dropend\n  const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n  // dropstart | dropend\n  const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n  // dropdown\n  const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n  // dropup\n  const topExceed = targetTop - menuHeight - offset < 0;\n  // dropdown / dropup\n  const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n  const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n  // recompute position\n  // handle RTL as well\n  if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropendString;\n  }\n  if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropstartString;\n  }\n  if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n    positionClass = dropupString;\n  }\n\n  // override position for horizontal classes\n  if (horizontalClass.includes(positionClass) && bottomExceed) {\n    ObjectAssign(dropdownPosition[positionClass], {\n      top: 'auto',\n      bottom: 0,\n    });\n  }\n\n  // override position for vertical classes\n  if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n    // don't realign when menu is wider than window\n    // in both RTL and non-RTL readability is KING\n    let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n    if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n    if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n    if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n  }\n\n  const margins: number[] = dropdownMargin[positionClass];\n  setElementStyle(menu, {\n    ...dropdownPosition[positionClass],\n    margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n  });\n\n  // override dropdown-menu-start | dropdown-menu-end\n  if (verticalClass.includes(positionClass) && menuEnd) {\n    /* istanbul ignore else */\n    if (menuEnd) {\n      const endAdjust =\n        (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n      setElementStyle(menu, dropdownPosition[endAdjust]);\n    }\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler as EventListener);\n  action(doc, focusEvent, dropdownDismissHandler as EventListener);\n  action(doc, keydownEvent, dropdownPreventScroll as EventListener);\n  action(doc, keyupEvent, dropdownKeyHandler as EventListener);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param self the `Dropdown` instance\n * @param add when `true`, it will add the event listener\n */\nconst toggleDropdownHandler = (self: Dropdown, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler as EventListener);\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore next: impossible to satisfy */\n  if (!target || !(target as HTMLElement).closest) return; // some weird FF bug #409\n\n  const element = getCurrentOpenDropdown(target as HTMLElement);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const hasData = closest(target as HTMLElement, dropdownSelector) !== null;\n  const isForm =\n    parentElement &&\n    parentElement.contains(target as HTMLElement) &&\n    ((target as HTMLElement).tagName === 'form' || closest(target as HTMLElement, 'form') !== null);\n\n  if (type === mouseclickEvent && isEmptyAnchor(target as HTMLElement)) {\n    e.preventDefault();\n  }\n  if (type === focusEvent && (target === element || target === menu || menu.contains(target as HTMLElement))) {\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (isForm || hasData) {\n    // smile to ESLint\n  } else if (self) {\n    self.hide();\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopImmediatePropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n  /* istanbul ignore next: impossible to satisfy */\n  if (!self || !activeElement) return;\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n    let idx = menuItems.indexOf(activeElement);\n    /* istanbul ignore else */\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    /* istanbul ignore else */\n    if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n\n    // set targets\n    this.parentElement = parentElement as HTMLElement;\n    this.menu = querySelector(`.${dropdownMenuClass}`, parentElement as HTMLElement) as HTMLElement;\n\n    // add event listener\n    toggleDropdownHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (open) return;\n\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement && getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, showDropdownEvent);\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'true');\n\n    // change menu position\n    styleDropdown(this);\n\n    this.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, hideDropdownEvent);\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'false');\n\n    this.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    toggleDropdownHandler(this);\n    super.dispose();\n  }\n}\n"],"names":["dropdownComponent","dropdownMenuClass","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","dataBsToggle","getDropdownInstance","element","getInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","createCustomEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","styleDropdown","self","menu","parentElement","options","offset","getElementStyle","RTL","isRTL","menuEnd","hasClass","p","style","setElementStyle","positionClass","c","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","ObjectAssign","posAjust","margins","x","getMenuItems","firstElementChild","toggleDropdownDismiss","action","addListener","removeListener","doc","getDocument","mouseclickEvent","dropdownDismissHandler","focusEvent","keydownEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","passiveHandler","toggleDropdownHandler","add","dropdownClickHandler","getCurrentOpenDropdown","currentParent","getElementsByClassName","showClass","getAttribute","e","target","type","hasData","closest","isForm","isEmptyAnchor","keyArrowDown","keyArrowUp","code","activeElement","open","menuItems","idx","focus","keyEscape","BaseComponent","config","querySelector","currentElement","currentInstance","dispatchEvent","addClass","setAttribute","ariaExpanded","removeClass"],"mappings":"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"}