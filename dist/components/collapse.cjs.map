{"version":3,"file":"collapse.cjs","sources":["../../src/strings/collapseString.ts","../../src/strings/collapseComponent.ts","../../src/components/collapse.ts"],"sourcesContent":["/** @type {string} */\nconst collapseString = \"collapse\";\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = \"Collapse\";\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getDocument,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isString,\n  mouseclickEvent,\n  noop,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport collapsingClass from \"../strings/collapsingClass\";\nimport showClass from \"../strings/showClass\";\nimport collapseString from \"../strings/collapseString\";\nimport collapseComponent from \"../strings/collapseComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { CollapseEvent, CollapseOptions } from \"../interface/collapse\";\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) =>\n  getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach((btn) => setAttribute(btn, ariaExpanded, \"true\"));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: \"\" });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element);\n    setElementStyle(element, { height: \"0px\" });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      // istanbul ignore else @preserve\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach((btn) => setAttribute(btn, ariaExpanded, \"false\"));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: \"\" });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target &&\n    closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  // istanbul ignore else @preserve\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === \"A\") e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent, doc)\n      : null;\n\n    // add event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    // istanbul ignore else @preserve\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach((btn) => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [\n        ...querySelectorAll(`.${collapseString}.${showClass}`, parent),\n      ].find((i) => getCollapseInstance(i));\n      activeCollapseInstance = activeCollapse &&\n        getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach((btn) => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach((btn) => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /**\n   * Toggles on/off the event listener(s) of the `Collapse` instance.\n   *\n   * @param add when `true`, the event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) =>\n        action(btn, mouseclickEvent, collapseClickHandler)\n      );\n    }\n  };\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    this._toggleEventListeners();\n\n    super.dispose();\n  }\n}\n"],"names":["collapseString","collapseComponent","collapseSelector","collapseToggleSelector","dataBsToggle","collapseDefaults","getCollapseInstance","element","getInstance","collapseInitCallback","Collapse","showCollapseEvent","createCustomEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","self","parent","triggers","dispatchEvent","Timer","noop","addClass","collapsingClass","removeClass","setElementStyle","emulateTransitionEnd","btn","setAttribute","ariaExpanded","showClass","collapseContent","reflow","collapseClickHandler","e","target","trigger","closest","getTargetElement","BaseComponent","config","__publicField","add","action","addListener","removeListener","mouseclickEvent","options","doc","getDocument","querySelectorAll","isHTMLElement","isString","querySelector","activeCollapse","activeCollapseInstance","i","hasClass"],"mappings":"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"}