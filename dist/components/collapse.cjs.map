{"version":3,"file":"collapse.cjs","sources":["../../src/strings/collapseString.ts","../../src/strings/collapseComponent.ts","../../src/components/collapse.ts"],"sourcesContent":["/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  // ObjectAssign,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (showCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  addClass(element, collapsingClass);\n  removeClass(element, collapseString);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n    addClass(element, showClass);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, shownCollapseEvent);\n  });\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (hideCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  removeClass(element, collapseString);\n  removeClass(element, showClass);\n  addClass(element, collapsingClass);\n\n  reflow(element);\n  setElementStyle(element, { height: '0px' });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    /* istanbul ignore else */\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, hiddenCollapseEvent);\n  });\n};\n\n/**\n * Toggles on/off the event listener(s) of the `Collapse` instance.\n *\n * @param self the `Collapse` instance\n * @param add when `true`, the event listener is added\n */\nconst toggleCollapseHandler = (self: Collapse, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler as EventListener));\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = querySelector(options.parent as HTMLElement | string, doc) || getTargetElement(element) || null;\n\n    // add event listeners\n    toggleCollapseHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (Timer.get(element)) return;\n\n    collapseContent(this);\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    toggleCollapseHandler(this);\n\n    super.dispose();\n  }\n}\n"],"names":["collapseString","collapseComponent","collapseSelector","collapseToggleSelector","dataBsToggle","collapseDefaults","getCollapseInstance","element","getInstance","collapseInitCallback","Collapse","showCollapseEvent","createCustomEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","self","parent","triggers","dispatchEvent","Timer","noop","addClass","collapsingClass","removeClass","setElementStyle","emulateTransitionEnd","btn","setAttribute","ariaExpanded","showClass","collapseContent","reflow","toggleCollapseHandler","add","action","addListener","removeListener","mouseclickEvent","collapseClickHandler","e","target","trigger","closest","getTargetElement","BaseComponent","config","options","doc","getDocument","querySelectorAll","querySelector","hasClass","activeCollapse","activeCollapseInstance","i"],"mappings":"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"}