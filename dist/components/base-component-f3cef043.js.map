{"version":3,"file":"base-component-f3cef043.js","sources":["../../src/version.ts","../../src/components/base-component.ts"],"sourcesContent":["import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: HTMLElement;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    /* istanbul ignore else */\n    if (prevInstance) {\n      // remove previously attached event listeners\n      // to avoid memory leaks\n      prevInstance._toggleEventListeners();\n    }\n\n    this.element = element;\n    this.options =\n      this.defaults && ObjectKeys(this.defaults).length\n        ? normalizeOptions(element, this.defaults, config || {}, 'bs')\n        : {};\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /** just to have something to extend from */\n  _toggleEventListeners = () => {\n    // do something to please linters\n  };\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove<typeof this>(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n"],"names":["Version","version","BaseComponent","target","config","__publicField","element","querySelector","isString","prevInstance","Data","ObjectKeys","normalizeOptions","prop"],"mappings":"kOAEMA,EAAUC,ECMhB,MAAqBC,CAAc,CAQjC,YAAYC,EAA8BC,EAAsB,CA4ChEC,EAAA,6BAAwB,IAAM,CAAA,GA3CtB,MAAAC,EAAUC,gBAAcJ,CAAM,EAEpC,GAAI,CAACG,EACC,MAAAE,EAAAA,SAASL,CAAM,EACX,MAAM,GAAG,KAAK,IAAI,YAAYA,CAAM,4BAA4B,EAEhE,MAAM,GAAG,KAAK,IAAI,wDAAwD,EAIpF,MAAMM,EAAeC,EAAAA,KAAK,IAAiBJ,EAAS,KAAK,IAAI,EAEzDG,GAGFA,EAAa,sBAAsB,EAGrC,KAAK,QAAUH,EACf,KAAK,QACH,KAAK,UAAYK,EAAAA,WAAW,KAAK,QAAQ,EAAE,OACvCC,EAAAA,iBAAiBN,EAAS,KAAK,SAAUF,GAAU,GAAI,IAAI,EAC3D,GAENM,EAAA,KAAK,IAAIJ,EAAS,KAAK,KAAM,IAAI,CACnC,CAGA,IAAI,SAAU,CACL,OAAAN,CACT,CAGA,IAAI,MAAO,CACF,MAAA,eACT,CAGA,IAAI,UAAW,CACb,MAAO,EACT,CAQA,SAAU,CACRU,EAAA,KAAK,OAAoB,KAAK,QAAS,KAAK,IAAI,EACrCC,EAAAA,WAAA,IAAI,EAAE,QAAgBE,GAAA,CAC/B,OAAO,KAAKA,CAAI,CAAA,CACjB,CACH,CACF"}