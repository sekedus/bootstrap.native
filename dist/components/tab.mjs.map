{"version":3,"file":"tab.mjs","sources":["../../src/strings/tabString.ts","../../src/strings/tabComponent.ts","../../src/components/tab.ts"],"sourcesContent":["/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || /* istanbul ignore next */ {\n      currentHeight: 0,\n      nextHeight: 0,\n    };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n\n  if (!showTabEvent.defaultPrevented) {\n    if (nextContent) addClass(nextContent, activeClass);\n    if (content) removeClass(content, activeClass);\n\n    /* istanbul ignore else */\n    if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n      const nextHeight = nextContent.scrollHeight;\n      tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n      addClass(tabContent, collapsingClass);\n      tabContent.style.height = `${currentHeight}px`;\n      reflow(tabContent);\n      [content, nextContent].forEach(c => {\n        if (c) removeClass(c, 'overflow-hidden');\n      });\n    }\n\n    if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n      setTimeout(() => {\n        addClass(nextContent, showClass);\n        emulateTransitionEnd(nextContent, () => {\n          triggerTabShow(self);\n        });\n      }, 1);\n    } else {\n      if (nextContent) addClass(nextContent, showClass);\n      triggerTabShow(self);\n    }\n\n    if (tab) dispatchEvent(tab, hiddenTabEvent);\n  }\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  /* istanbul ignore next */\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.preventDefault();\n    self.show();\n  }\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    /* istanbul ignore else */\n    if (content) {\n      const nav = closest(element, '.nav');\n      const container = closest(content, '.tab-content');\n\n      this.nav = nav;\n      this.content = content;\n      this.tabContent = container;\n\n      // event targets\n      this.dropdown = getParentDropdown(element);\n\n      // show first Tab instance of none is shown\n      // suggested on #432\n      const { tab } = getActiveTab(this);\n      if (nav && !tab) {\n        const firstTab = querySelector(tabSelector, nav);\n        const firstTabContent = firstTab && getTargetElement(firstTab);\n\n        /* istanbul ignore else */\n        if (firstTabContent) {\n          addClass(firstTab, activeClass);\n          addClass(firstTabContent, showClass);\n          addClass(firstTabContent, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n        }\n      }\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      /* istanbul ignore else */\n      if (isHTMLElement(tab)) {\n        dispatchEvent(tab as EventTarget, hideTabEvent);\n        /* istanbul ignore else */\n        if (!hideTabEvent.defaultPrevented) {\n          addClass(element, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n\n          const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n          if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n            removeClass(activeDropdown, activeClass);\n          }\n\n          /* istanbul ignore else */\n          if (nav) {\n            const toggleTab = () => {\n              if (tab) {\n                removeClass(tab, activeClass);\n                setAttribute(tab, ariaSelected, 'false');\n              }\n              if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n            };\n\n            if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n              Timer.set(nav, toggleTab, 1);\n            } else toggleTab();\n          }\n\n          if (content) {\n            removeClass(content, showClass);\n            if (hasClass(content, fadeClass)) {\n              emulateTransitionEnd(content, () => triggerTabHide(this));\n            } else {\n              triggerTabHide(this);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, tabClickHandler);\n  };\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n"],"names":["tabString","tabComponent","tabSelector","dataBsToggle","getTabInstance","element","getInstance","tabInitCallback","Tab","showTabEvent","createCustomEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","self","tabContent","nav","hasClass","collapsingClass","removeClass","Timer","triggerTabShow","nextContent","tab","isHTMLElement","fadeClass","currentHeight","nextHeight","reflow","emulateTransitionEnd","dispatchEvent","triggerTabHide","content","addClass","activeClass","c","showClass","getActiveTab","activeTabs","getElementsByClassName","dropdownClasses","getTargetElement","getParentDropdown","dropdown","closest","querySelector","tabClickHandler","e","BaseComponent","target","__publicField","add","addListener","removeListener","mouseclickEvent","container","firstTab","firstTabContent","setAttribute","ariaSelected","activeDropdown","toggleTab"],"mappings":"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"}