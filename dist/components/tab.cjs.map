{"version":3,"file":"tab.cjs","sources":["../../src/strings/tabString.ts","../../src/strings/tabComponent.ts","../../src/components/tab.ts"],"sourcesContent":["/** @type {string} */\nconst tabString = \"tab\";\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = \"Tab\";\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  addClass,\n  ariaSelected,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getElementsByClassName,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  mouseclickEvent,\n  querySelector,\n  reflow,\n  removeClass,\n  setAttribute,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport collapsingClass from \"../strings/collapsingClass\";\nimport activeClass from \"../strings/activeClass\";\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dropdownClasses from \"../strings/dropdownClasses\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport tabString from \"../strings/tabString\";\nimport tabComponent from \"../strings/tabComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { /* TabOptions, */ TabEvent } from \"../interface/tab\";\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) =>\n  getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\ntype TabEventProps = {\n  relatedTarget: HTMLElement | undefined;\n};\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `show.bs.${tabString}`,\n);\nconst shownTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `shown.bs.${tabString}`,\n);\nconst hideTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `hide.bs.${tabString}`,\n);\nconst hiddenTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `hidden.bs.${tabString}`,\n);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  // istanbul ignore else @preserve\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = \"\";\n    removeClass(tabContent, collapsingClass);\n  }\n\n  // istanbul ignore else @preserve\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) ||\n    // istanbul ignore next @preserve\n    { tab: null };\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) ||\n      // istanbul ignore next @preserve\n      { currentHeight: 0, nextHeight: 0 };\n    // istanbul ignore else @preserve: vitest won't validate this branch\n    if (currentHeight !== nextHeight) {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    } else {\n      triggerTabEnd(self);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) ||\n    // istanbul ignore next @preserve\n    { tab: null, content: null };\n  let currentHeight = 0;\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach((c) => {\n      // istanbul ignore else @preserve\n      if (isHTMLElement(c)) addClass(c, \"overflow-hidden\");\n    });\n    currentHeight = isHTMLElement(content)\n      ? content.scrollHeight // istanbul ignore next @preserve\n      : 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n\n  // istanbul ignore else @preserve\n  if (!showTabEvent.defaultPrevented) {\n    // istanbul ignore else @preserve\n    if (nextContent) addClass(nextContent, activeClass);\n    // istanbul ignore else @preserve\n    if (content) removeClass(content, activeClass);\n\n    // istanbul ignore else @preserve\n    if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n      const nextHeight = nextContent.scrollHeight;\n      tabPrivate.set(element, {\n        currentHeight,\n        nextHeight,\n        tab: null,\n        content: null,\n      });\n\n      addClass(tabContent, collapsingClass);\n      tabContent.style.height = `${currentHeight}px`;\n      reflow(tabContent);\n      [content, nextContent].forEach((c) => {\n        // istanbul ignore else @preserve\n        if (c) removeClass(c, \"overflow-hidden\");\n      });\n    }\n\n    if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n      setTimeout(() => {\n        addClass(nextContent, showClass);\n        emulateTransitionEnd(nextContent, () => {\n          triggerTabShow(self);\n        });\n      }, 1);\n    } else {\n      // istanbul ignore else @preserve\n      if (nextContent) addClass(nextContent, showClass);\n      triggerTabShow(self);\n    }\n\n    // istanbul ignore else @preserve\n    if (tab) dispatchEvent(tab, hiddenTabEvent);\n  }\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (\n  self: Tab,\n): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(nav as HTMLElement | undefined)) {\n    return { tab: null, content: null };\n  }\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  // istanbul ignore else @preserve\n  if (\n    activeTabs.length === 1 &&\n    !dropdownClasses.some((c) =>\n      hasClass(activeTabs[0].parentElement as HTMLElement, c)\n    )\n  ) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement)\n    ? getTargetElement(tab as HTMLElement)\n    : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(\",.\")}`);\n  return dropdown\n    ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown)\n    : null;\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    e.preventDefault();\n    self.show();\n  }\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    // istanbul ignore else @preserve\n    if (content) {\n      const nav = closest(element, \".nav\");\n      const container = closest(content, \".tab-content\");\n\n      this.nav = nav;\n      this.content = content;\n      this.tabContent = container;\n\n      // event targets\n      this.dropdown = getParentDropdown(element);\n\n      // show first Tab instance of none is shown\n      // suggested on #432\n      const { tab } = getActiveTab(this);\n      if (nav && !tab) {\n        const firstTab = querySelector(tabSelector, nav);\n        const firstTabContent = firstTab && getTargetElement(firstTab);\n\n        // istanbul ignore else @preserve\n        if (firstTabContent) {\n          addClass(firstTab, activeClass);\n          addClass(firstTabContent, showClass);\n          addClass(firstTabContent, activeClass);\n          setAttribute(element, ariaSelected, \"true\");\n        }\n      }\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    // istanbul ignore else @preserve\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      // istanbul ignore else @preserve\n      if (nav) {\n        tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n      }\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      // istanbul ignore else @preserve\n      if (isHTMLElement(tab)) {\n        dispatchEvent(tab as EventTarget, hideTabEvent);\n        // istanbul ignore else @preserve\n        if (!hideTabEvent.defaultPrevented) {\n          addClass(element, activeClass);\n          setAttribute(element, ariaSelected, \"true\");\n\n          const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n          if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n            removeClass(activeDropdown, activeClass);\n          }\n\n          // istanbul ignore else @preserve\n          if (nav) {\n            const toggleTab = () => {\n              // istanbul ignore else @preserve\n              if (tab) {\n                removeClass(tab, activeClass);\n                setAttribute(tab, ariaSelected, \"false\");\n              }\n              if (dropdown && !hasClass(dropdown, activeClass)) {\n                addClass(dropdown, activeClass);\n              }\n            };\n\n            if (\n              content &&\n              (hasClass(content, fadeClass) ||\n                (nextContent && hasClass(nextContent, fadeClass)))\n            ) {\n              Timer.set(nav, toggleTab, 1);\n            } else toggleTab();\n          }\n\n          // istanbul ignore else @preserve\n          if (content) {\n            removeClass(content, showClass);\n            if (hasClass(content, fadeClass)) {\n              emulateTransitionEnd(content, () => triggerTabHide(this));\n            } else {\n              triggerTabHide(this);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, tabClickHandler);\n  };\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n"],"names":["tabString","tabComponent","tabSelector","dataBsToggle","getTabInstance","element","getInstance","tabInitCallback","Tab","showTabEvent","createCustomEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","self","tabContent","nav","hasClass","collapsingClass","removeClass","Timer","triggerTabShow","nextContent","tab","isHTMLElement","fadeClass","currentHeight","nextHeight","reflow","emulateTransitionEnd","dispatchEvent","triggerTabHide","content","addClass","activeClass","c","showClass","getActiveTab","activeTabs","getElementsByClassName","dropdownClasses","getTargetElement","getParentDropdown","dropdown","closest","querySelector","tabClickHandler","e","BaseComponent","target","__publicField","add","addListener","removeListener","mouseclickEvent","container","firstTab","firstTabContent","setAttribute","ariaSelected","activeDropdown","toggleTab"],"mappings":"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"}