{"version":3,"file":"createTip-0286c1fa.cjs","sources":["../../src/strings/popoverString.ts","../../src/strings/tooltipComponent.ts","../../src/util/createTip.ts"],"sourcesContent":["/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate) ? (tooltipTemplate.cloneNode(true) as HTMLElement) : undefined;\n\n  const { tooltip } = self;\n  if (!tooltip) return;\n\n  // set id and role attributes\n  setAttribute(tooltip, 'id', id);\n  setAttribute(tooltip, 'role', tooltipString);\n\n  const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n  const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n  const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n  // set arrow and enable access for styleTip\n  self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n  const { arrow } = self;\n\n  if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n  else {\n    const tempTitle = createElement('div') as Node;\n    setHtml(tempTitle, title, sanitizeFn);\n    titleParts = [...[...tempTitle.childNodes]];\n  }\n\n  if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n  else {\n    const tempContent = createElement('div') as Node;\n    setHtml(tempContent, content, sanitizeFn);\n    contentParts = [...[...tempContent.childNodes]];\n  }\n\n  // set dismissible button\n  if (dismissible) {\n    if (title) {\n      if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        titleParts = [...titleParts, tempBtn.firstChild as Node];\n      }\n    } else {\n      /* istanbul ignore else */\n      if (tooltipHeader) tooltipHeader.remove();\n      if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        contentParts = [...contentParts, tempBtn.firstChild as Node];\n      }\n    }\n  }\n\n  // fill the template with content from options / data attributes\n  // also sanitize title && content\n  /* istanbul ignore else */\n  if (!isTooltip) {\n    /* istanbul ignore else */\n    if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n    /* istanbul ignore else */\n    if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n    // set btn\n    self.btn = querySelector('.btn-close', tooltip) || undefined;\n  } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n  // Bootstrap 5.2.x\n  // addClass(tooltip, 'position-absolute');\n  addClass(tooltip, 'position-fixed');\n  addClass(arrow, 'position-absolute');\n\n  // set popover animation and placement\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n  /* istanbul ignore else */\n  if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n  /* istanbul ignore else */\n  if (customClass && !hasClass(tooltip, customClass)) {\n    addClass(tooltip, customClass);\n  }\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n};\n\nexport default createTip;\n"],"names":["popoverString","tooltipComponent","createTip","self","isTooltip","id","element","options","title","placement","template","animation","customClass","sanitizeFn","dismissible","content","btnClose","tipString","tooltipString","tipPositions","tipClassPositions","titleParts","contentParts","isRTL","placementClass","tooltipTemplate","isHTMLElement","htmlMarkup","createElement","setHtml","tooltip","setAttribute","bodyClass","tooltipHeader","querySelector","tooltipBody","arrow","tempTitle","tempContent","tempBtn","addClass","hasClass","fadeClass"],"mappings":"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"}