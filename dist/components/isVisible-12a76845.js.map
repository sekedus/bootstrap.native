{"version":3,"file":"isVisible-12a76845.js","sources":["../../src/strings/modalComponent.ts","../../src/strings/offcanvasComponent.ts","../../src/strings/fixedTopClass.ts","../../src/strings/fixedBottomClass.ts","../../src/strings/stickyTopClass.ts","../../src/strings/positionStickyClass.ts","../../src/util/scrollbar.ts","../../src/util/backdrop.ts","../../src/util/isVisible.ts"],"sourcesContent":["/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","import {\n  createElement,\n  getDocument,\n  reflow,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getDocumentBody,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n"],"names":["modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","parent","getElementsByClassName","resetScrollbar","element","bd","getDocumentBody","setElementStyle","fixedItems","fixed","measureScrollbar","clientWidth","getDocumentElement","innerWidth","getWindow","setScrollbar","overflow","bodyPad","getElementStyle","sbWidth","itemPadValue","hasClass","c","itemMValue","backdropString","modalBackdropClass","modalString","offcanvasBackdropClass","offcanvasString","modalActiveSelector","showClass","offcanvasActiveSelector","overlay","createElement","getCurrentOpen","querySelector","getDocument","toggleOverlayType","isModal","targetClass","removeClass","addClass","appendOverlay","hasFade","appendPopup","fadeClass","showOverlay","reflow","hideOverlay","removeOverlay","removePopup","isVisible","isHTMLElement"],"mappings":"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"}