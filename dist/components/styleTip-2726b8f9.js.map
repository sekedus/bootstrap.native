{"version":3,"file":"styleTip-2726b8f9.js","sources":["../../src/strings/popoverComponent.ts","../../src/util/styleTip.ts"],"sourcesContent":["/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  isMedia,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n * @param e event object\n */\nconst styleTip = <T extends Tooltip>(self: T, e?: Event & PointerEvent) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n  if (!tooltip) return;\n  const tipPositions = { ...tipClassPositions };\n\n  const RTL = isRTL(element);\n\n  // reset tooltip style (top: 0, left: 0 works best)\n  setElementStyle(tooltip, {\n    // top: '0px', left: '0px', right: '', bottom: '',\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  const isPopover = self.name === popoverComponent;\n  const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n  const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n  let { placement } = options;\n  const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n  const parentPosition = getElementStyle(container as HTMLElement, 'position');\n  const fixedParent = parentPosition === 'fixed';\n  const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n  const leftBoundry = RTL && fixedParent ? scrollbarWidth : 0;\n  const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n  const {\n    width: elemWidth,\n    height: elemHeight,\n    left: elemRectLeft,\n    right: elemRectRight,\n    top: elemRectTop,\n  } = getBoundingClientRect(element, true);\n  const { x, y } = {\n    x: elemRectLeft,\n    y: elemRectTop,\n  };\n  // reset arrow style\n  setElementStyle(arrow as HTMLElement, {\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  let topPosition: number | string = 0;\n  let leftPosition: number | string = 0;\n  let rightPosition: number | string = '';\n  let arrowTop: number | string = '';\n  let arrowLeft: number | string = '';\n  let arrowRight: number | string = '';\n\n  const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n  const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n  const arrowAdjust = arrowWidth / 2;\n\n  // check placement\n  let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n  let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n  let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n  let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n  const horizontals = ['left', 'right'];\n  const verticals = ['top', 'bottom'];\n\n  topExceed = horizontals.includes(placement)\n    ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n    : topExceed;\n  bottomExceed = horizontals.includes(placement)\n    ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n    : bottomExceed;\n  leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n  rightExceed = verticals.includes(placement)\n    ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n    : rightExceed;\n\n  // first remove side positions if both left and right limits are exceeded\n  // we usually fall back to top|bottom\n  placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n  // recompute placement\n  placement = placement === 'top' && topExceed ? 'bottom' : placement;\n  placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n  placement = placement === 'left' && leftExceed ? 'right' : placement;\n  placement = placement === 'right' && rightExceed ? 'left' : placement;\n\n  // update tooltip/popover class\n  if (!tooltip.className.includes(placement)) {\n    tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n  }\n\n  // compute tooltip / popover coordinates\n  /* istanbul ignore else */\n  if (horizontals.includes(placement)) {\n    // secondary|side positions\n    if (placement === 'left') {\n      // LEFT\n      leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n    } else {\n      // RIGHT\n      leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n    }\n\n    // adjust top and arrow\n    if (topExceed) {\n      topPosition = y;\n      // topPosition += (isSticky ? -parentTop - scroll.y : 0);\n      arrowTop = elemHeight / 2 - arrowWidth;\n    } else if (bottomExceed) {\n      topPosition = y - tipHeight + elemHeight;\n      // topPosition += (isSticky ? -parentTop - scroll.y : 0);\n      arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n    } else {\n      topPosition = y - tipHeight / 2 + elemHeight / 2;\n      // topPosition += (isSticky ? -parentTop - scroll.y : 0);\n      arrowTop = tipHeight / 2 - arrowHeight / 2;\n    }\n  } else if (verticals.includes(placement)) {\n    if (e && isMedia(element)) {\n      const eX = e.clientX;\n      const eY = e.clientY;\n\n      if (placement === 'top') {\n        topPosition = eY - tipHeight - arrowWidth;\n      } else {\n        topPosition = eY + arrowWidth;\n      }\n\n      // adjust (left | right) and also the arrow\n      if (e.clientX - tipWidth / 2 < leftBoundry) {\n        leftPosition = RTL ? scrollbarWidth : 0;\n        arrowLeft = eX - arrowAdjust;\n        arrowLeft -= fixedParent ? (RTL ? scrollbarWidth : 0) : 0;\n      } else if (e.clientX + tipWidth / 2 > rightBoundry) {\n        leftPosition = 'auto';\n        rightPosition = !RTL ? scrollbarWidth : 0;\n        arrowRight = rightBoundry - eX - arrowAdjust;\n        arrowRight += fixedParent ? (RTL ? scrollbarWidth : 0) : 0;\n\n        // normal top/bottom\n      } else {\n        leftPosition = eX - tipWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    } else {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        // arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n  }\n\n  // apply style to tooltip/popover\n  setElementStyle(tooltip, {\n    top: `${topPosition}px`,\n    left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n    right: rightPosition !== '' ? `${rightPosition}px` : '',\n  });\n\n  // update arrow placement\n  /* istanbul ignore else */\n  if (isHTMLElement(arrow)) {\n    if (arrowTop !== '') {\n      arrow.style.top = `${arrowTop}px`;\n    }\n    if (arrowLeft !== '') {\n      arrow.style.left = `${arrowLeft}px`;\n    } else if (arrowRight !== '') {\n      arrow.style.right = `${arrowRight}px`;\n    }\n  }\n};\n\nexport default styleTip;\n"],"names":["popoverComponent","styleTip","self","e","tipClasses","element","tooltip","container","options","arrow","tipPositions","tipClassPositions","RTL","isRTL","setElementStyle","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","getDocumentElement","placement","parentCWidth","parentOWidth","fixedParent","getElementStyle","scrollbarWidth","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","getBoundingClientRect","x","y","topPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","topExceed","bottomExceed","leftExceed","rightExceed","horizontals","verticals","isMedia","eX","eY","isHTMLElement"],"mappings":"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"}