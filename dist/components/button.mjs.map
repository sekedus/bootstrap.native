{"version":3,"file":"button.mjs","sources":["../../src/strings/buttonString.ts","../../src/strings/buttonComponent.ts","../../src/components/button.ts"],"sourcesContent":["/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n  getAttribute,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, 'disabled') && !getAttribute(element, 'disabled')) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  // BUTTON PRIVATE METHOD\n  // =====================\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, this.toggle);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n"],"names":["buttonString","buttonComponent","buttonSelector","dataBsToggle","getButtonInstance","element","getInstance","buttonInitCallback","Button","BaseComponent","target","__publicField","e","isActive","hasClass","getAttribute","removeClass","addClass","activeClass","setAttribute","ariaPressed","add","addListener","removeListener","mouseclickEvent"],"mappings":";;;;;;;;AACA,MAAMA,IAAe,UCAfC,IAAkB,UCuBlBC,IAAiB,IAAIC,CAAY,KAAKH,CAAY,MAMlDI,IAAoB,CAACC,MAAyBC,EAAoBD,GAASJ,CAAe,GAG1FM,IAAqB,CAACF,MAAyB,IAAIG,EAAOH,CAAO;AAKvE,MAAqBG,UAAeC,EAAc;AAAA;AAAA;AAAA;AAAA,EAUhD,YAAYC,GAA8B;AACxC,UAAMA,CAAM;AANd,IAAAC,EAAA,kBAAW;AAiCX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,EAAA,gBAAS,CAACC,MAAa;AACjB,MAAAA,KAAGA,EAAE,eAAe;AAElB,YAAA,EAAE,SAAAP,GAAS,UAAAQ,EAAa,IAAA;AAC1B,MAAA,CAACC,EAAST,GAAS,UAAU,KAAK,CAACU,EAAaV,GAAS,UAAU,OACtDQ,IAAWG,IAAcC,GACjCZ,GAASa,CAAW,GAC3BC,EAAad,GAASe,GAAaP,IAAW,UAAU,MAAM,GACzD,KAAA,WAAWC,EAAST,GAASa,CAAW;AAAA,IAC/C;AAUF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAP,EAAA,+BAAwB,CAACU,MAAkB;AAEzC,OADeA,IAAMC,IAAcC,GAC5B,KAAK,SAASC,GAAiB,KAAK,MAAM;AAAA,IAAA;AA7C3C,UAAA,EAAE,SAAAnB,EAAY,IAAA;AAGf,SAAA,WAAWS,EAAST,GAASa,CAAW,GAC7CC,EAAad,GAASe,GAAa,OAAO,CAAC,CAAC,KAAK,QAAQ,CAAC,GAG1D,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAAnB;AAAA,EACT;AAAA;AAAA,EAkCA,UAAU;AACR,SAAK,sBAAsB,GAC3B,MAAM,QAAQ;AAAA,EAChB;AACF;AAlEEU,EADmBH,GACZ,YAAWN,IAClBS,EAFmBH,GAEZ,QAAOD,IACdI,EAHmBH,GAGZ,eAAcJ;"}