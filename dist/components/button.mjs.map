{"version":3,"file":"button.mjs","sources":["../../src/strings/buttonString.ts","../../src/strings/buttonComponent.ts","../../src/components/button.ts"],"sourcesContent":["/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  // ObjectAssign,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON PRIVATE METHOD\n// =====================\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Button` instance\n * @param add when `true`, event listener is added\n */\nconst toggleButtonHandler = (self: Button, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, self.toggle);\n};\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    toggleButtonHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle(e: Event) {\n    if (e) e.preventDefault();\n    const self = e ? (getButtonInstance(e.target as HTMLElement) as Button) : this;\n    if (!self.element) return;\n    const { element, isActive } = self;\n\n    if (hasClass(element, 'disabled')) return;\n\n    const action = isActive ? removeClass : addClass;\n    action(element, activeClass);\n    setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n    self.isActive = hasClass(element, activeClass);\n  }\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    toggleButtonHandler(this);\n    super.dispose();\n  }\n}\n"],"names":["buttonString","buttonComponent","buttonSelector","dataBsToggle","getButtonInstance","element","getInstance","buttonInitCallback","Button","toggleButtonHandler","self","add","addListener","removeListener","mouseclickEvent","BaseComponent","target","hasClass","activeClass","setAttribute","ariaPressed","e","isActive","removeClass","addClass"],"mappings":";;;;AACA,MAAMA,IAAe,UCAfC,IAAkB,UCuBlBC,IAAiB,IAAIC,MAAiBH,OAMtCI,IAAoB,CAACC,MAAyBC,EAAoBD,GAASJ,CAAe,GAG1FM,IAAqB,CAACF,MAAyB,IAAIG,EAAOH,CAAO,GAUjEI,IAAsB,CAACC,GAAcC,MAAkB;AAE3D,GADeA,IAAMC,IAAcC,GAC5BH,EAAK,SAASI,GAAiBJ,EAAK,MAAM;AACnD;AAKA,MAAqBF,UAAeO,EAAc;AAAA,EAChD,OAAO,WAAWb;AAAA,EAClB,OAAO,OAAOK;AAAA,EACd,OAAO,cAAcH;AAAA,EAErB,WAAW;AAAA,EAKX,YAAYY,GAA8B;AACxC,UAAMA,CAAM;AAGN,UAAA,EAAE,SAAAX,EAAY,IAAA;AAGf,SAAA,WAAWY,EAASZ,GAASa,CAAW,GAC7CC,EAAad,GAASe,GAAa,OAAO,CAAC,CAAC,KAAK,QAAQ,CAAC,GAG1DX,EAAoB,MAAM,EAAI;AAAA,EAChC;AAAA,EAKA,IAAI,OAAO;AACF,WAAAR;AAAA,EACT;AAAA,EASA,OAAOoB,GAAU;AACX,IAAAA,KAAGA,EAAE,eAAe;AACxB,UAAMX,IAAOW,IAAKjB,EAAkBiB,EAAE,MAAqB,IAAe;AAC1E,QAAI,CAACX,EAAK;AAAS;AACb,UAAA,EAAE,SAAAL,GAAS,UAAAiB,EAAa,IAAAZ;AAE1B,QAAAO,EAASZ,GAAS,UAAU;AAAG;AAGnC,KADeiB,IAAWC,IAAcC,GACjCnB,GAASa,CAAW,GAC3BC,EAAad,GAASe,GAAaE,IAAW,UAAU,MAAM,GACzDZ,EAAA,WAAWO,EAASZ,GAASa,CAAW;AAAA,EAC/C;AAAA,EAGA,UAAU;AACR,IAAAT,EAAoB,IAAI,GACxB,MAAM,QAAQ;AAAA,EAChB;AACF;"}