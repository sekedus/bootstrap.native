{"version":3,"file":"bootstrap-native.cjs","sources":["../node_modules/@thednp/event-listener/dist/event-listener.mjs","../node_modules/@thednp/shorty/dist/shorty.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/strings/offcanvasComponent.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["const e = {}, r = (s) => {\n  const { type: c, target: n, currentTarget: i } = s;\n  [...e[c]].forEach(([t, o]) => {\n    [i, n].includes(t) && [...o].forEach(([a, f]) => {\n      a.apply(t, [s]), typeof f == \"object\" && f.once && d(t, c, a, f);\n    });\n  });\n}, E = (s, c, n, i) => {\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const t = e[c];\n  t.has(s) || t.set(s, /* @__PURE__ */ new Map());\n  const o = t.get(s), { size: a } = o;\n  o.set(n, i), a || s.addEventListener(c, r, i);\n}, d = (s, c, n, i) => {\n  const t = e[c], o = t && t.get(s), a = o && o.get(n), f = a !== void 0 ? a : i;\n  o && o.has(n) && o.delete(n), t && (!o || !o.size) && t.delete(s), (!t || !t.size) && delete e[c], (!o || !o.size) && s.removeEventListener(c, r, f);\n}, g = E, M = d;\nexport {\n  E as addListener,\n  r as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  d as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","const fe = \"aria-checked\", me = \"aria-description\", ge = \"aria-describedby\", Ee = \"aria-expanded\", ve = \"aria-haspopup\", be = \"aria-hidden\", he = \"aria-label\", ye = \"aria-labelledby\", we = \"aria-modal\", Ae = \"aria-pressed\", Se = \"aria-selected\", Me = \"aria-valuemin\", Ne = \"aria-valuemax\", ke = \"aria-valuenow\", Te = \"aria-valuetext\", j = \"abort\", J = \"beforeunload\", K = \"blur\", X = \"change\", Y = \"contextmenu\", H = \"DOMContentLoaded\", Z = \"DOMMouseScroll\", $ = \"error\", _ = \"focus\", tt = \"focusin\", et = \"focusout\", nt = \"gesturechange\", ot = \"gestureend\", st = \"gesturestart\", ct = \"keydown\", rt = \"keypress\", it = \"keyup\", at = \"load\", ut = \"click\", lt = \"dblclick\", dt = \"mousedown\", pt = \"mouseup\", ft = \"hover\", mt = \"mouseenter\", gt = \"mouseleave\", Et = \"mousein\", vt = \"mouseout\", bt = \"mouseover\", ht = \"mousemove\", yt = \"mousewheel\", wt = \"move\", At = \"orientationchange\", St = \"pointercancel\", Mt = \"pointerdown\", Nt = \"pointerleave\", kt = \"pointermove\", Tt = \"pointerup\", Dt = \"readystatechange\", Ct = \"reset\", Lt = \"resize\", Ot = \"select\", It = \"selectend\", zt = \"selectstart\", xt = \"scroll\", Vt = \"submit\", Bt = \"touchstart\", Ht = \"touchmove\", Pt = \"touchcancel\", Ut = \"touchend\", Ft = \"unload\", De = {\n  DOMContentLoaded: H,\n  DOMMouseScroll: Z,\n  abort: j,\n  beforeunload: J,\n  blur: K,\n  change: X,\n  click: ut,\n  contextmenu: Y,\n  dblclick: lt,\n  error: $,\n  focus: _,\n  focusin: tt,\n  focusout: et,\n  gesturechange: nt,\n  gestureend: ot,\n  gesturestart: st,\n  hover: ft,\n  keydown: ct,\n  keypress: rt,\n  keyup: it,\n  load: at,\n  mousedown: dt,\n  mousemove: ht,\n  mousein: Et,\n  mouseout: vt,\n  mouseenter: mt,\n  mouseleave: gt,\n  mouseover: bt,\n  mouseup: pt,\n  mousewheel: yt,\n  move: wt,\n  orientationchange: At,\n  pointercancel: St,\n  pointerdown: Mt,\n  pointerleave: Nt,\n  pointermove: kt,\n  pointerup: Tt,\n  readystatechange: Dt,\n  reset: Ct,\n  resize: Lt,\n  scroll: xt,\n  select: Ot,\n  selectend: It,\n  selectstart: zt,\n  submit: Vt,\n  touchcancel: Pt,\n  touchend: Ut,\n  touchmove: Ht,\n  touchstart: Bt,\n  unload: Ft\n}, Ce = \"loadstart\", Le = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Oe = { down: \"mousedown\", up: \"mouseup\" }, Ie = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : [\"mouseover\", \"mouseout\"], ze = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, xe = { in: \"focusin\", out: \"focusout\" }, Ve = {\n  Backspace: \"Backspace\",\n  Tab: \"Tab\",\n  Enter: \"Enter\",\n  Shift: \"Shift\",\n  Control: \"Control\",\n  Alt: \"Alt\",\n  Pause: \"Pause\",\n  CapsLock: \"CapsLock\",\n  Escape: \"Escape\",\n  Scape: \"Space\",\n  ArrowLeft: \"ArrowLeft\",\n  ArrowUp: \"ArrowUp\",\n  ArrowRight: \"ArrowRight\",\n  ArrowDown: \"ArrowDown\",\n  Insert: \"Insert\",\n  Delete: \"Delete\",\n  Meta: \"Meta\",\n  ContextMenu: \"ContextMenu\",\n  ScrollLock: \"ScrollLock\"\n}, Be = \"Alt\", He = \"ArrowDown\", Pe = \"ArrowUp\", Ue = \"ArrowLeft\", Fe = \"ArrowRight\", We = \"Backspace\", Re = \"CapsLock\", Qe = \"Control\", qe = \"Delete\", Ge = \"Enter\", je = \"Escape\", Je = \"Insert\", Ke = \"Meta\", Xe = \"Pause\", Ye = \"ScrollLock\", Ze = \"Shift\", $e = \"Space\", _e = \"Tab\", Wt = \"animationDuration\", Rt = \"animationDelay\", P = \"animationName\", T = \"animationend\", Qt = \"transitionDuration\", qt = \"transitionDelay\", D = \"transitionend\", U = \"transitionProperty\", tn = \"addEventListener\", en = \"removeEventListener\", nn = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, on = \"offsetHeight\", sn = \"offsetWidth\", cn = \"scrollHeight\", rn = \"scrollWidth\", an = \"tabindex\", Gt = navigator.userAgentData, S = Gt, { userAgent: jt } = navigator, M = jt, I = /iPhone|iPad|iPod|Android/i;\nlet C = !1;\nS ? C = S.brands.some((t) => I.test(t.brand)) : C = I.test(M);\nconst un = C, z = /(iPhone|iPod|iPad)/, ln = S ? S.brands.some((t) => z.test(t.brand)) : z.test(M), dn = M ? M.includes(\"Firefox\") : !1, { head: N } = document, pn = [\"webkitPerspective\", \"perspective\"].some((t) => t in N.style), Jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(e, n, s);\n}, Kt = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(e, n, s);\n}, Xt = (t, e, n, o) => {\n  const s = (c) => {\n    (c.target === t || c.currentTarget === t) && (n.apply(t, [c]), Kt(t, e, s, o));\n  };\n  Jt(t, e, s, o);\n}, Yt = () => {\n}, fn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    Xt(document, H, Yt, e);\n  } catch {\n  }\n  return t;\n})(), mn = [\"webkitTransform\", \"transform\"].some((t) => t in N.style), gn = \"ontouchstart\" in window || \"msMaxTouchPoints\" in navigator, En = [\"webkitAnimation\", \"animation\"].some((t) => t in N.style), vn = [\"webkitTransition\", \"transition\"].some((t) => t in N.style), Zt = (t, e) => t.getAttribute(e), bn = (t, e, n) => e.getAttributeNS(t, n), hn = (t, e) => t.hasAttribute(e), yn = (t, e, n) => e.hasAttributeNS(t, n), F = (t, e, n) => t.setAttribute(e, n), wn = (t, e, n, o) => e.setAttributeNS(t, n, o), An = (t, e) => t.removeAttribute(e), Sn = (t, e, n) => e.removeAttributeNS(t, n), Mn = (t, ...e) => {\n  t.classList.add(...e);\n}, Nn = (t, ...e) => {\n  t.classList.remove(...e);\n}, kn = (t, e) => t.classList.contains(e), { body: Tn } = document, { documentElement: Dn } = document, Cn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, a = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((e) => t.nodeType === e) || !1, u = (t) => a(t) && t.nodeType === 1 || !1, y = /* @__PURE__ */ new Map(), L = {\n  set: (t, e, n) => {\n    if (!u(t))\n      return;\n    y.has(e) || y.set(e, /* @__PURE__ */ new Map()), y.get(e).set(t, n);\n  },\n  getAllFor: (t) => y.get(t) || null,\n  get: (t, e) => {\n    if (!u(t) || !e)\n      return null;\n    const n = L.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  remove: (t, e) => {\n    const n = L.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && y.delete(e));\n  }\n}, Ln = (t, e) => L.get(t, e), g = (t) => typeof t == \"string\" || !1, W = (t) => v(t) && t.constructor.name === \"Window\" || !1, R = (t) => a(t) && t.nodeType === 9 || !1, d = (t) => W(t) ? t.document : R(t) ? t : a(t) ? t.ownerDocument : window.document, h = (t) => Object.entries(t), $t = (t) => {\n  if (!t)\n    return;\n  if (g(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = $t(e);\n  if (!n)\n    return;\n  const o = { ...t };\n  return delete o.tagName, h(o).forEach(([s, c]) => {\n    g(s) && g(c) && F(n, s, c);\n  }), n;\n}, _t = (t, e) => {\n  if (!t || !e)\n    return;\n  if (g(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = _t(t, n);\n  if (!o)\n    return;\n  const s = { ...e };\n  return delete s.tagName, h(s).forEach(([c, i]) => {\n    g(c) && g(i) && F(o, c, i);\n  }), o;\n}, Q = (t, e) => t.dispatchEvent(e), On = (t, e, n) => n.indexOf(t) === e, E = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, te = (t) => {\n  const e = E(t, P), n = E(t, Rt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, ee = (t) => {\n  const e = E(t, P), n = E(t, Wt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, In = (t, e) => {\n  let n = 0;\n  const o = new Event(T), s = ee(t), c = te(t);\n  if (s) {\n    const i = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(T, i), n = 1);\n    };\n    t.addEventListener(T, i), setTimeout(() => {\n      n || Q(t, o);\n    }, s + c + 17);\n  } else\n    e.apply(t, [o]);\n}, ne = (t) => {\n  const e = E(t, U), n = E(t, qt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, oe = (t) => {\n  const e = E(t, U), n = E(t, Qt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, zn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = oe(t), c = ne(t);\n  if (s) {\n    const i = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(D, i), n = 1);\n    };\n    t.addEventListener(D, i), setTimeout(() => {\n      n || Q(t, o);\n    }, s + c + 17);\n  } else\n    e.apply(t, [o]);\n}, xn = (t) => Float32Array.from(Array.from(t)), Vn = (t) => Float64Array.from(Array.from(t)), Bn = (t, e) => t.focus(e), x = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, se = (t) => t.toLowerCase(), Hn = (t, e, n, o) => {\n  const s = { ...n }, c = { ...t.dataset }, i = { ...e }, l = {}, p = \"title\";\n  return h(c).forEach(([r, f]) => {\n    const A = o && typeof r == \"string\" && r.includes(o) ? r.replace(o, \"\").replace(/[A-Z]/g, (G) => se(G)) : r;\n    l[A] = x(f);\n  }), h(s).forEach(([r, f]) => {\n    s[r] = x(f);\n  }), h(e).forEach(([r, f]) => {\n    r in s ? i[r] = s[r] : r in l ? i[r] = l[r] : i[r] = r === p ? Zt(t, p) : f;\n  }), i;\n}, q = (t, ...e) => Object.assign(t, ...e), Pn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Un = (t) => Object.keys(t), Fn = (t) => Object.values(t), Wn = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return v(e) && q(n, e), n;\n}, Rn = { passive: !0 }, Qn = (t) => t.offsetHeight, qn = (t, e) => {\n  h(e).forEach(([n, o]) => {\n    if (o && g(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, q(t.style, s);\n    }\n  });\n}, O = (t) => v(t) && t.constructor.name === \"Map\" || !1, ce = (t) => typeof t == \"number\" || !1, m = /* @__PURE__ */ new Map(), Gn = {\n  set: (t, e, n, o) => {\n    !u(t) || (o && o.length ? (m.has(t) || m.set(t, /* @__PURE__ */ new Map()), m.get(t).set(o, setTimeout(e, n))) : m.set(t, setTimeout(e, n)));\n  },\n  get: (t, e) => {\n    if (!u(t))\n      return null;\n    const n = m.get(t);\n    return e && n && O(n) ? n.get(e) || null : ce(n) ? n : null;\n  },\n  clear: (t, e) => {\n    if (!u(t))\n      return;\n    const n = m.get(t);\n    e && e.length && O(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && m.delete(t)) : (clearTimeout(n), m.delete(t));\n  }\n}, jn = (t) => t.toUpperCase(), w = (t, e) => {\n  const { width: n, height: o, top: s, right: c, bottom: i, left: l } = t.getBoundingClientRect();\n  let p = 1, r = 1;\n  if (e && u(t)) {\n    const { offsetWidth: f, offsetHeight: A } = t;\n    p = f > 0 ? Math.round(n) / f : 1, r = A > 0 ? Math.round(o) / A : 1;\n  }\n  return {\n    width: n / p,\n    height: o / r,\n    top: s / r,\n    right: c / p,\n    bottom: i / r,\n    left: l / p,\n    x: l / p,\n    y: s / r\n  };\n}, Jn = (t) => d(t).body, k = (t) => d(t).documentElement, Kn = (t) => d(t).head, Xn = (t) => {\n  const e = W(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, re = (t) => a(t) && t.constructor.name === \"ShadowRoot\" || !1, Yn = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || a(t) && t.parentNode || re(t) && t.host || k(t), ie = (t) => {\n  if (!u(t))\n    return !1;\n  const { width: e, height: n } = w(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, Zn = (t, e, n) => {\n  const o = u(e), s = w(t, o && ie(e)), c = { x: 0, y: 0 };\n  if (o) {\n    const i = w(e, !0);\n    c.x = i.x + e.clientLeft, c.y = i.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - c.x,\n    y: s.top + n.y - c.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet V = 0, B = 0;\nconst b = /* @__PURE__ */ new Map(), ae = (t, e) => {\n  let n = e ? V : B;\n  if (e) {\n    const o = ae(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), O(s) && !s.has(e) ? (s.set(e, n), V += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), B += 1);\n  }\n  return n;\n}, $n = (t) => {\n  var e;\n  return t ? R(t) ? t.defaultView : a(t) ? (e = t == null ? void 0 : t.ownerDocument) == null ? void 0 : e.defaultView : t : window;\n}, ue = (t) => Array.isArray(t) || !1, _n = (t) => a(t) && t.nodeName === \"CANVAS\" || !1, le = (t) => u(t) && !!t.shadowRoot || !1, to = (t) => a(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, eo = (t) => {\n  if (!a(t))\n    return !1;\n  const { top: e, bottom: n } = w(t), { clientHeight: o } = k(t);\n  return e <= o && n >= 0;\n}, no = (t) => {\n  if (!a(t))\n    return !1;\n  const { clientWidth: e, clientHeight: n } = k(t), { top: o, left: s, bottom: c, right: i } = w(t, !0);\n  return o >= 0 && s >= 0 && c <= n && i <= e;\n}, oo = (t) => ue(t) && t.every(u) || !1, so = (t) => typeof t == \"function\" || !1, co = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, ro = (t) => u(t) && t.tagName === \"IMG\" || !1, io = (t) => {\n  if (!g(t))\n    return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, ao = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, uo = (t) => a(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((e) => t.constructor.name.includes(e)) || !1, lo = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, po = (t) => k(t).dir === \"rtl\", fo = (t) => a(t) && t.constructor.name.includes(\"SVG\") || !1, mo = (t) => a(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, de = (t, e) => t ? t.closest(e) || de(t.getRootNode().host, e) : null, go = (t, e) => u(t) ? t : (a(e) ? e : d()).querySelector(t), pe = (t, e) => (a(e) ? e : d()).getElementsByTagName(t), Eo = (t) => [...pe(\"*\", t)].filter(le), vo = (t, e) => d(e).getElementById(t) || null, bo = (t, e) => (a(e) ? e : d()).querySelectorAll(t), ho = (t, e) => (e && a(e) ? e : d()).getElementsByClassName(\n  t\n), yo = (t, e) => t.matches(e);\nexport {\n  Cn as ArrayFrom,\n  H as DOMContentLoadedEvent,\n  Z as DOMMouseScrollEvent,\n  L as Data,\n  xn as Float32ArrayFrom,\n  Vn as Float64ArrayFrom,\n  q as ObjectAssign,\n  h as ObjectEntries,\n  Pn as ObjectHasOwn,\n  Un as ObjectKeys,\n  Fn as ObjectValues,\n  Gn as Timer,\n  j as abortEvent,\n  Mn as addClass,\n  tn as addEventListener,\n  Rt as animationDelay,\n  Wt as animationDuration,\n  T as animationEndEvent,\n  P as animationName,\n  fe as ariaChecked,\n  ge as ariaDescribedBy,\n  me as ariaDescription,\n  Ee as ariaExpanded,\n  ve as ariaHasPopup,\n  be as ariaHidden,\n  he as ariaLabel,\n  ye as ariaLabelledBy,\n  we as ariaModal,\n  Ae as ariaPressed,\n  Se as ariaSelected,\n  Ne as ariaValueMax,\n  Me as ariaValueMin,\n  ke as ariaValueNow,\n  Te as ariaValueText,\n  J as beforeunloadEvent,\n  nn as bezierEasings,\n  K as blurEvent,\n  X as changeEvent,\n  de as closest,\n  Y as contextmenuEvent,\n  Wn as createCustomEvent,\n  $t as createElement,\n  _t as createElementNS,\n  Q as dispatchEvent,\n  On as distinct,\n  Tn as documentBody,\n  Dn as documentElement,\n  N as documentHead,\n  In as emulateAnimationEnd,\n  zn as emulateTransitionEnd,\n  $ as errorEvent,\n  Bn as focus,\n  _ as focusEvent,\n  xe as focusEvents,\n  tt as focusinEvent,\n  et as focusoutEvent,\n  nt as gesturechangeEvent,\n  ot as gestureendEvent,\n  st as gesturestartEvent,\n  Zt as getAttribute,\n  bn as getAttributeNS,\n  w as getBoundingClientRect,\n  Eo as getCustomElements,\n  d as getDocument,\n  Jn as getDocumentBody,\n  k as getDocumentElement,\n  Kn as getDocumentHead,\n  te as getElementAnimationDelay,\n  ee as getElementAnimationDuration,\n  vo as getElementById,\n  E as getElementStyle,\n  ne as getElementTransitionDelay,\n  oe as getElementTransitionDuration,\n  ho as getElementsByClassName,\n  pe as getElementsByTagName,\n  Ln as getInstance,\n  Xn as getNodeScroll,\n  Yn as getParentNode,\n  Zn as getRectRelativeToOffsetParent,\n  ae as getUID,\n  $n as getWindow,\n  hn as hasAttribute,\n  yn as hasAttributeNS,\n  kn as hasClass,\n  ln as isApple,\n  ue as isArray,\n  _n as isCanvas,\n  le as isCustomElement,\n  R as isDocument,\n  to as isElement,\n  eo as isElementInScrollRange,\n  no as isElementInViewport,\n  oo as isElementsArray,\n  dn as isFirefox,\n  so as isFunction,\n  co as isHTMLCollection,\n  u as isHTMLElement,\n  ro as isHTMLImageElement,\n  io as isJSON,\n  O as isMap,\n  uo as isMedia,\n  un as isMobile,\n  a as isNode,\n  lo as isNodeList,\n  ce as isNumber,\n  v as isObject,\n  po as isRTL,\n  fo as isSVGElement,\n  ie as isScaledElement,\n  re as isShadowRoot,\n  g as isString,\n  mo as isTableElement,\n  ao as isWeakMap,\n  W as isWindow,\n  Be as keyAlt,\n  He as keyArrowDown,\n  Ue as keyArrowLeft,\n  Fe as keyArrowRight,\n  Pe as keyArrowUp,\n  We as keyBackspace,\n  Re as keyCapsLock,\n  Qe as keyControl,\n  qe as keyDelete,\n  Ge as keyEnter,\n  je as keyEscape,\n  Je as keyInsert,\n  Ke as keyMeta,\n  Xe as keyPause,\n  Ye as keyScrollLock,\n  Ze as keyShift,\n  $e as keySpace,\n  _e as keyTab,\n  Ve as keyboardEventKeys,\n  ct as keydownEvent,\n  rt as keypressEvent,\n  it as keyupEvent,\n  at as loadEvent,\n  Ce as loadstartEvent,\n  yo as matches,\n  Oe as mouseClickEvents,\n  Ie as mouseHoverEvents,\n  Le as mouseSwipeEvents,\n  ut as mouseclickEvent,\n  lt as mousedblclickEvent,\n  dt as mousedownEvent,\n  mt as mouseenterEvent,\n  ft as mousehoverEvent,\n  Et as mouseinEvent,\n  gt as mouseleaveEvent,\n  ht as mousemoveEvent,\n  vt as mouseoutEvent,\n  bt as mouseoverEvent,\n  pt as mouseupEvent,\n  yt as mousewheelEvent,\n  wt as moveEvent,\n  De as nativeEvents,\n  Yt as noop,\n  Hn as normalizeOptions,\n  x as normalizeValue,\n  Kt as off,\n  on as offsetHeight,\n  sn as offsetWidth,\n  Jt as on,\n  Xt as one,\n  At as orientationchangeEvent,\n  Rn as passiveHandler,\n  St as pointercancelEvent,\n  Mt as pointerdownEvent,\n  Nt as pointerleaveEvent,\n  kt as pointermoveEvent,\n  Tt as pointerupEvent,\n  go as querySelector,\n  bo as querySelectorAll,\n  Dt as readystatechangeEvent,\n  Qn as reflow,\n  An as removeAttribute,\n  Sn as removeAttributeNS,\n  Nn as removeClass,\n  en as removeEventListener,\n  Ct as resetEvent,\n  Lt as resizeEvent,\n  xt as scrollEvent,\n  cn as scrollHeight,\n  rn as scrollWidth,\n  Ot as selectEvent,\n  It as selectendEvent,\n  zt as selectstartEvent,\n  F as setAttribute,\n  wn as setAttributeNS,\n  qn as setElementStyle,\n  Vt as submitEvent,\n  pn as support3DTransform,\n  En as supportAnimation,\n  fn as supportPassive,\n  gn as supportTouch,\n  mn as supportTransform,\n  vn as supportTransition,\n  an as tabindex,\n  se as toLowerCase,\n  jn as toUpperCase,\n  ze as touchEvents,\n  Pt as touchcancelEvent,\n  Ut as touchendEvent,\n  Ht as touchmoveEvent,\n  Bt as touchstartEvent,\n  qt as transitionDelay,\n  Qt as transitionDuration,\n  D as transitionEndEvent,\n  U as transitionProperty,\n  Ft as unloadEvent,\n  M as userAgent,\n  S as userAgentData\n};\n//# sourceMappingURL=shorty.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  element: HTMLElement;\n  options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<this>(element, this.name);\n    if (prevInstance) prevInstance.dispose();\n\n    this.element = element;\n\n    /* istanbul ignore else */\n    if (this.defaults && ObjectKeys(this.defaults).length) {\n      this.options = normalizeOptions(element, this.defaults, config || {}, 'bs');\n    }\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /**\n   * Removes component from target element;\n   */\n  dispose() {\n    Data.remove(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  closest,\n  // ObjectAssign,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n// import type { BaseOptions } from 'src/interface/baseComponent';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (that: Alert) => {\n  const { element } = that;\n  toggleAlertHandler(that);\n\n  dispatchEvent(element, closedAlertEvent);\n\n  that.dispose();\n  element.remove();\n};\n\n// ALERT PRIVATE METHOD\n// ====================\n/**\n * Toggle on / off the `click` event listener.\n *\n * @param that the target alert instance\n * @param add when `true`, event listener is added\n */\nconst toggleAlertHandler = (that: Alert, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { dismiss } = that;\n  /* istanbul ignore else */\n  if (dismiss) action(dismiss, mouseclickEvent, that.close);\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    toggleAlertHandler(this, true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   *\n   * @param e the `click` event\n   */\n  close(e?: Event) {\n    const self = e ? (getAlertInstance(closest(e.target as HTMLElement, alertSelector) as HTMLElement) as Alert) : this;\n    const { element } = self;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n      if (closeAlertEvent.defaultPrevented) return;\n\n      removeClass(element, showClass);\n\n      if (hasClass(element, fadeClass)) {\n        emulateTransitionEnd(element, () => alertTransitionEnd(self));\n      } else alertTransitionEnd(self);\n    }\n  }\n\n  /** Remove the component from target element. */\n  dispose() {\n    toggleAlertHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  // ObjectAssign,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON PRIVATE METHOD\n// =====================\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Button` instance\n * @param add when `true`, event listener is added\n */\nconst toggleButtonHandler = (self: Button, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, self.toggle);\n};\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    toggleButtonHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle(e: Event) {\n    if (e) e.preventDefault();\n    const self = e ? (getButtonInstance(e.target as HTMLElement) as Button) : this;\n    if (!self.element) return;\n    const { element, isActive } = self;\n\n    if (hasClass(element, 'disabled')) return;\n\n    const action = isActive ? removeClass : addClass;\n    action(element, activeClass);\n    setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n    self.isActive = hasClass(element, activeClass);\n  }\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    toggleButtonHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  addClass,\n  hasClass,\n  removeClass,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  // discontinue disposed instances\n  /* istanbul ignore else */\n  if (self.isAnimating && getCarouselInstance(element)) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // check for element, might have been disposed\n    if (!getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n\n  const newIndex = +(getAttribute(this, dataBsSlideTo) || 0);\n\n  if (\n    this &&\n    !hasClass(this, activeClass) && // event target is not active\n    !Number.isNaN(newIndex)\n  ) {\n    // AND has the specific attribute\n    self.to(newIndex); // do the slide\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const control = this;\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n  const orientation = getAttribute(this, dataBsSlide);\n\n  /* istanbul ignore else */\n  if (orientation === 'next') {\n    self.next();\n  } else if (orientation === 'prev') {\n    self.prev();\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (!self || self.isAnimating || /textarea|input/i.test(target.nodeName)) return;\n  const RTL = isRTL(element);\n  const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n  const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n  /* istanbul ignore else */\n  if (code === arrowKeyPrev) self.prev();\n  else if (code === arrowKeyNext) self.next();\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  // const element = this;\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (!self || self.isAnimating || self.isTouch) {\n    return;\n  }\n\n  // filter pointer event on controls & indicators\n  const { controls, indicators } = self;\n  if ([...controls, ...indicators].some(el => el === target || el.contains(target as Node))) {\n    return;\n  }\n\n  startX = e.pageX;\n\n  /* istanbul ignore else */\n  if (this.contains(target as Node)) {\n    self.isTouch = true;\n    toggleCarouselTouchHandlers(self, true);\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore next */\n  if (!self) {\n    return;\n  }\n\n  const { element, index } = self;\n  const RTL = isRTL(element);\n\n  self.isTouch = false;\n  toggleCarouselTouchHandlers(self);\n\n  if (doc.getSelection()?.toString().length) {\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n    return;\n  }\n\n  endX = e.pageX;\n\n  // the event target is outside the carousel context\n  // OR swipe distance is less than 120px\n  /* istanbul ignore else */\n  if (!element.contains(target as HTMLElement) || Math.abs(startX - endX) < 120) {\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n    return;\n  }\n  // OR determine next index to slide to\n  /* istanbul ignore else */\n  if (currentX < startX) {\n    self.to(index + (RTL ? -1 : 1));\n  } else if (currentX > startX) {\n    self.to(index + (RTL ? 1 : -1));\n  }\n  // reset pointer position\n  startX = 0;\n  currentX = 0;\n  endX = 0;\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param pageIndex the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, pageIndex: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[pageIndex]) addClass(indicators[pageIndex], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler as EventListener, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler as EventListener, passiveHandler);\n};\n\n/**\n * Toggles all event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselHandlers = (self: Carousel, add?: boolean) => {\n  const { element, options, slides, controls, indicators } = self;\n  const { touch, pause, interval, keyboard } = options;\n  const action = add ? addListener : removeListener;\n\n  if (pause && interval) {\n    action(element, mouseenterEvent, carouselPauseHandler);\n    action(element, mouseleaveEvent, carouselResumeHandler);\n  }\n\n  if (touch && slides.length > 2) {\n    action(element, pointerdownEvent, carouselPointerDownHandler as EventListener, passiveHandler);\n  }\n\n  /* istanbul ignore else */\n  if (controls.length) {\n    controls.forEach(arrow => {\n      /* istanbul ignore else */\n      if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler as EventListener);\n    });\n  }\n\n  /* istanbul ignore else */\n  if (indicators.length) {\n    indicators.forEach(indicator => {\n      action(indicator, mouseclickEvent, carouselIndicatorHandler as EventListener);\n    });\n  }\n\n  if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler as EventListener);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.index = 0;\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length < 2) {\n      return;\n    }\n    // external controls must be within same document context\n    const doc = getDocument(element);\n\n    this.controls = [\n      ...querySelectorAll(`[${dataBsSlide}]`, element),\n      ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n    // a LIVE collection is prefferable\n    this.indicators = [\n      ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n      ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    // set JavaScript and DATA API options\n    const { options } = this;\n\n    // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n    this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n    // set first slide active if none\n    /* istanbul ignore else */\n    if (getActiveIndex(this) < 0) {\n      addClass(slides[0], activeClass);\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, 0);\n    }\n\n    // attach event handlers\n    toggleCarouselHandlers(this, true);\n\n    // start to cycle if interval is set\n    if (options.interval) this.cycle();\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (this.isAnimating || activeItem === next || Timer.get(element, dataBsSlide)) return;\n\n    // determine transition direction\n    /* istanbul ignore else */\n    if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n      this.direction = RTL ? 'right' : 'left'; // next\n    } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n      this.direction = RTL ? 'left' : 'right'; // prev\n    }\n    const { direction } = this;\n\n    // find the right next index\n    if (next < 0) {\n      next = slides.length - 1;\n    } else if (next >= slides.length) {\n      next = 0;\n    }\n\n    // orientation, class name, eventProperties\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    const eventProperties = {\n      relatedTarget: slides[next],\n      from: activeItem,\n      to: next,\n      direction,\n    };\n\n    // update event properties\n    ObjectAssign(carouselSlideEvent, eventProperties);\n    ObjectAssign(carouselSlidEvent, eventProperties);\n\n    // discontinue when prevented\n    dispatchEvent(element, carouselSlideEvent);\n    if (carouselSlideEvent.defaultPrevented) return;\n\n    // update index\n    this.index = next;\n    activateCarouselIndicator(this, next);\n\n    if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n      Timer.set(\n        element,\n        () => {\n          addClass(slides[next], `${carouselItem}-${orientation}`);\n          reflow(slides[next]);\n          addClass(slides[next], `${carouselItem}-${directionClass}`);\n          addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n          emulateTransitionEnd(slides[next], () => carouselTransitionEndHandler(this));\n        },\n        0,\n        dataBsSlide,\n      );\n    } else {\n      addClass(slides[next], activeClass);\n      removeClass(slides[activeItem], activeClass);\n\n      Timer.set(\n        element,\n        () => {\n          Timer.clear(element, dataBsSlide);\n          // check for element, might have been disposed\n          /* istanbul ignore else */\n          if (element && options.interval && !this.isPaused) {\n            this.cycle();\n          }\n\n          dispatchEvent(element, carouselSlidEvent);\n        },\n        0,\n        dataBsSlide,\n      );\n    }\n  }\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { slides } = this;\n    const itemClasses = ['start', 'end', 'prev', 'next'];\n\n    [...slides].forEach((slide, idx) => {\n      if (hasClass(slide, activeClass)) activateCarouselIndicator(this, idx);\n      itemClasses.forEach(c => removeClass(slide, `${carouselItem}-${c}`));\n    });\n\n    toggleCarouselHandlers(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  // ObjectAssign,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (showCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  addClass(element, collapsingClass);\n  removeClass(element, collapseString);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n    addClass(element, showClass);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, shownCollapseEvent);\n  });\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (hideCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  removeClass(element, collapseString);\n  removeClass(element, showClass);\n  addClass(element, collapsingClass);\n\n  reflow(element);\n  setElementStyle(element, { height: '0px' });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    /* istanbul ignore else */\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, hiddenCollapseEvent);\n  });\n};\n\n/**\n * Toggles on/off the event listener(s) of the `Collapse` instance.\n *\n * @param self the `Collapse` instance\n * @param add when `true`, the event listener is added\n */\nconst toggleCollapseHandler = (self: Collapse, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler as EventListener));\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = querySelector(options.parent as HTMLElement | string, doc) || getTargetElement(element) || null;\n\n    // add event listeners\n    toggleCollapseHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (Timer.get(element)) return;\n\n    collapseContent(this);\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    toggleCollapseHandler(this);\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (element as HTMLAnchorElement).href.slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor && hasAttribute(parentAnchor, 'href') && (parentAnchor as HTMLAnchorElement).href.slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  querySelector,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"],[${dataBsToggle}=\"${dropupString}\"],[${dataBsToggle}=\"${dropendString}\"],[${dataBsToggle}=\"${dropstartString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore next: this test requires a navbar */\n  if (getElementStyle(menu, 'position') === 'static') return;\n\n  const RTL = isRTL(element);\n  // const menuStart = hasClass(menu, dropdownMenuStartClass);\n  const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n  // reset menu offset and position\n  const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n  resetProps.forEach(p => {\n    // menu.style[p] = '';\n    const style: { [key: string]: string } = {};\n    style[p] = '';\n    setElementStyle(menu, style);\n  });\n\n  // set initial position class\n  // take into account .btn-group parent as .dropdown\n  // this requires navbar/btn-group/input-group\n  let positionClass =\n    dropdownClasses.find(c => hasClass(parentElement, c)) ||\n    /* istanbul ignore next: fallback position */ dropdownString;\n\n  const dropdownMargin: { [key: string]: number[] } = {\n    dropdown: [offset, 0, 0],\n    dropup: [0, 0, offset],\n    dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n    dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n  };\n\n  const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n    dropdown: { top: '100%' },\n    dropup: { top: 'auto', bottom: '100%' },\n    dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n    dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n    menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n    menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n  };\n\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const { left: targetLeft, top: targetTop, width: targetWidth, height: targetHeight } = getBoundingClientRect(element);\n\n  // dropstart | dropend\n  const leftFullExceed = targetLeft - menuWidth - offset < 0;\n  // dropend\n  const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n  // dropstart | dropend\n  const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n  // dropdown\n  const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n  // dropup\n  const topExceed = targetTop - menuHeight - offset < 0;\n  // dropdown / dropup\n  const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n  const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n  // recompute position\n  // handle RTL as well\n  if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropendString;\n  }\n  if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropstartString;\n  }\n  if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n    positionClass = dropupString;\n  }\n\n  // override position for horizontal classes\n  if (horizontalClass.includes(positionClass) && bottomExceed) {\n    ObjectAssign(dropdownPosition[positionClass], {\n      top: 'auto',\n      bottom: 0,\n    });\n  }\n\n  // override position for vertical classes\n  if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n    // don't realign when menu is wider than window\n    // in both RTL and non-RTL readability is KING\n    let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n    if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n    if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n    if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n  }\n\n  const margins: number[] = dropdownMargin[positionClass];\n  setElementStyle(menu, {\n    ...dropdownPosition[positionClass],\n    margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n  });\n\n  // override dropdown-menu-start | dropdown-menu-end\n  if (verticalClass.includes(positionClass) && menuEnd) {\n    /* istanbul ignore else */\n    if (menuEnd) {\n      const endAdjust =\n        (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n      setElementStyle(menu, dropdownPosition[endAdjust]);\n    }\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler as EventListener);\n  action(doc, focusEvent, dropdownDismissHandler as EventListener);\n  action(doc, keydownEvent, dropdownPreventScroll as EventListener);\n  action(doc, keyupEvent, dropdownKeyHandler as EventListener);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param self the `Dropdown` instance\n * @param add when `true`, it will add the event listener\n */\nconst toggleDropdownHandler = (self: Dropdown, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler as EventListener);\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore next: impossible to satisfy */\n  if (!target || !(target as HTMLElement).closest) return; // some weird FF bug #409\n\n  const element = getCurrentOpenDropdown(target as HTMLElement);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const hasData = closest(target as HTMLElement, dropdownSelector) !== null;\n  const isForm =\n    parentElement &&\n    parentElement.contains(target as HTMLElement) &&\n    ((target as HTMLElement).tagName === 'form' || closest(target as HTMLElement, 'form') !== null);\n\n  if (type === mouseclickEvent && isEmptyAnchor(target as HTMLElement)) {\n    e.preventDefault();\n  }\n  if (type === focusEvent && (target === element || target === menu || menu.contains(target as HTMLElement))) {\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (isForm || hasData) {\n    // smile to ESLint\n  } else if (self) {\n    self.hide();\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopImmediatePropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n  /* istanbul ignore next: impossible to satisfy */\n  if (!self || !activeElement) return;\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n    let idx = menuItems.indexOf(activeElement);\n    /* istanbul ignore else */\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    /* istanbul ignore else */\n    if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n\n    // set targets\n    this.parentElement = parentElement as HTMLElement;\n    this.menu = querySelector(`.${dropdownMenuClass}`, parentElement as HTMLElement) as HTMLElement;\n\n    // add event listener\n    toggleDropdownHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (open) return;\n\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement && getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, showDropdownEvent);\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'true');\n\n    // change menu position\n    styleDropdown(this);\n\n    this.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, hideDropdownEvent);\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'false');\n\n    this.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    toggleDropdownHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'DIV' }) as HTMLElement;\n\nconst appendPopup = (target?: HTMLElement) => {\n  const BODY = getDocumentBody(target);\n  if (isNode(target)) {\n    if (!BODY.contains(popupContainer)) {\n      BODY.append(popupContainer);\n    }\n    popupContainer.append(target);\n  }\n};\n\nconst removePopup = (target?: HTMLElement) => {\n  if (isNode(target)) {\n    target.remove();\n\n    if (!popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement) => {\n  return popupContainer.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import { createElement, getDocument, reflow, removeClass, hasClass, addClass, querySelector } from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  // container.append(overlay);\n  appendPopup(overlay);\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param {HTMLElement=} element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    // overlay.remove();\n    removePopup(overlay);\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isHTMLElement,\n  isRTL,\n  isFunction,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  // ObjectAssign,\n  focus,\n  Timer,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  action(element, mouseclickEvent, modalDismissHandler as EventListener);\n  action(getWindow(element), resizeEvent, self.update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler as EventListener);\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Modal` instance.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listener is added\n */\nconst toggleModalHandler = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler as EventListener));\n  }\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n * @param callback the `Modal` instance\n */\nconst afterModalHide = (self: Modal, callback?: () => void) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  /* istanbul ignore else */\n  if (isFunction(callback)) callback();\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n * @param callback when `true` skip animation\n */\nconst beforeModalHide = (self: Modal, callback?: () => void) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && !callback && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self, callback);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.toggle();\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(modalActiveSelector, getDocument(target as Node));\n  const self = element && getModalInstance(element);\n\n  if (!self) return;\n\n  const { options } = self;\n  /* istanbul ignore else */\n  if (\n    options.keyboard &&\n    code === keyEscape && // the keyboard option is enabled and the key is 27\n    hasClass(element, showClass)\n  ) {\n    // the modal is not visible\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nfunction modalDismissHandler(this: HTMLElement, e: MouseEvent) {\n  const self = getModalInstance(this);\n\n  // this timer is needed\n  /* istanbul ignore next: must have a filter */\n  if (!self || Timer.get(this)) return;\n\n  const { options, isStatic, modalDialog } = self;\n  const { backdrop } = options;\n  const { target } = e;\n\n  const selectedText = getDocument(this)?.getSelection()?.toString().length;\n  const targetInsideDialog = modalDialog?.contains(target as HTMLElement);\n  const dismiss = target && closest(target as HTMLElement, modalDismissSelector);\n\n  /* istanbul ignore else */\n  if (isStatic && !targetInsideDialog) {\n    Timer.set(\n      this,\n      () => {\n        addClass(this, modalStaticClass);\n        emulateTransitionEnd(modalDialog as HTMLElement, () => staticTransitionEnd(self));\n      },\n      17,\n    );\n  } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n    self.relatedTarget = dismiss || null;\n    self.hide();\n    e.preventDefault();\n  }\n}\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (isHTMLElement(modalDialog) ? getElementTransitionDuration(modalDialog) : 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    this.modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    // modal can have multiple triggering elements\n    this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional internals\n    this.isStatic = this.options.backdrop === 'static';\n    this.hasFade = hasClass(element, fadeClass);\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleModalHandler(this, true);\n\n    // bind\n    this.update = this.update.bind(this);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showModalEvent);\n    if (showModalEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const this1 = getModalInstance(currentOpen);\n      const that1 =\n        this1 ||\n        /* istanbul ignore next */ getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, 'Offcanvas');\n      if (that1) that1.hide();\n    }\n\n    if (backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(hasFade, true);\n      } else {\n        toggleOverlayType(true);\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n\n      showOverlay();\n      setTimeout(() => beforeModalShow(this), overlayDelay);\n    } else {\n      beforeModalShow(this);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hide the modal from the user.\n   *\n   * @param callback when defined it will skip animation\n   */\n  hide(callback?: () => void) {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideModalEvent);\n    if (hideModalEvent.defaultPrevented) return;\n    removeClass(element, showClass);\n    setAttribute(element, ariaHidden, 'true');\n    removeAttribute(element, ariaModal);\n\n    // if (hasFade && callback) {\n    /* istanbul ignore else */\n    if (hasFade) {\n      emulateTransitionEnd(element, () => beforeModalHide(this, callback));\n    } else {\n      beforeModalHide(this, callback);\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update() {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  }\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    toggleModalHandler(this);\n    // use callback\n    this.hide(() => super.dispose());\n  }\n}\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  isFunction,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  // ObjectAssign,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the `click` event listeners.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true*, listeners are added\n */\nconst toggleOffcanvasEvents = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  self.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler as EventListener));\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler as EventListener);\n  action(doc, mouseclickEvent, offcanvasDismissHandler as EventListener);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param callback the hide callback\n */\nconst beforeOffcanvasHide = (self: Offcanvas, callback?: () => void) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => hideOffcanvasComplete(self, callback));\n  } else hideOffcanvasComplete(self, callback);\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must have a filter */\n  if (!self) return;\n\n  const { options, triggers } = self;\n  const { backdrop } = options;\n  const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n  const selection = getDocument(element).getSelection();\n\n  if (overlay.contains(target as HTMLElement) && backdrop === 'static') return;\n\n  /* istanbul ignore else */\n  if (\n    !(selection && selection.toString().length) &&\n    ((!element.contains(target as HTMLElement) &&\n      backdrop &&\n      /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n      (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n  ) {\n    self.relatedTarget = offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n    self.hide();\n  }\n\n  /* istanbul ignore next */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (self.options.keyboard && code === keyEscape) {\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param callback the hide callback\n */\nconst hideOffcanvasComplete = (self: Offcanvas, callback?: () => void) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n  // callback\n  if (isFunction(callback)) callback();\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleOffcanvasEvents(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showOffcanvasEvent);\n    if (showOffcanvasEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const this1 = getOffcanvasInstance(currentOpen);\n      const that1 =\n        this1 ||\n        /* istanbul ignore next */ getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, 'Modal');\n      if (that1) that1.hide();\n    }\n\n    if (options.backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(true);\n      } else {\n        toggleOverlayType();\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n    } else {\n      beforeOffcanvasShow(this);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hides the offcanvas from the user.\n   *\n   * @param callback when `true` it will skip animation\n   */\n  hide(callback?: () => void) {\n    const { element, relatedTarget } = this;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideOffcanvasEvent);\n    if (hideOffcanvasEvent.defaultPrevented) return;\n\n    addClass(element, offcanvasTogglingClass);\n    removeClass(element, showClass);\n\n    if (!callback) {\n      emulateTransitionEnd(element, () => beforeOffcanvasHide(this, callback));\n    } else beforeOffcanvasHide(this, callback);\n  }\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    toggleOffcanvasEvents(this);\n    this.hide(() => super.dispose());\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getWindow,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  isMedia,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\n// import TooltipInterface from '../interface/tooltip';\n// import PopoverInterface from '../interface/popover';\nimport Tooltip from '../components/tooltip';\nimport { popupContainer } from './popupContainer';\n\n// type FakeTip = {\n//   name: string,\n//   element: HTMLElement,\n//   tooltip: HTMLElement,\n//   options: TooltipInterface.Options | PopoverInterface.Options,\n//   arrow: HTMLElement,\n//   offsetParent: ParentNode\n// }\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n * @param e event object\n */\nconst styleTip = <T extends Tooltip>(self: T, e?: Event & PointerEvent) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, options, arrow } = self;\n  if (!tooltip) return;\n  const tipPositions = { ...tipClassPositions };\n\n  const RTL = isRTL(element);\n  if (RTL) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // reset tooltip style (top: 0, left: 0 works best)\n  setElementStyle(tooltip, {\n    // top: '0px', left: '0px', right: '', bottom: '',\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  const isPopover = self.name === popoverComponent;\n  const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n  const { clientWidth: htmlcw, clientHeight: htmlch } = getDocumentElement(element);\n  // const { container } = options;\n  let { placement } = options;\n  const { left: parentLeft, right: parentRight, top: parentTop } = getBoundingClientRect(popupContainer, true);\n  const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = popupContainer;\n  const scrollbarWidth = Math.abs(parentCWidth - parentOWidth);\n  // const tipAbsolute = getElementStyle(tooltip, 'position') === 'absolute';\n  const parentPosition = getElementStyle(popupContainer, 'position');\n  // const absoluteParent = parentPosition === 'absolute';\n  const fixedParent = parentPosition === 'fixed';\n  const staticParent = parentPosition === 'static';\n  // const stickyParent = parentPosition === 'sticky';\n  // const isSticky = stickyParent && parentTop === parseFloat(getElementStyle(popupContainer, 'top'));\n  // const absoluteTarget = getElementStyle(element, 'position') === 'absolute';\n  // const stickyFixedParent = ['sticky', 'fixed'].includes(parentPosition);\n  const leftBoundry = RTL && fixedParent ? scrollbarWidth : 0;\n  const rightBoundry = fixedParent\n    ? parentCWidth + parentLeft + (RTL ? scrollbarWidth : 0)\n    : parentCWidth + parentLeft + (htmlcw - parentRight) - 1;\n  const {\n    width: elemWidth,\n    height: elemHeight,\n    left: elemRectLeft,\n    right: elemRectRight,\n    top: elemRectTop,\n  } = getBoundingClientRect(element, true);\n  // console.log(getWindow(tooltip));\n  const win = getWindow(tooltip);\n\n  const scroll = { x: win.scrollX, y: win.scrollY };\n  // const { x, y } = getRectRelativeToOffsetParent(element, win, scroll);\n  const { x, y } = { x: elemRectLeft + scroll.x, y: elemRectTop + scroll.y };\n  // reset arrow style\n  setElementStyle(arrow as HTMLElement, {\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  let topPosition: number | string = 0;\n  let leftPosition: number | string = 0;\n  let rightPosition: number | string = 0;\n  let arrowTop: number | string = 0;\n  let arrowLeft: number | string = 0;\n  let arrowRight: number | string = 0;\n\n  const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n  const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n  const arrowAdjust = arrowWidth / 2;\n\n  // check placement\n  let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n  let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n  let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n  let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n  const horizontal = ['left', 'right'];\n  const vertical = ['top', 'bottom'];\n\n  topExceed = horizontal.includes(placement)\n    ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n    : topExceed;\n  bottomExceed = horizontal.includes(placement)\n    ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n    : bottomExceed;\n  leftExceed = vertical.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n  rightExceed = vertical.includes(placement)\n    ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n    : rightExceed;\n\n  // first remove side positions if both left and right limits are exceeded\n  // we usually fall back to top|bottom\n  placement = horizontal.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n  // second, recompute placement\n  placement = placement === 'top' && topExceed ? 'bottom' : placement;\n  placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n  placement = placement === 'left' && leftExceed ? 'right' : placement;\n  placement = placement === 'right' && rightExceed ? 'left' : placement;\n\n  // update tooltip/popover class\n  if (!tooltip.className.includes(placement)) {\n    tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n  }\n\n  // compute tooltip / popover coordinates\n  /* istanbul ignore else */\n  if (horizontal.includes(placement)) {\n    // secondary|side positions\n    if (placement === 'left') {\n      // LEFT\n      leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n    } else {\n      // RIGHT\n      leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n    }\n\n    // adjust top and arrow\n    if (topExceed) {\n      topPosition = y;\n      // topPosition += isSticky ? -parentTop - scroll.y : 0;\n\n      arrowTop = elemHeight / 2 - arrowWidth;\n    } else if (bottomExceed) {\n      topPosition = y - tipHeight + elemHeight;\n      // topPosition += isSticky ? -parentTop - scroll.y : 0;\n\n      arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n    } else {\n      topPosition = y - tipHeight / 2 + elemHeight / 2;\n      // topPosition += isSticky ? -parentTop - scroll.y : 0;\n\n      arrowTop = tipHeight / 2 - arrowHeight / 2;\n    }\n  } else if (vertical.includes(placement)) {\n    if (e && isMedia(element)) {\n      let eX = 0;\n      let eY = 0;\n      if (staticParent) {\n        eX = e.pageX;\n        eY = e.pageY;\n      } else {\n        // fixedParent | stickyParent\n        eX = e.clientX - parentLeft + (fixedParent ? scroll.x : 0);\n        eY = e.clientY - parentTop + (fixedParent ? scroll.y : 0);\n      }\n\n      // some weird RTL bug\n      eX -= RTL && fixedParent && scrollbarWidth ? scrollbarWidth : 0;\n\n      if (placement === 'top') {\n        topPosition = eY - tipHeight - arrowWidth;\n      } else {\n        topPosition = eY + arrowWidth;\n      }\n\n      // adjust (left | right) and also the arrow\n      if (e.clientX - tipWidth / 2 < leftBoundry) {\n        leftPosition = 0;\n        arrowLeft = eX - arrowAdjust;\n      } else if (e.clientX + tipWidth / 2 > rightBoundry) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = rightBoundry - eX - arrowAdjust;\n        arrowRight -= fixedParent ? parentLeft + (RTL ? scrollbarWidth : 0) : 0;\n\n        // normal top/bottom\n      } else {\n        leftPosition = eX - tipWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    } else {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n  }\n\n  // apply style to tooltip/popover\n  setElementStyle(tooltip, {\n    top: `${topPosition}px`,\n    left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n    right: rightPosition !== undefined ? `${rightPosition}px` : '',\n  });\n\n  // update arrow placement\n  /* istanbul ignore else */\n  if (isHTMLElement(arrow)) {\n    if (arrowTop !== undefined) {\n      arrow.style.top = `${arrowTop}px`;\n    }\n    if (arrowLeft !== undefined) {\n      arrow.style.left = `${arrowLeft}px`;\n    } else if (arrowRight !== undefined) {\n      arrow.style.right = `${arrowRight}px`;\n    }\n  }\n  // console.log(tooltip, leftPosition, rightPosition, arrowLeft);\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","// import {getWindow} from '@thednp/shorty';\nimport { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: Node, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element) || (isString(content) && !content.length)) return;\n\n  /* istanbul ignore else */\n  if (isString(content)) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    // const win = getWindow(element);\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate) ? (tooltipTemplate.cloneNode(true) as HTMLElement) : undefined;\n\n  const { tooltip } = self;\n  if (!tooltip) return;\n\n  // set id and role attributes\n  setAttribute(tooltip, 'id', id);\n  setAttribute(tooltip, 'role', tooltipString);\n\n  const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n  const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n  const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n  // set arrow and enable access for styleTip\n  self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n  const { arrow } = self;\n\n  if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n  else {\n    const tempTitle = createElement('div') as Node;\n    setHtml(tempTitle, title, sanitizeFn);\n    titleParts = [...[...tempTitle.childNodes]];\n  }\n\n  if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n  else {\n    const tempContent = createElement('div') as Node;\n    setHtml(tempContent, content, sanitizeFn);\n    contentParts = [...[...tempContent.childNodes]];\n  }\n\n  // set dismissible button\n  if (dismissible) {\n    if (title) {\n      if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        titleParts = [...titleParts, tempBtn.firstChild as Node];\n      }\n    } else {\n      /* istanbul ignore else */\n      if (tooltipHeader) tooltipHeader.remove();\n      if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        contentParts = [...contentParts, tempBtn.firstChild as Node];\n      }\n    }\n  }\n\n  // fill the template with content from options / data attributes\n  // also sanitize title && content\n  /* istanbul ignore else */\n  if (!isTooltip) {\n    /* istanbul ignore else */\n    if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n    /* istanbul ignore else */\n    if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n    // set btn\n    self.btn = querySelector('.btn-close', tooltip) || undefined;\n  } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n  // Bootstrap 5.2.x\n  addClass(tooltip, 'position-absolute');\n  addClass(arrow, 'position-absolute');\n\n  // set popover animation and placement\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n  /* istanbul ignore else */\n  if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n  /* istanbul ignore else */\n  if (customClass && !hasClass(tooltip, customClass)) {\n    addClass(tooltip, customClass);\n  }\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n};\n\nexport default createTip;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mousemoveEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  isMedia,\n  isFunction,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\n// import isVisibleTip from '../util/isVisibleTip';\n// import getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip);\n  // tooltip?.remove();\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  toggleTooltipHandlers(self);\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n\n  /* istanbul ignore else */\n  if (!isMedia(element)) {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, self.update, passiveHandler);\n    });\n  }\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n * @param callback the dispose callback\n */\nconst tooltipHiddenAction = (self: Tooltip, callback?: () => any) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n  if (isFunction(callback)) callback();\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  // btn is only for dismissible popover\n  const { element, options, btn } = self;\n  const { trigger } = options;\n  const isPopover = self.name !== tooltipComponent;\n  const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n  if (trigger?.includes('manual')) return;\n\n  self.enabled = !!add;\n\n  const triggerOptions = trigger?.split(' ');\n  const elemIsMedia = isMedia(element);\n\n  if (elemIsMedia) {\n    action(element, mousemoveEvent, self.update, passiveHandler);\n  }\n\n  triggerOptions?.forEach(tr => {\n    /* istanbul ignore else */\n    if (elemIsMedia || tr === mousehoverEvent) {\n      action(element, mousedownEvent, self.show);\n      action(element, mouseenterEvent, self.show);\n\n      /* istanbul ignore else */\n      if (dismissible && btn) {\n        action(btn, mouseclickEvent, self.hide);\n      } else {\n        action(element, mouseleaveEvent, self.hide);\n        action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n      }\n    } else if (tr === mouseclickEvent) {\n      action(element, tr, !dismissible ? self.toggle : self.show);\n    } else if (tr === focusEvent) {\n      action(element, focusinEvent, self.show);\n      /* istanbul ignore else */\n      if (!dismissible) action(element, focusoutEvent, self.hide);\n      /* istanbul ignore else */\n      if (isApple) {\n        action(element, mouseclickEvent, () => focus(element));\n      }\n    }\n  });\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  // const { offsetHeight, scrollHeight } = popupContainer;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  if (!isMedia(element)) {\n    const win = getWindow(element);\n    // const overflow = offsetHeight !== scrollHeight;\n    // const scrollTarget = overflow || offsetParent !== win ? popupContainer : win;\n    action(win, resizeEvent, self.update, passiveHandler);\n    action(win, scrollEvent, self.update, passiveHandler);\n  }\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.hide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.hide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(element, titleAtt[content ? 0 : 1], content || getAttribute(element, titleAtt[0]) || '');\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement | Window;\n  declare enabled: boolean;\n  declare id: string;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if ((!options.title && isTooltip) || (!isTooltip && !options.content)) {\n      // throw Error(`${this.name} Error: target has no content set.`);\n      return;\n    }\n\n    // reset default options\n    ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n    // all functions bind\n    this.handleTouch = this.handleTouch.bind(this);\n    this.update = this.update.bind(this);\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n    this.toggle = this.toggle.bind(this);\n\n    // set title attributes and add event listeners\n    /* istanbul ignore else */\n    if (hasAttribute(element, titleAttr) && isTooltip) {\n      toggleTooltipTitle(this, options.title);\n    }\n\n    // create tooltip here\n    createTip(this);\n\n    // attach events\n    toggleTooltipHandlers(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /**\n   * Shows the tooltip.\n   *\n   * @param e the `Event` object\n   */\n  show(e?: Event) {\n    const { options, tooltip, element, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasPopup(tooltip)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (showTooltipEvent.defaultPrevented) return;\n\n          // append to container\n          appendPopup(tooltip);\n\n          setAttribute(element, ariaDescribedBy, `#${id}`);\n\n          this.update(e);\n          toggleTooltipOpenHandlers(this, true);\n\n          /* istanbul ignore else */\n          if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n          /* istanbul ignore else */\n          if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n          else tooltipShownAction(this);\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /**\n   * Hides the tooltip.\n   *\n   * @param e the dispose callback\n   * @param callback the dispose callback\n   */\n  hide(e?: Event, callback?: () => void) {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasPopup(tooltip)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (hideTooltipEvent.defaultPrevented) return;\n\n          this.update(e); // use Event\n          removeClass(tooltip, showClass);\n          toggleTooltipOpenHandlers(this);\n\n          /* istanbul ignore else */\n          if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this, callback));\n          else tooltipHiddenAction(this, callback);\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  }\n\n  /**\n   * Updates the tooltip position.\n   *\n   * @param e the `Event` object\n   */\n  update(e?: Event) {\n    styleTip<Tooltip>(this, e as (Event & PointerEvent) | undefined);\n  }\n\n  /**\n   * Toggles the tooltip visibility.\n   *\n   * @param e the `Event` object\n   */\n  toggle(e?: Event) {\n    const { tooltip } = this;\n\n    if (tooltip && !hasPopup(tooltip)) this.show(e);\n    else this.hide();\n  }\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      toggleTooltipHandlers(this, true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasPopup(tooltip) && animation) {\n        this.hide(undefined, () => toggleTooltipHandlers(this));\n      } else {\n        toggleTooltipHandlers(this);\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch({ target }: TouchEvent) {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore next */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  }\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const callback = () => disposeTooltipComplete(this, () => super.dispose());\n\n    if (options.animation && tooltip && hasPopup(tooltip)) {\n      this.options.delay = 0; // reset delay\n      this.hide(undefined, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show() {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  }\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  // ObjectAssign,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget && getScrollHeight(scrollTarget);\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (itemsLength !== links.length || scrollHEIGHT !== scrollHeight)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT as number;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n/**\n * Toggles on/off the component event listener.\n *\n * @param self the `ScrollSpy` instance\n * @param add when `true`, listener is added\n */\nconst toggleSpyHandlers = (self: ScrollSpy, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.scrollTarget as EventTarget, scrollEvent, self.refresh, passiveHandler);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window | null;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (!this.target) return;\n\n    // set initial state\n    this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n\n    // bind events\n    this.refresh = this.refresh.bind(this);\n\n    // add event handlers\n    toggleSpyHandlers(this, true);\n\n    this.refresh();\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh() {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore next */\n    if (target?.offsetHeight === 0) return;\n\n    updateSpyTargets(this);\n\n    const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n    if (scrollTop >= maxScroll) {\n      const newActiveItem = items[itemsLength - 1];\n\n      /* istanbul ignore else */\n      if (activeItem !== newActiveItem) {\n        activate(this, newActiveItem);\n      }\n      return;\n    }\n\n    const { offsets } = this;\n\n    if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n      this.activeItem = null;\n      if (isHTMLElement(target)) clear(target);\n      return;\n    }\n\n    items.forEach((item, i) => {\n      if (\n        activeItem !== item &&\n        scrollTop >= offsets[i] &&\n        (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n      ) {\n        activate(this, item);\n      }\n    });\n  }\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    toggleSpyHandlers(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  // ObjectAssign,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || { currentHeight: 0, nextHeight: 0 };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n  if (showTabEvent.defaultPrevented) return;\n\n  if (nextContent) addClass(nextContent, activeClass);\n  if (content) removeClass(content, activeClass);\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const nextHeight = nextContent.scrollHeight;\n    tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n    addClass(tabContent, collapsingClass);\n    tabContent.style.height = `${currentHeight}px`;\n    reflow(tabContent);\n    [content, nextContent].forEach(c => {\n      if (c) removeClass(c, 'overflow-hidden');\n    });\n  }\n\n  if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n    setTimeout(() => {\n      addClass(nextContent, showClass);\n      emulateTransitionEnd(nextContent, () => {\n        triggerTabShow(self);\n      });\n    }, 1);\n  } else {\n    if (nextContent) addClass(nextContent, showClass);\n    triggerTabShow(self);\n  }\n\n  if (tab) dispatchEvent(tab, hiddenTabEvent);\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Tab` instance\n * @param add when `true`, event listener is added\n */\nconst toggleTabHandler = (self: Tab, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, tabClickHandler);\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n  e.preventDefault();\n\n  self.show();\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    if (!content) return;\n\n    const nav = closest(element, '.nav');\n    const container = closest(content, '.tab-content');\n\n    this.nav = nav;\n    this.content = content;\n    this.tabContent = container;\n\n    // event targets\n    this.dropdown = getParentDropdown(element);\n\n    // show first Tab instance of none is shown\n    // suggested on #432\n    const { tab } = getActiveTab(this);\n    if (nav && !tab) {\n      const firstTab = querySelector(tabSelector, nav);\n      const firstTabContent = firstTab && getTargetElement(firstTab);\n\n      /* istanbul ignore else */\n      if (firstTabContent) {\n        addClass(firstTab, activeClass);\n        addClass(firstTabContent, showClass);\n        addClass(firstTabContent, activeClass);\n        setAttribute(element, ariaSelected, 'true');\n      }\n    }\n\n    // add event listener\n    toggleTabHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      if (isHTMLElement(tab as Node)) dispatchEvent(tab as EventTarget, hideTabEvent);\n      if (hideTabEvent.defaultPrevented) return;\n\n      addClass(element, activeClass);\n      setAttribute(element, ariaSelected, 'true');\n\n      const activeDropdown = isHTMLElement(tab as HTMLElement) && getParentDropdown(tab as HTMLElement);\n      if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n        removeClass(activeDropdown, activeClass);\n      }\n\n      /* istanbul ignore else */\n      if (nav) {\n        const toggleTab = () => {\n          if (tab) {\n            removeClass(tab, activeClass);\n            setAttribute(tab, ariaSelected, 'false');\n          }\n          if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n        };\n\n        if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n          Timer.set(nav, toggleTab, 1);\n        } else toggleTab();\n      }\n\n      if (content) {\n        removeClass(content, showClass);\n        if (hasClass(content, fadeClass)) {\n          emulateTransitionEnd(content, () => triggerTabHide(this));\n        } else {\n          triggerTabHide(this);\n        }\n      }\n    }\n  }\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    toggleTabHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  // ObjectAssign,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Toast` instance\n * @param add when `true`, it will add the listener\n */\nconst toggleToastHandlers = (self: Toast, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, triggers, dismiss, options } = self;\n\n  /* istanbul ignore else */\n  if (dismiss) {\n    action(dismiss, mouseclickEvent, self.hide);\n  }\n\n  /* istanbul ignore else */\n  if (options.autohide) {\n    [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n      action(element, e, interactiveToastHandler as EventListener),\n    );\n  }\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n  }\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  toggleToastHandlers(self);\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.show();\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore next: a solid filter is required */\n  if (!self || element === relatedTarget || element.contains(relatedTarget as Node)) return;\n\n  if ([mouseenterEvent, focusinEvent].includes(type)) {\n    Timer.clear(element, toastString);\n  } else {\n    Timer.set(element, () => self.hide(), self.options.delay, toastString);\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: ToastOptions) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // bind\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n\n    // add event listener\n    toggleToastHandlers(this, true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (showToastEvent.defaultPrevented) return;\n\n      showToast(this);\n    }\n  }\n\n  /** Hides the toast. */\n  hide() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (hideToastEvent.defaultPrevented) return;\n      hideToast(this);\n    }\n  }\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","import { Data, ObjectKeys, ObjectValues, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = {\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n};\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  ObjectValues(componentsList).forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  ObjectKeys(componentsList).forEach(comp => {\n    removeComponentDataAPI(comp, lookUp);\n  });\n};\n\n// bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n"],"names":["e","r","s","c","n","i","t","o","a","f","d","E","g","M","ge","Ee","be","we","Ae","Se","H","_","tt","et","ct","it","ut","dt","ft","mt","gt","ht","Mt","kt","Tt","Lt","xt","Bt","He","Pe","Ue","Fe","je","Qt","qt","D","U","Gt","S","jt","I","z","ln","N","Jt","Kt","Xt","Yt","Zt","hn","F","An","Mn","Nn","kn","v","u","y","L","Ln","W","R","h","$t","Q","ne","oe","zn","l","Bn","x","se","Hn","p","A","G","q","Un","Fn","Wn","Rn","Qn","qn","O","ce","m","Gn","w","Jn","k","V","B","b","ae","$n","ue","eo","so","uo","lo","po","de","go","pe","bo","ho","yo","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","version","BaseComponent","target","config","element","querySelector","isString","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","that","toggleAlertHandler","dispatchEvent","add","action","addListener","removeListener","dismiss","mouseclickEvent","self","closest","hasClass","removeClass","emulateTransitionEnd","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","toggleButtonHandler","setAttribute","ariaPressed","isActive","addClass","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","getAttribute","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","keyArrowRight","keyArrowLeft","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","activateCarouselIndicator","pageIndex","pointermoveEvent","passiveHandler","pointerupEvent","toggleCarouselHandlers","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","arrow","indicator","keydownEvent","isHTMLElement","getElementsByClassName","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","itemClasses","slide","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","toggleCollapseHandler","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","toggleDropdownHandler","dropdownClickHandler","getCurrentOpenDropdown","currentParent","type","hasData","isForm","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","currentElement","currentInstance","modalString","modalComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","BODY","isNode","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","pad","padStyle","toggleModalDismiss","modalDismissHandler","modalKeyHandler","toggleModalHandler","modalClickHandler","afterModalHide","callback","relatedTarget","focusElement","isFunction","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","that1","offcanvasComponent","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffcanvasEvents","offcanvasTriggerHandler","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offCanvasDismiss","selection","visibleTrigger","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","placement","parentLeft","parentRight","parentTop","parentCWidth","parentOWidth","parentPosition","fixedParent","staticParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","win","scroll","topPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontal","vertical","isMedia","eX","eY","tooltipDefaults","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","ariaDescribedBy","disposeTooltipComplete","toggleTooltipHandlers","toggleTooltipTitle","toggleTooltipAction","touchstartEvent","tooltipShownAction","shownTooltipEvent","toLowerCase","tooltipHiddenAction","hiddenTooltipEvent","triggerOptions","elemIsMedia","mousemoveEvent","tr","mousehoverEvent","mousedownEvent","focusinEvent","focusoutEvent","isApple","toggleTooltipOpenHandlers","parentModal","parentOffcanvas","titleAtt","tipComponent","elem","getUID","outTimer","showTooltipEvent","delay","hideTooltipEvent","enabled","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","scrollTarget","itemsLength","isWin","isWindow","links","getElementsByTagName","scrollHEIGHT","getScrollHeight","href","targetItem","rect","getOffsetHeight","link","clear","item","activate","parents","parentItem","menuItem","parentLink","toggleSpyHandlers","scrollTop","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","toggleTabHandler","tabClickHandler","container","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toggleToastHandlers","interactiveToastHandler","toastClickHandler","completeDisposeToast","isShown","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","ObjectValues","cs","init","selector","matches","removeDataAPI","comp"],"mappings":"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"}