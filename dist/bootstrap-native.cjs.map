{"version":3,"file":"bootstrap-native.cjs","sources":["../node_modules/.pnpm/@thednp+shorty@https+++codeload.github.com+thednp+shorty+tar.gz+309d581b370f747cb15531ca6c201def3827e05c/node_modules/@thednp/shorty/dist/shorty.mjs","../node_modules/.pnpm/@thednp+event-listener@2.0.8/node_modules/@thednp/event-listener/dist/event-listener.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../node_modules/.pnpm/@thednp+position-observer@https+++codeload.github.com+thednp+position-observer+tar.gz+d693d53_hyk7lpzuqi6vnifksl6nzudy5a/node_modules/@thednp/position-observer/dist/index.mjs","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["const Ce = \"2.0.8\", Le = \"aria-checked\", Me = \"aria-description\", De = \"aria-describedby\", Oe = \"aria-expanded\", xe = \"aria-haspopup\", $ = \"aria-hidden\", ze = \"aria-label\", Ie = \"aria-labelledby\", Pe = \"aria-modal\", Be = \"aria-pressed\", Fe = \"aria-selected\", He = \"aria-valuemin\", Ve = \"aria-valuemax\", Ue = \"aria-valuenow\", We = \"aria-valuetext\", J = \"abort\", X = \"beforeunload\", tt = \"blur\", et = \"change\", nt = \"contextmenu\", V = \"DOMContentLoaded\", ot = \"DOMMouseScroll\", st = \"error\", rt = \"focus\", ct = \"focusin\", at = \"focusout\", it = \"gesturechange\", ut = \"gestureend\", lt = \"gesturestart\", dt = \"keydown\", ft = \"keypress\", pt = \"keyup\", gt = \"load\", mt = \"click\", vt = \"dblclick\", bt = \"mousedown\", Et = \"mouseup\", ht = \"hover\", yt = \"mouseenter\", wt = \"mouseleave\", At = \"mousein\", St = \"mouseout\", Tt = \"mouseover\", kt = \"mousemove\", Nt = \"mousewheel\", Ct = \"move\", Lt = \"orientationchange\", Mt = \"pointercancel\", Dt = \"pointerdown\", Ot = \"pointerleave\", xt = \"pointermove\", zt = \"pointerup\", It = \"readystatechange\", Pt = \"reset\", Bt = \"resize\", Ft = \"select\", Ht = \"selectend\", Vt = \"selectstart\", Ut = \"scroll\", Wt = \"submit\", Rt = \"touchstart\", Qt = \"touchmove\", jt = \"touchcancel\", Gt = \"touchend\", Kt = \"unload\", Re = {\n  DOMContentLoaded: V,\n  DOMMouseScroll: ot,\n  abort: J,\n  beforeunload: X,\n  blur: tt,\n  change: et,\n  click: mt,\n  contextmenu: nt,\n  dblclick: vt,\n  error: st,\n  focus: rt,\n  focusin: ct,\n  focusout: at,\n  gesturechange: it,\n  gestureend: ut,\n  gesturestart: lt,\n  hover: ht,\n  keydown: dt,\n  keypress: ft,\n  keyup: pt,\n  load: gt,\n  mousedown: bt,\n  mousemove: kt,\n  mousein: At,\n  mouseout: St,\n  mouseenter: yt,\n  mouseleave: wt,\n  mouseover: Tt,\n  mouseup: Et,\n  mousewheel: Nt,\n  move: Ct,\n  orientationchange: Lt,\n  pointercancel: Mt,\n  pointerdown: Dt,\n  pointerleave: Ot,\n  pointermove: xt,\n  pointerup: zt,\n  readystatechange: It,\n  reset: Pt,\n  resize: Bt,\n  scroll: Ut,\n  select: Ft,\n  selectend: Ht,\n  selectstart: Vt,\n  submit: Wt,\n  touchcancel: jt,\n  touchend: Gt,\n  touchmove: Qt,\n  touchstart: Rt,\n  unload: Kt\n}, Qe = \"drag\", je = \"dragstart\", Ge = \"dragenter\", Ke = \"dragleave\", qe = \"dragover\", Ze = \"dragend\", Ye = \"loadstart\", _e = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, $e = { down: \"mousedown\", up: \"mouseup\" }, Je = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : [\"mouseover\", \"mouseout\"], Xe = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, tn = { in: \"focusin\", out: \"focusout\" }, qt = 'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"]', en = {\n  Backspace: \"Backspace\",\n  Tab: \"Tab\",\n  Enter: \"Enter\",\n  Shift: \"Shift\",\n  Control: \"Control\",\n  Alt: \"Alt\",\n  Pause: \"Pause\",\n  CapsLock: \"CapsLock\",\n  Escape: \"Escape\",\n  Scape: \"Space\",\n  ArrowLeft: \"ArrowLeft\",\n  ArrowUp: \"ArrowUp\",\n  ArrowRight: \"ArrowRight\",\n  ArrowDown: \"ArrowDown\",\n  Insert: \"Insert\",\n  Delete: \"Delete\",\n  Meta: \"Meta\",\n  ContextMenu: \"ContextMenu\",\n  ScrollLock: \"ScrollLock\"\n}, nn = \"Alt\", on = \"ArrowDown\", sn = \"ArrowUp\", rn = \"ArrowLeft\", cn = \"ArrowRight\", an = \"Backspace\", un = \"CapsLock\", ln = \"Control\", dn = \"Delete\", fn = \"Enter\", pn = \"NumpadEnter\", gn = \"Escape\", mn = \"Insert\", vn = \"Meta\", bn = \"Pause\", En = \"ScrollLock\", hn = \"Shift\", yn = \"Space\", wn = \"Tab\", Zt = \"animationDuration\", Yt = \"animationDelay\", U = \"animationName\", L = \"animationend\", _t = \"transitionDuration\", $t = \"transitionDelay\", M = \"transitionend\", W = \"transitionProperty\", An = \"addEventListener\", Sn = \"removeEventListener\", Tn = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, kn = \"offsetHeight\", Nn = \"offsetWidth\", Cn = \"scrollHeight\", Ln = \"scrollWidth\", Mn = \"tabindex\", Dn = navigator.userAgentData, { userAgent: Jt } = navigator, On = Jt, xn = () => {\n  const t = /iPhone|iPad|iPod|Android/i;\n  return navigator?.userAgentData?.brands.some(\n    (e) => t.test(e.brand)\n  ) || t.test(navigator?.userAgent) || !1;\n}, zn = () => {\n  const t = /(iPhone|iPod|iPad)/;\n  return navigator?.userAgentData?.brands.some(\n    (e) => t.test(e.brand)\n  ) || t.test(\n    navigator?.userAgent\n  ) || !1;\n}, In = () => navigator?.userAgent?.includes(\"Firefox\") || !1, Xt = () => typeof CSS > \"u\" || !CSS.supports ? !1 : CSS.supports(\"-webkit-backdrop-filter\", \"none\"), Pn = () => [\"webkitPerspective\", \"perspective\"].some((t) => t in document.head.style), te = () => {\n}, R = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(\n    e,\n    n,\n    s\n  );\n}, Q = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(\n    e,\n    n,\n    s\n  );\n}, ee = (t, e, n, o) => {\n  const s = (r) => {\n    (r.target === t || r.currentTarget === t) && (n.apply(t, [r]), Q(t, e, s, o));\n  };\n  R(t, e, s, o);\n}, Bn = () => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    ee(document, V, te, e);\n  } catch {\n  }\n  return t;\n}, Fn = () => [\"webkitTransform\", \"transform\"].some((t) => t in document.head.style), Hn = () => \"ontouchstart\" in window || \"msMaxTouchPoints\" in navigator, Vn = () => [\"webkitAnimation\", \"animation\"].some((t) => t in document.head.style), Un = () => [\"webkitTransition\", \"transition\"].some((t) => t in document.head.style), j = (t, e) => t.getAttribute(e), Wn = (t, e, n) => e.getAttributeNS(t, n), ne = (t, e) => t.hasAttribute(e), Rn = (t, e, n) => e.hasAttributeNS(t, n), Qn = (t, e, n) => t.setAttribute(e, n), jn = (t, e, n, o) => e.setAttributeNS(t, n, o), Gn = (t, e) => t.removeAttribute(e), Kn = (t, e, n) => e.removeAttributeNS(t, n), qn = (t, ...e) => {\n  t.classList.add(...e);\n}, Zn = (t, ...e) => {\n  t.classList.remove(...e);\n}, Yn = (t, e) => t.classList.contains(e), { body: _n } = document, { documentElement: $n } = document, { head: Jn } = document, Xn = (t) => Array.from(t), b = (t) => t != null && typeof t == \"object\" || !1, l = (t) => b(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(\n  (e) => t.nodeType === e\n) || !1, u = (t) => l(t) && t.nodeType === 1 || !1, h = /* @__PURE__ */ new Map(), O = {\n  data: h,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (t, e, n) => {\n    if (!u(t)) return;\n    h.has(e) || h.set(e, /* @__PURE__ */ new Map()), h.get(e).set(t, n);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (t) => h.get(t) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (t, e) => {\n    if (!u(t) || !e) return null;\n    const n = O.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (t, e) => {\n    const n = O.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && h.delete(e));\n  }\n}, to = (t, e) => O.get(t, e), eo = (t) => t?.charAt(0).toUpperCase() + t?.slice(1), no = (t) => t?.trim().replace(\n  /(?:^\\w|[A-Z]|\\b\\w)/g,\n  (e, n) => n === 0 ? e.toLowerCase() : e.toUpperCase()\n).replace(/\\s+/g, \"\"), k = (t) => typeof t == \"string\" || !1, G = (t) => b(t) && t.constructor.name === \"Window\" || !1, K = (t) => l(t) && t.nodeType === 9 || !1, d = (t) => K(t) ? t : l(t) ? t.ownerDocument : G(t) ? t.document : globalThis.document, N = (t, ...e) => Object.assign(t, ...e), oe = (t) => {\n  if (!t) return;\n  if (k(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = oe(e);\n  if (!n) return;\n  const o = { ...t };\n  return delete o.tagName, N(n, o);\n}, se = (t, e) => {\n  if (!t || !e) return;\n  if (k(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = se(t, n);\n  if (!o) return;\n  const s = { ...e };\n  return delete s.tagName, N(o, s);\n}, q = (t, e) => t.dispatchEvent(e), oo = (t, e, n) => n.indexOf(t) === e, g = (t, e, n) => {\n  const o = getComputedStyle(t, n), s = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return o.getPropertyValue(s);\n}, re = (t) => {\n  const e = g(t, U), n = g(t, Yt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, ce = (t) => {\n  const e = g(t, U), n = g(t, Zt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, so = (t, e) => {\n  let n = 0;\n  const o = new Event(L), s = ce(t), r = re(t);\n  if (s) {\n    const a = (i) => {\n      i.target === t && (e.apply(t, [i]), t.removeEventListener(L, a), n = 1);\n    };\n    t.addEventListener(L, a), setTimeout(() => {\n      n || q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, ae = (t) => {\n  const e = g(t, W), n = g(t, $t), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, ie = (t) => {\n  const e = g(t, W), n = g(t, _t), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, ro = (t, e) => {\n  let n = 0;\n  const o = new Event(M), s = ie(t), r = ae(t);\n  if (s) {\n    const a = (i) => {\n      i.target === t && (e.apply(t, [i]), t.removeEventListener(M, a), n = 1);\n    };\n    t.addEventListener(M, a), setTimeout(() => {\n      n || q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, co = (t) => Float32Array.from(Array.from(t)), ao = (t) => Float64Array.from(Array.from(t)), io = (t, e) => t.focus(e), uo = (t) => t?.trim().replace(/([a-z])([A-Z])/g, \"$1-$2\").replace(/\\s+/g, \"-\").toLowerCase(), P = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, T = (t) => Object.entries(t), ue = (t) => t.toLowerCase(), lo = (t, e, n, o) => {\n  if (!u(t)) return e;\n  const s = { ...n }, r = { ...t.dataset }, a = { ...e }, i = {}, f = \"title\";\n  return T(r).forEach(([c, p]) => {\n    const E = o && typeof c == \"string\" && c.includes(o) ? c.replace(o, \"\").replace(\n      /[A-Z]/g,\n      (C) => ue(C)\n    ) : c;\n    i[E] = P(p);\n  }), T(s).forEach(([c, p]) => {\n    s[c] = P(p);\n  }), T(e).forEach(([c, p]) => {\n    c in s ? a[c] = s[c] : c in i ? a[c] = i[c] : a[c] = c === f ? j(t, f) : p;\n  }), a;\n}, fo = (t, e) => b(t) && (Object.hasOwn(t, e) || e in t), po = (t) => Object.keys(t), go = (t) => Object.values(t), mo = (t) => Object.fromEntries(t), vo = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return b(e) && N(n, e), n;\n}, bo = { passive: !0 }, Eo = (t) => t.offsetHeight, ho = (t, e) => {\n  T(e).forEach(([n, o]) => {\n    if (o && k(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, N(t.style, s);\n    }\n  });\n}, x = (t) => b(t) && t.constructor.name === \"Map\" || !1, le = (t) => typeof t == \"number\" || !1, v = /* @__PURE__ */ new Map(), yo = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (t, e, n, o) => {\n    u(t) && (o && o.length ? (v.has(t) || v.set(t, /* @__PURE__ */ new Map()), v.get(t).set(o, setTimeout(e, n))) : v.set(t, setTimeout(e, n)));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (t, e) => {\n    if (!u(t)) return null;\n    const n = v.get(t);\n    return e && n && x(n) ? n.get(e) || null : le(n) ? n : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (t, e) => {\n    if (!u(t)) return;\n    const n = v.get(t);\n    e && e.length && x(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && v.delete(t)) : (clearTimeout(n), v.delete(t));\n  }\n}, wo = (t) => t.toUpperCase(), de = (t, e) => (l(e) ? e : d()).querySelectorAll(t), z = /* @__PURE__ */ new Map();\nfunction fe(t) {\n  const { shiftKey: e, code: n } = t, o = d(this), s = [\n    ...de(qt, this)\n  ].filter(\n    (i) => !ne(i, \"disabled\") && !j(i, $)\n  );\n  if (!s.length) return;\n  const r = s[0], a = s[s.length - 1];\n  n === \"Tab\" && (e && o.activeElement === r ? (a.focus(), t.preventDefault()) : !e && o.activeElement === a && (r.focus(), t.preventDefault()));\n}\nconst pe = (t) => z.has(t) === !0, Ao = (t) => {\n  const e = pe(t);\n  (e ? Q : R)(t, \"keydown\", fe), e ? z.delete(t) : z.set(t, !0);\n}, m = (t) => u(t) && \"offsetWidth\" in t || !1, w = (t, e) => {\n  const { width: n, height: o, top: s, right: r, bottom: a, left: i } = t.getBoundingClientRect();\n  let f = 1, c = 1;\n  if (e && m(t)) {\n    const { offsetWidth: p, offsetHeight: E } = t;\n    f = p > 0 ? Math.round(n) / p : 1, c = E > 0 ? Math.round(o) / E : 1;\n  }\n  return {\n    width: n / f,\n    height: o / c,\n    top: s / c,\n    right: r / f,\n    bottom: a / c,\n    left: i / f,\n    x: i / f,\n    y: s / c\n  };\n}, So = (t) => d(t).body, S = (t) => d(t).documentElement, To = (t) => d(t).head, ge = (t) => l(t) ? (t.nodeName || \"\").toLowerCase() : \"#document\", ko = (t) => {\n  const e = G(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, me = (t) => l(t) && t.constructor.name === \"ShadowRoot\" || !1, A = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || l(t) && t.parentNode || me(t) && t.host || S(t), ve = (t) => t ? K(t) ? t.defaultView : l(t) ? t?.ownerDocument?.defaultView : t : window, be = (t) => l(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, Ee = (t, e) => t.matches(e), D = (t) => g(t, \"position\") === \"static\", he = (t) => g(t, \"position\") === \"fixed\", Z = (t) => [\":popover-open\", \":modal\"].some((e) => {\n  try {\n    return Ee(t, e);\n  } catch {\n    return !1;\n  }\n}), Y = (t) => {\n  const e = Xt(), n = u(t) ? getComputedStyle(t) : t;\n  return n.transform !== \"none\" || n.perspective !== \"none\" || (n.containerType ? n.containerType !== \"normal\" : !1) || !e && (n.backdropFilter ? n.backdropFilter !== \"none\" : !1) || !e && (n.filter ? n.filter !== \"none\" : !1) || [\"transform\", \"perspective\", \"filter\"].some(\n    (o) => (n.willChange || \"\").includes(o)\n  ) || [\"paint\", \"layout\", \"strict\", \"content\"].some(\n    (o) => (n.contain || \"\").includes(o)\n  );\n}, ye = (t) => {\n  let e = A(t);\n  for (; u(e) && !I(e); ) {\n    if (Y(e))\n      return e;\n    if (Z(e))\n      return null;\n    e = A(e);\n  }\n  return null;\n}, I = (t) => [\"html\", \"body\", \"#document\"].includes(ge(t)), B = (t) => {\n  if (!m(t) || he(t))\n    return null;\n  let e = t.offsetParent;\n  return S(t) === e && (e = e.ownerDocument.body), e;\n}, No = (t) => {\n  const e = ve(t);\n  if (!l(t) || Z(t))\n    return e;\n  if (!m(t)) {\n    let o = A(t);\n    for (; o && !I(o); ) {\n      if (u(o) && !D(o))\n        return o;\n      o = A(o);\n    }\n    return e;\n  }\n  let n = B(t);\n  for (; n && be(n) && D(n); )\n    n = B(n);\n  return n && I(n) && D(n) && !Y(n) ? e : n || ye(t) || e;\n}, we = (t) => {\n  if (!m(t)) return !1;\n  const { width: e, height: n } = w(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, Co = (t, e, n) => {\n  const o = m(e), s = w(\n    t,\n    o && we(e)\n  ), r = { x: 0, y: 0 };\n  if (o) {\n    const a = w(e, !0);\n    r.x = a.x + e.clientLeft, r.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - r.x,\n    y: s.top + n.y - r.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet F = 0, H = 0;\nconst y = /* @__PURE__ */ new Map(), Ae = (t, e) => {\n  let n = e ? F : H;\n  if (e) {\n    const o = Ae(t), s = y.get(o) || /* @__PURE__ */ new Map();\n    y.has(o) || y.set(o, s), x(s) && !s.has(e) ? (s.set(e, n), F += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    y.has(o) ? n = y.get(o) : (y.set(o, n), H += 1);\n  }\n  return n;\n}, Lo = (t) => {\n  const e = [\"HTML\", \"BODY\"];\n  let { parentNode: n } = t;\n  if (!m(n))\n    for (; n && !e.includes(n.nodeName) && (n = A(n), !m(n)); )\n      ;\n  const {\n    offsetLeft: o,\n    offsetTop: s,\n    offsetParent: r\n  } = n, { top: a, left: i } = n.getBoundingClientRect(), { top: f, left: c, width: p, height: E } = t.getBoundingClientRect(), C = s + (f - a), _ = o + (c - i);\n  return {\n    offsetTop: C,\n    offsetLeft: _,\n    offsetWidth: p,\n    offsetHeight: E,\n    offsetParent: r\n  };\n}, Se = (t) => Array.isArray(t) || !1, Mo = (t) => l(t) && t.nodeName === \"CANVAS\" || !1, Te = (t) => m(t) && !!t.shadowRoot || !1, Do = (t) => {\n  if (!l(t)) return !1;\n  const { top: e, bottom: n } = w(t), { clientHeight: o } = S(t);\n  return e <= o && n >= 0;\n}, Oo = (t) => {\n  if (!u(t)) return !1;\n  const { clientWidth: e, clientHeight: n } = S(t), { top: o, left: s, bottom: r, right: a } = w(t, !0);\n  return o >= 0 && s >= 0 && r <= n && a <= e;\n}, xo = (t) => Se(t) && t.every(u) || !1, zo = (t) => typeof t == \"function\" || !1, Io = (t) => b(t) && t.constructor.name === \"HTMLCollection\" || !1, Po = (t) => m(t) && t.tagName === \"IMG\" || !1, Bo = (t) => {\n  if (!k(t)) return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, Fo = (t) => b(t) && t.constructor.name === \"WeakMap\" || !1, Ho = (t) => l(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some(\n  (e) => t.constructor.name.includes(e)\n) || !1, Vo = (t) => b(t) && t.constructor.name === \"NodeList\" || !1, Uo = (t) => S(t).dir === \"rtl\", Wo = (t) => l(t) && t.constructor.name.includes(\"SVG\") || !1, ke = (t, e) => !t || !e ? null : t.closest(e) || ke(t.getRootNode().host, e) || null, Ro = (t, e) => u(t) ? t : (u(e) ? e : d()).querySelector(t), Ne = (t, e) => (l(e) ? e : d()).getElementsByTagName(\n  t\n), Qo = (t) => [...Ne(\"*\", t)].filter(Te), jo = (t, e) => d(e).getElementById(t), Go = (t, e) => (e && l(e) ? e : d()).getElementsByClassName(\n  t\n);\nexport {\n  Xn as ArrayFrom,\n  V as DOMContentLoadedEvent,\n  ot as DOMMouseScrollEvent,\n  O as Data,\n  co as Float32ArrayFrom,\n  ao as Float64ArrayFrom,\n  N as ObjectAssign,\n  T as ObjectEntries,\n  mo as ObjectFromEntries,\n  fo as ObjectHasOwn,\n  po as ObjectKeys,\n  go as ObjectValues,\n  yo as Timer,\n  J as abortEvent,\n  qn as addClass,\n  An as addEventListener,\n  Yt as animationDelay,\n  Zt as animationDuration,\n  L as animationEndEvent,\n  U as animationName,\n  Le as ariaChecked,\n  De as ariaDescribedBy,\n  Me as ariaDescription,\n  Oe as ariaExpanded,\n  xe as ariaHasPopup,\n  $ as ariaHidden,\n  ze as ariaLabel,\n  Ie as ariaLabelledBy,\n  Pe as ariaModal,\n  Be as ariaPressed,\n  Fe as ariaSelected,\n  Ve as ariaValueMax,\n  He as ariaValueMin,\n  Ue as ariaValueNow,\n  We as ariaValueText,\n  X as beforeunloadEvent,\n  Tn as bezierEasings,\n  tt as blurEvent,\n  no as camelCase,\n  eo as capitalize,\n  et as changeEvent,\n  ke as closest,\n  nt as contextmenuEvent,\n  vo as createCustomEvent,\n  oe as createElement,\n  se as createElementNS,\n  q as dispatchEvent,\n  oo as distinct,\n  _n as documentBody,\n  $n as documentElement,\n  Jn as documentHead,\n  Qe as dragEvent,\n  Ze as dragendEvent,\n  Ge as dragenterEvent,\n  Ke as dragleaveEvent,\n  qe as dragoverEvent,\n  je as dragstartEvent,\n  so as emulateAnimationEnd,\n  ro as emulateTransitionEnd,\n  st as errorEvent,\n  io as focus,\n  rt as focusEvent,\n  tn as focusEvents,\n  qt as focusableSelector,\n  ct as focusinEvent,\n  at as focusoutEvent,\n  it as gesturechangeEvent,\n  ut as gestureendEvent,\n  lt as gesturestartEvent,\n  j as getAttribute,\n  Wn as getAttributeNS,\n  w as getBoundingClientRect,\n  Qo as getCustomElements,\n  d as getDocument,\n  So as getDocumentBody,\n  S as getDocumentElement,\n  To as getDocumentHead,\n  re as getElementAnimationDelay,\n  ce as getElementAnimationDuration,\n  jo as getElementById,\n  g as getElementStyle,\n  ae as getElementTransitionDelay,\n  ie as getElementTransitionDuration,\n  Go as getElementsByClassName,\n  Ne as getElementsByTagName,\n  to as getInstance,\n  ge as getNodeName,\n  ko as getNodeScroll,\n  No as getOffsetParent,\n  A as getParentNode,\n  Co as getRectRelativeToOffsetParent,\n  Lo as getSVGOffset,\n  Ae as getUID,\n  ve as getWindow,\n  ne as hasAttribute,\n  Rn as hasAttributeNS,\n  Yn as hasClass,\n  pe as hasFocusTrap,\n  zn as isApple,\n  Se as isArray,\n  Mo as isCanvas,\n  Te as isCustomElement,\n  K as isDocument,\n  u as isElement,\n  Do as isElementInScrollRange,\n  Oo as isElementInViewport,\n  xo as isElementsArray,\n  In as isFirefox,\n  zo as isFunction,\n  Io as isHTMLCollection,\n  m as isHTMLElement,\n  Po as isHTMLImageElement,\n  Bo as isJSON,\n  x as isMap,\n  Ho as isMedia,\n  xn as isMobile,\n  l as isNode,\n  Vo as isNodeList,\n  le as isNumber,\n  b as isObject,\n  Uo as isRTL,\n  Wo as isSVGElement,\n  we as isScaledElement,\n  me as isShadowRoot,\n  k as isString,\n  be as isTableElement,\n  Fo as isWeakMap,\n  Xt as isWebKit,\n  G as isWindow,\n  uo as kebabCase,\n  nn as keyAlt,\n  on as keyArrowDown,\n  rn as keyArrowLeft,\n  cn as keyArrowRight,\n  sn as keyArrowUp,\n  an as keyBackspace,\n  un as keyCapsLock,\n  ln as keyControl,\n  dn as keyDelete,\n  fn as keyEnter,\n  gn as keyEscape,\n  mn as keyInsert,\n  vn as keyMeta,\n  pn as keyNumpadEnter,\n  bn as keyPause,\n  En as keyScrollLock,\n  hn as keyShift,\n  yn as keySpace,\n  wn as keyTab,\n  en as keyboardEventKeys,\n  dt as keydownEvent,\n  ft as keypressEvent,\n  pt as keyupEvent,\n  gt as loadEvent,\n  Ye as loadstartEvent,\n  Ee as matches,\n  $e as mouseClickEvents,\n  Je as mouseHoverEvents,\n  _e as mouseSwipeEvents,\n  mt as mouseclickEvent,\n  vt as mousedblclickEvent,\n  bt as mousedownEvent,\n  yt as mouseenterEvent,\n  ht as mousehoverEvent,\n  At as mouseinEvent,\n  wt as mouseleaveEvent,\n  kt as mousemoveEvent,\n  St as mouseoutEvent,\n  Tt as mouseoverEvent,\n  Et as mouseupEvent,\n  Nt as mousewheelEvent,\n  Ct as moveEvent,\n  Re as nativeEvents,\n  te as noop,\n  lo as normalizeOptions,\n  P as normalizeValue,\n  Q as off,\n  kn as offsetHeight,\n  Nn as offsetWidth,\n  R as on,\n  ee as one,\n  Lt as orientationchangeEvent,\n  bo as passiveHandler,\n  Mt as pointercancelEvent,\n  Dt as pointerdownEvent,\n  Ot as pointerleaveEvent,\n  xt as pointermoveEvent,\n  zt as pointerupEvent,\n  Ro as querySelector,\n  de as querySelectorAll,\n  It as readystatechangeEvent,\n  Eo as reflow,\n  Gn as removeAttribute,\n  Kn as removeAttributeNS,\n  Zn as removeClass,\n  Sn as removeEventListener,\n  Pt as resetEvent,\n  Bt as resizeEvent,\n  Ut as scrollEvent,\n  Cn as scrollHeight,\n  Ln as scrollWidth,\n  Ft as selectEvent,\n  Ht as selectendEvent,\n  Vt as selectstartEvent,\n  Qn as setAttribute,\n  jn as setAttributeNS,\n  ho as setElementStyle,\n  Wt as submitEvent,\n  Pn as support3DTransform,\n  Vn as supportAnimation,\n  Bn as supportPassive,\n  Hn as supportTouch,\n  Fn as supportTransform,\n  Un as supportTransition,\n  Mn as tabindex,\n  ue as toLowerCase,\n  wo as toUpperCase,\n  Ao as toggleFocusTrap,\n  Xe as touchEvents,\n  jt as touchcancelEvent,\n  Gt as touchendEvent,\n  Qt as touchmoveEvent,\n  Rt as touchstartEvent,\n  $t as transitionDelay,\n  _t as transitionDuration,\n  M as transitionEndEvent,\n  W as transitionProperty,\n  Kt as unloadEvent,\n  On as userAgent,\n  Dn as userAgentData,\n  Ce as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","const g = \"2.0.8\", e = {}, f = (t) => {\n  const { type: n, currentTarget: c } = t;\n  e[n].forEach((a, s) => {\n    c === s && a.forEach((o, i) => {\n      i.apply(s, [t]), typeof o == \"object\" && o.once && r(s, n, i, o);\n    });\n  });\n}, E = (t, n, c, a) => {\n  e[n] || (e[n] = /* @__PURE__ */ new Map());\n  const s = e[n];\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(\n    t\n  ), { size: i } = o;\n  o.set(c, a), i || t.addEventListener(\n    n,\n    f,\n    a\n  );\n}, r = (t, n, c, a) => {\n  const s = e[n], o = s && s.get(t), i = o && o.get(c), d = i !== void 0 ? i : a;\n  o && o.has(c) && o.delete(c), s && (!o || !o.size) && s.delete(t), (!s || !s.size) && delete e[n], (!o || !o.size) && t.removeEventListener(\n    n,\n    f,\n    d\n  );\n}, M = E, p = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  p as off,\n  M as on,\n  e as registry,\n  r as removeListener,\n  g as version\n};\n//# sourceMappingURL=event-listener.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = \"fade\";\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = \"show\";\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = \"data-bs-dismiss\";\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = \"alert\";\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = \"Alert\";\nexport default alertComponent;\n","import { version } from \"../package.json\";\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport {\n  Data,\n  isElement,\n  isString,\n  normalizeOptions,\n  ObjectKeys,\n  querySelector,\n} from \"@thednp/shorty\";\n\nimport type { BaseOptions } from \"../interface/baseComponent\";\nimport Version from \"../version\";\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: Element;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `Element` or selector string\n   * @param config component instance options\n   */\n  constructor(target: Element | string, config?: BaseOptions) {\n    let element: Element | null;\n\n    try {\n      if (isElement(target)) {\n        element = target as Element;\n      } else if (isString(target)) {\n        element = querySelector(target);\n        // istanbul ignore else @preserve\n        if (!element) throw Error(`\"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`your target is not an instance of HTMLElement.`);\n      }\n    } catch (e) {\n      throw Error(`${this.name} Error: ${(e as Error).message}`);\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    /* istanbul ignore else @preserve */\n    if (prevInstance) {\n      // remove previously attached event listeners\n      // to avoid memory leaks\n      prevInstance._toggleEventListeners();\n    }\n\n    this.element = element;\n    this.options = this.defaults && ObjectKeys(this.defaults).length\n      ? normalizeOptions(element, this.defaults, config || {}, \"bs\")\n      // istanbul ignore next @preserve\n      : {};\n\n    Data.set(element, this.name, this);\n  }\n\n  // istanbul ignore next @preserve\n  get version() {\n    return Version;\n  }\n\n  // istanbul ignore next @preserve\n  get name() {\n    return \"BaseComponent\";\n  }\n\n  // istanbul ignore next @preserve\n  get defaults() {\n    return {};\n  }\n\n  /** just to have something to extend from */\n  // istanbul ignore next @preserve coverage wise this isn't important\n  _toggleEventListeners = () => {\n    // do something to please linters\n  };\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove<typeof this>(this.element, this.name);\n    ObjectKeys(this).forEach((prop) => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  querySelector,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport alertString from \"../strings/alertString\";\nimport alertComponent from \"../strings/alertComponent\";\nimport type { AlertEvent } from \"../interface/alert\";\n\nimport BaseComponent from \"./base-component\";\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n */\nconst getAlertInstance = (element: Element) =>\n  getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = (element: Element) => new Alert(element);\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<Record<string, never>, AlertEvent>(\n  `close.bs.${alertString}`,\n);\nconst closedAlertEvent = createCustomEvent<Record<string, never>, AlertEvent>(\n  `closed.bs.${alertString}`,\n);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (self: Alert) => {\n  const { element } = self;\n  dispatchEvent(element, closedAlertEvent);\n\n  self._toggleEventListeners();\n  self.dispose();\n  element.remove();\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: Element | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector<HTMLElement>(\n      alertDismissSelector,\n      this.element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    // istanbul ignore else @preserve\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n\n      if (!closeAlertEvent.defaultPrevented) {\n        removeClass(element, showClass);\n\n        if (hasClass(element, fadeClass)) {\n          emulateTransitionEnd(element, () => alertTransitionEnd(this));\n        } else alertTransitionEnd(this);\n      }\n    }\n  };\n  /**\n   * Toggle on / off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { dismiss, close } = this;\n    // istanbul ignore else @preserve\n    if (dismiss) action(dismiss, mouseclickEvent, close);\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = \"active\";\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = \"data-bs-toggle\";\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = \"button\";\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = \"Button\";\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  addClass,\n  ariaPressed,\n  getAttribute,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  removeClass,\n  setAttribute,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport activeClass from \"../strings/activeClass\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport buttonString from \"../strings/buttonString\";\nimport buttonComponent from \"../strings/buttonComponent\";\n\nimport BaseComponent from \"./base-component\";\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: Element) =>\n  getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: Element) => new Button(element);\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  declare isActive: boolean;\n  declare element: HTMLElement;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: Element | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e?: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, \"disabled\") && !getAttribute(element, \"disabled\")) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? \"false\" : \"true\");\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  // BUTTON PRIVATE METHOD\n  // =====================\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, this.toggle);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = \"data-bs-target\";\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = \"carousel\";\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = \"Carousel\";\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = \"data-bs-parent\";\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = \"data-bs-container\";\nexport default dataBsContainer;\n","import {\n  closest,\n  getAttribute,\n  getDocument,\n  querySelector,\n} from \"@thednp/shorty\";\n\nimport dataBsTarget from \"../strings/dataBsTarget\";\nimport dataBsParent from \"../strings/dataBsParent\";\nimport dataBsContainer from \"../strings/dataBsContainer\";\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = <T extends Element = HTMLElement>(element: T) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, \"href\"];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map((att) => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent\n          ? closest<T>(element, attValue)\n          : querySelector<T>(attValue, doc);\n      }\n      return null;\n    })\n    .filter((x) => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  addClass,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  DragEvent,\n  dragstartEvent,\n  emulateTransitionEnd,\n  getAttribute,\n  getDocument,\n  getElementsByClassName,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  isElementInScrollRange,\n  isHTMLElement,\n  isRTL,\n  keyArrowLeft,\n  keyArrowRight,\n  keydownEvent,\n  matches,\n  mouseclickEvent,\n  mouseenterEvent,\n  mouseleaveEvent,\n  ObjectAssign,\n  passiveHandler,\n  pointerdownEvent,\n  pointermoveEvent,\n  pointerupEvent,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  Timer,\n  TouchEvent,\n  touchstartEvent,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport activeClass from \"../strings/activeClass\";\nimport dataBsTarget from \"../strings/dataBsTarget\";\nimport carouselString from \"../strings/carouselString\";\nimport carouselComponent from \"../strings/carouselComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { CarouselEvent, CarouselOptions } from \"../interface/carousel\";\n\ntype CarouselEventProperties = {\n  relatedTarget: EventTarget & HTMLElement;\n  from: number;\n  to: number;\n  direction: \"left\" | \"right\";\n};\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = \"data-bs-slide-to\";\nconst dataBsSlide = \"data-bs-slide\";\nconst pausedClass = \"paused\";\n\nconst carouselDefaults: CarouselOptions = {\n  pause: \"hover\",\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: Element) =>\n  getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: Element) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<\n  CarouselEventProperties,\n  CarouselEvent\n>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<\n  CarouselEventProperties,\n  CarouselEvent\n>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  // istanbul ignore else @preserve\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === \"left\" ? \"next\" : \"prev\";\n    const directionClass = direction === \"left\" ? \"start\" : \"end\";\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (\n      self.cycle && !getDocument(element).hidden && options.interval &&\n      !self.isPaused\n    ) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  const self = getCarouselInstance(this);\n  // istanbul ignore else @preserve\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  const self = getCarouselInstance(this);\n  // istanbul ignore else @preserve\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) || getTargetElement(this);\n  const self = getCarouselInstance(element as HTMLElement);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating) {\n    const newIndex = +(\n      getAttribute(this, dataBsSlideTo) ||\n      // istanbul ignore next @preserve\n      0\n    );\n\n    // istanbul ignore else @preserve\n    if (\n      this &&\n      !hasClass(this, activeClass) && // event target is not active\n      !Number.isNaN(newIndex)\n    ) {\n      // AND has the specific attribute\n      self.to(newIndex); // do the slide\n    }\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) ||\n    (getTargetElement(this));\n  const self = getCarouselInstance(element as HTMLElement);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating) {\n    const orientation = getAttribute(this, dataBsSlide);\n\n    // istanbul ignore else @preserve\n    if (orientation === \"next\") {\n      self.next();\n    } else if (orientation === \"prev\") {\n      self.prev();\n    }\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = (\n  { code, target }: KeyboardEvent & { target: Node },\n) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll<HTMLElement>(carouselSelector, doc)]\n    .filter((x) => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore next @preserve\n  if (self && !self.isAnimating && !/textarea|input/i.test(target.nodeName)) {\n    const RTL = isRTL(element);\n    const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n    const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n    // istanbul ignore else @preserve\n    if (code === arrowKeyPrev) self.prev();\n    else if (code === arrowKeyNext) self.next();\n  }\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler<T extends HTMLElement>(\n  this: T,\n  e: Event & (DragEvent<T> | TouchEvent<T>),\n) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  // istanbul ignore next @preserve\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) ||\n      !self.controls.includes(target))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating && !self.isTouch) {\n    // filter pointer event on controls & indicators\n    const { controls, indicators } = self;\n    // istanbul ignore else @preserve\n    if (\n      ![...controls, ...indicators].every((el) =>\n        el === target || el.contains(target as Node)\n      )\n    ) {\n      startX = e.pageX;\n\n      // istanbul ignore else @preserve\n      if (this.contains(target as Node)) {\n        self.isTouch = true;\n        toggleCarouselTouchHandlers(self, true);\n      }\n    }\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map((c) => getCarouselInstance(c) as Carousel)\n    .find((i) => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  // istanbul ignore else @preserve\n  if (self) {\n    const { element, index } = self;\n    const RTL = isRTL(element);\n    endX = e.pageX;\n\n    self.isTouch = false;\n    toggleCarouselTouchHandlers(self);\n\n    if (\n      !doc.getSelection()?.toString().length &&\n      element.contains(target as HTMLElement) &&\n      Math.abs(startX - endX) > 120\n    ) {\n      // determine next index to slide to\n      // istanbul ignore else @preserve\n      if (currentX < startX) {\n        self.to(index + (RTL ? -1 : 1));\n      } else if (currentX > startX) {\n        self.to(index + (RTL ? 1 : -1));\n      }\n    }\n\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n  }\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach((x) => removeClass(x, activeClass));\n\n  // istanbul ignore else @preserve\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(\n    getDocument(element),\n    pointermoveEvent,\n    carouselPointerMoveHandler,\n    passiveHandler,\n  );\n  action(\n    getDocument(element),\n    pointerupEvent,\n    carouselPointerUpHandler,\n    passiveHandler,\n  );\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare element: HTMLElement;\n  declare options: CarouselOptions;\n  declare direction: \"right\" | \"left\";\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: Element | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? \"right\" : \"left\";\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length >= 2) {\n      const activeIndex = getActiveIndex(this);\n      // recover item from disposed instance\n      const transitionItem = [...slides].find((s) =>\n        matches(s, `.${carouselItem}-next,.${carouselItem}-next`)\n      );\n      this.index = activeIndex;\n\n      // external controls must be within same document context\n      const doc = getDocument(element);\n\n      this.controls = [\n        ...querySelectorAll<HTMLElement>(`[${dataBsSlide}]`, element),\n        ...querySelectorAll<HTMLElement>(\n          `[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`,\n          doc,\n        ),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      this.indicator = querySelector<HTMLElement>(\n        `.${carouselString}-indicators`,\n        element,\n      );\n\n      // a LIVE collection is preffered\n      this.indicators = [\n        ...(this.indicator\n          ? querySelectorAll<HTMLElement>(`[${dataBsSlideTo}]`, this.indicator)\n          /* istanbul ignore next @preserve */ : []),\n        ...querySelectorAll<HTMLElement>(\n          `[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`,\n          doc,\n        ),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      // set JavaScript and DATA API options\n      const { options } = this;\n\n      // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n      this.options.interval = options.interval === true\n        ? carouselDefaults.interval\n        : options.interval;\n\n      // set first slide active if none\n      // istanbul ignore next @preserve - impossible to test\n      if (transitionItem) {\n        this.index = [...slides].indexOf(transitionItem);\n      } else if (activeIndex < 0) {\n        this.index = 0;\n        addClass(slides[0], activeClass);\n        if (this.indicators.length) activateCarouselIndicator(this, 0);\n      }\n\n      // istanbul ignore else @preserve\n      if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n      // attach event handlers\n      this._toggleEventListeners(true);\n\n      // start to cycle if interval is set\n      if (options.interval) this.cycle();\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(\n      `.${carouselItem}-next,.${carouselItem}-prev`,\n      this.element,\n    ) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        // istanbul ignore else @preserve\n        if (\n          this.element && !this.isPaused && !this.isTouch &&\n          isElementInScrollRange(element)\n        ) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    // istanbul ignore else @preserve\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    // istanbul ignore else @preserve\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    // istanbul ignore else @preserve\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (\n      !this.isAnimating && activeItem !== next &&\n      !Timer.get(element, dataBsSlide)\n    ) {\n      // determine transition direction\n      // istanbul ignore else @preserve\n      if (\n        activeItem < next || (activeItem === 0 && next === slides.length - 1)\n      ) {\n        this.direction = RTL ? \"right\" : \"left\"; // next\n      } else if (\n        activeItem > next || (activeItem === slides.length - 1 && next === 0)\n      ) {\n        this.direction = RTL ? \"left\" : \"right\"; // prev\n      }\n      const { direction } = this;\n\n      // find the right next index\n      if (next < 0) {\n        next = slides.length - 1;\n      } else if (next >= slides.length) {\n        next = 0;\n      }\n\n      // orientation, class name, eventProperties\n      const orientation = direction === \"left\" ? \"next\" : \"prev\";\n      const directionClass = direction === \"left\" ? \"start\" : \"end\";\n\n      const eventProperties = {\n        relatedTarget: slides[next],\n        from: activeItem,\n        to: next,\n        direction,\n      };\n\n      // update event properties\n      ObjectAssign(carouselSlideEvent, eventProperties);\n      ObjectAssign(carouselSlidEvent, eventProperties);\n\n      // discontinue when prevented\n      dispatchEvent(element, carouselSlideEvent);\n      if (!carouselSlideEvent.defaultPrevented) {\n        // update index\n        this.index = next;\n        activateCarouselIndicator(this, next);\n\n        if (\n          getElementTransitionDuration(slides[next]) &&\n          hasClass(element, \"slide\")\n        ) {\n          Timer.set(\n            element,\n            () => {\n              addClass(slides[next], `${carouselItem}-${orientation}`);\n              reflow(slides[next]);\n              addClass(slides[next], `${carouselItem}-${directionClass}`);\n              addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n              // the instance might get diposed mid-animation\n              emulateTransitionEnd(\n                slides[next],\n                () =>\n                  this.slides && this.slides.length &&\n                  carouselTransitionEndHandler(this),\n              );\n            },\n            0,\n            dataBsSlide,\n          );\n        } else {\n          addClass(slides[next], activeClass);\n          removeClass(slides[activeItem], activeClass);\n\n          Timer.set(\n            element,\n            () => {\n              Timer.clear(element, dataBsSlide);\n              // check for element, might have been disposed\n              // istanbul ignore else @preserve\n              if (element && options.interval && !this.isPaused) {\n                this.cycle();\n              }\n\n              dispatchEvent(element, carouselSlidEvent);\n            },\n            0,\n            dataBsSlide,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles all event listeners for the `Carousel` instance.\n   *\n   * @param add when `TRUE` event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const { element, options, slides, controls, indicators } = this;\n    const { touch, pause, interval, keyboard } = options;\n    const action = add ? addListener : removeListener;\n\n    if (pause && interval) {\n      action(element, mouseenterEvent, carouselPauseHandler);\n      action(element, mouseleaveEvent, carouselResumeHandler);\n    }\n\n    if (touch && slides.length > 2) {\n      action(\n        element,\n        pointerdownEvent,\n        carouselPointerDownHandler,\n        passiveHandler,\n      );\n      action(element, touchstartEvent, carouselDragHandler, { passive: false });\n      action(element, dragstartEvent, carouselDragHandler, { passive: false });\n    }\n\n    // istanbul ignore else @preserve\n    if (controls.length) {\n      controls.forEach((arrow) => {\n        // istanbul ignore else @preserve\n        if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler);\n      });\n    }\n\n    // istanbul ignore else @preserve\n    if (indicators.length) {\n      indicators.forEach((indicator) => {\n        action(indicator, mouseclickEvent, carouselIndicatorHandler);\n      });\n    }\n\n    if (keyboard) {\n      action(getDocument(element), keydownEvent, carouselKeyHandler);\n    }\n  };\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    this._toggleEventListeners();\n    super.dispose();\n\n    // istanbul ignore next @preserve - impossible to test in playwright\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = \"collapsing\";\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = \"collapse\";\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = \"Collapse\";\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getDocument,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isString,\n  mouseclickEvent,\n  MouseEvent,\n  noop,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport collapsingClass from \"../strings/collapsingClass\";\nimport showClass from \"../strings/showClass\";\nimport collapseString from \"../strings/collapseString\";\nimport collapseComponent from \"../strings/collapseComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { CollapseEvent, CollapseOptions } from \"../interface/collapse\";\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: Element) =>\n  getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: Element) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach((btn) => setAttribute(btn, ariaExpanded, \"true\"));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: \"\" });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element as HTMLElement);\n    setElementStyle(element, { height: \"0px\" });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      // istanbul ignore else @preserve\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach((btn) => setAttribute(btn, ariaExpanded, \"false\"));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: \"\" });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target &&\n    closest(target, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  // istanbul ignore else @preserve\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === \"A\") e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare element: HTMLElement;\n  declare options: CollapseOptions;\n  declare parent: Element | null;\n  declare triggers: Element[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: Element | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent, doc)\n      : null;\n\n    // add event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    // istanbul ignore else @preserve\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach((btn) => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [\n        ...querySelectorAll(`.${collapseString}.${showClass}`, parent),\n      ].find((i) => getCollapseInstance(i));\n      activeCollapseInstance = activeCollapse &&\n        getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach((btn) => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach((btn) => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /**\n   * Toggles on/off the event listener(s) of the `Collapse` instance.\n   *\n   * @param add when `true`, the event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) =>\n        action(btn, mouseclickEvent, collapseClickHandler)\n      );\n    }\n  };\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    this._toggleEventListeners();\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = [\"dropdown\", \"dropup\", \"dropstart\", \"dropend\"];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = \"Dropdown\";\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = \"dropdown-menu\";\nexport default dropdownMenuClass;\n","import { closest, getAttribute, hasAttribute } from \"@thednp/shorty\";\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, \"A\");\n  return (\n    (element.tagName === \"A\" &&\n      // anchor href starts with #\n      hasAttribute(element, \"href\") &&\n      (getAttribute(element, \"href\") as string).slice(-1) === \"#\") ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, \"href\") &&\n      (getAttribute(parentAnchor, \"href\") as string).slice(-1) === \"#\")\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  focus,\n  focusEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  keyArrowDown,\n  keyArrowUp,\n  KeyboardEvent,\n  keydownEvent,\n  keyEscape,\n  keyupEvent,\n  mouseclickEvent,\n  mousedownEvent,\n  MouseEvent,\n  ObjectAssign,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport showClass from \"../strings/showClass\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dropdownClasses from \"../strings/dropdownClasses\";\nimport dropdownComponent from \"../strings/dropdownComponent\";\nimport dropdownMenuClass from \"../strings/dropdownMenuClass\";\n\nimport isEmptyAnchor from \"../util/isEmptyAnchor\";\nimport BaseComponent from \"./base-component\";\nimport type { DropdownEvent, DropdownOptions } from \"../interface/dropdown\";\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] =\n  dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: Element) =>\n  getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: Element) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = [\"A\", \"BUTTON\"];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: \"dynamic\", // [dynamic|static]\n};\n\ntype DropdownEventProps = { relatedTarget: Element & EventTarget };\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `show.bs.${dropdownString}`,\n);\nconst shownDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `shown.bs.${dropdownString}`,\n);\nconst hideDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `hide.bs.${dropdownString}`,\n);\nconst hiddenDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  // istanbul ignore else @preserve: this test requires a navbar\n  if (getElementStyle(menu, \"position\") !== \"static\") {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = [\"margin\", \"top\", \"bottom\", \"left\", \"right\"];\n    resetProps.forEach((p) => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = \"\";\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass = dropdownClasses.find((c) =>\n      hasClass(parentElement, c)\n    ) ||\n      // istanbul ignore next @preserve: fallback position\n      dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: \"100%\" },\n      dropup: { top: \"auto\", bottom: \"100%\" },\n      dropstart: RTL\n        ? { left: \"100%\", right: \"auto\" }\n        : { left: \"auto\", right: \"100%\" },\n      dropend: RTL\n        ? { left: \"auto\", right: \"100%\" }\n        : { left: \"100%\", right: \"auto\" },\n      menuStart: RTL\n        ? { right: \"0\", left: \"auto\" }\n        : { right: \"auto\", left: \"0\" },\n      menuEnd: RTL\n        ? { right: \"auto\", left: \"0\" }\n        : { right: \"0\", left: \"auto\" },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed =\n      targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed =\n      targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) &&\n      targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) &&\n      targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (\n      horizontalClass.includes(positionClass) && leftFullExceed &&\n      rightFullExceed\n    ) {\n      positionClass = dropdownString;\n    }\n    if (\n      positionClass === dropstartString &&\n      (!RTL ? leftFullExceed : rightFullExceed)\n    ) {\n      positionClass = dropendString;\n    }\n    if (\n      positionClass === dropendString &&\n      (RTL ? leftFullExceed : rightFullExceed)\n    ) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: \"auto\",\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust:\n        | { left: \"auto\" | number; right: \"auto\" | number }\n        | undefined = { left: \"auto\", right: \"auto\" };\n      // istanbul ignore else @preserve\n      if (!leftExceed && rightExceed && !RTL) {\n        posAjust = { left: \"auto\", right: 0 };\n      }\n      // istanbul ignore else @preserve\n      if (leftExceed && !rightExceed && RTL) {\n        posAjust = { left: 0, right: \"auto\" };\n      }\n      // istanbul ignore else @preserve\n      if (posAjust) {\n        ObjectAssign(dropdownPosition[positionClass], posAjust);\n      }\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map((x) => (x ? `${x}px` : x)).join(\" \")}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      // istanbul ignore else @preserve\n      if (menuEnd) {\n        const endAdjust = (!RTL && leftExceed) || (RTL && rightExceed)\n          ? \"menuStart\"\n          : /* istanbul ignore next @preserve */ \"menuEnd\";\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return Array.from(menu.children)\n    .map((c) => {\n      if (c && menuFocusTags.includes(c.tagName)) return c as HTMLElement;\n      const { firstElementChild } = c;\n      if (\n        firstElementChild && menuFocusTags.includes(firstElementChild.tagName)\n      ) {\n        return firstElementChild as HTMLElement;\n      }\n      return null;\n    })\n    .filter((c) => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options, menu } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  // istanbul ignore else @preserve\n  if (options.display === \"dynamic\") {\n    if (self.open) self._observer.observe(menu);\n    else self._observer.disconnect();\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (\n  element: Element,\n): Element | undefined => {\n  const currentParent = [...dropdownClasses, \"btn-group\", \"input-group\"]\n    .map((c) =>\n      getElementsByClassName(`${c} ${showClass}`, getDocument(element))\n    )\n    .find((x) => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<Element>)]\n      .find((x) =>\n        dropdownClasses.some((c) => c === getAttribute(x, dataBsToggle))\n      );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  // istanbul ignore if @preserve\n  if (!isHTMLElement(target)) return;\n\n  // some weird FF bug #409\n  const element = getCurrentOpenDropdown(target);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const isForm = parentElement &&\n    parentElement.contains(target) &&\n    (target.tagName === \"form\" || closest(target, \"form\") !== null);\n\n  if (\n    [mouseclickEvent, mousedownEvent].includes(type) &&\n    isEmptyAnchor(target)\n  ) {\n    e.preventDefault();\n  }\n\n  // istanbul ignore else @preserve\n  if (\n    !isForm && type !== focusEvent && target !== element && target !== menu\n  ) {\n    self.hide();\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n  const element = target && closest(target, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  e.stopPropagation();\n  self.toggle();\n  // istanbul ignore else @preserve\n  if (element && isEmptyAnchor(element)) e.preventDefault();\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  // istanbul ignore else @preserve\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: Element, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this) as HTMLElement;\n  /* istanbul ignore if @preserve */\n  if (!element) return;\n\n  const self = getDropdownInstance(element);\n  const { activeElement } = getDocument(element) as Document & {\n    activeElement: HTMLElement;\n  };\n\n  // istanbul ignore if @preserve\n  if (!self || !activeElement) return;\n\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (\n    menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)\n  ) {\n    let idx = menuItems.indexOf(activeElement);\n    // istanbul ignore else @preserve\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    // istanbul ignore else @preserve\n    if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownIntersectionHandler(target: Element) {\n  const element = getCurrentOpenDropdown(target);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare element: HTMLElement;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n  declare _observer: IntersectionObserver;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: Element | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName<HTMLElement>(\n      dropdownMenuClass,\n      parentElement as ParentNode,\n    );\n\n    // invalidate when dropdown-menu is missing\n    // istanbul ignore if @preserve\n    if (!menu) return;\n\n    // set targets\n    this.parentElement = parentElement as HTMLElement;\n    this.menu = menu;\n    this._observer = new IntersectionObserver(\n      ([entry]) => dropdownIntersectionHandler(entry.target),\n      { threshold: 1 },\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore if @preserve\n    if (open) return;\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement &&\n      getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(\n      (e) => {\n        e.relatedTarget = element;\n      },\n    );\n\n    dispatchEvent(parentElement, showDropdownEvent);\n    // istanbul ignore if @preserve\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, \"true\");\n\n    // change menu position\n    styleDropdown(this);\n\n    this.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore if @preserve\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach((e) => {\n      e.relatedTarget = element as HTMLElement;\n    });\n\n    dispatchEvent(parentElement, hideDropdownEvent);\n    // istanbul ignore if @preserve\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, \"false\");\n\n    this.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = \"modal\";\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = \"Modal\";\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = \"Offcanvas\";\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = \"fixed-top\";\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = \"fixed-bottom\";\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = \"sticky-top\";\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = \"position-sticky\";\nexport default positionStickyClass;\n","import {\n  getDocumentBody,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getWindow,\n  hasClass,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport fixedTopClass from \"../strings/fixedTopClass\";\nimport fixedBottomClass from \"../strings/fixedBottomClass\";\nimport stickyTopClass from \"../strings/stickyTopClass\";\nimport positionStickyClass from \"../strings/positionStickyClass\";\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName<HTMLElement>(fixedTopClass, parent),\n  ...getElementsByClassName<HTMLElement>(fixedBottomClass, parent),\n  ...getElementsByClassName<HTMLElement>(stickyTopClass, parent),\n  ...getElementsByClassName<HTMLElement>(positionStickyClass, parent),\n  ...getElementsByClassName<HTMLElement>(\"is-fixed\", parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: Element) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: \"\",\n    overflow: \"\",\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore else @preserve\n  if (fixedItems.length) {\n    fixedItems.forEach((fixed) => {\n      setElementStyle(fixed, {\n        paddingRight: \"\",\n        marginRight: \"\",\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: Element) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: Element, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, \"paddingRight\"), 10);\n  const isOpen = getElementStyle(bd, \"overflow\") === \"hidden\";\n  const sbWidth = isOpen && bodyPad\n    ? /* istanbul ignore next */ 0\n    : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore if @preserve\n  if (!overflow) return;\n\n  setElementStyle(bd, {\n    overflow: \"hidden\",\n    paddingRight: `${bodyPad + sbWidth}px`,\n  });\n\n  // istanbul ignore if @preserve\n  if (!fixedItems.length) return;\n\n  fixedItems.forEach((fixed) => {\n    const itemPadValue = getElementStyle(fixed, \"paddingRight\");\n    fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n    // istanbul ignore else @preserve\n    if (\n      [stickyTopClass, positionStickyClass].some((c) => hasClass(fixed, c))\n    ) {\n      const itemMValue = getElementStyle(fixed, \"marginRight\");\n      fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n    }\n  });\n};\n","/** @type {string} */\nconst offcanvasString = \"offcanvas\";\nexport default offcanvasString;\n","import { createElement, getDocumentBody, isNode } from \"@thednp/shorty\";\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({\n  tagName: \"div\",\n  className: \"popup-container\",\n}) as HTMLElement;\n\nconst appendPopup = (target: Element, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) &&\n    customContainer.nodeName === \"BODY\";\n  const lookup = isNode(customContainer) && !containerIsBody\n    ? customContainer\n    : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  // istanbul ignore else @preserve\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: Element, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) &&\n    customContainer.nodeName === \"BODY\";\n  const lookup = isNode(customContainer) && !containerIsBody\n    ? customContainer\n    : popupContainer;\n\n  // istanbul ignore else @preserve\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: Element, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== \"BODY\"\n    ? customContainer\n    : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { appendPopup, hasPopup, popupContainer, removePopup };\n","import {\n  addClass,\n  createElement,\n  getDocument,\n  getDocumentBody,\n  hasClass,\n  querySelector,\n  reflow,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport modalString from \"../strings/modalString\";\nimport offcanvasString from \"../strings/offcanvasString\";\nimport { resetScrollbar } from \"./scrollbar\";\nimport { appendPopup, removePopup } from \"./popupContainer\";\n\nconst backdropString = \"backdrop\";\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement(\"div\") as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: Element) => {\n  return querySelector(\n    `${modalActiveSelector},${offcanvasActiveSelector}`,\n    getDocument(element),\n  );\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach((c) => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (\n  element: Element,\n  hasFade: boolean,\n  isModal?: boolean,\n) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: Element): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  modalBackdropClass,\n  offcanvasActiveSelector,\n  offcanvasBackdropClass,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n};\n","import { getElementStyle, isHTMLElement } from \"@thednp/shorty\";\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) &&\n    getElementStyle(element, \"visibility\") !== \"hidden\" &&\n    element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  addClass,\n  ariaHidden,\n  ariaModal,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  isRTL,\n  KeyboardEvent,\n  keydownEvent,\n  keyEscape,\n  mouseclickEvent,\n  MouseEvent,\n  querySelector,\n  querySelectorAll,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  Timer,\n  toggleFocusTrap,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport modalString from \"../strings/modalString\";\nimport modalComponent from \"../strings/modalComponent\";\nimport offcanvasComponent from \"../strings/offcanvasComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport { measureScrollbar, setScrollbar } from \"../util/scrollbar\";\nimport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n} from \"../util/backdrop\";\nimport isVisible from \"../util/isVisible\";\nimport BaseComponent from \"./base-component\";\nimport { ModalEvent, ModalOptions } from \"../interface/modal\";\nimport { hasPopup } from \"../util/popupContainer\";\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\ntype ModalEventProps = {\n  relatedTarget: Element & EventTarget | null;\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: Element) =>\n  getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: Element) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `show.bs.${modalString}`,\n);\nconst shownModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `shown.bs.${modalString}`,\n);\nconst hideModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `hide.bs.${modalString}`,\n);\nconst hiddenModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `hidden.bs.${modalString}`,\n);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } =\n    element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  // istanbul ignore next @preserve: impossible to test?\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element)\n      ? \"paddingRight\"\n      // istanbul ignore next @preserve\n      : \"paddingLeft\";\n    const padStyle = { [pad]: `${scrollbarWidth}px` } as Partial<\n      CSS4Declaration\n    >;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n\n  if (add) self._observer.observe(element);\n  else self._observer.disconnect();\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: \"\", display: \"\" });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  // istanbul ignore else @preserve\n  if (focusElement) focus(focusElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget || undefined;\n  dispatchEvent(element, hiddenModalEvent);\n  toggleFocusTrap(element);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element as HTMLElement);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget || undefined;\n  dispatchEvent(element, shownModalEvent);\n  toggleFocusTrap(element);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: \"block\" });\n  setModalScrollbar(self);\n  // istanbul ignore else @preserve\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: \"hidden\" });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, \"true\");\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (\n    options.backdrop && hasFade && hasClass(overlay, showClass) &&\n    !getCurrentOpen(element)\n  ) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n\n  const trigger = target && closest(target, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  // istanbul ignore else @preserve\n  if (trigger && trigger.tagName === \"A\") e.preventDefault();\n  self.relatedTarget = trigger;\n  self.toggle();\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent<Element>) => {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  const { options } = self;\n  // istanbul ignore else @preserve\n  if (\n    options.keyboard &&\n    code === keyEscape && // the keyboard option is enabled and the key is 27\n    hasClass(element, showClass)\n  ) {\n    // the modal is not visible\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nconst modalDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { currentTarget } = e;\n  const self = currentTarget && getModalInstance(currentTarget);\n\n  // the timer is needed\n  // istanbul ignore if @preserve\n  if (!self || !currentTarget || Timer.get(currentTarget)) return;\n\n  const { options, isStatic, modalDialog } = self;\n  const { backdrop } = options;\n  const { target } = e;\n\n  const selectedText = getDocument(currentTarget)?.getSelection()?.toString()\n    .length;\n  const targetInsideDialog = modalDialog.contains(target);\n  const dismiss = target && closest(target, modalDismissSelector);\n\n  // istanbul ignore else @preserve\n  if (isStatic && !targetInsideDialog) {\n    Timer.set(\n      currentTarget,\n      () => {\n        addClass(currentTarget, modalStaticClass);\n        emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n      },\n      17,\n    );\n  } else if (\n    dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)\n  ) {\n    self.relatedTarget = dismiss || null;\n    self.hide();\n    e.preventDefault();\n  }\n};\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare element: HTMLElement;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: EventTarget & HTMLElement | null;\n  declare _observer: ResizeObserver;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: Element | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector<HTMLElement>(\n      `.${modalString}-dialog`,\n      element,\n    );\n\n    // istanbul ignore if @preserve\n    if (!modalDialog) return;\n\n    this.modalDialog = modalDialog;\n    // modal can have multiple triggering elements\n    this.triggers = [\n      ...querySelectorAll<HTMLElement>(\n        modalToggleSelector,\n        getDocument(element),\n      ),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // additional internals\n    this.isStatic = this.options.backdrop === \"static\";\n    this.hasFade = hasClass(element, fadeClass);\n    this.relatedTarget = null;\n    this._observer = new ResizeObserver(() => this.update());\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    // istanbul ignore if @preserve\n    if (hasClass(element, showClass)) return;\n\n    showModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showModalEvent);\n\n    // allow the event to be prevented\n    // istanbul ignore else @preserve\n    if (showModalEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n\n    // istanbul ignore else @preserve\n    if (currentOpen && currentOpen !== element) {\n      const that = getModalInstance(currentOpen) ||\n        // istanbul ignore next @preserve\n        getInstance<typeof BaseComponent & { hide: () => void }>(\n          currentOpen,\n          offcanvasComponent,\n        );\n      // istanbul ignore else @preserve\n      if (that) that.hide();\n    }\n    if (backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(element, hasFade, true);\n      } else {\n        toggleOverlayType(true);\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeModalShow(this), overlayDelay);\n    } else {\n      beforeModalShow(this);\n      // istanbul ignore else @preserve\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    // istanbul ignore if @preserve\n    if (!hasClass(element, showClass)) return;\n\n    hideModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideModalEvent);\n\n    // istanbul ignore if @preserve\n    if (hideModalEvent.defaultPrevented) return;\n\n    removeClass(element, showClass);\n    setAttribute(element, ariaHidden, \"true\");\n    removeAttribute(element, ariaModal);\n\n    if (hasFade) emulateTransitionEnd(element, () => beforeModalHide(this));\n    else beforeModalHide(this);\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    // istanbul ignore else @preserve\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener of the `Modal` instance.\n   *\n   * @param add when `true`, event listener(s) is/are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore if @preserve\n    if (!triggers.length) return;\n\n    triggers.forEach((btn) => action(btn, mouseclickEvent, modalClickHandler));\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { modalDialog, hasFade } = clone;\n    const callback = () => setTimeout(() => super.dispose(), 17);\n\n    this.hide();\n    this._toggleEventListeners();\n\n    if (hasFade) {\n      // use transitionend callback\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  addClass,\n  ariaHidden,\n  ariaModal,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  keydownEvent,\n  keyEscape,\n  mouseclickEvent,\n  MouseEvent,\n  querySelector,\n  querySelectorAll,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  toggleFocusTrap,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport showClass from \"../strings/showClass\";\nimport offcanvasString from \"../strings/offcanvasString\";\nimport offcanvasComponent from \"../strings/offcanvasComponent\";\nimport modalComponent from \"../strings/modalComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport isVisible from \"../util/isVisible\";\nimport { setScrollbar } from \"../util/scrollbar\";\nimport { hasPopup } from \"../util/popupContainer\";\nimport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  offcanvasActiveSelector,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n} from \"../util/backdrop\";\nimport BaseComponent from \"./base-component\";\nimport { OffcanvasEvent, OffcanvasOptions } from \"../interface/offcanvas\";\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\ntype OffCanvasEventProps = {\n  relatedTarget: Element & EventTarget | undefined;\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: Element) =>\n  getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: Element) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  // istanbul ignore else @preserve\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: \"hidden\" });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: \"visible\" });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  (element as HTMLElement).blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n  }\n  emulateTransitionEnd(element, () => hideOffcanvasComplete(self));\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent<HTMLElement>) => {\n  const trigger = closest(e.target, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  self.relatedTarget = trigger;\n  self.toggle();\n\n  // istanbul ignore else @preserve\n  if (trigger?.tagName === \"A\") e.preventDefault();\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n  const element = querySelector(\n    offcanvasActiveSelector,\n    getDocument(target),\n  );\n  // istanbul ignore else @preserve\n  if (!element) return;\n\n  const offCanvasDismiss = querySelector<HTMLElement>(\n    offcanvasDismissSelector,\n    element,\n  );\n  const self = getOffcanvasInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  const { options, triggers } = self;\n  const { backdrop } = options;\n  const trigger = closest(target, offcanvasToggleSelector);\n  const selection = getDocument(element).getSelection();\n\n  // istanbul ignore if: a filter is required here @preserve\n  if (overlay.contains(target) && backdrop === \"static\") return;\n\n  // istanbul ignore else @preserve\n  if (\n    !(selection && selection.toString().length) &&\n    ((!element.contains(target) &&\n      backdrop &&\n      // istanbul ignore next @preserve\n      (!trigger || triggers.includes(target))) ||\n      (offCanvasDismiss &&\n        offCanvasDismiss.contains(target)))\n  ) {\n    self.relatedTarget = offCanvasDismiss && offCanvasDismiss.contains(target)\n      ? offCanvasDismiss\n      : undefined;\n    self.hide();\n  }\n\n  // istanbul ignore next @preserve\n  if (trigger && trigger.tagName === \"A\") e.preventDefault();\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(\n    offcanvasActiveSelector,\n    getDocument(target as Node),\n  );\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n\n  // istanbul ignore else @preserve\n  if (self.options.keyboard && code === keyEscape) {\n    self.relatedTarget = undefined;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, \"true\");\n  setAttribute(element, \"role\", \"dialog\");\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n  toggleFocusTrap(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, \"true\");\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, \"role\");\n  setElementStyle(element, { visibility: \"\" });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget ||\n    triggers.find(isVisible);\n  // istanbul ignore else @preserve\n  if (visibleTrigger) focus(visibleTrigger);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n  toggleFocusTrap(element);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare element: HTMLElement;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: EventTarget & HTMLElement | undefined;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(\n    target: Element | string,\n    config?: Partial<OffcanvasOptions>,\n  ) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [\n      ...querySelectorAll<HTMLElement>(\n        offcanvasToggleSelector,\n        getDocument(element),\n      ),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = undefined;\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    // istanbul ignore else @preserve\n    if (hasClass(element, showClass)) return;\n\n    showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showOffcanvasEvent);\n\n    // istanbul ignore else @preserve\n    if (showOffcanvasEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const that = getOffcanvasInstance(currentOpen) ||\n        // istanbul ignore next @preserve\n        getInstance<typeof BaseComponent & { hide: () => void }>(\n          currentOpen,\n          modalComponent,\n        );\n\n      // istanbul ignore else @preserve\n      if (that) that.hide();\n    }\n\n    if (options.backdrop) {\n      if (!hasPopup(overlay)) appendOverlay(element, true);\n      else toggleOverlayType();\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n    } else {\n      beforeOffcanvasShow(this);\n      // istanbul ignore next @preserve - this test was done on Modal\n      if (currentOpen && hasClass(overlay, showClass)) hideOverlay();\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n\n    // istanbul ignore else @preserve\n    if (!hasClass(element, showClass)) return;\n\n    hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideOffcanvasEvent);\n\n    // istanbul ignore else @preserve\n    if (hideOffcanvasEvent.defaultPrevented) return;\n\n    addClass(element, offcanvasTogglingClass);\n    removeClass(element, showClass);\n    beforeOffcanvasHide(this);\n  }\n\n  /**\n   * Toggles on/off the `click` event listeners.\n   *\n   * @param self the `Offcanvas` instance\n   * @param add when *true*, listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    this.triggers.forEach((btn) =>\n      action(btn, mouseclickEvent, offcanvasTriggerHandler)\n    );\n  };\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const { element } = this;\n    const isOpen = hasClass(element, showClass);\n    const callback = () => setTimeout(() => super.dispose(), 1);\n\n    this.hide();\n    this._toggleEventListeners();\n\n    if (isOpen) emulateTransitionEnd(element, callback);\n    // istanbul ignore next @preserve\n    else callback();\n  }\n}\n","/** @type {string} */\nconst popoverString = \"popover\";\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = \"Popover\";\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = \"tooltip\";\nexport default tooltipString;\n","import tooltipString from \"../strings/tooltipString\";\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : \"\";\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${\n    header + arrow + body\n  }</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: \"top\",\n  bottom: \"bottom\",\n  left: \"start\",\n  right: \"end\",\n};\n\nexport default tipClassPositions;\n","import {\n  createCustomEvent,\n  dispatchEvent,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  getNodeScroll,\n  getRectRelativeToOffsetParent,\n  isHTMLElement,\n  isRTL,\n  setElementStyle,\n  toLowerCase,\n} from \"@thednp/shorty\";\n\nimport tipClassPositions from \"./tipClassPositions\";\nimport Tooltip from \"../components/tooltip\";\nimport type { TooltipEvent } from \"../interface/tooltip\";\nimport type { PopoverEvent } from \"../interface/popover\";\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = (self: Tooltip) => {\n  requestAnimationFrame(() => {\n    const tipClasses = /\\b(top|bottom|start|end)+/;\n    const { element, tooltip, container, offsetParent, options, arrow } = self;\n\n    // istanbul ignore if @preserve\n    if (!tooltip) return;\n    const RTL = isRTL(element);\n    const { x: scrollLeft, y: scrollTop } = getNodeScroll(offsetParent);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      top: \"\",\n      left: \"\",\n      right: \"\",\n      bottom: \"\",\n    });\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } =\n      getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container;\n    const parentPosition = getElementStyle(\n      container,\n      \"position\",\n    );\n    const fixedParent = parentPosition === \"fixed\";\n    const scrollbarWidth = fixedParent\n      ? Math.abs(parentCWidth - parentOWidth)\n      : Math.abs(htmlcw - htmlow);\n    const leftBoundry = RTL && fixedParent\n      ? /* istanbul ignore next @preserve */ scrollbarWidth\n      : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n\n    // reuse observer entry bounding box\n    const observerEntry = self._observer.getEntry(element);\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = observerEntry?.boundingClientRect ||\n      getBoundingClientRect(element, true);\n\n    const {\n      x: elemOffsetLeft,\n      y: elemOffsetTop,\n    } = getRectRelativeToOffsetParent(\n      element,\n      offsetParent,\n      { x: scrollLeft, y: scrollTop },\n    );\n\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: \"\",\n      left: \"\",\n      right: \"\",\n      bottom: \"\",\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = \"\";\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = \"\";\n    let arrowTop: number | string = \"\";\n    let arrowLeft: number | string = \"\";\n    let arrowRight: number | string = \"\";\n\n    const arrowWidth = arrow.offsetWidth || 0;\n    const arrowHeight = arrow.offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed =\n      elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed =\n      elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = [\"left\", \"right\"];\n    const verticals = [\"top\", \"bottom\"];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement)\n      ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry\n      : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed\n      ? \"top\"\n      : placement;\n    // recompute placement\n    placement = placement === \"top\" && topExceed ? \"bottom\" : placement;\n    placement = placement === \"bottom\" && bottomExceed ? \"top\" : placement;\n    placement = placement === \"left\" && leftExceed ? \"right\" : placement;\n    placement = placement === \"right\" && rightExceed\n      ? \"left\"\n      // istanbul ignore next @preserve\n      : placement;\n\n    // update tooltip/popover class\n    // istanbul ignore else @preserve\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(\n        tipClasses,\n        tipClassPositions[placement],\n      );\n    }\n\n    // compute tooltip / popover coordinates\n    // istanbul ignore else @preserve\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === \"left\") {\n        // LEFT\n        leftPosition = elemOffsetLeft - tipWidth - arrowWidth;\n      } else {\n        // RIGHT\n        leftPosition = elemOffsetLeft + elemWidth + arrowWidth;\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemOffsetTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = elemOffsetTop;\n        bottomPosition = \"\";\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = elemOffsetTop - tipHeight + elemHeight;\n        bottomPosition = \"\";\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = elemOffsetTop - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === \"top\") {\n        topPosition = elemOffsetTop - tipHeight - arrowHeight;\n      } else {\n        // BOTTOM\n        topPosition = elemOffsetTop + elemHeight + arrowHeight;\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = elemOffsetLeft + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = \"auto\";\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = elemOffsetLeft - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === \"\" ? \"\" : `${bottomPosition}px`,\n      left: leftPosition === \"auto\" ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== \"\" ? `${rightPosition}px` : \"\",\n    });\n\n    // update arrow placement\n    // istanbul ignore else @preserve\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== \"\") {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== \"\") {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== \"\") {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<\n      Record<string, unknown>,\n      TooltipEvent | PopoverEvent\n    >(\n      `updated.bs.${toLowerCase(self.name)}`,\n    );\n    dispatchEvent(element, updatedTooltipEvent);\n  });\n};\n\nexport default styleTip;\n","import getTipTemplate from \"./getTipTemplate\";\nimport tooltipString from \"../strings/tooltipString\";\nimport { TooltipOptions } from \"../interface/tooltip\";\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: \"\",\n  customClass: \"\",\n  trigger: \"hover focus\",\n  placement: \"top\",\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: \"\",\n  dismissible: false,\n  btnClose: \"\",\n};\nexport default tooltipDefaults;\n","const p = (e) => e != null && typeof e == \"object\" || !1, k = (e) => p(e) && typeof e.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(\n  (t) => e.nodeType === t\n) || !1, b = (e) => k(e) && e.nodeType === 1 || !1, v = (e) => typeof e == \"function\" || !1, y = \"1.0.2\", m = \"PositionObserver Error\";\nclass E {\n  entries;\n  static version = y;\n  _tick;\n  _root;\n  _callback;\n  /**\n   * The constructor takes two arguments, a `callback`, which is called\n   * whenever the position of an observed element changes and an `options` object.\n   * The callback function should take an array of `PositionObserverEntry` objects\n   * as its only argument, but it's not required.\n   *\n   * @param callback the callback that applies to all targets of this observer\n   * @param options the options of this observer\n   */\n  constructor(t, i) {\n    if (!v(t))\n      throw new Error(`${m}: ${t} is not a function.`);\n    this.entries = /* @__PURE__ */ new Map(), this._callback = t, this._root = b(i?.root) ? i.root : document?.documentElement, this._tick = 0;\n  }\n  /**\n   * Start observing the position of the specified element.\n   * If the element is not currently attached to the DOM,\n   * it will NOT be added to the entries.\n   *\n   * @param target an `Element` target\n   */\n  observe = (t) => {\n    if (!b(t))\n      throw new Error(\n        `${m}: ${t} is not an instance of Element.`\n      );\n    this._root.contains(t) && this._new(t).then((i) => {\n      this.getEntry(t) || this.entries.set(t, i), this._tick || (this._tick = requestAnimationFrame(this._runCallback));\n    });\n  };\n  /**\n   * Stop observing the position of the specified element.\n   *\n   * @param target an `HTMLElement` target\n   */\n  unobserve = (t) => {\n    this.entries.has(t) && this.entries.delete(t);\n  };\n  /**\n   * Private method responsible for all the heavy duty,\n   * the observer's runtime.\n   */\n  _runCallback = () => {\n    if (!this.entries.size) return;\n    const t = new Promise((i) => {\n      const c = [];\n      this.entries.forEach(\n        ({ target: s, boundingClientRect: n }) => {\n          this._root.contains(s) && this._new(s).then(({ boundingClientRect: o, isVisible: h }) => {\n            const { left: a, top: f, bottom: _, right: l } = o;\n            if (n.top !== f || n.left !== a || n.right !== l || n.bottom !== _) {\n              const r = { target: s, boundingClientRect: o, isVisible: h };\n              this.entries.set(s, r), c.push(r);\n            }\n          });\n        }\n      ), i(c);\n    });\n    this._tick = requestAnimationFrame(async () => {\n      const i = await t;\n      i.length && this._callback(i, this), this._runCallback();\n    });\n  };\n  /**\n   * Calculate the target bounding box and determine\n   * the value of `isVisible`.\n   *\n   * @param target an `Element` target\n   */\n  _new = (t) => {\n    const { clientWidth: i, clientHeight: c } = this._root;\n    return new Promise((s) => {\n      new IntersectionObserver(\n        ([{ boundingClientRect: o }], h) => {\n          h.disconnect();\n          const { left: a, top: f, bottom: _, right: l, width: r, height: u } = o, w = f > 1 - u && a > 1 - r && _ <= c + u - 1 && l <= i + r - 1;\n          s({\n            target: t,\n            isVisible: w,\n            boundingClientRect: o\n          });\n        }\n      ).observe(t);\n    });\n  };\n  /**\n   * Find the entry for a given target.\n   *\n   * @param target an `HTMLElement` target\n   */\n  getEntry = (t) => this.entries.get(t);\n  /**\n   * Immediately stop observing all elements.\n   */\n  disconnect = () => {\n    cancelAnimationFrame(this._tick), this.entries.clear(), this._tick = 0;\n  };\n}\nexport {\n  E as default\n};\n//# sourceMappingURL=index.mjs.map\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = \"data-original-title\";\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = \"Tooltip\";\nexport default tooltipComponent;\n","import {\n  isArray,\n  isFunction,\n  isHTMLElement,\n  isNode,\n  isNodeList,\n  isString,\n} from \"@thednp/shorty\";\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (\n  element: HTMLElement,\n  content: Node[] | Node | string,\n  sanitizeFn?: (s: string) => string,\n) => {\n  // istanbul ignore else @preserve\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, \"text/html\");\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (\n    isNodeList(content) || (isArray(content) && content.every(isNode))\n  ) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import {\n  addClass,\n  createElement,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  querySelector,\n  setAttribute,\n} from \"@thednp/shorty\";\n\nimport tooltipComponent from \"../strings/tooltipComponent\";\nimport tooltipString from \"../strings/tooltipString\";\nimport popoverString from \"../strings/popoverString\";\nimport fadeClass from \"../strings/fadeClass\";\nimport tipClassPositions from \"./tipClassPositions\";\nimport setHtml from \"./setHtml\";\nimport Tooltip from \"../components/tooltip\";\nimport Popover from \"../components/popover\";\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const {\n    title,\n    placement,\n    template,\n    animation,\n    customClass,\n    sanitizeFn,\n    dismissible,\n    content,\n    btnClose,\n  } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = \"end\";\n    tipPositions.right = \"start\";\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement(\"div\") as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  /* istanbul ignore if @preserve */\n  if (!isHTMLElement(tooltipTemplate)) return;\n\n  // set popover markup\n  self.tooltip = tooltipTemplate.cloneNode(true) as HTMLElement;\n  const { tooltip } = self;\n\n  // set id and role attributes\n  setAttribute(tooltip, \"id\", id);\n  setAttribute(tooltip, \"role\", tooltipString);\n\n  const bodyClass = isTooltip\n    ? `${tooltipString}-inner`\n    : `${popoverString}-body`;\n  const tooltipHeader = isTooltip\n    ? null\n    : querySelector<HTMLElement>(`.${popoverString}-header`, tooltip);\n  const tooltipBody = querySelector<HTMLElement>(`.${bodyClass}`, tooltip);\n\n  // set arrow and enable access for styleTip\n  self.arrow = querySelector<HTMLElement>(\n    `.${tipString}-arrow`,\n    tooltip,\n  ) as HTMLElement;\n  const { arrow } = self;\n\n  if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n  else {\n    const tempTitle = createElement(\"div\") as HTMLElement;\n    setHtml(tempTitle, title, sanitizeFn);\n    titleParts = [...[...tempTitle.childNodes]];\n  }\n\n  if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n  else {\n    const tempContent = createElement(\"div\") as HTMLElement;\n    setHtml(tempContent, content, sanitizeFn);\n    contentParts = [...[...tempContent.childNodes]];\n  }\n\n  // set dismissible button\n  if (dismissible) {\n    if (title) {\n      if (isHTMLElement(btnClose)) {\n        titleParts = [...titleParts, btnClose.cloneNode(true)];\n      } else {\n        const tempBtn = createElement(\"div\") as HTMLElement;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        titleParts = [...titleParts, tempBtn.firstChild as Node];\n      }\n    } else {\n      // istanbul ignore else @preserve\n      if (tooltipHeader) tooltipHeader.remove();\n      if (isHTMLElement(btnClose)) {\n        contentParts = [...contentParts, btnClose.cloneNode(true)];\n      } else {\n        const tempBtn = createElement(\"div\") as HTMLElement;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        contentParts = [...contentParts, tempBtn.firstChild as Node];\n      }\n    }\n  }\n\n  // fill the template with content from options / data attributes\n  // also sanitize title && content\n  // istanbul ignore else @preserve\n  if (!isTooltip) {\n    // istanbul ignore else @preserve\n    if (title && tooltipHeader) {\n      setHtml(tooltipHeader, titleParts, sanitizeFn);\n    }\n    // istanbul ignore else @preserve\n    if (content && tooltipBody) {\n      setHtml(tooltipBody, contentParts, sanitizeFn);\n    }\n    // set btn\n    self.btn = querySelector<HTMLButtonElement>(\".btn-close\", tooltip) ||\n      undefined;\n  } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n  // Bootstrap 5.2.x\n  addClass(tooltip, \"position-absolute\");\n  addClass(arrow, \"position-absolute\");\n\n  // set popover animation and placement\n  // istanbul ignore else @preserve\n  if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n  // istanbul ignore else @preserve\n  if (animation && !hasClass(tooltip, fadeClass)) {\n    addClass(tooltip, fadeClass);\n  }\n  // istanbul ignore else @preserve\n  if (customClass && !hasClass(tooltip, customClass)) {\n    addClass(tooltip, customClass);\n  }\n  // istanbul ignore else @preserve\n  if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n};\n\nexport default createTip;\n","import {\n  getDocument,\n  getElementStyle,\n  getParentNode,\n  isShadowRoot,\n  isTableElement,\n} from \"@thednp/shorty\";\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: Element) => {\n  const majorBlockTags = [\"HTML\", \"BODY\"];\n  const containers: HTMLElement[] = [];\n  let { parentNode } = element;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as HTMLElement;\n    // istanbul ignore else @preserve\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode as HTMLElement);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        ((getElementStyle(c, \"position\") !== \"relative\" ||\n          getElementStyle(c, \"position\") === \"relative\" &&\n            c.offsetHeight !== c.scrollHeight) &&\n          containers.slice(i + 1).every((r) =>\n            getElementStyle(r, \"position\") === \"static\"\n          ))\n      ) {\n        return c;\n      }\n      return null;\n    }) ||\n    /* istanbul ignore next: optional guard */\n    getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  addClass,\n  ariaDescribedBy,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  focusEvent,\n  focusinEvent,\n  focusoutEvent,\n  getAttribute,\n  getDocument,\n  getElementStyle,\n  getInstance,\n  getUID,\n  getWindow,\n  hasAttribute,\n  hasClass,\n  isApple,\n  mouseclickEvent,\n  mousedownEvent,\n  mouseenterEvent,\n  mousehoverEvent,\n  mouseleaveEvent,\n  ObjectAssign,\n  passiveHandler,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  Timer,\n  toLowerCase,\n  TouchEvent,\n  touchstartEvent,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\nimport PositionObserver from \"@thednp/position-observer\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dataOriginalTitle from \"../strings/dataOriginalTitle\";\nimport showClass from \"../strings/showClass\";\nimport tooltipString from \"../strings/tooltipString\";\nimport tooltipComponent from \"../strings/tooltipComponent\";\nimport popoverString from \"../strings/popoverString\";\nimport popoverComponent from \"../strings/popoverComponent\";\nimport modalString from \"../strings/modalString\";\nimport offcanvasString from \"../strings/offcanvasString\";\n\nimport styleTip from \"../util/styleTip\";\nimport createTip from \"../util/createTip\";\nimport { appendPopup, hasPopup, removePopup } from \"../util/popupContainer\";\nimport getElementContainer from \"../util/getElementContainer\";\nimport tooltipDefaults from \"../util/tooltipDefaults\";\nimport BaseComponent from \"./base-component\";\nimport type { TooltipEvent, TooltipOptions } from \"../interface/tooltip\";\nimport type { PopoverEvent, PopoverOptions } from \"../interface/popover\";\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector =\n  `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = \"title\";\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n */\nlet getTooltipInstance = (element: Element) =>\n  getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: Element) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(\n    tooltip,\n    container,\n  );\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container } = self;\n\n  return tooltip &&\n    hasPopup(tooltip, container);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  self._toggleEventListeners();\n\n  // istanbul ignore else @preserve\n  if (\n    hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent\n  ) {\n    toggleTooltipTitle(self);\n  }\n  // istanbul ignore else @preserve\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(\n    getDocument(element),\n    touchstartEvent,\n    self.handleTouch,\n    passiveHandler,\n  );\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<\n    Record<string, never>,\n    TooltipEvent | PopoverEvent\n  >(\n    `shown.bs.${toLowerCase(self.name)}`,\n  );\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, \"in\");\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<\n    Record<string, never>,\n    TooltipEvent | PopoverEvent\n  >(\n    `hidden.bs.${toLowerCase(self.name)}`,\n  );\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, \"out\");\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, tooltip } = self;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  if (add) {\n    [element, tooltip]\n      .forEach((target) => self._observer.observe(target));\n  } else self._observer.disconnect();\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) {\n    action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  }\n  if (parentOffcanvas) {\n    action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n  }\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content ||\n      getAttribute(element, titleAtt[0]) ||\n      // istanbul ignore next @preserve\n      \"\",\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare element: Element & HTMLOrSVGElement;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip: HTMLElement;\n  declare container: HTMLElement;\n  declare offsetParent: Element | Window;\n  declare arrow: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n  declare _observer: PositionObserver;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: Element | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    // istanbul ignore next @preserve: this is to set Popover too\n    getTooltipInstance = <T extends Tooltip>(elem: Element) =>\n      getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    // istanbul ignore else @preserve\n    if (((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      return;\n    }\n\n    // reset default options\n    ObjectAssign(tooltipDefaults, { titleAttr: \"\" });\n\n    // set title attributes and add event listeners\n    // istanbul ignore else @preserve\n    if (\n      hasAttribute(element, titleAttr) && isTooltip &&\n      typeof options.title === \"string\"\n    ) {\n      toggleTooltipTitle(this, options.title);\n    }\n\n    // set containers\n    const container = getElementContainer(element);\n    const offsetParent = [\"sticky\", \"fixed\", \"relative\"].some(\n        (position) =>\n          getElementStyle(container, \"position\") ===\n            position,\n      )\n      ? container\n      : getWindow(element);\n\n    this.container = container;\n    this.offsetParent = offsetParent;\n\n    // create tooltip here\n    createTip(this);\n\n    /* istanbul ignore if @preserve */\n    if (!this.tooltip) return;\n\n    // create observer\n    this._observer = new PositionObserver((entries) => {\n      /* istanbul ignore else */\n      if (!entries.some((entry) => entry.isVisible)) return;\n      this.update();\n    });\n\n    // attach events\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  // istanbul ignore next @preserve - impossible to test without Apple device\n  handleFocus = () => focus(this.element as HTMLElement);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, \"out\");\n\n    Timer.clear(element, \"out\");\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<\n            Record<string, never>,\n            TooltipEvent | PopoverEvent\n          >(\n            `show.bs.${toLowerCase(this.name)}`,\n          );\n          dispatchEvent(element, showTooltipEvent);\n\n          // istanbul ignore else @preserve\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, container);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            // istanbul ignore else @preserve\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            // istanbul ignore else @preserve\n            if (animation) {\n              emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            } else tooltipShownAction(this);\n          }\n        },\n        17,\n        \"in\",\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, \"in\");\n\n    // istanbul ignore else @preserve\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<\n            Record<string, never>,\n            TooltipEvent | PopoverEvent\n          >(\n            `hide.bs.${toLowerCase(this.name)}`,\n          );\n          dispatchEvent(element, hideTooltipEvent);\n\n          // istanbul ignore else @preserve\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            // istanbul ignore else @preserve\n            if (animation) {\n              emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            } else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        \"out\",\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    // istanbul ignore else @preserve\n    if (!enabled) {\n      this._toggleEventListeners(true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, enabled } = this;\n    // istanbul ignore else @preserve\n    if (enabled) {\n      if (tooltip && hasTip(this)) this.hide();\n      this._toggleEventListeners();\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    // istanbul ignore if @preserve\n    if (\n      (tooltip && tooltip.contains(target)) ||\n      target === element ||\n      (target && element.contains(target))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Toggles on/off the `Tooltip` event listeners.\n   *\n   * @param add when `true`, event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    // btn is only for dismissible popover\n    const { element, options, btn } = this;\n    const { trigger } = options;\n    const isPopover = this.name !== tooltipComponent;\n    const dismissible = isPopover && (options as PopoverOptions).dismissible\n      ? true\n      : false;\n\n    // istanbul ignore else @preserve\n    if (!trigger.includes(\"manual\")) {\n      this.enabled = !!add;\n\n      const triggerOptions = trigger.split(\" \");\n\n      triggerOptions.forEach((tr) => {\n        // istanbul ignore else @preserve\n        if (tr === mousehoverEvent) {\n          action(element, mousedownEvent, this.handleShow);\n          action(element, mouseenterEvent, this.handleShow);\n\n          // istanbul ignore else @preserve\n          if (!dismissible) {\n            action(element, mouseleaveEvent, this.handleHide);\n            action(\n              getDocument(element),\n              touchstartEvent,\n              this.handleTouch,\n              passiveHandler,\n            );\n          }\n        } else if (tr === mouseclickEvent) {\n          action(element, tr, !dismissible ? this.toggle : this.handleShow);\n        } else if (tr === focusEvent) {\n          action(element, focusinEvent, this.handleShow);\n          // istanbul ignore else @preserve\n          if (!dismissible) action(element, focusoutEvent, this.handleHide);\n          // istanbul ignore else @preserve\n          if (isApple()) {\n            action(element, mouseclickEvent, this.handleFocus);\n          }\n        }\n        // istanbul ignore else @preserve\n        if (dismissible && btn) {\n          action(btn, mouseclickEvent, this.handleHide);\n        }\n      });\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () =>\n      setTimeout(\n        () => disposeTooltipComplete(clone, () => super.dispose()),\n        17,\n      );\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { focus, getInstance, ObjectAssign } from \"@thednp/shorty\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport popoverString from \"../strings/popoverString\";\nimport popoverComponent from \"../strings/popoverComponent\";\n\nimport getTipTemplate from \"../util/getTipTemplate\";\nimport styleTip from \"../util/styleTip\";\nimport tooltipDefaults from \"../util/tooltipDefaults\";\nimport Tooltip from \"./tooltip\";\n\nimport type { PopoverOptions /* , PopoverEvent */ } from \"../interface/popover\";\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector =\n  `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: \"\",\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n */\nconst getPopoverInstance = (element: Element) =>\n  getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: Element) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: Element | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    // istanbul ignore else @preserve\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = \"scrollspy\";\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = \"ScrollSpy\";\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  addClass,\n  createCustomEvent,\n  dispatchEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementsByTagName,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  querySelector,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport PositionObserver from \"@thednp/position-observer\";\n\nimport activeClass from \"../strings/activeClass\";\nimport scrollspyString from \"../strings/scrollspyString\";\nimport scrollspyComponent from \"../strings/scrollspyComponent\";\n\nimport BaseComponent from \"./base-component\";\nimport { ScrollSpyEvent, ScrollSpyOptions } from \"../interface/scrollspy\";\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: Partial<ScrollSpyOptions> = {\n  offset: 10,\n  target: undefined,\n};\n\ntype ScrollSpyEventProps = {\n  relatedTarget: HTMLElement;\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: Element) =>\n  getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: Element) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<\n  ScrollSpyEventProps,\n  ScrollSpyEvent\n>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const {\n    target,\n    scrollTarget,\n    options,\n    itemsLength,\n    scrollHeight,\n    element,\n    _observer,\n  } = self;\n  const { offset } = options;\n  const isRoot = scrollTarget !== element;\n\n  const links = target && getElementsByTagName<HTMLAnchorElement>(\"A\", target);\n  const doc = getDocument(element);\n  const scrollHEIGHT = scrollTarget.scrollHeight;\n\n  self.scrollTop = scrollTarget.scrollTop;\n\n  // only update items/offsets once or with each mutation\n  // istanbul ignore else @preserve\n  if (\n    links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)\n  ) {\n    let href: string | null;\n    let ref: string | undefined;\n    let targetItem: HTMLElement | null;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.targets = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    Array.from(links).forEach((link) => {\n      href = getAttribute(link, \"href\");\n      ref = href?.slice(1);\n      targetItem = ref?.length ? doc.getElementById(ref) : null;\n\n      if (targetItem) {\n        self.items.push(link);\n        self.targets.push(targetItem);\n        rect = _observer?.getEntry(targetItem)?.boundingClientRect ||\n          getBoundingClientRect(targetItem);\n        self.offsets.push(\n          (isRoot ? rect.top + self.scrollTop : targetItem.offsetTop) - offset,\n        );\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Toggles on/off the component observer.\n *\n * @param self the ScrollSpy instance\n * @param add when `true`, listener is added\n */\nconst toggleObservers = (\n  { targets, scrollTarget, element, _observer }: ScrollSpy,\n  add?: boolean,\n) => {\n  if (add) {\n    if (scrollTarget === element) {\n      targets?.forEach((targetItem) => _observer.observe(targetItem));\n    } else {\n      _observer.observe(element);\n    }\n  } else _observer.disconnect();\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Element) => {\n  return scrollTarget.scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return scrollTarget !== element\n    ? scrollTarget.clientHeight\n    : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: Element) => {\n  Array.from(getElementsByTagName<HTMLAnchorElement>(\"A\", target)).forEach(\n    (item) => {\n      if (hasClass(item, activeClass)) removeClass(item, activeClass);\n    },\n  );\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n\n  // istanbul ignore else @preserve\n  if (isHTMLElement(target)) clear(target);\n\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, \"nav\") || hasClass(parentItem, \"dropdown-menu\")) {\n      parents.push(parentItem);\n    }\n  }\n\n  parents.forEach((menuItem) => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    // istanbul ignore else @preserve\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare element: HTMLElement;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare targets: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n  declare _observer: PositionObserver;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(\n    target: Element | string,\n    config?: Partial<ScrollSpyOptions>,\n  ) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // get target\n    const spyTarget = querySelector(\n      options.target,\n      getDocument(element),\n    );\n\n    // invalidate\n    if (!spyTarget) return;\n    this.target = spyTarget;\n\n    // set initial state\n    this.scrollTarget = element.clientHeight < element.scrollHeight\n      ? element\n      : getDocumentElement(element);\n    this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n    // run an initial burst, we need to know the targets\n    this.refresh();\n\n    // create observer\n    this._observer = new PositionObserver((entries) => {\n      requestAnimationFrame(() => {\n        // istanbul ignore else @preserve\n        if (entries.some((entry) => entry.isVisible)) {\n          this.refresh();\n        }\n      });\n    }, {\n      root: this.scrollTarget,\n    });\n\n    // add event handlers\n    toggleObservers(this, true);\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n    // check if target is visible and invalidate\n    // istanbul ignore if @preserve\n    if (!isHTMLElement(target) || target.offsetHeight === 0) return;\n\n    updateSpyTargets(this);\n\n    const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n    if (scrollTop >= maxScroll) {\n      const newActiveItem = items[itemsLength - 1];\n\n      // istanbul ignore else @preserve\n      if (activeItem !== newActiveItem) activate(this, newActiveItem);\n      return;\n    }\n\n    const { offsets } = this;\n\n    // istanbul ignore else @preserve\n    if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n      this.activeItem = null;\n      // istanbul ignore else @preserve\n      if (target) clear(target);\n      return;\n    }\n\n    items.forEach((item, i) => {\n      if (\n        activeItem !== item &&\n        scrollTop >= offsets[i] &&\n        (typeof offsets[i + 1] === \"undefined\" || scrollTop < offsets[i + 1])\n      ) {\n        activate(this, item);\n      }\n    });\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    const clone = { ...this };\n    toggleObservers(clone);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = \"tab\";\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = \"Tab\";\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  addClass,\n  ariaSelected,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getElementsByClassName,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  mouseclickEvent,\n  MouseEvent,\n  querySelector,\n  reflow,\n  removeClass,\n  setAttribute,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport collapsingClass from \"../strings/collapsingClass\";\nimport activeClass from \"../strings/activeClass\";\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dropdownClasses from \"../strings/dropdownClasses\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport tabString from \"../strings/tabString\";\nimport tabComponent from \"../strings/tabComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { /* TabOptions, */ TabEvent } from \"../interface/tab\";\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: Element) =>\n  getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: Element) => new Tab(element);\n\ntype TabEventProps = {\n  relatedTarget: Element & EventTarget | undefined;\n};\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `show.bs.${tabString}`,\n);\nconst shownTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `shown.bs.${tabString}`,\n);\nconst hideTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `hide.bs.${tabString}`,\n);\nconst hiddenTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `hidden.bs.${tabString}`,\n);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  // istanbul ignore else @preserve\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = \"\";\n    removeClass(tabContent, collapsingClass);\n  }\n\n  // istanbul ignore else @preserve\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) ||\n    // istanbul ignore next @preserve\n    { tab: null };\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) ||\n      // istanbul ignore next @preserve\n      { currentHeight: 0, nextHeight: 0 };\n    // istanbul ignore else @preserve: vitest won't validate this branch\n    if (currentHeight !== nextHeight) {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    } else {\n      triggerTabEnd(self);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) ||\n    // istanbul ignore next @preserve\n    { tab: null, content: null };\n  let currentHeight = 0;\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach((c) => {\n      // istanbul ignore else @preserve\n      if (c) addClass(c, \"overflow-hidden\");\n    });\n    currentHeight = content\n      ? content.scrollHeight\n      : /* istanbul ignore next @preserve */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element as HTMLElement;\n  dispatchEvent(element, showTabEvent);\n\n  // istanbul ignore if @preserve\n  if (showTabEvent.defaultPrevented) return;\n  // istanbul ignore else @preserve\n  if (nextContent) addClass(nextContent, activeClass);\n  // istanbul ignore else @preserve\n  if (content) removeClass(content, activeClass);\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const nextHeight = nextContent.scrollHeight;\n    tabPrivate.set(element, {\n      currentHeight,\n      nextHeight,\n      tab: null,\n      content: null,\n    });\n\n    addClass(tabContent, collapsingClass);\n    tabContent.style.height = `${currentHeight}px`;\n    reflow(tabContent);\n    [content, nextContent].forEach((c) => {\n      // istanbul ignore else @preserve\n      if (c) removeClass(c, \"overflow-hidden\");\n    });\n  }\n\n  if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n    setTimeout(() => {\n      addClass(nextContent, showClass);\n      emulateTransitionEnd(nextContent, () => {\n        triggerTabShow(self);\n      });\n    }, 1);\n  } else {\n    // istanbul ignore else @preserve\n    if (nextContent) addClass(nextContent, showClass);\n    triggerTabShow(self);\n  }\n\n  // istanbul ignore else @preserve\n  if (tab) dispatchEvent(tab, hiddenTabEvent);\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (\n  self: Tab,\n): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(nav)) {\n    return { tab: null, content: null };\n  }\n\n  const activeTabs = getElementsByClassName<HTMLElement>(\n    activeClass,\n    nav,\n  );\n  let tab: HTMLElement | null = null;\n  // istanbul ignore else @preserve\n  if (\n    activeTabs.length === 1 &&\n    !dropdownClasses.some((c) =>\n      hasClass(activeTabs[0].parentElement as HTMLElement, c)\n    )\n  ) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab) ? getTargetElement(tab) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement) => {\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(\",.\")}`);\n  return dropdown\n    ? querySelector<HTMLElement>(`.${dropdownClasses[0]}-toggle`, dropdown)\n    : null;\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: MouseEvent<Element>) => {\n  const self = getTabInstance(e.target);\n  e.preventDefault();\n\n  // istanbul ignore else @preserve\n  if (self) self.show();\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare element: HTMLElement;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: Element | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    // istanbul ignore else @preserve\n    if (!content) return;\n\n    const nav = closest<HTMLElement>(element, \".nav\");\n    const container = closest<HTMLElement>(\n      content as HTMLElement,\n      \".tab-content\",\n    );\n\n    this.nav = nav;\n    this.content = content;\n    this.tabContent = container;\n\n    // event targets\n    this.dropdown = getParentDropdown(element as HTMLElement);\n\n    // show first Tab instance of none is shown\n    // suggested on #432\n    const { tab } = getActiveTab(this);\n    if (nav && !tab) {\n      const firstTab = querySelector(tabSelector, nav);\n      const firstTabContent = firstTab && getTargetElement(firstTab);\n\n      // istanbul ignore else @preserve\n      if (firstTabContent) {\n        addClass(firstTab, activeClass);\n        addClass(firstTabContent, showClass);\n        addClass(firstTabContent, activeClass);\n        setAttribute(element, ariaSelected, \"true\");\n      }\n    }\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    // istanbul ignore else @preserve\n    if ((nav && Timer.get(nav)) || hasClass(element, activeClass)) return;\n    const { tab, content } = getActiveTab(this);\n\n    // istanbul ignore else @preserve\n    if (nav && tab) {\n      tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n    }\n\n    // update relatedTarget and dispatch\n    hideTabEvent.relatedTarget = element as HTMLElement;\n\n    // istanbul ignore if @preserve\n    if (!isHTMLElement(tab)) return;\n\n    dispatchEvent(tab, hideTabEvent);\n\n    // istanbul ignore else @preserve\n    if (hideTabEvent.defaultPrevented) return;\n\n    addClass(element, activeClass);\n    setAttribute(element, ariaSelected, \"true\");\n\n    const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n    if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n      removeClass(activeDropdown, activeClass);\n    }\n\n    // istanbul ignore else @preserve\n    if (nav) {\n      const toggleTab = () => {\n        // istanbul ignore else @preserve\n        if (tab) {\n          removeClass(tab, activeClass);\n          setAttribute(tab, ariaSelected, \"false\");\n        }\n        if (dropdown && !hasClass(dropdown, activeClass)) {\n          addClass(dropdown, activeClass);\n        }\n      };\n\n      if (\n        content &&\n        (hasClass(content, fadeClass) ||\n          (nextContent && hasClass(nextContent, fadeClass)))\n      ) {\n        Timer.set(nav, toggleTab, 1);\n      } else toggleTab();\n    }\n\n    // istanbul ignore else @preserve\n    if (content) {\n      removeClass(content, showClass);\n      if (hasClass(content, fadeClass)) {\n        emulateTransitionEnd(content, () => triggerTabHide(this));\n      } else {\n        triggerTabHide(this);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, tabClickHandler);\n  };\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = \"toast\";\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = \"Toast\";\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  addClass,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focusinEvent,\n  focusoutEvent,\n  getDocument,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  mouseenterEvent,\n  MouseEvent,\n  mouseleaveEvent,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport toastString from \"../strings/toastString\";\nimport toastComponent from \"../strings/toastComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport { ToastEvent, ToastOptions } from \"../interface/toast\";\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = \"showing\";\n/** @deprecated */\nconst hideClass = \"hide\";\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: Element) =>\n  getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: Element) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `show.bs.${toastString}`,\n);\nconst shownToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `shown.bs.${toastString}`,\n);\nconst hideToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `hide.bs.${toastString}`,\n);\nconst hiddenToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `hidden.bs.${toastString}`,\n);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  // istanbul ignore else @preserve\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element as HTMLElement);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element as HTMLElement);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  // istanbul ignore if @preserve\n  if (!self) return;\n  // istanbul ignore else @preserve\n  if (trigger && trigger.tagName === \"A\") e.preventDefault();\n  self.relatedTarget = trigger;\n  self.show();\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent<HTMLElement>) => {\n  const element = e.target;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  // istanbul ignore if @preserve: a solid filter is required\n  if (\n    !self || element === relatedTarget ||\n    element.contains(relatedTarget as Node)\n  ) return;\n\n  if ([mouseenterEvent, focusinEvent].includes(type)) {\n    Timer.clear(element, toastString);\n  } else {\n    Timer.set(element, () => self.hide(), self.options.delay, toastString);\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare element: HTMLElement;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: Element | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) {\n      addClass(element, fadeClass);\n    } else if (!options.animation && hasClass(element, fadeClass)) {\n      removeClass(element, fadeClass);\n    }\n\n    // dismiss button\n    this.dismiss = querySelector<HTMLElement>(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [\n      ...querySelectorAll<HTMLElement>(\n        toastToggleSelector,\n        getDocument(element),\n      ),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    // istanbul ignore if @preserve\n    if (!element || isShown) return;\n\n    dispatchEvent(element, showToastEvent);\n    if (!showToastEvent.defaultPrevented) showToast(this);\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    // istanbul ignore if @preserve\n    if (!element || !isShown) return;\n\n    dispatchEvent(element, hideToastEvent);\n    if (!hideToastEvent.defaultPrevented) hideToast(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, it will add the listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { element, triggers, dismiss, options, hide } = this;\n\n    // istanbul ignore else @preserve\n    if (dismiss) {\n      action(dismiss, mouseclickEvent, hide);\n    }\n\n    // istanbul ignore else @preserve\n    if (options.autohide) {\n      [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(\n        (e) => action(element, e, interactiveToastHandler),\n      );\n    }\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) =>\n        action(btn, mouseclickEvent, toastClickHandler)\n      );\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n    this._toggleEventListeners();\n    Timer.clear(element, toastString);\n\n    if (isShown) removeClass(element, showClass);\n\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from \"@thednp/shorty\";\n\nimport { addListener } from \"@thednp/event-listener\";\n\nimport Alert from \"../components/alert\";\nimport Button from \"../components/button\";\nimport Carousel from \"../components/carousel\";\nimport Collapse from \"../components/collapse\";\nimport Dropdown from \"../components/dropdown\";\nimport Modal from \"../components/modal\";\nimport Offcanvas from \"../components/offcanvas\";\nimport Popover from \"../components/popover\";\nimport ScrollSpy from \"../components/scrollspy\";\nimport Tab from \"../components/tab\";\nimport Toast from \"../components/toast\";\nimport Tooltip from \"../components/tooltip\";\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\ntype Component =\n  | Alert\n  | Button\n  | Carousel\n  | Collapse\n  | Dropdown\n  | Modal\n  | Offcanvas\n  | Popover\n  | ScrollSpy\n  | Tab\n  | Toast\n  | Tooltip;\n\n[\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n].forEach((c) => componentsList.set(c.prototype.name, c));\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = (\n  callback: (el: Element) => Component,\n  collection: HTMLCollectionOf<Element> | Element[],\n) => {\n  [...collection].forEach((x) => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<Element, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) {\n        (instance as T & { dispose: () => void }).dispose();\n      }\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName<Element>(\"*\", lookUp)];\n\n  componentsList.forEach((cs) => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter((item) => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach((comp) => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, \"DOMContentLoaded\", () => initCallback(), {\n    once: true,\n  });\n}\n"],"names":["De","Oe","$","Pe","Be","Fe","rt","ct","at","dt","pt","mt","bt","ht","yt","wt","Dt","xt","zt","Rt","je","qt","on","sn","rn","cn","gn","_t","$t","M","W","zn","t","e","te","R","n","o","s","Q","j","ne","Qn","Gn","qn","Zn","Yn","b","l","u","h","O","to","k","G","K","d","N","oe","q","g","ae","ie","ro","r","a","i","io","P","T","ue","lo","f","c","p","E","C","po","vo","bo","Eo","ho","x","le","v","yo","de","z","fe","pe","Ao","m","w","So","S","ko","me","A","ve","be","Ee","we","Co","F","H","y","Ae","Se","Do","zo","Vo","Uo","ke","Ro","Ne","Go","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","version","BaseComponent","target","config","element","isElement","isString","querySelector","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","self","dispatchEvent","hasClass","removeClass","emulateTransitionEnd","add","action","addListener","removeListener","dismiss","close","mouseclickEvent","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","setAttribute","ariaPressed","isActive","getAttribute","addClass","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","closest","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","keyArrowRight","keyArrowLeft","carouselDragHandler","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","activateCarouselIndicator","pointermoveEvent","passiveHandler","pointerupEvent","isHTMLElement","getElementsByClassName","activeIndex","transitionItem","matches","ar","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","touchstartEvent","dragstartEvent","arrow","indicator","keydownEvent","isAnimating","clone","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","getCurrentOpenDropdown","currentParent","type","isForm","mousedownEvent","dropdownClickHandler","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","dropdownIntersectionHandler","entry","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","getWindow","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","padStyle","toggleModalDismiss","modalDismissHandler","modalKeyHandler","afterModalHide","relatedTarget","focusElement","toggleFocusTrap","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","modalClickHandler","currentTarget","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","that","callback","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offcanvasTriggerHandler","offCanvasDismiss","selection","visibleTrigger","isOpen","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","offsetParent","scrollLeft","scrollTop","getNodeScroll","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","observerEntry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","elemOffsetLeft","elemOffsetTop","getRectRelativeToOffsetParent","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","toLowerCase","tooltipDefaults","_","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","isFunction","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","tipPositions","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","ariaDescribedBy","hasTip","disposeTooltipComplete","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","toggleTooltipOpenHandlers","parentModal","parentOffcanvas","titleAtt","tipComponent","elem","getUID","position","PositionObserver","entries","outTimer","showTooltipEvent","delay","hideTooltipEvent","enabled","tr","mousehoverEvent","focusinEvent","focusoutEvent","isApple","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","scrollTarget","itemsLength","_observer","isRoot","links","getElementsByTagName","scrollHEIGHT","href","ref","targetItem","rect","getOffsetHeight","link","toggleObservers","targets","getScrollHeight","clear","item","activate","parents","parentItem","menuItem","parentLink","spyTarget","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toastClickHandler","interactiveToastHandler","isShown","hide","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","cs","init","selector","removeDataAPI","comp"],"mappings":"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","x_google_ignoreList":[0,1,52]}