{"version":3,"file":"bootstrap-native.cjs","sources":["../node_modules/.pnpm/@thednp+shorty@2.0.7/node_modules/@thednp/shorty/dist/shorty.mjs","../node_modules/.pnpm/@thednp+event-listener@2.0.6/node_modules/@thednp/event-listener/dist/event-listener.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../node_modules/.pnpm/@thednp+position-observer@0.0.3/node_modules/@thednp/position-observer/dist/index.mjs","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["const ariaChecked = \"aria-checked\", ariaDescription = \"aria-description\", ariaDescribedBy = \"aria-describedby\", ariaExpanded = \"aria-expanded\", ariaHasPopup = \"aria-haspopup\", ariaHidden = \"aria-hidden\", ariaLabel = \"aria-label\", ariaLabelledBy = \"aria-labelledby\", ariaModal = \"aria-modal\", ariaPressed = \"aria-pressed\", ariaSelected = \"aria-selected\", ariaValueMin = \"aria-valuemin\", ariaValueMax = \"aria-valuemax\", ariaValueNow = \"aria-valuenow\", ariaValueText = \"aria-valuetext\", abortEvent = \"abort\", beforeunloadEvent = \"beforeunload\", blurEvent = \"blur\", changeEvent = \"change\", contextmenuEvent = \"contextmenu\", DOMContentLoadedEvent = \"DOMContentLoaded\", DOMMouseScrollEvent = \"DOMMouseScroll\", errorEvent = \"error\", focusEvent = \"focus\", focusinEvent = \"focusin\", focusoutEvent = \"focusout\", gesturechangeEvent = \"gesturechange\", gestureendEvent = \"gestureend\", gesturestartEvent = \"gesturestart\", keydownEvent = \"keydown\", keypressEvent = \"keypress\", keyupEvent = \"keyup\", loadEvent = \"load\", mouseclickEvent = \"click\", mousedblclickEvent = \"dblclick\", mousedownEvent = \"mousedown\", mouseupEvent = \"mouseup\", mousehoverEvent = \"hover\", mouseenterEvent = \"mouseenter\", mouseleaveEvent = \"mouseleave\", mouseinEvent = \"mousein\", mouseoutEvent = \"mouseout\", mouseoverEvent = \"mouseover\", mousemoveEvent = \"mousemove\", mousewheelEvent = \"mousewheel\", moveEvent = \"move\", orientationchangeEvent = \"orientationchange\", pointercancelEvent = \"pointercancel\", pointerdownEvent = \"pointerdown\", pointerleaveEvent = \"pointerleave\", pointermoveEvent = \"pointermove\", pointerupEvent = \"pointerup\", readystatechangeEvent = \"readystatechange\", resetEvent = \"reset\", resizeEvent = \"resize\", selectEvent = \"select\", selectendEvent = \"selectend\", selectstartEvent = \"selectstart\", scrollEvent = \"scroll\", submitEvent = \"submit\", touchstartEvent = \"touchstart\", touchmoveEvent = \"touchmove\", touchcancelEvent = \"touchcancel\", touchendEvent = \"touchend\", unloadEvent = \"unload\", nativeEvents = {\n  DOMContentLoaded: DOMContentLoadedEvent,\n  DOMMouseScroll: DOMMouseScrollEvent,\n  abort: abortEvent,\n  beforeunload: beforeunloadEvent,\n  blur: blurEvent,\n  change: changeEvent,\n  click: mouseclickEvent,\n  contextmenu: contextmenuEvent,\n  dblclick: mousedblclickEvent,\n  error: errorEvent,\n  focus: focusEvent,\n  focusin: focusinEvent,\n  focusout: focusoutEvent,\n  gesturechange: gesturechangeEvent,\n  gestureend: gestureendEvent,\n  gesturestart: gesturestartEvent,\n  hover: mousehoverEvent,\n  keydown: keydownEvent,\n  keypress: keypressEvent,\n  keyup: keyupEvent,\n  load: loadEvent,\n  mousedown: mousedownEvent,\n  mousemove: mousemoveEvent,\n  mousein: mouseinEvent,\n  mouseout: mouseoutEvent,\n  mouseenter: mouseenterEvent,\n  mouseleave: mouseleaveEvent,\n  mouseover: mouseoverEvent,\n  mouseup: mouseupEvent,\n  mousewheel: mousewheelEvent,\n  move: moveEvent,\n  orientationchange: orientationchangeEvent,\n  pointercancel: pointercancelEvent,\n  pointerdown: pointerdownEvent,\n  pointerleave: pointerleaveEvent,\n  pointermove: pointermoveEvent,\n  pointerup: pointerupEvent,\n  readystatechange: readystatechangeEvent,\n  reset: resetEvent,\n  resize: resizeEvent,\n  scroll: scrollEvent,\n  select: selectEvent,\n  selectend: selectendEvent,\n  selectstart: selectstartEvent,\n  submit: submitEvent,\n  touchcancel: touchcancelEvent,\n  touchend: touchendEvent,\n  touchmove: touchmoveEvent,\n  touchstart: touchstartEvent,\n  unload: unloadEvent\n}, dragEvent = \"drag\", dragstartEvent = \"dragstart\", dragenterEvent = \"dragenter\", dragleaveEvent = \"dragleave\", dragoverEvent = \"dragover\", dragendEvent = \"dragend\", loadstartEvent = \"loadstart\", mouseSwipeEvents = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, mouseClickEvents = { down: \"mousedown\", up: \"mouseup\" }, mouseHoverEvents = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : (\n  /* istanbul ignore next @preserve */\n  [\"mouseover\", \"mouseout\"]\n), touchEvents = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, focusEvents = { in: \"focusin\", out: \"focusout\" }, focusableSelector = 'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"]', keyboardEventKeys = {\n  Backspace: \"Backspace\",\n  //  8\n  Tab: \"Tab\",\n  //  9\n  Enter: \"Enter\",\n  // 13\n  Shift: \"Shift\",\n  // 16\n  Control: \"Control\",\n  // 17\n  Alt: \"Alt\",\n  // 18\n  Pause: \"Pause\",\n  // 19\n  CapsLock: \"CapsLock\",\n  // 20\n  Escape: \"Escape\",\n  // 27\n  Scape: \"Space\",\n  // 32\n  ArrowLeft: \"ArrowLeft\",\n  // 37\n  ArrowUp: \"ArrowUp\",\n  // 38\n  ArrowRight: \"ArrowRight\",\n  // 39\n  ArrowDown: \"ArrowDown\",\n  // 40\n  Insert: \"Insert\",\n  // 45\n  Delete: \"Delete\",\n  // 46\n  Meta: \"Meta\",\n  // 91 windows key\n  ContextMenu: \"ContextMenu\",\n  // 93\n  ScrollLock: \"ScrollLock\"\n  // 145\n}, keyAlt = \"Alt\", keyArrowDown = \"ArrowDown\", keyArrowUp = \"ArrowUp\", keyArrowLeft = \"ArrowLeft\", keyArrowRight = \"ArrowRight\", keyBackspace = \"Backspace\", keyCapsLock = \"CapsLock\", keyControl = \"Control\", keyDelete = \"Delete\", keyEnter = \"Enter\", keyNumpadEnter = \"NumpadEnter\", keyEscape = \"Escape\", keyInsert = \"Insert\", keyMeta = \"Meta\", keyPause = \"Pause\", keyScrollLock = \"ScrollLock\", keyShift = \"Shift\", keySpace = \"Space\", keyTab = \"Tab\", animationDuration = \"animationDuration\", animationDelay = \"animationDelay\", animationName = \"animationName\", animationEndEvent = \"animationend\", transitionDuration = \"transitionDuration\", transitionDelay = \"transitionDelay\", transitionEndEvent = \"transitionend\", transitionProperty = \"transitionProperty\", addEventListener = \"addEventListener\", removeEventListener = \"removeEventListener\", bezierEasings = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, offsetHeight = \"offsetHeight\", offsetWidth = \"offsetWidth\", scrollHeight = \"scrollHeight\", scrollWidth = \"scrollWidth\", tabindex = \"tabindex\", userAgentData = navigator.userAgentData, { userAgent: userAgentString } = navigator, userAgent = userAgentString, isMobile = () => {\n  const mobileBrands = /iPhone|iPad|iPod|Android/i;\n  return navigator?.userAgentData?.brands.some(\n    (x) => mobileBrands.test(x.brand)\n  ) || mobileBrands.test(navigator?.userAgent) || !1;\n}, isApple = () => {\n  const appleBrands = /(iPhone|iPod|iPad)/;\n  return navigator?.userAgentData?.brands.some(\n    (x) => appleBrands.test(x.brand)\n  ) || /* istanbul ignore next @preserve */\n  appleBrands.test(\n    navigator?.userAgent\n  ) || !1;\n}, isFirefox = () => navigator?.userAgent?.includes(\"Firefox\") || /* istanbul ignore next @preserve */\n!1, support3DTransform = () => [\"webkitPerspective\", \"perspective\"].some((p) => p in document.head.style), noop = () => {\n}, on = (element, eventName, listener, options) => {\n  const ops = options || !1;\n  element.addEventListener(\n    eventName,\n    listener,\n    ops\n  );\n}, off = (element, eventName, listener, options) => {\n  const ops = options || !1;\n  element.removeEventListener(\n    eventName,\n    listener,\n    ops\n  );\n}, one = (element, eventName, listener, options) => {\n  const handlerWrapper = (e) => {\n    (e.target === element || e.currentTarget === element) && (listener.apply(element, [e]), off(element, eventName, handlerWrapper, options));\n  };\n  on(element, eventName, handlerWrapper, options);\n}, supportPassive = () => {\n  let result = !1;\n  try {\n    const opts = Object.defineProperty({}, \"passive\", {\n      get: () => (result = !0, result)\n    });\n    one(document, DOMContentLoadedEvent, noop, opts);\n  } catch {\n  }\n  return result;\n}, supportTransform = () => [\"webkitTransform\", \"transform\"].some((p) => p in document.head.style), supportTouch = () => \"ontouchstart\" in window || /* istanbul ignore next @preserve */\n\"msMaxTouchPoints\" in navigator, supportAnimation = () => [\"webkitAnimation\", \"animation\"].some((p) => p in document.head.style), supportTransition = () => [\"webkitTransition\", \"transition\"].some((p) => p in document.head.style), getAttribute = (element, att) => element.getAttribute(att), getAttributeNS = (ns, element, att) => element.getAttributeNS(ns, att), hasAttribute = (element, att) => element.hasAttribute(att), hasAttributeNS = (ns, element, att) => element.hasAttributeNS(ns, att), setAttribute = (element, att, value) => element.setAttribute(att, value), setAttributeNS = (ns, element, att, value) => element.setAttributeNS(ns, att, value), removeAttribute = (element, att) => element.removeAttribute(att), removeAttributeNS = (ns, element, att) => element.removeAttributeNS(ns, att), addClass = (element, ...classNAME) => {\n  element.classList.add(...classNAME);\n}, removeClass = (element, ...classNAME) => {\n  element.classList.remove(...classNAME);\n}, hasClass = (element, classNAME) => element.classList.contains(classNAME), { body: documentBody } = document, { documentElement } = document, { head: documentHead } = document, ArrayFrom = (arr) => Array.from(arr), isObject = (obj) => obj != null && typeof obj == \"object\" || !1, isNode = (node) => isObject(node) && typeof node.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(\n  (x) => node.nodeType === x\n) || !1, isHTMLElement = (element) => isNode(element) && element.nodeType === 1 || !1, componentData = /* @__PURE__ */ new Map(), Data = {\n  data: componentData,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (element, component, instance) => {\n    if (!isHTMLElement(element)) return;\n    componentData.has(component) || componentData.set(component, /* @__PURE__ */ new Map()), componentData.get(component).set(element, instance);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (component) => componentData.get(component) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (element, component) => {\n    if (!isHTMLElement(element) || !component) return null;\n    const instanceMap = Data.getAllFor(component);\n    return element && instanceMap && instanceMap.get(element) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (element, component) => {\n    const instanceMap = Data.getAllFor(component);\n    !instanceMap || !isHTMLElement(element) || (instanceMap.delete(element), instanceMap.size === 0 && componentData.delete(component));\n  }\n}, getInstance = (target, component) => Data.get(target, component), isString = (str) => typeof str == \"string\" || !1, isWindow = (obj) => isObject(obj) && obj.constructor.name === \"Window\" || !1, isDocument = (obj) => isNode(obj) && obj.nodeType === 9 || !1, getDocument = (node) => isWindow(node) ? node.document : isDocument(node) ? node : isNode(node) ? node.ownerDocument : globalThis.document, ObjectAssign = (obj, ...source) => Object.assign(obj, ...source), createElement = (param) => {\n  if (!param) return;\n  if (isString(param))\n    return getDocument().createElement(param);\n  const { tagName } = param, newElement = createElement(tagName);\n  if (!newElement) return;\n  const attr = { ...param };\n  return delete attr.tagName, ObjectAssign(newElement, attr);\n}, createElementNS = (ns, param) => {\n  if (!ns || !param) return;\n  if (isString(param))\n    return getDocument().createElementNS(ns, param);\n  const { tagName } = param, newElement = createElementNS(ns, tagName);\n  if (!newElement) return;\n  const attr = { ...param };\n  return delete attr.tagName, ObjectAssign(newElement, attr);\n}, dispatchEvent = (element, event) => element.dispatchEvent(event), distinct = (value, index, arr) => arr.indexOf(value) === index, getElementStyle = (element, property) => {\n  const computedStyle = getComputedStyle(element), prop = property.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return computedStyle.getPropertyValue(prop);\n}, getElementAnimationDelay = (element) => {\n  const propertyValue = getElementStyle(element, animationName), durationValue = getElementStyle(element, animationDelay), durationScale = durationValue.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, duration = propertyValue && propertyValue !== \"none\" ? parseFloat(durationValue) * durationScale : 0;\n  return Number.isNaN(duration) ? (\n    /* istanbul ignore next */\n    0\n  ) : duration;\n}, getElementAnimationDuration = (element) => {\n  const propertyValue = getElementStyle(element, animationName), durationValue = getElementStyle(element, animationDuration), durationScale = durationValue.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, duration = propertyValue && propertyValue !== \"none\" ? parseFloat(durationValue) * durationScale : 0;\n  return Number.isNaN(duration) ? (\n    /* istanbul ignore next */\n    0\n  ) : duration;\n}, emulateAnimationEnd = (element, handler) => {\n  let called = 0;\n  const endEvent = new Event(animationEndEvent), duration = getElementAnimationDuration(element), delay = getElementAnimationDelay(element);\n  if (duration) {\n    const animationEndWrapper = (e) => {\n      e.target === element && (handler.apply(element, [e]), element.removeEventListener(animationEndEvent, animationEndWrapper), called = 1);\n    };\n    element.addEventListener(animationEndEvent, animationEndWrapper), setTimeout(() => {\n      called || dispatchEvent(element, endEvent);\n    }, duration + delay + 17);\n  } else\n    handler.apply(element, [endEvent]);\n}, getElementTransitionDelay = (element) => {\n  const propertyValue = getElementStyle(element, transitionProperty), delayValue = getElementStyle(element, transitionDelay), delayScale = delayValue.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, duration = propertyValue && propertyValue !== \"none\" ? parseFloat(delayValue) * delayScale : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(duration) ? (\n    /* istanbul ignore next */\n    0\n  ) : duration;\n}, getElementTransitionDuration = (element) => {\n  const propertyValue = getElementStyle(element, transitionProperty), durationValue = getElementStyle(element, transitionDuration), durationScale = durationValue.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, duration = propertyValue && propertyValue !== \"none\" ? parseFloat(durationValue) * durationScale : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(duration) ? (\n    /* istanbul ignore next */\n    0\n  ) : duration;\n}, emulateTransitionEnd = (element, handler) => {\n  let called = 0;\n  const endEvent = new Event(transitionEndEvent), duration = getElementTransitionDuration(element), delay = getElementTransitionDelay(element);\n  if (duration) {\n    const transitionEndWrapper = (e) => {\n      e.target === element && (handler.apply(element, [e]), element.removeEventListener(transitionEndEvent, transitionEndWrapper), called = 1);\n    };\n    element.addEventListener(transitionEndEvent, transitionEndWrapper), setTimeout(() => {\n      called || dispatchEvent(element, endEvent);\n    }, duration + delay + 17);\n  } else\n    handler.apply(element, [endEvent]);\n}, Float32ArrayFrom = (arr) => Float32Array.from(Array.from(arr)), Float64ArrayFrom = (arr) => Float64Array.from(Array.from(arr)), focus = (element, options) => element.focus(options), normalizeValue = (value) => [\"true\", !0].includes(value) ? !0 : [\"false\", !1].includes(value) ? !1 : [\"null\", \"\", null, void 0].includes(value) ? null : value !== \"\" && !Number.isNaN(+value) ? +value : value, ObjectEntries = (obj) => Object.entries(obj), toLowerCase = (source) => source.toLowerCase(), normalizeOptions = (element, defaultOps, inputOps, ns) => {\n  const INPUT = { ...inputOps }, data = { ...element.dataset }, normalOps = { ...defaultOps }, dataOps = {}, title = \"title\";\n  return ObjectEntries(data).forEach(([k, v]) => {\n    const key = ns && typeof k == \"string\" && k.includes(ns) ? k.replace(ns, \"\").replace(\n      /[A-Z]/g,\n      (match) => toLowerCase(match)\n    ) : (\n      /* istanbul ignore next @preserve */\n      k\n    );\n    dataOps[key] = normalizeValue(v);\n  }), ObjectEntries(INPUT).forEach(([k, v]) => {\n    INPUT[k] = normalizeValue(v);\n  }), ObjectEntries(defaultOps).forEach(([k, v]) => {\n    k in INPUT ? normalOps[k] = INPUT[k] : k in dataOps ? normalOps[k] = dataOps[k] : normalOps[k] = k === title ? getAttribute(element, title) : v;\n  }), normalOps;\n}, ObjectHasOwn = (obj, prop) => isObject(obj) && (Object.hasOwn(obj, prop) || prop in obj), ObjectKeys = (obj) => Object.keys(obj), ObjectValues = (obj) => Object.values(obj), ObjectFromEntries = (entries) => Object.fromEntries(entries), createCustomEvent = (eventType, config) => {\n  const OriginalCustomEvent = new CustomEvent(eventType, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return isObject(config) && ObjectAssign(OriginalCustomEvent, config), OriginalCustomEvent;\n}, passiveHandler = { passive: !0 }, reflow = (element) => element.offsetHeight, setElementStyle = (element, styles) => {\n  ObjectEntries(styles).forEach(([key, value]) => {\n    if (value && isString(key) && key.includes(\"--\"))\n      element.style.setProperty(key, value);\n    else {\n      const propObject = {};\n      propObject[key] = value, ObjectAssign(element.style, propObject);\n    }\n  });\n}, isMap = (obj) => isObject(obj) && obj.constructor.name === \"Map\" || !1, isNumber = (num) => typeof num == \"number\" || !1, TimeCache = /* @__PURE__ */ new Map(), Timer = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (element, callback, delay, key) => {\n    isHTMLElement(element) && (key && key.length ? (TimeCache.has(element) || TimeCache.set(element, /* @__PURE__ */ new Map()), TimeCache.get(element).set(key, setTimeout(callback, delay))) : TimeCache.set(element, setTimeout(callback, delay)));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (element, key) => {\n    if (!isHTMLElement(element)) return null;\n    const keyTimers = TimeCache.get(element);\n    return key && keyTimers && isMap(keyTimers) ? keyTimers.get(key) || /* istanbul ignore next @preserve */\n    null : isNumber(keyTimers) ? keyTimers : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (element, key) => {\n    if (!isHTMLElement(element)) return;\n    const keyTimers = TimeCache.get(element);\n    key && key.length && isMap(keyTimers) ? (clearTimeout(keyTimers.get(key)), keyTimers.delete(key), keyTimers.size === 0 && TimeCache.delete(element)) : (clearTimeout(keyTimers), TimeCache.delete(element));\n  }\n}, toUpperCase = (source) => source.toUpperCase(), querySelectorAll = (selector, parent) => (isNode(parent) ? parent : getDocument()).querySelectorAll(selector), focusTrapMap = /* @__PURE__ */ new Map();\nfunction handleKeyboardNavigation(event) {\n  const { shiftKey, code } = event, doc = getDocument(this), focusableElements = [\n    ...querySelectorAll(focusableSelector, this)\n  ].filter(\n    (el) => !hasAttribute(el, \"disabled\") && !getAttribute(el, ariaHidden)\n  );\n  if (!focusableElements.length) return;\n  const firstFocusable = focusableElements[0], lastFocusable = focusableElements[focusableElements.length - 1];\n  code === \"Tab\" && (shiftKey && doc.activeElement === firstFocusable ? (lastFocusable.focus(), event.preventDefault()) : !shiftKey && doc.activeElement === lastFocusable && (firstFocusable.focus(), event.preventDefault()));\n}\nconst hasFocusTrap = (target) => focusTrapMap.has(target) === !0, toggleFocusTrap = (target) => {\n  const isCurrentlyTrapped = hasFocusTrap(target);\n  (isCurrentlyTrapped ? off : on)(target, \"keydown\", handleKeyboardNavigation), isCurrentlyTrapped ? focusTrapMap.delete(target) : focusTrapMap.set(target, !0);\n}, getBoundingClientRect = (element, includeScale) => {\n  const { width, height, top, right, bottom, left } = element.getBoundingClientRect();\n  let scaleX = 1, scaleY = 1;\n  if (includeScale && isHTMLElement(element)) {\n    const { offsetWidth: offsetWidth2, offsetHeight: offsetHeight2 } = element;\n    scaleX = offsetWidth2 > 0 ? Math.round(width) / offsetWidth2 : (\n      /* istanbul ignore next @preserve */\n      1\n    ), scaleY = offsetHeight2 > 0 ? Math.round(height) / offsetHeight2 : (\n      /* istanbul ignore next @preserve */\n      1\n    );\n  }\n  return {\n    width: width / scaleX,\n    height: height / scaleY,\n    top: top / scaleY,\n    right: right / scaleX,\n    bottom: bottom / scaleY,\n    left: left / scaleX,\n    x: left / scaleX,\n    y: top / scaleY\n  };\n}, getDocumentBody = (node) => getDocument(node).body, getDocumentElement = (node) => getDocument(node).documentElement, getDocumentHead = (node) => getDocument(node).head, getNodeScroll = (element) => {\n  const isWin = isWindow(element), x = isWin ? element.scrollX : element.scrollLeft, y = isWin ? element.scrollY : element.scrollTop;\n  return { x, y };\n}, isShadowRoot = (element) => isNode(element) && element.constructor.name === \"ShadowRoot\" || !1, getParentNode = (node) => node.nodeName === \"HTML\" ? node : isHTMLElement(node) && node.assignedSlot || // step into the shadow DOM of the parent of a slotted node\nisNode(node) && node.parentNode || // DOM Element detected\nisShadowRoot(node) && node.host || // ShadowRoot detected\ngetDocumentElement(node), isScaledElement = (element) => {\n  if (!isHTMLElement(element)) return !1;\n  const { width, height } = getBoundingClientRect(element), { offsetWidth: offsetWidth2, offsetHeight: offsetHeight2 } = element;\n  return Math.round(width) !== offsetWidth2 || Math.round(height) !== offsetHeight2;\n}, getRectRelativeToOffsetParent = (element, offsetParent, scroll) => {\n  const isParentAnElement = isHTMLElement(offsetParent), rect = getBoundingClientRect(\n    element,\n    isParentAnElement && isScaledElement(offsetParent)\n  ), offsets = { x: 0, y: 0 };\n  if (isParentAnElement) {\n    const offsetRect = getBoundingClientRect(offsetParent, !0);\n    offsets.x = offsetRect.x + offsetParent.clientLeft, offsets.y = offsetRect.y + offsetParent.clientTop;\n  }\n  return {\n    x: rect.left + scroll.x - offsets.x,\n    y: rect.top + scroll.y - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n};\nlet elementUID = 0, elementMapUID = 0;\nconst elementIDMap = /* @__PURE__ */ new Map(), getUID = (element, key) => {\n  let result = key ? elementUID : elementMapUID;\n  if (key) {\n    const elID = getUID(element), elMap = elementIDMap.get(elID) || /* @__PURE__ */ new Map();\n    elementIDMap.has(elID) || elementIDMap.set(elID, elMap), isMap(elMap) && !elMap.has(key) ? (elMap.set(key, result), elementUID += 1) : result = elMap.get(key);\n  } else {\n    const elkey = element.id || element;\n    elementIDMap.has(elkey) ? result = elementIDMap.get(elkey) : (elementIDMap.set(elkey, result), elementMapUID += 1);\n  }\n  return result;\n}, getWindow = (node) => node ? isDocument(node) ? node.defaultView : isNode(node) ? node?.ownerDocument?.defaultView : node : window, isArray = (obj) => Array.isArray(obj) || !1, isCanvas = (element) => isNode(element) && element.nodeName === \"CANVAS\" || !1, isCustomElement = (element) => isHTMLElement(element) && !!element.shadowRoot || !1, isElement = (element) => isNode(element) && [1, 2, 3, 4, 5, 6, 7, 8].some((x) => element.nodeType === x) || !1, isElementInScrollRange = (element) => {\n  if (!isNode(element)) return !1;\n  const { top, bottom } = getBoundingClientRect(element), { clientHeight } = getDocumentElement(element);\n  return top <= clientHeight && bottom >= 0;\n}, isElementInViewport = (element) => {\n  if (!isNode(element)) return !1;\n  const { clientWidth, clientHeight } = getDocumentElement(element), { top, left, bottom, right } = getBoundingClientRect(element, !0);\n  return top >= 0 && left >= 0 && bottom <= clientHeight && right <= clientWidth;\n}, isElementsArray = (obj) => isArray(obj) && obj.every(isHTMLElement) || !1, isFunction = (fn) => typeof fn == \"function\" || !1, isHTMLCollection = (obj) => isObject(obj) && obj.constructor.name === \"HTMLCollection\" || !1, isHTMLImageElement = (element) => isHTMLElement(element) && element.tagName === \"IMG\" || !1, isJSON = (str) => {\n  if (!isString(str)) return !1;\n  try {\n    JSON.parse(str);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, isWeakMap = (obj) => isObject(obj) && obj.constructor.name === \"WeakMap\" || !1, isMedia = (element) => isNode(element) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some(\n  (s) => element.constructor.name.includes(s)\n) || !1, isNodeList = (obj) => isObject(obj) && obj.constructor.name === \"NodeList\" || !1, isRTL = (node) => getDocumentElement(node).dir === \"rtl\", isSVGElement = (element) => isNode(element) && element.constructor.name.includes(\"SVG\") || !1, isTableElement = (element) => isNode(element) && [\"TABLE\", \"TD\", \"TH\"].includes(element.nodeName) || !1, closest = (element, selector) => element ? element.closest(selector) || // break out of `ShadowRoot`\nclosest(element.getRootNode().host, selector) : null, querySelector = (selector, parent) => isHTMLElement(selector) ? selector : (isNode(parent) ? parent : getDocument()).querySelector(selector), getElementsByTagName = (selector, parent) => (isNode(parent) ? parent : getDocument()).getElementsByTagName(\n  selector\n), getCustomElements = (parent) => [...getElementsByTagName(\"*\", parent)].filter(isCustomElement), getElementById = (id, context) => getDocument(context).getElementById(id) || null, getElementsByClassName = (selector, parent) => (parent && isNode(parent) ? parent : getDocument()).getElementsByClassName(\n  selector\n), matches = (target, selector) => target.matches(selector), version = \"2.0.7\";\nexport {\n  ArrayFrom,\n  DOMContentLoadedEvent,\n  DOMMouseScrollEvent,\n  Data,\n  Float32ArrayFrom,\n  Float64ArrayFrom,\n  ObjectAssign,\n  ObjectEntries,\n  ObjectFromEntries,\n  ObjectHasOwn,\n  ObjectKeys,\n  ObjectValues,\n  Timer,\n  abortEvent,\n  addClass,\n  addEventListener,\n  animationDelay,\n  animationDuration,\n  animationEndEvent,\n  animationName,\n  ariaChecked,\n  ariaDescribedBy,\n  ariaDescription,\n  ariaExpanded,\n  ariaHasPopup,\n  ariaHidden,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaModal,\n  ariaPressed,\n  ariaSelected,\n  ariaValueMax,\n  ariaValueMin,\n  ariaValueNow,\n  ariaValueText,\n  beforeunloadEvent,\n  bezierEasings,\n  blurEvent,\n  changeEvent,\n  closest,\n  contextmenuEvent,\n  createCustomEvent,\n  createElement,\n  createElementNS,\n  dispatchEvent,\n  distinct,\n  documentBody,\n  documentElement,\n  documentHead,\n  dragEvent,\n  dragendEvent,\n  dragenterEvent,\n  dragleaveEvent,\n  dragoverEvent,\n  dragstartEvent,\n  emulateAnimationEnd,\n  emulateTransitionEnd,\n  errorEvent,\n  focus,\n  focusEvent,\n  focusEvents,\n  focusableSelector,\n  focusinEvent,\n  focusoutEvent,\n  gesturechangeEvent,\n  gestureendEvent,\n  gesturestartEvent,\n  getAttribute,\n  getAttributeNS,\n  getBoundingClientRect,\n  getCustomElements,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getDocumentHead,\n  getElementAnimationDelay,\n  getElementAnimationDuration,\n  getElementById,\n  getElementStyle,\n  getElementTransitionDelay,\n  getElementTransitionDuration,\n  getElementsByClassName,\n  getElementsByTagName,\n  getInstance,\n  getNodeScroll,\n  getParentNode,\n  getRectRelativeToOffsetParent,\n  getUID,\n  getWindow,\n  hasAttribute,\n  hasAttributeNS,\n  hasClass,\n  hasFocusTrap,\n  isApple,\n  isArray,\n  isCanvas,\n  isCustomElement,\n  isDocument,\n  isElement,\n  isElementInScrollRange,\n  isElementInViewport,\n  isElementsArray,\n  isFirefox,\n  isFunction,\n  isHTMLCollection,\n  isHTMLElement,\n  isHTMLImageElement,\n  isJSON,\n  isMap,\n  isMedia,\n  isMobile,\n  isNode,\n  isNodeList,\n  isNumber,\n  isObject,\n  isRTL,\n  isSVGElement,\n  isScaledElement,\n  isShadowRoot,\n  isString,\n  isTableElement,\n  isWeakMap,\n  isWindow,\n  keyAlt,\n  keyArrowDown,\n  keyArrowLeft,\n  keyArrowRight,\n  keyArrowUp,\n  keyBackspace,\n  keyCapsLock,\n  keyControl,\n  keyDelete,\n  keyEnter,\n  keyEscape,\n  keyInsert,\n  keyMeta,\n  keyNumpadEnter,\n  keyPause,\n  keyScrollLock,\n  keyShift,\n  keySpace,\n  keyTab,\n  keyboardEventKeys,\n  keydownEvent,\n  keypressEvent,\n  keyupEvent,\n  loadEvent,\n  loadstartEvent,\n  matches,\n  mouseClickEvents,\n  mouseHoverEvents,\n  mouseSwipeEvents,\n  mouseclickEvent,\n  mousedblclickEvent,\n  mousedownEvent,\n  mouseenterEvent,\n  mousehoverEvent,\n  mouseinEvent,\n  mouseleaveEvent,\n  mousemoveEvent,\n  mouseoutEvent,\n  mouseoverEvent,\n  mouseupEvent,\n  mousewheelEvent,\n  moveEvent,\n  nativeEvents,\n  noop,\n  normalizeOptions,\n  normalizeValue,\n  off,\n  offsetHeight,\n  offsetWidth,\n  on,\n  one,\n  orientationchangeEvent,\n  passiveHandler,\n  pointercancelEvent,\n  pointerdownEvent,\n  pointerleaveEvent,\n  pointermoveEvent,\n  pointerupEvent,\n  querySelector,\n  querySelectorAll,\n  readystatechangeEvent,\n  reflow,\n  removeAttribute,\n  removeAttributeNS,\n  removeClass,\n  removeEventListener,\n  resetEvent,\n  resizeEvent,\n  scrollEvent,\n  scrollHeight,\n  scrollWidth,\n  selectEvent,\n  selectendEvent,\n  selectstartEvent,\n  setAttribute,\n  setAttributeNS,\n  setElementStyle,\n  submitEvent,\n  support3DTransform,\n  supportAnimation,\n  supportPassive,\n  supportTouch,\n  supportTransform,\n  supportTransition,\n  tabindex,\n  toLowerCase,\n  toUpperCase,\n  toggleFocusTrap,\n  touchEvents,\n  touchcancelEvent,\n  touchendEvent,\n  touchmoveEvent,\n  touchstartEvent,\n  transitionDelay,\n  transitionDuration,\n  transitionEndEvent,\n  transitionProperty,\n  unloadEvent,\n  userAgent,\n  userAgentData,\n  version\n};\n//# sourceMappingURL=shorty.mjs.map\n","const e = {}, f = (t) => {\n  const { type: c, currentTarget: i } = t;\n  [...e[c]].forEach(([n, s]) => {\n    /* istanbul ignore else @preserve */\n    i === n && [...s].forEach(([o, a]) => {\n      o.apply(n, [t]), typeof a == \"object\" && a.once && r(n, c, o, a);\n    });\n  });\n}, E = (t, c, i, n) => {\n  /* istanbul ignore else @preserve */\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const s = e[c];\n  /* istanbul ignore else @preserve */\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(t), { size: a } = o;\n  o.set(i, n);\n  /* istanbul ignore else @preserve */\n  a || t.addEventListener(c, f, n);\n}, r = (t, c, i, n) => {\n  const s = e[c], o = s && s.get(t), a = o && o.get(i), d = a !== void 0 ? a : n;\n  /* istanbul ignore else @preserve */\n  o && o.has(i) && o.delete(i);\n  /* istanbul ignore else @preserve */\n  s && (!o || !o.size) && s.delete(t);\n  /* istanbul ignore else @preserve */\n  (!s || !s.size) && delete e[c];\n  /* istanbul ignore else @preserve */\n  (!o || !o.size) && t.removeEventListener(\n    c,\n    f,\n    d\n  );\n}, g = E, M = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  r as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = \"fade\";\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = \"show\";\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = \"data-bs-dismiss\";\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = \"alert\";\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = \"Alert\";\nexport default alertComponent;\n","import { version } from \"../package.json\";\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport {\n  Data,\n  isHTMLElement,\n  isString,\n  normalizeOptions,\n  ObjectKeys,\n  querySelector,\n} from \"@thednp/shorty\";\n\nimport type { BaseOptions } from \"../interface/baseComponent\";\nimport Version from \"../version\";\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: HTMLElement;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    let element: HTMLElement | null;\n\n    try {\n      if (isHTMLElement(target)) {\n        element = target;\n      } else if (isString(target)) {\n        element = querySelector<HTMLElement>(target);\n        // istanbul ignore else @preserve\n        if (!element) throw Error(`\"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`your target is not an instance of HTMLElement.`);\n      }\n    } catch (e) {\n      throw Error(`${this.name} Error: ${(e as Error).message}`);\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    // istanbul ignore else @preserve\n    if (prevInstance) {\n      // remove previously attached event listeners\n      // to avoid memory leaks\n      prevInstance._toggleEventListeners();\n    }\n\n    this.element = element;\n    this.options = this.defaults && ObjectKeys(this.defaults).length\n      ? normalizeOptions(element, this.defaults, config || {}, \"bs\")\n      // istanbul ignore next @preserve\n      : {};\n\n    Data.set(element, this.name, this);\n  }\n\n  // istanbul ignore next @preserve\n  get version() {\n    return Version;\n  }\n\n  // istanbul ignore next @preserve\n  get name() {\n    return \"BaseComponent\";\n  }\n\n  // istanbul ignore next @preserve\n  get defaults() {\n    return {};\n  }\n\n  /** just to have something to extend from */\n  // istanbul ignore next @preserve coverage wise this isn't important\n  _toggleEventListeners = () => {\n    // do something to please linters\n  };\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove<typeof this>(this.element, this.name);\n    ObjectKeys(this).forEach((prop) => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  querySelector,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport alertString from \"../strings/alertString\";\nimport alertComponent from \"../strings/alertComponent\";\nimport type { AlertEvent } from \"../interface/alert\";\n\nimport BaseComponent from \"./base-component\";\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n */\nconst getAlertInstance = (element: HTMLElement) =>\n  getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = (element: HTMLElement) => new Alert(element);\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<Record<string, never>, AlertEvent>(\n  `close.bs.${alertString}`,\n);\nconst closedAlertEvent = createCustomEvent<Record<string, never>, AlertEvent>(\n  `closed.bs.${alertString}`,\n);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (self: Alert) => {\n  const { element } = self;\n  dispatchEvent(element, closedAlertEvent);\n\n  self._toggleEventListeners();\n  self.dispose();\n  element.remove();\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    // istanbul ignore else @preserve\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n\n      if (!closeAlertEvent.defaultPrevented) {\n        removeClass(element, showClass);\n\n        if (hasClass(element, fadeClass)) {\n          emulateTransitionEnd(element, () => alertTransitionEnd(this));\n        } else alertTransitionEnd(this);\n      }\n    }\n  };\n  /**\n   * Toggle on / off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { dismiss, close } = this;\n    // istanbul ignore else @preserve\n    if (dismiss) action(dismiss, mouseclickEvent, close);\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = \"active\";\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = \"data-bs-toggle\";\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = \"button\";\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = \"Button\";\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  addClass,\n  ariaPressed,\n  getAttribute,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  removeClass,\n  setAttribute,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport activeClass from \"../strings/activeClass\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport buttonString from \"../strings/buttonString\";\nimport buttonComponent from \"../strings/buttonComponent\";\n\nimport BaseComponent from \"./base-component\";\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) =>\n  getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e?: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, \"disabled\") && !getAttribute(element, \"disabled\")) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? \"false\" : \"true\");\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  // BUTTON PRIVATE METHOD\n  // =====================\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, this.toggle);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = \"data-bs-target\";\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = \"carousel\";\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = \"Carousel\";\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = \"data-bs-parent\";\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = \"data-bs-container\";\nexport default dataBsContainer;\n","import {\n  closest,\n  getAttribute,\n  getDocument,\n  querySelector,\n} from \"@thednp/shorty\";\n\nimport dataBsTarget from \"../strings/dataBsTarget\";\nimport dataBsParent from \"../strings/dataBsParent\";\nimport dataBsContainer from \"../strings/dataBsContainer\";\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, \"href\"];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map((att) => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent\n          ? closest(element, attValue)\n          : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter((x) => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  addClass,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  dragstartEvent,\n  emulateTransitionEnd,\n  getAttribute,\n  getDocument,\n  getElementsByClassName,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  isElementInScrollRange,\n  isHTMLElement,\n  isRTL,\n  keyArrowLeft,\n  keyArrowRight,\n  keydownEvent,\n  matches,\n  mouseclickEvent,\n  mouseenterEvent,\n  mouseleaveEvent,\n  ObjectAssign,\n  passiveHandler,\n  pointerdownEvent,\n  pointermoveEvent,\n  pointerupEvent,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  Timer,\n  touchstartEvent,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport activeClass from \"../strings/activeClass\";\nimport dataBsTarget from \"../strings/dataBsTarget\";\nimport carouselString from \"../strings/carouselString\";\nimport carouselComponent from \"../strings/carouselComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { CarouselEvent, CarouselOptions } from \"../interface/carousel\";\n\ntype CarouselEventProperties = {\n  relatedTarget: HTMLElement;\n  from: number;\n  to: number;\n  direction: \"left\" | \"right\";\n};\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = \"data-bs-slide-to\";\nconst dataBsSlide = \"data-bs-slide\";\nconst pausedClass = \"paused\";\n\nconst carouselDefaults: CarouselOptions = {\n  pause: \"hover\",\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) =>\n  getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<\n  CarouselEventProperties,\n  CarouselEvent\n>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<\n  CarouselEventProperties,\n  CarouselEvent\n>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  // istanbul ignore else @preserve\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === \"left\" ? \"next\" : \"prev\";\n    const directionClass = direction === \"left\" ? \"start\" : \"end\";\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (\n      self.cycle && !getDocument(element).hidden && options.interval &&\n      !self.isPaused\n    ) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  const self = getCarouselInstance(this);\n  // istanbul ignore else @preserve\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  const self = getCarouselInstance(this);\n  // istanbul ignore else @preserve\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element =\n    (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating) {\n    const newIndex = +(\n      getAttribute(this, dataBsSlideTo) ||\n      // istanbul ignore next @preserve\n      0\n    );\n\n    // istanbul ignore else @preserve\n    if (\n      this &&\n      !hasClass(this, activeClass) && // event target is not active\n      !Number.isNaN(newIndex)\n    ) {\n      // AND has the specific attribute\n      self.to(newIndex); // do the slide\n    }\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) ||\n    (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating) {\n    const orientation = getAttribute(this, dataBsSlide);\n\n    // istanbul ignore else @preserve\n    if (orientation === \"next\") {\n      self.next();\n    } else if (orientation === \"prev\") {\n      self.prev();\n    }\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = (\n  { code, target }: KeyboardEvent & { target: Node },\n) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter((x) =>\n    isElementInScrollRange(x)\n  );\n  const self = getCarouselInstance(element);\n\n  // istanbul ignore next @preserve\n  if (self && !self.isAnimating && !/textarea|input/i.test(target.nodeName)) {\n    const RTL = isRTL(element);\n    const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n    const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n    // istanbul ignore else @preserve\n    if (code === arrowKeyPrev) self.prev();\n    else if (code === arrowKeyNext) self.next();\n  }\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  // istanbul ignore next @preserve\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) ||\n      !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  // istanbul ignore else @preserve\n  if (self && !self.isAnimating && !self.isTouch) {\n    // filter pointer event on controls & indicators\n    const { controls, indicators } = self;\n    // istanbul ignore else @preserve\n    if (\n      ![...controls, ...indicators].every((el) =>\n        el === target || el.contains(target as Node)\n      )\n    ) {\n      startX = e.pageX;\n\n      // istanbul ignore else @preserve\n      if (this.contains(target as Node)) {\n        self.isTouch = true;\n        toggleCarouselTouchHandlers(self, true);\n      }\n    }\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map((c) => getCarouselInstance(c) as Carousel)\n    .find((i) => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  // istanbul ignore else @preserve\n  if (self) {\n    const { element, index } = self;\n    const RTL = isRTL(element);\n    endX = e.pageX;\n\n    self.isTouch = false;\n    toggleCarouselTouchHandlers(self);\n\n    if (\n      !doc.getSelection()?.toString().length &&\n      element.contains(target as HTMLElement) &&\n      Math.abs(startX - endX) > 120\n    ) {\n      // determine next index to slide to\n      // istanbul ignore else @preserve\n      if (currentX < startX) {\n        self.to(index + (RTL ? -1 : 1));\n      } else if (currentX > startX) {\n        self.to(index + (RTL ? 1 : -1));\n      }\n    }\n\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n  }\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach((x) => removeClass(x, activeClass));\n\n  // istanbul ignore else @preserve\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(\n    getDocument(element),\n    pointermoveEvent,\n    carouselPointerMoveHandler,\n    passiveHandler,\n  );\n  action(\n    getDocument(element),\n    pointerupEvent,\n    carouselPointerUpHandler,\n    passiveHandler,\n  );\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: \"right\" | \"left\";\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? \"right\" : \"left\";\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length >= 2) {\n      const activeIndex = getActiveIndex(this);\n      // recover item from disposed instance\n      const transitionItem = [...slides].find((s) =>\n        matches(s, `.${carouselItem}-next,.${carouselItem}-next`)\n      );\n      this.index = activeIndex;\n\n      // external controls must be within same document context\n      const doc = getDocument(element);\n\n      this.controls = [\n        ...querySelectorAll(`[${dataBsSlide}]`, element),\n        ...querySelectorAll(\n          `[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`,\n          doc,\n        ),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n      // a LIVE collection is prefferable\n      this.indicators = [\n        ...(this.indicator\n          ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator)\n          // istanbul ignore next @preserve\n          : []),\n        ...querySelectorAll(\n          `[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`,\n          doc,\n        ),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      // set JavaScript and DATA API options\n      const { options } = this;\n\n      // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n      this.options.interval = options.interval === true\n        ? carouselDefaults.interval\n        : options.interval;\n\n      // set first slide active if none\n      // istanbul ignore next @preserve - impossible to test\n      if (transitionItem) {\n        this.index = [...slides].indexOf(transitionItem);\n      } else if (activeIndex < 0) {\n        this.index = 0;\n        addClass(slides[0], activeClass);\n        if (this.indicators.length) activateCarouselIndicator(this, 0);\n      }\n\n      // istanbul ignore else @preserve\n      if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n      // attach event handlers\n      this._toggleEventListeners(true);\n\n      // start to cycle if interval is set\n      if (options.interval) this.cycle();\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(\n      `.${carouselItem}-next,.${carouselItem}-prev`,\n      this.element,\n    ) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        // istanbul ignore else @preserve\n        if (\n          this.element && !this.isPaused && !this.isTouch &&\n          isElementInScrollRange(element)\n        ) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    // istanbul ignore else @preserve\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    // istanbul ignore else @preserve\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    // istanbul ignore else @preserve\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (\n      !this.isAnimating && activeItem !== next &&\n      !Timer.get(element, dataBsSlide)\n    ) {\n      // determine transition direction\n      // istanbul ignore else @preserve\n      if (\n        activeItem < next || (activeItem === 0 && next === slides.length - 1)\n      ) {\n        this.direction = RTL ? \"right\" : \"left\"; // next\n      } else if (\n        activeItem > next || (activeItem === slides.length - 1 && next === 0)\n      ) {\n        this.direction = RTL ? \"left\" : \"right\"; // prev\n      }\n      const { direction } = this;\n\n      // find the right next index\n      if (next < 0) {\n        next = slides.length - 1;\n      } else if (next >= slides.length) {\n        next = 0;\n      }\n\n      // orientation, class name, eventProperties\n      const orientation = direction === \"left\" ? \"next\" : \"prev\";\n      const directionClass = direction === \"left\" ? \"start\" : \"end\";\n\n      const eventProperties = {\n        relatedTarget: slides[next],\n        from: activeItem,\n        to: next,\n        direction,\n      };\n\n      // update event properties\n      ObjectAssign(carouselSlideEvent, eventProperties);\n      ObjectAssign(carouselSlidEvent, eventProperties);\n\n      // discontinue when prevented\n      dispatchEvent(element, carouselSlideEvent);\n      if (!carouselSlideEvent.defaultPrevented) {\n        // update index\n        this.index = next;\n        activateCarouselIndicator(this, next);\n\n        if (\n          getElementTransitionDuration(slides[next]) &&\n          hasClass(element, \"slide\")\n        ) {\n          Timer.set(\n            element,\n            () => {\n              addClass(slides[next], `${carouselItem}-${orientation}`);\n              reflow(slides[next]);\n              addClass(slides[next], `${carouselItem}-${directionClass}`);\n              addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n              // the instance might get diposed mid-animation\n              emulateTransitionEnd(\n                slides[next],\n                () =>\n                  this.slides && this.slides.length &&\n                  carouselTransitionEndHandler(this),\n              );\n            },\n            0,\n            dataBsSlide,\n          );\n        } else {\n          addClass(slides[next], activeClass);\n          removeClass(slides[activeItem], activeClass);\n\n          Timer.set(\n            element,\n            () => {\n              Timer.clear(element, dataBsSlide);\n              // check for element, might have been disposed\n              // istanbul ignore else @preserve\n              if (element && options.interval && !this.isPaused) {\n                this.cycle();\n              }\n\n              dispatchEvent(element, carouselSlidEvent);\n            },\n            0,\n            dataBsSlide,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles all event listeners for the `Carousel` instance.\n   *\n   * @param add when `TRUE` event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const { element, options, slides, controls, indicators } = this;\n    const { touch, pause, interval, keyboard } = options;\n    const action = add ? addListener : removeListener;\n\n    if (pause && interval) {\n      action(element, mouseenterEvent, carouselPauseHandler);\n      action(element, mouseleaveEvent, carouselResumeHandler);\n    }\n\n    if (touch && slides.length > 2) {\n      action(\n        element,\n        pointerdownEvent,\n        carouselPointerDownHandler,\n        passiveHandler,\n      );\n      action(element, touchstartEvent, carouselDragHandler, { passive: false });\n      action(element, dragstartEvent, carouselDragHandler, { passive: false });\n    }\n\n    // istanbul ignore else @preserve\n    if (controls.length) {\n      controls.forEach((arrow) => {\n        // istanbul ignore else @preserve\n        if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler);\n      });\n    }\n\n    // istanbul ignore else @preserve\n    if (indicators.length) {\n      indicators.forEach((indicator) => {\n        action(indicator, mouseclickEvent, carouselIndicatorHandler);\n      });\n    }\n\n    if (keyboard) {\n      action(getDocument(element), keydownEvent, carouselKeyHandler);\n    }\n  };\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    this._toggleEventListeners();\n    super.dispose();\n\n    // istanbul ignore next @preserve - impossible to test in playwright\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = \"collapsing\";\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = \"collapse\";\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = \"Collapse\";\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getDocument,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isString,\n  mouseclickEvent,\n  noop,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport collapsingClass from \"../strings/collapsingClass\";\nimport showClass from \"../strings/showClass\";\nimport collapseString from \"../strings/collapseString\";\nimport collapseComponent from \"../strings/collapseComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { CollapseEvent, CollapseOptions } from \"../interface/collapse\";\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) =>\n  getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<\n  Record<string, never>,\n  CollapseEvent\n>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach((btn) => setAttribute(btn, ariaExpanded, \"true\"));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: \"\" });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element);\n    setElementStyle(element, { height: \"0px\" });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      // istanbul ignore else @preserve\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach((btn) => setAttribute(btn, ariaExpanded, \"false\"));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: \"\" });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target &&\n    closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  // istanbul ignore else @preserve\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === \"A\") e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent, doc)\n      : null;\n\n    // add event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    // istanbul ignore else @preserve\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach((btn) => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [\n        ...querySelectorAll(`.${collapseString}.${showClass}`, parent),\n      ].find((i) => getCollapseInstance(i));\n      activeCollapseInstance = activeCollapse &&\n        getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach((btn) => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      // istanbul ignore else @preserve\n      if (triggers.length) {\n        triggers.forEach((btn) => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /**\n   * Toggles on/off the event listener(s) of the `Collapse` instance.\n   *\n   * @param add when `true`, the event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) =>\n        action(btn, mouseclickEvent, collapseClickHandler)\n      );\n    }\n  };\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    this._toggleEventListeners();\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = [\"dropdown\", \"dropup\", \"dropstart\", \"dropend\"];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = \"Dropdown\";\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = \"dropdown-menu\";\nexport default dropdownMenuClass;\n","import { closest, getAttribute, hasAttribute } from \"@thednp/shorty\";\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, \"A\");\n  return (\n    (element.tagName === \"A\" &&\n      // anchor href starts with #\n      hasAttribute(element, \"href\") &&\n      (getAttribute(element, \"href\") as string).slice(-1) === \"#\") ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, \"href\") &&\n      (getAttribute(parentAnchor, \"href\") as string).slice(-1) === \"#\")\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  addClass,\n  ariaExpanded,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  focus,\n  focusEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  keyArrowDown,\n  keyArrowUp,\n  keydownEvent,\n  keyEscape,\n  keyupEvent,\n  mouseclickEvent,\n  mousedownEvent,\n  ObjectAssign,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport showClass from \"../strings/showClass\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dropdownClasses from \"../strings/dropdownClasses\";\nimport dropdownComponent from \"../strings/dropdownComponent\";\nimport dropdownMenuClass from \"../strings/dropdownMenuClass\";\n\nimport isEmptyAnchor from \"../util/isEmptyAnchor\";\nimport BaseComponent from \"./base-component\";\nimport type { DropdownEvent, DropdownOptions } from \"../interface/dropdown\";\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] =\n  dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) =>\n  getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = [\"A\", \"BUTTON\"];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: \"dynamic\", // [dynamic|static]\n};\n\ntype DropdownEventProps = { relatedTarget: HTMLElement };\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `show.bs.${dropdownString}`,\n);\nconst shownDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `shown.bs.${dropdownString}`,\n);\nconst hideDropdownEvent = createCustomEvent<DropdownEventProps, DropdownEvent>(\n  `hide.bs.${dropdownString}`,\n);\nconst hiddenDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<\n  DropdownEventProps,\n  DropdownEvent\n>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  // istanbul ignore else @preserve: this test requires a navbar\n  if (getElementStyle(menu, \"position\") !== \"static\") {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = [\"margin\", \"top\", \"bottom\", \"left\", \"right\"];\n    resetProps.forEach((p) => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = \"\";\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass = dropdownClasses.find((c) =>\n      hasClass(parentElement, c)\n    ) ||\n      // istanbul ignore next @preserve: fallback position\n      dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: \"100%\" },\n      dropup: { top: \"auto\", bottom: \"100%\" },\n      dropstart: RTL\n        ? { left: \"100%\", right: \"auto\" }\n        : { left: \"auto\", right: \"100%\" },\n      dropend: RTL\n        ? { left: \"auto\", right: \"100%\" }\n        : { left: \"100%\", right: \"auto\" },\n      menuStart: RTL\n        ? { right: \"0\", left: \"auto\" }\n        : { right: \"auto\", left: \"0\" },\n      menuEnd: RTL\n        ? { right: \"auto\", left: \"0\" }\n        : { right: \"0\", left: \"auto\" },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed =\n      targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed =\n      targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) &&\n      targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) &&\n      targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (\n      horizontalClass.includes(positionClass) && leftFullExceed &&\n      rightFullExceed\n    ) {\n      positionClass = dropdownString;\n    }\n    if (\n      positionClass === dropstartString &&\n      (!RTL ? leftFullExceed : rightFullExceed)\n    ) {\n      positionClass = dropendString;\n    }\n    if (\n      positionClass === dropendString &&\n      (RTL ? leftFullExceed : rightFullExceed)\n    ) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: \"auto\",\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust:\n        | { left: \"auto\" | number; right: \"auto\" | number }\n        | undefined = { left: \"auto\", right: \"auto\" };\n      // istanbul ignore else @preserve\n      if (!leftExceed && rightExceed && !RTL) {\n        posAjust = { left: \"auto\", right: 0 };\n      }\n      // istanbul ignore else @preserve\n      if (leftExceed && !rightExceed && RTL) {\n        posAjust = { left: 0, right: \"auto\" };\n      }\n      // istanbul ignore else @preserve\n      if (posAjust) {\n        ObjectAssign(dropdownPosition[positionClass], posAjust);\n      }\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map((x) => (x ? `${x}px` : x)).join(\" \")}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      // istanbul ignore else @preserve\n      if (menuEnd) {\n        const endAdjust = (!RTL && leftExceed) || (RTL && rightExceed)\n          ? \"menuStart\"\n          // istanbul ignore next @preserve\n          : \"menuEnd\";\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map((c) => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (\n        firstElementChild && menuFocusTags.includes(firstElementChild.tagName)\n      ) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter((c) => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options, menu } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  // istanbul ignore else @preserve\n  if (options.display === \"dynamic\") {\n    if (self.open) self._observer.observe(menu);\n    else self._observer.disconnect();\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (\n  element: HTMLElement,\n): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, \"btn-group\", \"input-group\"]\n    .map((c) =>\n      getElementsByClassName(`${c} ${showClass}`, getDocument(element))\n    )\n    .find((x) => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)]\n      .find((x) =>\n        dropdownClasses.some((c) => c === getAttribute(x, dataBsToggle))\n      );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  // istanbul ignore else @preserve\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    // istanbul ignore else @preserve\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm = parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === \"form\" || closest(target, \"form\") !== null);\n\n      if (\n        [mouseclickEvent, mousedownEvent].includes(type) &&\n        isEmptyAnchor(target)\n      ) {\n        e.preventDefault();\n      }\n\n      // istanbul ignore else @preserve\n      if (\n        !isForm && type !== focusEvent && target !== element && target !== menu\n      ) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    e.stopPropagation();\n    self.toggle();\n    // istanbul ignore else @preserve\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  // istanbul ignore else @preserve\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  // istanbul ignore else @preserve\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (\n      menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)\n    ) {\n      let idx = menuItems.indexOf(activeElement);\n      // istanbul ignore else @preserve\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      // istanbul ignore else @preserve\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownIntersectionHandler(target: HTMLElement) {\n  const element = getCurrentOpenDropdown(target);\n  const self = element && getDropdownInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n  declare _observer: IntersectionObserver;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(\n      dropdownMenuClass,\n      parentElement as ParentNode,\n    );\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n      this._observer = new IntersectionObserver(\n        ([entry]) => dropdownIntersectionHandler(entry.target as HTMLElement),\n        { threshold: 1 },\n      );\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore else @preserve\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement &&\n        getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(\n        (e) => {\n          e.relatedTarget = element;\n        },\n      );\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, \"true\");\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    // istanbul ignore else @preserve\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach((e) => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, \"false\");\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = \"modal\";\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = \"Modal\";\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = \"Offcanvas\";\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = \"fixed-top\";\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = \"fixed-bottom\";\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = \"sticky-top\";\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = \"position-sticky\";\nexport default positionStickyClass;\n","import {\n  getDocumentBody,\n  getDocumentElement,\n  getElementsByClassName,\n  getElementStyle,\n  getWindow,\n  hasClass,\n  setElementStyle,\n} from \"@thednp/shorty\";\n\nimport fixedTopClass from \"../strings/fixedTopClass\";\nimport fixedBottomClass from \"../strings/fixedBottomClass\";\nimport stickyTopClass from \"../strings/stickyTopClass\";\nimport positionStickyClass from \"../strings/positionStickyClass\";\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName(\"is-fixed\", parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: \"\",\n    overflow: \"\",\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore else @preserve\n  if (fixedItems.length) {\n    fixedItems.forEach((fixed) => {\n      setElementStyle(fixed, {\n        paddingRight: \"\",\n        marginRight: \"\",\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, \"paddingRight\"), 10);\n  const isOpen = getElementStyle(bd, \"overflow\") === \"hidden\";\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  // istanbul ignore else @preserve\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: \"hidden\",\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    // istanbul ignore else @preserve\n    if (fixedItems.length) {\n      fixedItems.forEach((fixed) => {\n        const itemPadValue = getElementStyle(fixed, \"paddingRight\");\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        // istanbul ignore else @preserve\n        if (\n          [stickyTopClass, positionStickyClass].some((c) => hasClass(fixed, c))\n        ) {\n          const itemMValue = getElementStyle(fixed, \"marginRight\");\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = \"offcanvas\";\nexport default offcanvasString;\n","import { createElement, getDocumentBody, isNode } from \"@thednp/shorty\";\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({\n  tagName: \"div\",\n  className: \"popup-container\",\n}) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) &&\n    customContainer.nodeName === \"BODY\";\n  const lookup = isNode(customContainer) && !containerIsBody\n    ? customContainer\n    : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  // istanbul ignore else @preserve\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) &&\n    customContainer.nodeName === \"BODY\";\n  const lookup = isNode(customContainer) && !containerIsBody\n    ? customContainer\n    : popupContainer;\n\n  // istanbul ignore else @preserve\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== \"BODY\"\n    ? customContainer\n    : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { appendPopup, hasPopup, popupContainer, removePopup };\n","import {\n  addClass,\n  createElement,\n  getDocument,\n  getDocumentBody,\n  hasClass,\n  querySelector,\n  reflow,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport modalString from \"../strings/modalString\";\nimport offcanvasString from \"../strings/offcanvasString\";\nimport { resetScrollbar } from \"./scrollbar\";\nimport { appendPopup, removePopup } from \"./popupContainer\";\n\nconst backdropString = \"backdrop\";\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement(\"div\") as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(\n    `${modalActiveSelector},${offcanvasActiveSelector}`,\n    getDocument(element),\n  );\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach((c) => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (\n  element: HTMLElement,\n  hasFade: boolean,\n  isModal?: boolean,\n) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  modalBackdropClass,\n  offcanvasActiveSelector,\n  offcanvasBackdropClass,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n};\n","import { getElementStyle, isHTMLElement } from \"@thednp/shorty\";\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) &&\n    getElementStyle(element, \"visibility\") !== \"hidden\" &&\n    element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  addClass,\n  ariaHidden,\n  ariaModal,\n  closest,\n  createCustomEvent,\n  CSS4Declaration,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  isRTL,\n  KeyboardEvent,\n  keydownEvent,\n  keyEscape,\n  mouseclickEvent,\n  MouseEvent,\n  querySelector,\n  querySelectorAll,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  Timer,\n  toggleFocusTrap,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport modalString from \"../strings/modalString\";\nimport modalComponent from \"../strings/modalComponent\";\nimport offcanvasComponent from \"../strings/offcanvasComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport { measureScrollbar, setScrollbar } from \"../util/scrollbar\";\nimport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  modalActiveSelector,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n} from \"../util/backdrop\";\nimport isVisible from \"../util/isVisible\";\nimport BaseComponent from \"./base-component\";\nimport { ModalEvent, ModalOptions } from \"../interface/modal\";\nimport { hasPopup } from \"../util/popupContainer\";\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\ntype ModalEventProps = {\n  relatedTarget: HTMLElement | undefined;\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) =>\n  getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `show.bs.${modalString}`,\n);\nconst shownModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `shown.bs.${modalString}`,\n);\nconst hideModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `hide.bs.${modalString}`,\n);\nconst hiddenModalEvent = createCustomEvent<ModalEventProps, ModalEvent>(\n  `hidden.bs.${modalString}`,\n);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } =\n    element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  // istanbul ignore next @preserve: impossible to test?\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element)\n      ? \"paddingRight\"\n      // istanbul ignore next @preserve\n      : \"paddingLeft\";\n    const padStyle = { [pad]: `${scrollbarWidth}px` } as Partial<\n      CSS4Declaration\n    >;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n\n  if (add) self._observer.observe(element);\n  else self._observer.disconnect();\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: \"\", display: \"\" });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  // istanbul ignore else @preserve\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n  toggleFocusTrap(element);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n  toggleFocusTrap(element);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: \"block\" });\n  setModalScrollbar(self);\n  // istanbul ignore else @preserve\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: \"hidden\" });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, \"true\");\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (\n    options.backdrop && hasFade && hasClass(overlay, showClass) &&\n    !getCurrentOpen(element)\n  ) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n\n  const trigger = target && closest(target, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    // istanbul ignore else @preserve\n    if (trigger && trigger.tagName === \"A\") e.preventDefault();\n    self.relatedTarget = trigger;\n    self.toggle();\n  }\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent<HTMLElement>) => {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    const { options } = self;\n    // istanbul ignore else @preserve\n    if (\n      options.keyboard &&\n      code === keyEscape && // the keyboard option is enabled and the key is 27\n      hasClass(element, showClass)\n    ) {\n      // the modal is not visible\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nconst modalDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { currentTarget } = e;\n  const self = currentTarget && getModalInstance(currentTarget);\n\n  // this timer is needed\n  // istanbul ignore else @preserve\n  if (self && currentTarget && !Timer.get(currentTarget)) {\n    const { options, isStatic, modalDialog } = self;\n    const { backdrop } = options;\n    const { target } = e;\n\n    const selectedText = getDocument(currentTarget)?.getSelection()?.toString()\n      .length;\n    const targetInsideDialog = modalDialog.contains(target);\n    const dismiss = target && closest(target, modalDismissSelector);\n\n    // istanbul ignore else @preserve\n    if (isStatic && !targetInsideDialog) {\n      Timer.set(\n        currentTarget,\n        () => {\n          addClass(currentTarget, modalStaticClass);\n          emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n        },\n        17,\n      );\n    } else if (\n      dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)\n    ) {\n      self.relatedTarget = dismiss || null;\n      self.hide();\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n  declare _observer: ResizeObserver;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    // istanbul ignore else @preserve\n    if (modalDialog) {\n      this.modalDialog = modalDialog;\n      // modal can have multiple triggering elements\n      this.triggers = [\n        ...querySelectorAll(modalToggleSelector, getDocument(element)),\n      ].filter(\n        (btn) => getTargetElement(btn) === element,\n      );\n\n      // additional internals\n      this.isStatic = this.options.backdrop === \"static\";\n      this.hasFade = hasClass(element, fadeClass);\n      this.relatedTarget = null;\n      this._observer = new ResizeObserver(() => this.update());\n\n      // attach event listeners\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    // istanbul ignore else @preserve\n    if (!hasClass(element, showClass)) {\n      showModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showModalEvent);\n      if (!showModalEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n\n        // istanbul ignore else @preserve\n        if (currentOpen && currentOpen !== element) {\n          const that = getModalInstance(currentOpen) ||\n            // istanbul ignore next @preserve\n            getInstance<typeof BaseComponent & { hide: () => void }>(\n              currentOpen,\n              offcanvasComponent,\n            );\n          // istanbul ignore else @preserve\n          if (that) that.hide();\n        }\n        if (backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, hasFade, true);\n          } else {\n            toggleOverlayType(true);\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeModalShow(this), overlayDelay);\n        } else {\n          beforeModalShow(this);\n          // istanbul ignore else @preserve\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    // istanbul ignore else @preserve\n    if (hasClass(element, showClass)) {\n      hideModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideModalEvent);\n\n      // istanbul ignore else @preserve\n      if (!hideModalEvent.defaultPrevented) {\n        removeClass(element, showClass);\n        setAttribute(element, ariaHidden, \"true\");\n        removeAttribute(element, ariaModal);\n\n        if (hasFade) {\n          emulateTransitionEnd(element, () => beforeModalHide(this));\n        } else {\n          beforeModalHide(this);\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    // istanbul ignore else @preserve\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener of the `Modal` instance.\n   *\n   * @param add when `true`, event listener(s) is/are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) =>\n        action(btn, mouseclickEvent, modalClickHandler)\n      );\n    }\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { modalDialog, hasFade } = clone;\n    const callback = () => setTimeout(() => super.dispose(), 17);\n\n    this.hide();\n    this._toggleEventListeners();\n\n    if (hasFade) {\n      // use transitionend callback\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  addClass,\n  ariaHidden,\n  ariaModal,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementTransitionDuration,\n  getInstance,\n  hasClass,\n  keydownEvent,\n  keyEscape,\n  mouseclickEvent,\n  querySelector,\n  querySelectorAll,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  setElementStyle,\n  toggleFocusTrap,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport showClass from \"../strings/showClass\";\nimport offcanvasString from \"../strings/offcanvasString\";\nimport offcanvasComponent from \"../strings/offcanvasComponent\";\nimport modalComponent from \"../strings/modalComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport isVisible from \"../util/isVisible\";\nimport { setScrollbar } from \"../util/scrollbar\";\nimport { hasPopup } from \"../util/popupContainer\";\nimport {\n  appendOverlay,\n  getCurrentOpen,\n  hideOverlay,\n  offcanvasActiveSelector,\n  overlay,\n  removeOverlay,\n  showOverlay,\n  toggleOverlayType,\n} from \"../util/backdrop\";\nimport BaseComponent from \"./base-component\";\nimport { OffcanvasEvent, OffcanvasOptions } from \"../interface/offcanvas\";\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\ntype OffCanvasEventProps = {\n  relatedTarget: HTMLElement | undefined;\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) =>\n  getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<\n  OffCanvasEventProps,\n  OffcanvasEvent\n>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  // istanbul ignore else @preserve\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: \"hidden\" });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: \"visible\" });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n  }\n  emulateTransitionEnd(element, () => hideOffcanvasComplete(self));\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    // istanbul ignore else @preserve\n    if (trigger && trigger.tagName === \"A\") {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(\n    offcanvasActiveSelector,\n    getDocument(target as Node),\n  );\n  const offCanvasDismiss = querySelector(\n    offcanvasDismissSelector,\n    element as HTMLElement | undefined,\n  );\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    const { options, triggers } = self;\n    const { backdrop } = options;\n    const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n    const selection = getDocument(element).getSelection();\n\n    // istanbul ignore else: a filter is required here @preserve\n    if (!overlay.contains(target as HTMLElement) || backdrop !== \"static\") {\n      // istanbul ignore else @preserve\n      if (\n        !(selection && selection.toString().length) &&\n        ((!element.contains(target as HTMLElement) &&\n          backdrop &&\n          // istanbul ignore next @preserve\n          (!trigger || triggers.includes(target as HTMLElement))) ||\n          (offCanvasDismiss &&\n            offCanvasDismiss.contains(target as HTMLElement)))\n      ) {\n        self.relatedTarget =\n          offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)\n            ? offCanvasDismiss\n            : null;\n        self.hide();\n      }\n\n      // istanbul ignore next @preserve\n      if (trigger && trigger.tagName === \"A\") e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(\n    offcanvasActiveSelector,\n    getDocument(target as Node),\n  );\n  const self = element && getOffcanvasInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    // istanbul ignore else @preserve\n    if (self.options.keyboard && code === keyEscape) {\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, \"true\");\n  setAttribute(element, \"role\", \"dialog\");\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n  toggleFocusTrap(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, \"true\");\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, \"role\");\n  setElementStyle(element, { visibility: \"\" });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget ||\n    triggers.find(isVisible);\n  // istanbul ignore else @preserve\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n  toggleFocusTrap(element);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(\n    target: HTMLElement | string,\n    config?: Partial<OffcanvasOptions>,\n  ) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [\n      ...querySelectorAll(offcanvasToggleSelector, getDocument(element)),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showOffcanvasEvent);\n\n      if (!showOffcanvasEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n        if (currentOpen && currentOpen !== element) {\n          const that = getOffcanvasInstance(currentOpen) ||\n            // istanbul ignore next @preserve\n            getInstance<typeof BaseComponent & { hide: () => void }>(\n              currentOpen,\n              modalComponent,\n            );\n\n          // istanbul ignore else @preserve\n          if (that) that.hide();\n        }\n\n        if (options.backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, true);\n          } else {\n            toggleOverlayType();\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n        } else {\n          beforeOffcanvasShow(this);\n          // istanbul ignore next @preserve - this test was done on Modal\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideOffcanvasEvent);\n      if (!hideOffcanvasEvent.defaultPrevented) {\n        addClass(element, offcanvasTogglingClass);\n        removeClass(element, showClass);\n        beforeOffcanvasHide(this);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listeners.\n   *\n   * @param self the `Offcanvas` instance\n   * @param add when *true*, listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    this.triggers.forEach((btn) =>\n      action(btn, mouseclickEvent, offcanvasTriggerHandler)\n    );\n  };\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const { element } = this;\n    const isOpen = hasClass(element, showClass);\n    const callback = () => setTimeout(() => super.dispose(), 1);\n\n    this.hide();\n    this._toggleEventListeners();\n\n    if (isOpen) {\n      emulateTransitionEnd(element, callback);\n      // istanbul ignore next @preserve\n    } else {\n      callback();\n    }\n  }\n}\n","/** @type {string} */\nconst popoverString = \"popover\";\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = \"Popover\";\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = \"tooltip\";\nexport default tooltipString;\n","import tooltipString from \"../strings/tooltipString\";\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : \"\";\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${\n    header + arrow + body\n  }</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: \"top\",\n  bottom: \"bottom\",\n  left: \"start\",\n  right: \"end\",\n};\n\nexport default tipClassPositions;\n","import {\n  createCustomEvent,\n  dispatchEvent,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isHTMLElement,\n  isRTL,\n  setElementStyle,\n  toLowerCase,\n} from \"@thednp/shorty\";\n\nimport popoverComponent from \"../strings/popoverComponent\";\nimport tipClassPositions from \"./tipClassPositions\";\nimport Tooltip from \"../components/tooltip\";\nimport type { TooltipEvent } from \"../interface/tooltip\";\nimport type { PopoverEvent } from \"../interface/popover\";\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n\n  // istanbul ignore else @preserve\n  if (tooltip) {\n    const tipPositions = { ...tipClassPositions };\n    const RTL = isRTL(element);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      // top: '0px', left: '0px', right: '', bottom: '',\n      top: \"\",\n      left: \"\",\n      right: \"\",\n      bottom: \"\",\n    });\n    const isPopover = self.name === popoverComponent;\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } =\n      getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } =\n      container as HTMLElement;\n    const parentPosition = getElementStyle(\n      container as HTMLElement,\n      \"position\",\n    );\n    const fixedParent = parentPosition === \"fixed\";\n    const scrollbarWidth = fixedParent\n      ? Math.abs(parentCWidth - parentOWidth)\n      : Math.abs(htmlcw - htmlow);\n    const leftBoundry = RTL && fixedParent\n      // istanbul ignore next @preserve\n      ? scrollbarWidth\n      : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = getBoundingClientRect(element, true);\n    const { x, y } = {\n      x: elemRectLeft,\n      y: elemRectTop,\n    };\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: \"\",\n      left: \"\",\n      right: \"\",\n      bottom: \"\",\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = \"\";\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = \"\";\n    let arrowTop: number | string = \"\";\n    let arrowLeft: number | string = \"\";\n    let arrowRight: number | string = \"\";\n\n    const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n    const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed =\n      elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed =\n      elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = [\"left\", \"right\"];\n    const verticals = [\"top\", \"bottom\"];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement)\n      ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry\n      : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed\n      ? \"top\"\n      : placement;\n    // recompute placement\n    placement = placement === \"top\" && topExceed ? \"bottom\" : placement;\n    placement = placement === \"bottom\" && bottomExceed ? \"top\" : placement;\n    placement = placement === \"left\" && leftExceed ? \"right\" : placement;\n    placement = placement === \"right\" && rightExceed\n      ? \"left\"\n      // istanbul ignore next @preserve\n      : placement;\n\n    // update tooltip/popover class\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(\n        tipClasses,\n        tipPositions[placement],\n      );\n    }\n\n    // compute tooltip / popover coordinates\n    // istanbul ignore else @preserve\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === \"left\") {\n        // LEFT\n        leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n      } else {\n        // RIGHT\n        leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = y;\n        bottomPosition = \"\";\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = y - tipHeight + elemHeight;\n        bottomPosition = \"\";\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = y - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === \"top\") {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = \"auto\";\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === \"\" ? \"\" : `${bottomPosition}px`,\n      left: leftPosition === \"auto\" ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== \"\" ? `${rightPosition}px` : \"\",\n    });\n\n    // update arrow placement\n    // istanbul ignore else @preserve\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== \"\") {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== \"\") {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== \"\") {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<\n      Record<string, unknown>,\n      TooltipEvent | PopoverEvent\n    >(\n      `updated.bs.${toLowerCase(self.name)}`,\n    );\n    dispatchEvent(element, updatedTooltipEvent);\n  }\n};\n\nexport default styleTip;\n","import getTipTemplate from \"./getTipTemplate\";\nimport tooltipString from \"../strings/tooltipString\";\nimport { TooltipOptions } from \"../interface/tooltip\";\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: \"\",\n  customClass: \"\",\n  trigger: \"hover focus\",\n  placement: \"top\",\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: \"\",\n  dismissible: false,\n  btnClose: \"\",\n};\nexport default tooltipDefaults;\n","const p = (i) => i != null && typeof i == \"object\" || !1, k = (i) => p(i) && typeof i.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(\n  (t) => i.nodeType === t\n) || !1, _ = (i) => k(i) && i.nodeType === 1 || !1, B = (i) => typeof i == \"function\" || !1, m = \"PositionObserver Error\";\nclass x {\n  entries;\n  _tick;\n  _root;\n  _callback;\n  /**\n   * The constructor takes two arguments, a `callback`, which is called\n   * whenever the position of an observed element changes and an `options` object.\n   * The callback function should take an array of `PositionObserverEntry` objects\n   * as its only argument, but it's not required.\n   *\n   * @param callback the callback that applies to all targets of this observer\n   * @param options the options of this observer\n   */\n  constructor(t, n) {\n    if (!B(t))\n      throw new Error(`${m}: ${t} is not a function.`);\n    this.entries = [], this._callback = t, this._root = _(n?.root) ? n.root : document?.documentElement, this._tick = 0;\n  }\n  /**\n   * Start observing the position of the specified element.\n   * If the element is not currently attached to the DOM,\n   * it will NOT be added to the entries.\n   * @param target\n   */\n  observe = (t) => {\n    if (!_(t))\n      throw new Error(\n        `${m}: ${t} is not an instance of HTMLElement.`\n      );\n    if (!this._root.contains(t)) return;\n    const { clientWidth: n, clientHeight: o } = this._root, h = t.getBoundingClientRect(), { left: l, top: u, bottom: e, right: s, width: r, height: c } = h, a = u > 1 - c && l > 1 - r && e <= o + c - 1 && s <= n + r - 1;\n    this.entries.push({ target: t, boundingBox: h, isVisible: a }), this._tick || (this._tick = requestAnimationFrame(this._runCallback));\n  };\n  /**\n   * Stop observing the position of the specified element.\n   * @param target\n   */\n  unobserve = (t) => {\n    const n = this.entries.findIndex((o) => o.target === t);\n    this.entries.splice(n, 1);\n  };\n  /**\n   * Private method responsible for all the heavy duty.\n   */\n  _runCallback = () => {\n    if (!this.entries.length) return;\n    const t = [], { clientWidth: n, clientHeight: o } = this._root;\n    this.entries.forEach((h, l) => {\n      const { target: u, boundingBox: e } = h, s = u.getBoundingClientRect(), { left: r, top: c, bottom: a, right: d, width: b, height: f } = s;\n      if (e.left !== r || e.top !== c || e.right !== d || e.bottom !== a) {\n        const g = c > 1 - f && r > 1 - b && a <= o + f - 1 && d <= n + b - 1;\n        this.entries[l].boundingBox = s, this.entries[l].isVisible = g, t.push({ target: u, boundingBox: s, isVisible: g });\n      }\n    }), t.length && this._callback(t), requestAnimationFrame(this._runCallback);\n  };\n  /**\n   * Immediately stop observing all elements.\n   */\n  disconnect = () => {\n    cancelAnimationFrame(this._tick), this.entries.length = 0, this._tick = 0;\n  };\n}\nexport {\n  x as default\n};\n//# sourceMappingURL=index.mjs.map\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = \"data-original-title\";\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = \"Tooltip\";\nexport default tooltipComponent;\n","import {\n  isArray,\n  isFunction,\n  isHTMLElement,\n  isNode,\n  isNodeList,\n  isString,\n} from \"@thednp/shorty\";\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (\n  element: HTMLElement,\n  content: Node[] | Node | string,\n  sanitizeFn?: (s: string) => string,\n) => {\n  // istanbul ignore else @preserve\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, \"text/html\");\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (\n    isNodeList(content) || (isArray(content) && content.every(isNode))\n  ) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import {\n  addClass,\n  createElement,\n  hasClass,\n  isHTMLElement,\n  isRTL,\n  querySelector,\n  setAttribute,\n} from \"@thednp/shorty\";\n\nimport tooltipComponent from \"../strings/tooltipComponent\";\nimport tooltipString from \"../strings/tooltipString\";\nimport popoverString from \"../strings/popoverString\";\nimport fadeClass from \"../strings/fadeClass\";\nimport tipClassPositions from \"./tipClassPositions\";\nimport setHtml from \"./setHtml\";\nimport Tooltip from \"../components/tooltip\";\nimport Popover from \"../components/popover\";\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const {\n    title,\n    placement,\n    template,\n    animation,\n    customClass,\n    sanitizeFn,\n    dismissible,\n    content,\n    btnClose,\n  } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = \"end\";\n    tipPositions.right = \"start\";\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement(\"div\") as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    // istanbul ignore next @preserve\n    : undefined;\n\n  const { tooltip } = self;\n  // istanbul ignore else @preserve\n  if (tooltip) {\n    // set id and role attributes\n    setAttribute(tooltip, \"id\", id);\n    setAttribute(tooltip, \"role\", tooltipString);\n\n    const bodyClass = isTooltip\n      ? `${tooltipString}-inner`\n      : `${popoverString}-body`;\n    const tooltipHeader = isTooltip\n      ? null\n      : querySelector(`.${popoverString}-header`, tooltip);\n    const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n    // set arrow and enable access for styleTip\n    self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n    const { arrow } = self;\n\n    if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n    else {\n      const tempTitle = createElement(\"div\") as HTMLElement;\n      setHtml(tempTitle, title, sanitizeFn);\n      titleParts = [...[...tempTitle.childNodes]];\n    }\n\n    if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n    else {\n      const tempContent = createElement(\"div\") as HTMLElement;\n      setHtml(tempContent, content, sanitizeFn);\n      contentParts = [...[...tempContent.childNodes]];\n    }\n\n    // set dismissible button\n    if (dismissible) {\n      if (title) {\n        if (isHTMLElement(btnClose)) {\n          titleParts = [...titleParts, btnClose.cloneNode(true)];\n        } else {\n          const tempBtn = createElement(\"div\") as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          titleParts = [...titleParts, tempBtn.firstChild as Node];\n        }\n      } else {\n        // istanbul ignore else @preserve\n        if (tooltipHeader) tooltipHeader.remove();\n        if (isHTMLElement(btnClose)) {\n          contentParts = [...contentParts, btnClose.cloneNode(true)];\n        } else {\n          const tempBtn = createElement(\"div\") as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          contentParts = [...contentParts, tempBtn.firstChild as Node];\n        }\n      }\n    }\n\n    // fill the template with content from options / data attributes\n    // also sanitize title && content\n    // istanbul ignore else @preserve\n    if (!isTooltip) {\n      // istanbul ignore else @preserve\n      if (title && tooltipHeader) {\n        setHtml(tooltipHeader, titleParts, sanitizeFn);\n      }\n      // istanbul ignore else @preserve\n      if (content && tooltipBody) {\n        setHtml(tooltipBody, contentParts, sanitizeFn);\n      }\n      // set btn\n      self.btn = querySelector(\".btn-close\", tooltip) || undefined;\n    } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n    // Bootstrap 5.2.x\n    // addClass(tooltip, 'position-absolute');\n    addClass(tooltip, \"position-fixed\");\n    addClass(arrow, \"position-absolute\");\n\n    // set popover animation and placement\n    // istanbul ignore else @preserve\n    if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n    // istanbul ignore else @preserve\n    if (animation && !hasClass(tooltip, fadeClass)) {\n      addClass(tooltip, fadeClass);\n    }\n    // istanbul ignore else @preserve\n    if (customClass && !hasClass(tooltip, customClass)) {\n      addClass(tooltip, customClass);\n    }\n    // istanbul ignore else @preserve\n    if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n  }\n};\n\nexport default createTip;\n","import {\n  getDocument,\n  getElementStyle,\n  getParentNode,\n  isShadowRoot,\n  isTableElement,\n} from \"@thednp/shorty\";\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = [\"HTML\", \"BODY\"];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    // istanbul ignore else @preserve\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, \"position\") !== \"relative\" &&\n        containers.slice(i + 1).every((r) =>\n          getElementStyle(r as HTMLElement, \"position\") === \"static\"\n        )\n      ) {\n        return c;\n      }\n      return null;\n    }) ||\n    // istanbul ignore next: optional guard\n    getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  addClass,\n  ariaDescribedBy,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focus,\n  focusEvent,\n  focusinEvent,\n  focusoutEvent,\n  getAttribute,\n  getDocument,\n  getElementStyle,\n  getInstance,\n  getUID,\n  hasAttribute,\n  hasClass,\n  isApple,\n  mouseclickEvent,\n  mousedownEvent,\n  mouseenterEvent,\n  mousehoverEvent,\n  mouseleaveEvent,\n  ObjectAssign,\n  passiveHandler,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  Timer,\n  toLowerCase,\n  touchstartEvent,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\nimport PositionObserver from \"@thednp/position-observer\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport dataOriginalTitle from \"../strings/dataOriginalTitle\";\nimport showClass from \"../strings/showClass\";\nimport tooltipString from \"../strings/tooltipString\";\nimport tooltipComponent from \"../strings/tooltipComponent\";\nimport popoverString from \"../strings/popoverString\";\nimport popoverComponent from \"../strings/popoverComponent\";\nimport modalString from \"../strings/modalString\";\nimport offcanvasString from \"../strings/offcanvasString\";\n\nimport styleTip from \"../util/styleTip\";\nimport createTip from \"../util/createTip\";\nimport { appendPopup, hasPopup, removePopup } from \"../util/popupContainer\";\nimport getElementContainer from \"../util/getElementContainer\";\nimport tooltipDefaults from \"../util/tooltipDefaults\";\nimport BaseComponent from \"./base-component\";\nimport type { TooltipEvent, TooltipOptions } from \"../interface/tooltip\";\nimport type { PopoverEvent, PopoverOptions } from \"../interface/popover\";\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector =\n  `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = \"title\";\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n */\nlet getTooltipInstance = (element: HTMLElement) =>\n  getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(\n    tooltip as HTMLElement,\n    container === offsetParent ? container : offsetParent,\n  );\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container, offsetParent } = self;\n\n  return tooltip &&\n    hasPopup(tooltip, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  self._toggleEventListeners();\n\n  // istanbul ignore else @preserve\n  if (\n    hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent\n  ) {\n    toggleTooltipTitle(self);\n  }\n  // istanbul ignore else @preserve\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(\n    getDocument(element),\n    touchstartEvent,\n    self.handleTouch,\n    passiveHandler,\n  );\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<\n    Record<string, never>,\n    TooltipEvent | PopoverEvent\n  >(\n    `shown.bs.${toLowerCase(self.name)}`,\n  );\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, \"in\");\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<\n    Record<string, never>,\n    TooltipEvent | PopoverEvent\n  >(\n    `hidden.bs.${toLowerCase(self.name)}`,\n  );\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, \"out\");\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  // const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  if (add) self._observer.observe(self.element);\n  else self._observer.disconnect();\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) {\n    action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  }\n  if (parentOffcanvas) {\n    action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n  }\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content ||\n      getAttribute(element, titleAtt[0]) ||\n      // istanbul ignore next @preserve\n      \"\",\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n  declare _observer: PositionObserver;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    // istanbul ignore next @preserve: this is to set Popover too\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) =>\n      getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if (!((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      // reset default options\n      ObjectAssign(tooltipDefaults, { titleAttr: \"\" });\n\n      // set title attributes and add event listeners\n      // istanbul ignore else @preserve\n      if (\n        hasAttribute(element, titleAttr) && isTooltip &&\n        typeof options.title === \"string\"\n      ) {\n        toggleTooltipTitle(this, options.title);\n      }\n\n      // set containers\n      this.container = getElementContainer(element);\n      this.offsetParent = [\"sticky\", \"fixed\"].some(\n          (position) =>\n            getElementStyle(this.container as HTMLElement, \"position\") ===\n              position,\n        )\n        ? (this.container as HTMLElement)\n        : getDocument(this.element).body;\n\n      // create tooltip here\n      createTip(this);\n\n      // create observer\n      this._observer = new PositionObserver(() => this.update());\n\n      // attach events\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  // istanbul ignore next @preserve - impossible to test without Apple device\n  handleFocus = () => focus(this.element);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, \"out\");\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, \"out\");\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<\n            Record<string, never>,\n            TooltipEvent | PopoverEvent\n          >(\n            `show.bs.${toLowerCase(this.name)}`,\n          );\n          dispatchEvent(element, showTooltipEvent);\n\n          // istanbul ignore else @preserve\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, tipContainer);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            // istanbul ignore else @preserve\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            // istanbul ignore else @preserve\n            if (animation) {\n              emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            } else tooltipShownAction(this);\n          }\n        },\n        17,\n        \"in\",\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, \"in\");\n\n    // istanbul ignore else @preserve\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<\n            Record<string, never>,\n            TooltipEvent | PopoverEvent\n          >(\n            `hide.bs.${toLowerCase(this.name)}`,\n          );\n          dispatchEvent(element, hideTooltipEvent);\n\n          // istanbul ignore else @preserve\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            // istanbul ignore else @preserve\n            if (animation) {\n              emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            } else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        \"out\",\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip<Tooltip>(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    // istanbul ignore else @preserve\n    if (!enabled) {\n      this._toggleEventListeners(true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, enabled } = this;\n    // istanbul ignore else @preserve\n    if (enabled) {\n      if (tooltip && hasTip(this)) this.hide();\n      this._toggleEventListeners();\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    // istanbul ignore if @preserve\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Toggles on/off the `Tooltip` event listeners.\n   *\n   * @param add when `true`, event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    // btn is only for dismissible popover\n    const { element, options, btn } = this;\n    const { trigger } = options;\n    const isPopover = this.name !== tooltipComponent;\n    const dismissible = isPopover && (options as PopoverOptions).dismissible\n      ? true\n      : false;\n\n    // istanbul ignore else @preserve\n    if (!trigger.includes(\"manual\")) {\n      this.enabled = !!add;\n\n      const triggerOptions = trigger.split(\" \");\n\n      triggerOptions.forEach((tr) => {\n        // istanbul ignore else @preserve\n        if (tr === mousehoverEvent) {\n          action(element, mousedownEvent, this.handleShow);\n          action(element, mouseenterEvent, this.handleShow);\n\n          // istanbul ignore else @preserve\n          if (!dismissible) {\n            action(element, mouseleaveEvent, this.handleHide);\n            action(\n              getDocument(element),\n              touchstartEvent,\n              this.handleTouch,\n              passiveHandler,\n            );\n          }\n        } else if (tr === mouseclickEvent) {\n          action(element, tr, !dismissible ? this.toggle : this.handleShow);\n        } else if (tr === focusEvent) {\n          action(element, focusinEvent, this.handleShow);\n          // istanbul ignore else @preserve\n          if (!dismissible) action(element, focusoutEvent, this.handleHide);\n          // istanbul ignore else @preserve\n          if (isApple()) {\n            action(element, mouseclickEvent, this.handleFocus);\n          }\n        }\n        // istanbul ignore else @preserve\n        if (dismissible && btn) {\n          action(btn, mouseclickEvent, this.handleHide);\n        }\n      });\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () =>\n      setTimeout(\n        () => disposeTooltipComplete(clone, () => super.dispose()),\n        17,\n      );\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip as HTMLElement, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { focus, getInstance, ObjectAssign } from \"@thednp/shorty\";\n\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport popoverString from \"../strings/popoverString\";\nimport popoverComponent from \"../strings/popoverComponent\";\n\nimport getTipTemplate from \"../util/getTipTemplate\";\nimport styleTip from \"../util/styleTip\";\nimport tooltipDefaults from \"../util/tooltipDefaults\";\nimport Tooltip from \"./tooltip\";\n\nimport type { PopoverOptions /* , PopoverEvent */ } from \"../interface/popover\";\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector =\n  `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: \"\",\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n */\nconst getPopoverInstance = (element: HTMLElement) =>\n  getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    // istanbul ignore else @preserve\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = \"scrollspy\";\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = \"ScrollSpy\";\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  addClass,\n  createCustomEvent,\n  dispatchEvent,\n  getAttribute,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getElementsByTagName,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  querySelector,\n  removeClass,\n} from \"@thednp/shorty\";\n\nimport PositionObserver from \"@thednp/position-observer\";\n\nimport activeClass from \"../strings/activeClass\";\nimport scrollspyString from \"../strings/scrollspyString\";\nimport scrollspyComponent from \"../strings/scrollspyComponent\";\n\nimport BaseComponent from \"./base-component\";\nimport { ScrollSpyEvent, ScrollSpyOptions } from \"../interface/scrollspy\";\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\ntype ScrollSpyEventProps = {\n  relatedTarget: HTMLElement;\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) =>\n  getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<\n  ScrollSpyEventProps,\n  ScrollSpyEvent\n>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } =\n    self;\n  const { offset } = options;\n  const isRoot = scrollTarget !== element;\n\n  const links = target && getElementsByTagName(\"A\", target);\n  const doc = getDocument(element);\n  const scrollHEIGHT = scrollTarget.scrollHeight;\n\n  self.scrollTop = scrollTarget.scrollTop;\n\n  // only update items/offsets once or with each mutation\n  // istanbul ignore else @preserve\n  if (\n    links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)\n  ) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.targets = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    Array.from(links).forEach((link) => {\n      href = getAttribute(link, \"href\");\n      targetItem = href && href.charAt(0) === \"#\" && href.slice(-1) !== \"#\" &&\n        querySelector(href, doc);\n\n      if (targetItem) {\n        self.items.push(link);\n        self.targets.push(targetItem);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push(\n          (isRoot ? rect.top + self.scrollTop : targetItem.offsetTop) - offset,\n        );\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Toggles on/off the component observer.\n *\n * @param self the ScrollSpy instance\n * @param add when `true`, listener is added\n */\nconst toggleObservers = (\n  { targets, scrollTarget, element, _observer }: ScrollSpy,\n  add?: boolean,\n) => {\n  if (add) {\n    if (scrollTarget === element) {\n      targets.forEach((targetItem) => _observer.observe(targetItem));\n    } else {\n      _observer.observe(element);\n    }\n  } else _observer.disconnect();\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: HTMLElement) => {\n  return scrollTarget.scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return scrollTarget !== element\n    ? scrollTarget.clientHeight\n    : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName(\"A\", target)].forEach((item) => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n\n  // istanbul ignore else @preserve\n  if (isHTMLElement(target)) clear(target);\n\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, \"nav\") || hasClass(parentItem, \"dropdown-menu\")) {\n      parents.push(parentItem);\n    }\n  }\n\n  parents.forEach((menuItem) => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    // istanbul ignore else @preserve\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare targets: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n  declare _observer: PositionObserver;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(\n    target: HTMLElement | string,\n    config?: Partial<ScrollSpyOptions>,\n  ) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(\n      options.target as HTMLElement | string,\n      getDocument(element),\n    );\n\n    // invalidate\n    if (this.target) {\n      // set initial state\n      this.scrollTarget = element.clientHeight < element.scrollHeight\n        ? element\n        : getDocumentElement(element);\n      this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n      // run an initial burst, we need to know the targets\n      this.refresh();\n\n      // create observer\n      this._observer = new PositionObserver(() => this.refresh(), {\n        root: this.scrollTarget,\n      });\n\n      // add event handlers\n      toggleObservers(this, true);\n    }\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    // istanbul ignore else @preserve\n    if (isHTMLElement(target) && target.offsetHeight > 0) {\n      updateSpyTargets(this);\n\n      const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n      if (scrollTop >= maxScroll) {\n        const newActiveItem = items[itemsLength - 1];\n\n        // istanbul ignore else @preserve\n        if (activeItem !== newActiveItem) {\n          activate(this, newActiveItem);\n        }\n        return;\n      }\n\n      const { offsets } = this;\n\n      // istanbul ignore else @preserve\n      if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n        this.activeItem = null;\n        // istanbul ignore else @preserve\n        if (target) clear(target);\n        return;\n      }\n\n      items.forEach((item, i) => {\n        if (\n          activeItem !== item &&\n          scrollTop >= offsets[i] &&\n          (typeof offsets[i + 1] === \"undefined\" || scrollTop < offsets[i + 1])\n        ) {\n          activate(this, item);\n        }\n      });\n    }\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    const clone = { ...this };\n    toggleObservers(clone);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = \"tab\";\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = \"Tab\";\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  addClass,\n  ariaSelected,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  getElementsByClassName,\n  getInstance,\n  hasClass,\n  isHTMLElement,\n  mouseclickEvent,\n  querySelector,\n  reflow,\n  removeClass,\n  setAttribute,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport collapsingClass from \"../strings/collapsingClass\";\nimport activeClass from \"../strings/activeClass\";\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dropdownClasses from \"../strings/dropdownClasses\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport tabString from \"../strings/tabString\";\nimport tabComponent from \"../strings/tabComponent\";\n\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport type { /* TabOptions, */ TabEvent } from \"../interface/tab\";\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) =>\n  getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\ntype TabEventProps = {\n  relatedTarget: HTMLElement | undefined;\n};\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `show.bs.${tabString}`,\n);\nconst shownTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `shown.bs.${tabString}`,\n);\nconst hideTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `hide.bs.${tabString}`,\n);\nconst hiddenTabEvent = createCustomEvent<TabEventProps, TabEvent>(\n  `hidden.bs.${tabString}`,\n);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  // istanbul ignore else @preserve\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = \"\";\n    removeClass(tabContent, collapsingClass);\n  }\n\n  // istanbul ignore else @preserve\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) ||\n    // istanbul ignore next @preserve\n    { tab: null };\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) ||\n      // istanbul ignore next @preserve\n      { currentHeight: 0, nextHeight: 0 };\n    // istanbul ignore else @preserve: vitest won't validate this branch\n    if (currentHeight !== nextHeight) {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    } else {\n      triggerTabEnd(self);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) ||\n    // istanbul ignore next @preserve\n    { tab: null, content: null };\n  let currentHeight = 0;\n\n  // istanbul ignore else @preserve\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach((c) => {\n      // istanbul ignore else @preserve\n      if (isHTMLElement(c)) addClass(c, \"overflow-hidden\");\n    });\n    currentHeight = isHTMLElement(content)\n      ? content.scrollHeight // istanbul ignore next @preserve\n      : 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n\n  // istanbul ignore else @preserve\n  if (!showTabEvent.defaultPrevented) {\n    // istanbul ignore else @preserve\n    if (nextContent) addClass(nextContent, activeClass);\n    // istanbul ignore else @preserve\n    if (content) removeClass(content, activeClass);\n\n    // istanbul ignore else @preserve\n    if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n      const nextHeight = nextContent.scrollHeight;\n      tabPrivate.set(element, {\n        currentHeight,\n        nextHeight,\n        tab: null,\n        content: null,\n      });\n\n      addClass(tabContent, collapsingClass);\n      tabContent.style.height = `${currentHeight}px`;\n      reflow(tabContent);\n      [content, nextContent].forEach((c) => {\n        // istanbul ignore else @preserve\n        if (c) removeClass(c, \"overflow-hidden\");\n      });\n    }\n\n    if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n      setTimeout(() => {\n        addClass(nextContent, showClass);\n        emulateTransitionEnd(nextContent, () => {\n          triggerTabShow(self);\n        });\n      }, 1);\n    } else {\n      // istanbul ignore else @preserve\n      if (nextContent) addClass(nextContent, showClass);\n      triggerTabShow(self);\n    }\n\n    // istanbul ignore else @preserve\n    if (tab) dispatchEvent(tab, hiddenTabEvent);\n  }\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (\n  self: Tab,\n): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(nav as HTMLElement | undefined)) {\n    return { tab: null, content: null };\n  }\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  // istanbul ignore else @preserve\n  if (\n    activeTabs.length === 1 &&\n    !dropdownClasses.some((c) =>\n      hasClass(activeTabs[0].parentElement as HTMLElement, c)\n    )\n  ) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement)\n    ? getTargetElement(tab as HTMLElement)\n    : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  // istanbul ignore next @preserve\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(\",.\")}`);\n  return dropdown\n    ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown)\n    : null;\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    e.preventDefault();\n    self.show();\n  }\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    // istanbul ignore else @preserve\n    if (content) {\n      const nav = closest(element, \".nav\");\n      const container = closest(content, \".tab-content\");\n\n      this.nav = nav;\n      this.content = content;\n      this.tabContent = container;\n\n      // event targets\n      this.dropdown = getParentDropdown(element);\n\n      // show first Tab instance of none is shown\n      // suggested on #432\n      const { tab } = getActiveTab(this);\n      if (nav && !tab) {\n        const firstTab = querySelector(tabSelector, nav);\n        const firstTabContent = firstTab && getTargetElement(firstTab);\n\n        // istanbul ignore else @preserve\n        if (firstTabContent) {\n          addClass(firstTab, activeClass);\n          addClass(firstTabContent, showClass);\n          addClass(firstTabContent, activeClass);\n          setAttribute(element, ariaSelected, \"true\");\n        }\n      }\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    // istanbul ignore else @preserve\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      // istanbul ignore else @preserve\n      if (nav) {\n        tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n      }\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      // istanbul ignore else @preserve\n      if (isHTMLElement(tab)) {\n        dispatchEvent(tab as EventTarget, hideTabEvent);\n        // istanbul ignore else @preserve\n        if (!hideTabEvent.defaultPrevented) {\n          addClass(element, activeClass);\n          setAttribute(element, ariaSelected, \"true\");\n\n          const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n          if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n            removeClass(activeDropdown, activeClass);\n          }\n\n          // istanbul ignore else @preserve\n          if (nav) {\n            const toggleTab = () => {\n              // istanbul ignore else @preserve\n              if (tab) {\n                removeClass(tab, activeClass);\n                setAttribute(tab, ariaSelected, \"false\");\n              }\n              if (dropdown && !hasClass(dropdown, activeClass)) {\n                addClass(dropdown, activeClass);\n              }\n            };\n\n            if (\n              content &&\n              (hasClass(content, fadeClass) ||\n                (nextContent && hasClass(nextContent, fadeClass)))\n            ) {\n              Timer.set(nav, toggleTab, 1);\n            } else toggleTab();\n          }\n\n          // istanbul ignore else @preserve\n          if (content) {\n            removeClass(content, showClass);\n            if (hasClass(content, fadeClass)) {\n              emulateTransitionEnd(content, () => triggerTabHide(this));\n            } else {\n              triggerTabHide(this);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, tabClickHandler);\n  };\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = \"toast\";\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = \"Toast\";\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  addClass,\n  closest,\n  createCustomEvent,\n  dispatchEvent,\n  emulateTransitionEnd,\n  focusinEvent,\n  focusoutEvent,\n  getDocument,\n  getInstance,\n  hasClass,\n  mouseclickEvent,\n  mouseenterEvent,\n  mouseleaveEvent,\n  querySelector,\n  querySelectorAll,\n  reflow,\n  removeClass,\n  Timer,\n} from \"@thednp/shorty\";\n\nimport { addListener, removeListener } from \"@thednp/event-listener\";\n\nimport fadeClass from \"../strings/fadeClass\";\nimport showClass from \"../strings/showClass\";\nimport dataBsDismiss from \"../strings/dataBsDismiss\";\nimport dataBsToggle from \"../strings/dataBsToggle\";\nimport toastString from \"../strings/toastString\";\nimport toastComponent from \"../strings/toastComponent\";\nimport getTargetElement from \"../util/getTargetElement\";\nimport BaseComponent from \"./base-component\";\nimport { ToastEvent, ToastOptions } from \"../interface/toast\";\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = \"showing\";\n/** @deprecated */\nconst hideClass = \"hide\";\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) =>\n  getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `show.bs.${toastString}`,\n);\nconst shownToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `shown.bs.${toastString}`,\n);\nconst hideToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `hide.bs.${toastString}`,\n);\nconst hiddenToastEvent = createCustomEvent<Record<string, never>, ToastEvent>(\n  `hidden.bs.${toastString}`,\n);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  // istanbul ignore else @preserve\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  // istanbul ignore else @preserve\n  if (self) {\n    // istanbul ignore else @preserve\n    if (trigger && trigger.tagName === \"A\") e.preventDefault();\n    self.relatedTarget = trigger;\n    self.show();\n  }\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  // istanbul ignore else @preserve: a solid filter is required\n  if (\n    self && element !== relatedTarget &&\n    !element.contains(relatedTarget as Node)\n  ) {\n    if ([mouseenterEvent, focusinEvent].includes(type)) {\n      Timer.clear(element, toastString);\n    } else {\n      Timer.set(element, () => self.hide(), self.options.delay, toastString);\n    }\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) {\n      addClass(element, fadeClass);\n    } else if (!options.animation && hasClass(element, fadeClass)) {\n      removeClass(element, fadeClass);\n    }\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [\n      ...querySelectorAll(toastToggleSelector, getDocument(element)),\n    ].filter(\n      (btn) => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    // istanbul ignore else @preserve\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (!showToastEvent.defaultPrevented) {\n        showToast(this);\n      }\n    }\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    // istanbul ignore else @preserve\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (!hideToastEvent.defaultPrevented) {\n        hideToast(this);\n      }\n    }\n  };\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, it will add the listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { element, triggers, dismiss, options, hide } = this;\n\n    // istanbul ignore else @preserve\n    if (dismiss) {\n      action(dismiss, mouseclickEvent, hide);\n    }\n\n    // istanbul ignore else @preserve\n    if (options.autohide) {\n      [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(\n        (e) => action(element, e, interactiveToastHandler),\n      );\n    }\n    // istanbul ignore else @preserve\n    if (triggers.length) {\n      triggers.forEach((btn) =>\n        action(btn, mouseclickEvent, toastClickHandler)\n      );\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n    this._toggleEventListeners();\n    Timer.clear(element, toastString);\n\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from \"@thednp/shorty\";\n\nimport { addListener } from \"@thednp/event-listener\";\n\nimport Alert from \"../components/alert\";\nimport Button from \"../components/button\";\nimport Carousel from \"../components/carousel\";\nimport Collapse from \"../components/collapse\";\nimport Dropdown from \"../components/dropdown\";\nimport Modal from \"../components/modal\";\nimport Offcanvas from \"../components/offcanvas\";\nimport Popover from \"../components/popover\";\nimport ScrollSpy from \"../components/scrollspy\";\nimport Tab from \"../components/tab\";\nimport Toast from \"../components/toast\";\nimport Tooltip from \"../components/tooltip\";\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\ntype Component =\n  | Alert\n  | Button\n  | Carousel\n  | Collapse\n  | Dropdown\n  | Modal\n  | Offcanvas\n  | Popover\n  | ScrollSpy\n  | Tab\n  | Toast\n  | Tooltip;\n\n[\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n].forEach((c) => componentsList.set(c.prototype.name, c));\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = (\n  callback: (el: HTMLElement) => Component,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach((x) => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) {\n        (instance as T & { dispose: () => void }).dispose();\n      }\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName(\"*\", lookUp)];\n\n  componentsList.forEach((cs) => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter((item) => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach((comp) => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, \"DOMContentLoaded\", () => initCallback(), {\n    once: true,\n  });\n}\n"],"names":["ariaDescribedBy","ariaExpanded","ariaHidden","ariaModal","ariaPressed","ariaSelected","focusEvent","focusinEvent","focusoutEvent","keydownEvent","keyupEvent","mouseclickEvent","mousedownEvent","mousehoverEvent","mouseenterEvent","mouseleaveEvent","pointerdownEvent","pointermoveEvent","pointerupEvent","touchstartEvent","dragstartEvent","focusableSelector","keyArrowDown","keyArrowUp","keyArrowLeft","keyArrowRight","keyEscape","transitionDuration","transitionDelay","transitionEndEvent","transitionProperty","isApple","appleBrands","x","noop","on","element","eventName","listener","options","ops","off","getAttribute","att","hasAttribute","setAttribute","value","removeAttribute","addClass","classNAME","removeClass","hasClass","isObject","obj","isNode","node","isHTMLElement","componentData","Data","component","instance","instanceMap","getInstance","target","isString","str","isWindow","isDocument","getDocument","ObjectAssign","source","createElement","param","tagName","newElement","attr","dispatchEvent","event","getElementStyle","property","computedStyle","prop","getElementTransitionDelay","propertyValue","delayValue","delayScale","duration","getElementTransitionDuration","durationValue","durationScale","emulateTransitionEnd","handler","called","endEvent","delay","transitionEndWrapper","e","focus","normalizeValue","ObjectEntries","toLowerCase","normalizeOptions","defaultOps","inputOps","ns","INPUT","data","normalOps","dataOps","title","k","v","key","match","ObjectKeys","createCustomEvent","eventType","config","OriginalCustomEvent","passiveHandler","reflow","setElementStyle","styles","propObject","isMap","isNumber","num","TimeCache","Timer","callback","keyTimers","querySelectorAll","selector","parent","focusTrapMap","handleKeyboardNavigation","shiftKey","code","doc","focusableElements","el","firstFocusable","lastFocusable","hasFocusTrap","toggleFocusTrap","isCurrentlyTrapped","getBoundingClientRect","includeScale","width","height","top","right","bottom","left","scaleX","scaleY","offsetWidth2","offsetHeight2","getDocumentBody","getDocumentElement","isShadowRoot","getParentNode","elementUID","elementMapUID","elementIDMap","getUID","result","elID","elMap","elkey","getWindow","isArray","isElementInScrollRange","clientHeight","isFunction","fn","isNodeList","isRTL","isTableElement","closest","querySelector","getElementsByTagName","getElementsByClassName","matches","f","t","c","i","s","o","a","r","E","d","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","version","BaseComponent","prevInstance","alertSelector","alertDismissSelector","getAlertInstance","alertInitCallback","Alert","closeAlertEvent","closedAlertEvent","alertTransitionEnd","self","add","action","addListener","removeListener","dismiss","close","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","isActive","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","attValue","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","activeItem","getActiveIndex","orientation","directionClass","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","RTL","carouselDragHandler","carouselPointerDownHandler","controls","indicators","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","activateCarouselIndicator","activeIndex","transitionItem","ar","isPaused","idx","next","eventProperties","touch","pause","interval","keyboard","arrow","indicator","isAnimating","clone","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","triggers","btn","collapseContent","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","menuEnd","p","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","targetLeft","targetTop","targetWidth","targetHeight","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","dropdownPreventScroll","dropdownKeyHandler","getCurrentOpenDropdown","currentParent","type","isForm","dropdownClickHandler","activeElement","open","menuItems","dropdownIntersectionHandler","entry","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","fixedItems","fixed","measureScrollbar","innerWidth","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","appendPopup","customContainer","containerIsBody","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","padStyle","toggleModalDismiss","modalDismissHandler","modalKeyHandler","afterModalHide","relatedTarget","focusElement","afterModalShow","beforeModalShow","beforeModalHide","modalClickHandler","currentTarget","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","overlayDelay","currentOpen","that","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offcanvasTriggerHandler","offCanvasDismiss","selection","visibleTrigger","isOpen","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","y","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","tooltipDefaults","_","B","m","n","h","l","u","b","g","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","tempDocument","createTip","id","template","animation","customClass","dismissible","btnClose","tipString","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","offsetParent","hasTip","disposeTooltipComplete","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","toggleTooltipOpenHandlers","parentModal","parentOffcanvas","titleAtt","tipComponent","elem","position","PositionObserver","outTimer","tipContainer","showTooltipEvent","hideTooltipEvent","enabled","tr","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","scrollTarget","itemsLength","isRoot","links","scrollHEIGHT","href","targetItem","rect","getOffsetHeight","link","toggleObservers","targets","_observer","getScrollHeight","clear","item","activate","parents","parentItem","menuItem","parentLink","scrollTop","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","tabClickHandler","firstTab","firstTabContent","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toastClickHandler","interactiveToastHandler","isShown","hide","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","context","compData","initCallback","lookUp","elemCollection","cs","init","removeDataAPI","comp"],"mappings":"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","x_google_ignoreList":[0,1,52]}