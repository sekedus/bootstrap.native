{"version":3,"file":"bootstrap-native.cjs","sources":["../node_modules/@thednp/event-listener/dist/event-listener.cjs","../node_modules/@thednp/shorty/dist/shorty.cjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["\"use strict\";Object.defineProperty(exports,Symbol.toStringTag,{value:\"Module\"});const r={},a=s=>{const{type:e,currentTarget:c}=s;[...r[e]].forEach(([n,o])=>{c===n&&[...o].forEach(([t,i])=>{t.apply(n,[s]),typeof i==\"object\"&&i.once&&f(n,e,t,i)})})},d=(s,e,c,n)=>{r[e]||(r[e]=new Map);const o=r[e];o.has(s)||o.set(s,new Map);const t=o.get(s),{size:i}=t;t.set(c,n),i||s.addEventListener(e,a,n)},f=(s,e,c,n)=>{const o=r[e],t=o&&o.get(s),i=t&&t.get(c),g=i!==void 0?i:n;t&&t.has(c)&&t.delete(c),o&&(!t||!t.size)&&o.delete(s),(!o||!o.size)&&delete r[e],(!t||!t.size)&&s.removeEventListener(e,a,g)},E=d,L=f;exports.addListener=d;exports.globalListener=a;exports.off=L;exports.on=E;exports.registry=r;exports.removeListener=f;\n//# sourceMappingURL=event-listener.cjs.map\n","\"use strict\";Object.defineProperty(exports,Symbol.toStringTag,{value:\"Module\"});const dt=\"aria-checked\",mt=\"aria-description\",Et=\"aria-describedby\",vt=\"aria-expanded\",pt=\"aria-haspopup\",gt=\"aria-hidden\",ft=\"aria-label\",bt=\"aria-labelledby\",yt=\"aria-modal\",ht=\"aria-pressed\",At=\"aria-selected\",wt=\"aria-valuemin\",St=\"aria-valuemax\",kt=\"aria-valuenow\",Dt=\"aria-valuetext\",q=\"abort\",G=\"beforeunload\",K=\"blur\",J=\"change\",X=\"contextmenu\",z=\"DOMContentLoaded\",Y=\"DOMMouseScroll\",Z=\"error\",$=\"focus\",_=\"focusin\",ee=\"focusout\",te=\"gesturechange\",ne=\"gestureend\",oe=\"gesturestart\",se=\"keydown\",re=\"keypress\",ae=\"keyup\",ce=\"load\",ie=\"click\",ue=\"dblclick\",le=\"mousedown\",de=\"mouseup\",me=\"hover\",Ee=\"mouseenter\",ve=\"mouseleave\",pe=\"mousein\",ge=\"mouseout\",fe=\"mouseover\",be=\"mousemove\",ye=\"mousewheel\",he=\"move\",Ae=\"orientationchange\",we=\"pointercancel\",Se=\"pointerdown\",ke=\"pointerleave\",De=\"pointermove\",Me=\"pointerup\",Ne=\"readystatechange\",Te=\"reset\",Ce=\"resize\",Le=\"select\",Oe=\"selectend\",Ie=\"selectstart\",ze=\"scroll\",xe=\"submit\",He=\"touchstart\",Be=\"touchmove\",Ve=\"touchcancel\",Pe=\"touchend\",Fe=\"unload\",Mt={DOMContentLoaded:z,DOMMouseScroll:Y,abort:q,beforeunload:G,blur:K,change:J,click:ie,contextmenu:X,dblclick:ue,error:Z,focus:$,focusin:_,focusout:ee,gesturechange:te,gestureend:ne,gesturestart:oe,hover:me,keydown:se,keypress:re,keyup:ae,load:ce,mousedown:le,mousemove:be,mousein:pe,mouseout:ge,mouseenter:Ee,mouseleave:ve,mouseover:fe,mouseup:de,mousewheel:ye,move:he,orientationchange:Ae,pointercancel:we,pointerdown:Se,pointerleave:ke,pointermove:De,pointerup:Me,readystatechange:Ne,reset:Te,resize:Ce,scroll:ze,select:Le,selectend:Oe,selectstart:Ie,submit:xe,touchcancel:Ve,touchend:Pe,touchmove:Be,touchstart:He,unload:Fe},Nt=\"drag\",Tt=\"dragstart\",Ct=\"dragenter\",Lt=\"dragleave\",Ot=\"dragover\",It=\"dragend\",zt=\"loadstart\",xt={start:\"mousedown\",end:\"mouseup\",move:\"mousemove\",cancel:\"mouseleave\"},Ht={down:\"mousedown\",up:\"mouseup\"},Bt=\"onmouseleave\"in document?[\"mouseenter\",\"mouseleave\"]:[\"mouseover\",\"mouseout\"],Vt={start:\"touchstart\",end:\"touchend\",move:\"touchmove\",cancel:\"touchcancel\"},Pt={in:\"focusin\",out:\"focusout\"},Ft={Backspace:\"Backspace\",Tab:\"Tab\",Enter:\"Enter\",Shift:\"Shift\",Control:\"Control\",Alt:\"Alt\",Pause:\"Pause\",CapsLock:\"CapsLock\",Escape:\"Escape\",Scape:\"Space\",ArrowLeft:\"ArrowLeft\",ArrowUp:\"ArrowUp\",ArrowRight:\"ArrowRight\",ArrowDown:\"ArrowDown\",Insert:\"Insert\",Delete:\"Delete\",Meta:\"Meta\",ContextMenu:\"ContextMenu\",ScrollLock:\"ScrollLock\"},Rt=\"Alt\",Wt=\"ArrowDown\",Ut=\"ArrowUp\",jt=\"ArrowLeft\",Qt=\"ArrowRight\",qt=\"Backspace\",Gt=\"CapsLock\",Kt=\"Control\",Jt=\"Delete\",Xt=\"Enter\",Yt=\"Escape\",Zt=\"Insert\",$t=\"Meta\",_t=\"Pause\",en=\"ScrollLock\",tn=\"Shift\",nn=\"Space\",on=\"Tab\",Re=\"animationDuration\",We=\"animationDelay\",x=\"animationName\",N=\"animationend\",Ue=\"transitionDuration\",je=\"transitionDelay\",T=\"transitionend\",H=\"transitionProperty\",sn=\"addEventListener\",rn=\"removeEventListener\",an={linear:\"linear\",easingSinusoidalIn:\"cubic-bezier(0.47,0,0.745,0.715)\",easingSinusoidalOut:\"cubic-bezier(0.39,0.575,0.565,1)\",easingSinusoidalInOut:\"cubic-bezier(0.445,0.05,0.55,0.95)\",easingQuadraticIn:\"cubic-bezier(0.550,0.085,0.680,0.530)\",easingQuadraticOut:\"cubic-bezier(0.250,0.460,0.450,0.940)\",easingQuadraticInOut:\"cubic-bezier(0.455,0.030,0.515,0.955)\",easingCubicIn:\"cubic-bezier(0.55,0.055,0.675,0.19)\",easingCubicOut:\"cubic-bezier(0.215,0.61,0.355,1)\",easingCubicInOut:\"cubic-bezier(0.645,0.045,0.355,1)\",easingQuarticIn:\"cubic-bezier(0.895,0.03,0.685,0.22)\",easingQuarticOut:\"cubic-bezier(0.165,0.84,0.44,1)\",easingQuarticInOut:\"cubic-bezier(0.77,0,0.175,1)\",easingQuinticIn:\"cubic-bezier(0.755,0.05,0.855,0.06)\",easingQuinticOut:\"cubic-bezier(0.23,1,0.32,1)\",easingQuinticInOut:\"cubic-bezier(0.86,0,0.07,1)\",easingExponentialIn:\"cubic-bezier(0.95,0.05,0.795,0.035)\",easingExponentialOut:\"cubic-bezier(0.19,1,0.22,1)\",easingExponentialInOut:\"cubic-bezier(1,0,0,1)\",easingCircularIn:\"cubic-bezier(0.6,0.04,0.98,0.335)\",easingCircularOut:\"cubic-bezier(0.075,0.82,0.165,1)\",easingCircularInOut:\"cubic-bezier(0.785,0.135,0.15,0.86)\",easingBackIn:\"cubic-bezier(0.6,-0.28,0.735,0.045)\",easingBackOut:\"cubic-bezier(0.175,0.885,0.32,1.275)\",easingBackInOut:\"cubic-bezier(0.68,-0.55,0.265,1.55)\"},cn=\"offsetHeight\",un=\"offsetWidth\",ln=\"scrollHeight\",dn=\"scrollWidth\",mn=\"tabindex\",En=navigator.userAgentData,w=En,{userAgent:vn}=navigator,S=vn,W=/iPhone|iPad|iPod|Android/i;let O=!1;w?O=w.brands.some(e=>W.test(e.brand)):O=W.test(S);const pn=O,U=/(iPhone|iPod|iPad)/,gn=w?w.brands.some(e=>U.test(e.brand)):U.test(S),fn=S?S.includes(\"Firefox\"):!1,{head:k}=document,bn=[\"webkitPerspective\",\"perspective\"].some(e=>e in k.style),Qe=(e,t,n,o)=>{const s=o||!1;e.addEventListener(t,n,s)},qe=(e,t,n,o)=>{const s=o||!1;e.removeEventListener(t,n,s)},Ge=(e,t,n,o)=>{const s=r=>{(r.target===e||r.currentTarget===e)&&(n.apply(e,[r]),qe(e,t,s,o))};Qe(e,t,s,o)},Ke=()=>{},yn=(()=>{let e=!1;try{const t=Object.defineProperty({},\"passive\",{get:()=>(e=!0,e)});Ge(document,z,Ke,t)}catch{}return e})(),hn=[\"webkitTransform\",\"transform\"].some(e=>e in k.style),An=\"ontouchstart\"in window||\"msMaxTouchPoints\"in navigator,wn=[\"webkitAnimation\",\"animation\"].some(e=>e in k.style),Sn=[\"webkitTransition\",\"transition\"].some(e=>e in k.style),Je=(e,t)=>e.getAttribute(t),kn=(e,t,n)=>t.getAttributeNS(e,n),Dn=(e,t)=>e.hasAttribute(t),Mn=(e,t,n)=>t.hasAttributeNS(e,n),B=(e,t,n)=>e.setAttribute(t,n),Nn=(e,t,n,o)=>t.setAttributeNS(e,n,o),Tn=(e,t)=>e.removeAttribute(t),Cn=(e,t,n)=>t.removeAttributeNS(e,n),Ln=(e,...t)=>{e.classList.add(...t)},On=(e,...t)=>{e.classList.remove(...t)},In=(e,t)=>e.classList.contains(t),{body:zn}=document,{documentElement:xn}=document,Hn=e=>Array.from(e),v=e=>e!=null&&typeof e==\"object\"||!1,i=e=>v(e)&&typeof e.nodeType==\"number\"&&[1,2,3,4,5,6,7,8,9,10,11].some(t=>e.nodeType===t)||!1,u=e=>i(e)&&e.nodeType===1||!1,A=new Map,C={set:(e,t,n)=>{if(!u(e))return;A.has(t)||A.set(t,new Map),A.get(t).set(e,n)},getAllFor:e=>A.get(e)||null,get:(e,t)=>{if(!u(e)||!t)return null;const n=C.getAllFor(t);return e&&n&&n.get(e)||null},remove:(e,t)=>{const n=C.getAllFor(t);!n||!u(e)||(n.delete(e),n.size===0&&A.delete(t))}},Bn=(e,t)=>C.get(e,t),m=e=>typeof e==\"string\"||!1,V=e=>v(e)&&e.constructor.name===\"Window\"||!1,P=e=>i(e)&&e.nodeType===9||!1,d=e=>V(e)?e.document:P(e)?e:i(e)?e.ownerDocument:window.document,b=e=>Object.entries(e),Xe=e=>{if(!e)return;if(m(e))return d().createElement(e);const{tagName:t}=e,n=Xe(t);if(!n)return;const o={...e};return delete o.tagName,b(o).forEach(([s,r])=>{m(s)&&m(r)&&B(n,s,r)}),n},Ye=(e,t)=>{if(!e||!t)return;if(m(t))return d().createElementNS(e,t);const{tagName:n}=t,o=Ye(e,n);if(!o)return;const s={...t};return delete s.tagName,b(s).forEach(([r,c])=>{m(r)&&m(c)&&B(o,r,c)}),o},F=(e,t)=>e.dispatchEvent(t),Vn=(e,t,n)=>n.indexOf(e)===t,E=(e,t)=>{const n=getComputedStyle(e),o=t.replace(\"webkit\",\"Webkit\").replace(/([A-Z])/g,\"-$1\").toLowerCase();return n.getPropertyValue(o)},Ze=e=>{const t=E(e,x),n=E(e,We),o=n.includes(\"ms\")?1:1e3,s=t&&t!==\"none\"?parseFloat(n)*o:0;return Number.isNaN(s)?0:s},$e=e=>{const t=E(e,x),n=E(e,Re),o=n.includes(\"ms\")?1:1e3,s=t&&t!==\"none\"?parseFloat(n)*o:0;return Number.isNaN(s)?0:s},Pn=(e,t)=>{let n=0;const o=new Event(N),s=$e(e),r=Ze(e);if(s){const c=l=>{l.target===e&&(t.apply(e,[l]),e.removeEventListener(N,c),n=1)};e.addEventListener(N,c),setTimeout(()=>{n||F(e,o)},s+r+17)}else t.apply(e,[o])},_e=e=>{const t=E(e,H),n=E(e,je),o=n.includes(\"ms\")?1:1e3,s=t&&t!==\"none\"?parseFloat(n)*o:0;return Number.isNaN(s)?0:s},et=e=>{const t=E(e,H),n=E(e,Ue),o=n.includes(\"ms\")?1:1e3,s=t&&t!==\"none\"?parseFloat(n)*o:0;return Number.isNaN(s)?0:s},Fn=(e,t)=>{let n=0;const o=new Event(T),s=et(e),r=_e(e);if(s){const c=l=>{l.target===e&&(t.apply(e,[l]),e.removeEventListener(T,c),n=1)};e.addEventListener(T,c),setTimeout(()=>{n||F(e,o)},s+r+17)}else t.apply(e,[o])},Rn=e=>Float32Array.from(Array.from(e)),Wn=e=>Float64Array.from(Array.from(e)),Un=(e,t)=>e.focus(t),I=e=>[\"true\",!0].includes(e)?!0:[\"false\",!1].includes(e)?!1:[\"null\",\"\",null,void 0].includes(e)?null:e!==\"\"&&!Number.isNaN(+e)?+e:e,tt=e=>e.toLowerCase(),jn=(e,t,n,o)=>{const s={...n},r={...e.dataset},c={...t},l={},p=\"title\";return b(r).forEach(([a,g])=>{const M=o&&typeof a==\"string\"&&a.includes(o)?a.replace(o,\"\").replace(/[A-Z]/g,lt=>tt(lt)):a;l[M]=I(g)}),b(s).forEach(([a,g])=>{s[a]=I(g)}),b(t).forEach(([a,g])=>{a in s?c[a]=s[a]:a in l?c[a]=l[a]:c[a]=a===p?Je(e,p):g}),c},R=(e,...t)=>Object.assign(e,...t),Qn=(e,t)=>v(e)&&(Object.hasOwn(e,t)||t in e),qn=e=>Object.keys(e),Gn=e=>Object.values(e),Kn=(e,t)=>{const n=new CustomEvent(e,{cancelable:!0,bubbles:!0});return v(t)&&R(n,t),n},Jn={passive:!0},Xn=e=>e.offsetHeight,Yn=(e,t)=>{b(t).forEach(([n,o])=>{if(o&&m(n)&&n.includes(\"--\"))e.style.setProperty(n,o);else{const s={};s[n]=o,R(e.style,s)}})},L=e=>v(e)&&e.constructor.name===\"Map\"||!1,nt=e=>typeof e==\"number\"||!1,f=new Map,Zn={set:(e,t,n,o)=>{u(e)&&(o&&o.length?(f.has(e)||f.set(e,new Map),f.get(e).set(o,setTimeout(t,n))):f.set(e,setTimeout(t,n)))},get:(e,t)=>{if(!u(e))return null;const n=f.get(e);return t&&n&&L(n)?n.get(t)||null:nt(n)?n:null},clear:(e,t)=>{if(!u(e))return;const n=f.get(e);t&&t.length&&L(n)?(clearTimeout(n.get(t)),n.delete(t),n.size===0&&f.delete(e)):(clearTimeout(n),f.delete(e))}},$n=e=>e.toUpperCase(),h=(e,t)=>{const{width:n,height:o,top:s,right:r,bottom:c,left:l}=e.getBoundingClientRect();let p=1,a=1;if(t&&u(e)){const{offsetWidth:g,offsetHeight:M}=e;p=g>0?Math.round(n)/g:1,a=M>0?Math.round(o)/M:1}return{width:n/p,height:o/a,top:s/a,right:r/p,bottom:c/a,left:l/p,x:l/p,y:s/a}},_n=e=>d(e).body,D=e=>d(e).documentElement,eo=e=>d(e).head,to=e=>{const t=V(e),n=t?e.scrollX:e.scrollLeft,o=t?e.scrollY:e.scrollTop;return{x:n,y:o}},ot=e=>i(e)&&e.constructor.name===\"ShadowRoot\"||!1,no=e=>e.nodeName===\"HTML\"?e:u(e)&&e.assignedSlot||i(e)&&e.parentNode||ot(e)&&e.host||D(e),st=e=>{if(!u(e))return!1;const{width:t,height:n}=h(e),{offsetWidth:o,offsetHeight:s}=e;return Math.round(t)!==o||Math.round(n)!==s},oo=(e,t,n)=>{const o=u(t),s=h(e,o&&st(t)),r={x:0,y:0};if(o){const c=h(t,!0);r.x=c.x+t.clientLeft,r.y=c.y+t.clientTop}return{x:s.left+n.x-r.x,y:s.top+n.y-r.y,width:s.width,height:s.height}};let j=0,Q=0;const y=new Map,rt=(e,t)=>{let n=t?j:Q;if(t){const o=rt(e),s=y.get(o)||new Map;y.has(o)||y.set(o,s),L(s)&&!s.has(t)?(s.set(t,n),j+=1):n=s.get(t)}else{const o=e.id||e;y.has(o)?n=y.get(o):(y.set(o,n),Q+=1)}return n},so=e=>{var t;return e?P(e)?e.defaultView:i(e)?(t=e==null?void 0:e.ownerDocument)==null?void 0:t.defaultView:e:window},at=e=>Array.isArray(e)||!1,ro=e=>i(e)&&e.nodeName===\"CANVAS\"||!1,ct=e=>u(e)&&!!e.shadowRoot||!1,ao=e=>i(e)&&[1,2,3,4,5,6,7,8].some(t=>e.nodeType===t)||!1,co=e=>{if(!i(e))return!1;const{top:t,bottom:n}=h(e),{clientHeight:o}=D(e);return t<=o&&n>=0},io=e=>{if(!i(e))return!1;const{clientWidth:t,clientHeight:n}=D(e),{top:o,left:s,bottom:r,right:c}=h(e,!0);return o>=0&&s>=0&&r<=n&&c<=t},uo=e=>at(e)&&e.every(u)||!1,lo=e=>typeof e==\"function\"||!1,mo=e=>v(e)&&e.constructor.name===\"HTMLCollection\"||!1,Eo=e=>u(e)&&e.tagName===\"IMG\"||!1,vo=e=>{if(!m(e))return!1;try{JSON.parse(e)}catch{return!1}return!0},po=e=>v(e)&&e.constructor.name===\"WeakMap\"||!1,go=e=>i(e)&&[\"SVG\",\"Image\",\"Video\",\"Canvas\"].some(t=>e.constructor.name.includes(t))||!1,fo=e=>v(e)&&e.constructor.name===\"NodeList\"||!1,bo=e=>D(e).dir===\"rtl\",yo=e=>i(e)&&e.constructor.name.includes(\"SVG\")||!1,ho=e=>i(e)&&[\"TABLE\",\"TD\",\"TH\"].includes(e.nodeName)||!1,it=(e,t)=>e?e.closest(t)||it(e.getRootNode().host,t):null,Ao=(e,t)=>u(e)?e:(i(t)?t:d()).querySelector(e),ut=(e,t)=>(i(t)?t:d()).getElementsByTagName(e),wo=e=>[...ut(\"*\",e)].filter(ct),So=(e,t)=>d(t).getElementById(e)||null,ko=(e,t)=>(i(t)?t:d()).querySelectorAll(e),Do=(e,t)=>(t&&i(t)?t:d()).getElementsByClassName(e),Mo=(e,t)=>e.matches(t);exports.ArrayFrom=Hn;exports.DOMContentLoadedEvent=z;exports.DOMMouseScrollEvent=Y;exports.Data=C;exports.Float32ArrayFrom=Rn;exports.Float64ArrayFrom=Wn;exports.ObjectAssign=R;exports.ObjectEntries=b;exports.ObjectHasOwn=Qn;exports.ObjectKeys=qn;exports.ObjectValues=Gn;exports.Timer=Zn;exports.abortEvent=q;exports.addClass=Ln;exports.addEventListener=sn;exports.animationDelay=We;exports.animationDuration=Re;exports.animationEndEvent=N;exports.animationName=x;exports.ariaChecked=dt;exports.ariaDescribedBy=Et;exports.ariaDescription=mt;exports.ariaExpanded=vt;exports.ariaHasPopup=pt;exports.ariaHidden=gt;exports.ariaLabel=ft;exports.ariaLabelledBy=bt;exports.ariaModal=yt;exports.ariaPressed=ht;exports.ariaSelected=At;exports.ariaValueMax=St;exports.ariaValueMin=wt;exports.ariaValueNow=kt;exports.ariaValueText=Dt;exports.beforeunloadEvent=G;exports.bezierEasings=an;exports.blurEvent=K;exports.changeEvent=J;exports.closest=it;exports.contextmenuEvent=X;exports.createCustomEvent=Kn;exports.createElement=Xe;exports.createElementNS=Ye;exports.dispatchEvent=F;exports.distinct=Vn;exports.documentBody=zn;exports.documentElement=xn;exports.documentHead=k;exports.dragEvent=Nt;exports.dragendEvent=It;exports.dragenterEvent=Ct;exports.dragleaveEvent=Lt;exports.dragoverEvent=Ot;exports.dragstartEvent=Tt;exports.emulateAnimationEnd=Pn;exports.emulateTransitionEnd=Fn;exports.errorEvent=Z;exports.focus=Un;exports.focusEvent=$;exports.focusEvents=Pt;exports.focusinEvent=_;exports.focusoutEvent=ee;exports.gesturechangeEvent=te;exports.gestureendEvent=ne;exports.gesturestartEvent=oe;exports.getAttribute=Je;exports.getAttributeNS=kn;exports.getBoundingClientRect=h;exports.getCustomElements=wo;exports.getDocument=d;exports.getDocumentBody=_n;exports.getDocumentElement=D;exports.getDocumentHead=eo;exports.getElementAnimationDelay=Ze;exports.getElementAnimationDuration=$e;exports.getElementById=So;exports.getElementStyle=E;exports.getElementTransitionDelay=_e;exports.getElementTransitionDuration=et;exports.getElementsByClassName=Do;exports.getElementsByTagName=ut;exports.getInstance=Bn;exports.getNodeScroll=to;exports.getParentNode=no;exports.getRectRelativeToOffsetParent=oo;exports.getUID=rt;exports.getWindow=so;exports.hasAttribute=Dn;exports.hasAttributeNS=Mn;exports.hasClass=In;exports.isApple=gn;exports.isArray=at;exports.isCanvas=ro;exports.isCustomElement=ct;exports.isDocument=P;exports.isElement=ao;exports.isElementInScrollRange=co;exports.isElementInViewport=io;exports.isElementsArray=uo;exports.isFirefox=fn;exports.isFunction=lo;exports.isHTMLCollection=mo;exports.isHTMLElement=u;exports.isHTMLImageElement=Eo;exports.isJSON=vo;exports.isMap=L;exports.isMedia=go;exports.isMobile=pn;exports.isNode=i;exports.isNodeList=fo;exports.isNumber=nt;exports.isObject=v;exports.isRTL=bo;exports.isSVGElement=yo;exports.isScaledElement=st;exports.isShadowRoot=ot;exports.isString=m;exports.isTableElement=ho;exports.isWeakMap=po;exports.isWindow=V;exports.keyAlt=Rt;exports.keyArrowDown=Wt;exports.keyArrowLeft=jt;exports.keyArrowRight=Qt;exports.keyArrowUp=Ut;exports.keyBackspace=qt;exports.keyCapsLock=Gt;exports.keyControl=Kt;exports.keyDelete=Jt;exports.keyEnter=Xt;exports.keyEscape=Yt;exports.keyInsert=Zt;exports.keyMeta=$t;exports.keyPause=_t;exports.keyScrollLock=en;exports.keyShift=tn;exports.keySpace=nn;exports.keyTab=on;exports.keyboardEventKeys=Ft;exports.keydownEvent=se;exports.keypressEvent=re;exports.keyupEvent=ae;exports.loadEvent=ce;exports.loadstartEvent=zt;exports.matches=Mo;exports.mouseClickEvents=Ht;exports.mouseHoverEvents=Bt;exports.mouseSwipeEvents=xt;exports.mouseclickEvent=ie;exports.mousedblclickEvent=ue;exports.mousedownEvent=le;exports.mouseenterEvent=Ee;exports.mousehoverEvent=me;exports.mouseinEvent=pe;exports.mouseleaveEvent=ve;exports.mousemoveEvent=be;exports.mouseoutEvent=ge;exports.mouseoverEvent=fe;exports.mouseupEvent=de;exports.mousewheelEvent=ye;exports.moveEvent=he;exports.nativeEvents=Mt;exports.noop=Ke;exports.normalizeOptions=jn;exports.normalizeValue=I;exports.off=qe;exports.offsetHeight=cn;exports.offsetWidth=un;exports.on=Qe;exports.one=Ge;exports.orientationchangeEvent=Ae;exports.passiveHandler=Jn;exports.pointercancelEvent=we;exports.pointerdownEvent=Se;exports.pointerleaveEvent=ke;exports.pointermoveEvent=De;exports.pointerupEvent=Me;exports.querySelector=Ao;exports.querySelectorAll=ko;exports.readystatechangeEvent=Ne;exports.reflow=Xn;exports.removeAttribute=Tn;exports.removeAttributeNS=Cn;exports.removeClass=On;exports.removeEventListener=rn;exports.resetEvent=Te;exports.resizeEvent=Ce;exports.scrollEvent=ze;exports.scrollHeight=ln;exports.scrollWidth=dn;exports.selectEvent=Le;exports.selectendEvent=Oe;exports.selectstartEvent=Ie;exports.setAttribute=B;exports.setAttributeNS=Nn;exports.setElementStyle=Yn;exports.submitEvent=xe;exports.support3DTransform=bn;exports.supportAnimation=wn;exports.supportPassive=yn;exports.supportTouch=An;exports.supportTransform=hn;exports.supportTransition=Sn;exports.tabindex=mn;exports.toLowerCase=tt;exports.toUpperCase=$n;exports.touchEvents=Vt;exports.touchcancelEvent=Ve;exports.touchendEvent=Pe;exports.touchmoveEvent=Be;exports.touchstartEvent=He;exports.transitionDelay=je;exports.transitionDuration=Ue;exports.transitionEndEvent=T;exports.transitionProperty=H;exports.unloadEvent=Fe;exports.userAgent=S;exports.userAgentData=w;\n//# sourceMappingURL=shorty.cjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  element: HTMLElement;\n  options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<this>(element, this.name);\n    if (prevInstance) prevInstance.dispose();\n\n    this.element = element;\n\n    /* istanbul ignore else */\n    if (this.defaults && ObjectKeys(this.defaults).length) {\n      this.options = normalizeOptions(element, this.defaults, config || {}, 'bs');\n    }\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /**\n   * Removes component from target element;\n   */\n  dispose() {\n    Data.remove(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  closest,\n  // ObjectAssign,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n// import type { BaseOptions } from 'src/interface/baseComponent';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (that: Alert) => {\n  const { element } = that;\n  toggleAlertHandler(that);\n\n  dispatchEvent(element, closedAlertEvent);\n\n  that.dispose();\n  element.remove();\n};\n\n// ALERT PRIVATE METHOD\n// ====================\n/**\n * Toggle on / off the `click` event listener.\n *\n * @param that the target alert instance\n * @param add when `true`, event listener is added\n */\nconst toggleAlertHandler = (that: Alert, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { dismiss } = that;\n  /* istanbul ignore else */\n  if (dismiss) action(dismiss, mouseclickEvent, that.close);\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    toggleAlertHandler(this, true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   *\n   * @param e the `click` event\n   */\n  close(e?: Event) {\n    const self = e ? (getAlertInstance(closest(e.target as HTMLElement, alertSelector) as HTMLElement) as Alert) : this;\n    const { element } = self;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n      if (closeAlertEvent.defaultPrevented) return;\n\n      removeClass(element, showClass);\n\n      if (hasClass(element, fadeClass)) {\n        emulateTransitionEnd(element, () => alertTransitionEnd(self));\n      } else alertTransitionEnd(self);\n    }\n  }\n\n  /** Remove the component from target element. */\n  dispose() {\n    toggleAlertHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  // ObjectAssign,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON PRIVATE METHOD\n// =====================\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Button` instance\n * @param add when `true`, event listener is added\n */\nconst toggleButtonHandler = (self: Button, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, self.toggle);\n};\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    toggleButtonHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle(e: Event) {\n    if (e) e.preventDefault();\n    const self = e ? (getButtonInstance(e.target as HTMLElement) as Button) : this;\n    if (!self.element) return;\n    const { element, isActive } = self;\n\n    if (hasClass(element, 'disabled')) return;\n\n    const action = isActive ? removeClass : addClass;\n    action(element, activeClass);\n    setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n    self.isActive = hasClass(element, activeClass);\n  }\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    toggleButtonHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  touchstartEvent,\n  dragstartEvent,\n  addClass,\n  hasClass,\n  removeClass,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  // discontinue disposed instances\n  /* istanbul ignore else */\n  if (self.isAnimating && getCarouselInstance(element)) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // check for element, might have been disposed\n    if (!getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n\n  const newIndex = +(getAttribute(this, dataBsSlideTo) || /* istanbul ignore next */ 0);\n\n  if (\n    this &&\n    !hasClass(this, activeClass) && // event target is not active\n    !Number.isNaN(newIndex)\n  ) {\n    // AND has the specific attribute\n    self.to(newIndex); // do the slide\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const control = this;\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n  const orientation = getAttribute(this, dataBsSlide);\n\n  /* istanbul ignore else */\n  if (orientation === 'next') {\n    self.next();\n  } else if (orientation === 'prev') {\n    self.prev();\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (!self || self.isAnimating || /textarea|input/i.test(target.nodeName)) return;\n  const RTL = isRTL(element);\n  const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n  const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n  /* istanbul ignore else */\n  if (code === arrowKeyPrev) self.prev();\n  else if (code === arrowKeyNext) self.next();\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  /* istanbul ignore next */\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) || !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (!self || self.isAnimating || self.isTouch) {\n    return;\n  }\n\n  // filter pointer event on controls & indicators\n  const { controls, indicators } = self;\n  if ([...controls, ...indicators].some(el => el === target || el.contains(target as Node))) {\n    return;\n  }\n\n  startX = e.pageX;\n\n  /* istanbul ignore else */\n  if (this.contains(target as Node)) {\n    self.isTouch = true;\n    toggleCarouselTouchHandlers(self, true);\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore next */\n  if (!self) {\n    return;\n  }\n\n  const { element, index } = self;\n  const RTL = isRTL(element);\n\n  self.isTouch = false;\n  toggleCarouselTouchHandlers(self);\n\n  if (doc.getSelection()?.toString().length) {\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n    return;\n  }\n\n  endX = e.pageX;\n\n  // the event target is outside the carousel context\n  // OR swipe distance is less than 120px\n  /* istanbul ignore else */\n  if (!element.contains(target as HTMLElement) || Math.abs(startX - endX) < 120) {\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n    return;\n  }\n  // OR determine next index to slide to\n  /* istanbul ignore else */\n  if (currentX < startX) {\n    self.to(index + (RTL ? -1 : 1));\n  } else if (currentX > startX) {\n    self.to(index + (RTL ? 1 : -1));\n  }\n  // reset pointer position\n  startX = 0;\n  currentX = 0;\n  endX = 0;\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param pageIndex the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, pageIndex: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[pageIndex]) addClass(indicators[pageIndex], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler as EventListener, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler as EventListener, passiveHandler);\n};\n\n/**\n * Toggles all event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselHandlers = (self: Carousel, add?: boolean) => {\n  const { element, options, slides, controls, indicators } = self;\n  const { touch, pause, interval, keyboard } = options;\n  const action = add ? addListener : removeListener;\n\n  if (pause && interval) {\n    action(element, mouseenterEvent, carouselPauseHandler);\n    action(element, mouseleaveEvent, carouselResumeHandler);\n  }\n\n  if (touch && slides.length > 2) {\n    action(element, pointerdownEvent, carouselPointerDownHandler as EventListener, passiveHandler);\n    action(element, touchstartEvent, carouselDragHandler as unknown as EventListener, { passive: false });\n    action(element, dragstartEvent, carouselDragHandler as unknown as EventListener, { passive: false });\n  }\n\n  /* istanbul ignore else */\n  if (controls.length) {\n    controls.forEach(arrow => {\n      /* istanbul ignore else */\n      if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler as EventListener);\n    });\n  }\n\n  /* istanbul ignore else */\n  if (indicators.length) {\n    indicators.forEach(indicator => {\n      action(indicator, mouseclickEvent, carouselIndicatorHandler as EventListener);\n    });\n  }\n\n  if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler as EventListener);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.index = 0;\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length < 2) {\n      return;\n    }\n    // external controls must be within same document context\n    const doc = getDocument(element);\n\n    this.controls = [\n      ...querySelectorAll(`[${dataBsSlide}]`, element),\n      ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n    // a LIVE collection is prefferable\n    this.indicators = [\n      ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n      ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    // set JavaScript and DATA API options\n    const { options } = this;\n\n    // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n    this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n    // set first slide active if none\n    /* istanbul ignore else */\n    if (getActiveIndex(this) < 0) {\n      addClass(slides[0], activeClass);\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, 0);\n    }\n\n    // attach event handlers\n    toggleCarouselHandlers(this, true);\n\n    // start to cycle if interval is set\n    if (options.interval) this.cycle();\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (this.isAnimating || activeItem === next || Timer.get(element, dataBsSlide)) return;\n\n    // determine transition direction\n    /* istanbul ignore else */\n    if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n      this.direction = RTL ? 'right' : 'left'; // next\n    } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n      this.direction = RTL ? 'left' : 'right'; // prev\n    }\n    const { direction } = this;\n\n    // find the right next index\n    if (next < 0) {\n      next = slides.length - 1;\n    } else if (next >= slides.length) {\n      next = 0;\n    }\n\n    // orientation, class name, eventProperties\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    const eventProperties = {\n      relatedTarget: slides[next],\n      from: activeItem,\n      to: next,\n      direction,\n    };\n\n    // update event properties\n    ObjectAssign(carouselSlideEvent, eventProperties);\n    ObjectAssign(carouselSlidEvent, eventProperties);\n\n    // discontinue when prevented\n    dispatchEvent(element, carouselSlideEvent);\n    if (carouselSlideEvent.defaultPrevented) return;\n\n    // update index\n    this.index = next;\n    activateCarouselIndicator(this, next);\n\n    if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n      Timer.set(\n        element,\n        () => {\n          addClass(slides[next], `${carouselItem}-${orientation}`);\n          reflow(slides[next]);\n          addClass(slides[next], `${carouselItem}-${directionClass}`);\n          addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n          emulateTransitionEnd(slides[next], () => carouselTransitionEndHandler(this));\n        },\n        0,\n        dataBsSlide,\n      );\n    } else {\n      addClass(slides[next], activeClass);\n      removeClass(slides[activeItem], activeClass);\n\n      Timer.set(\n        element,\n        () => {\n          Timer.clear(element, dataBsSlide);\n          // check for element, might have been disposed\n          /* istanbul ignore else */\n          if (element && options.interval && !this.isPaused) {\n            this.cycle();\n          }\n\n          dispatchEvent(element, carouselSlidEvent);\n        },\n        0,\n        dataBsSlide,\n      );\n    }\n  }\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { slides } = this;\n    const itemClasses = ['start', 'end', 'prev', 'next'];\n\n    [...slides].forEach((slide, idx) => {\n      if (hasClass(slide, activeClass)) activateCarouselIndicator(this, idx);\n      itemClasses.forEach(c => removeClass(slide, `${carouselItem}-${c}`));\n    });\n\n    toggleCarouselHandlers(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (showCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  addClass(element, collapsingClass);\n  removeClass(element, collapseString);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n    addClass(element, showClass);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, shownCollapseEvent);\n  });\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (hideCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  removeClass(element, collapseString);\n  removeClass(element, showClass);\n  addClass(element, collapsingClass);\n\n  reflow(element);\n  setElementStyle(element, { height: '0px' });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    /* istanbul ignore else */\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, hiddenCollapseEvent);\n  });\n};\n\n/**\n * Toggles on/off the event listener(s) of the `Collapse` instance.\n *\n * @param self the `Collapse` instance\n * @param add when `true`, the event listener is added\n */\nconst toggleCollapseHandler = (self: Collapse, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler as EventListener));\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = querySelector(options.parent as HTMLElement | string, doc) || getTargetElement(element) || null;\n    this.parent = getTargetElement(element) || null;\n\n    // add event listeners\n    toggleCollapseHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (Timer.get(element)) return;\n\n    collapseContent(this);\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    toggleCollapseHandler(this);\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (element as HTMLAnchorElement).href.slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor && hasAttribute(parentAnchor, 'href') && (parentAnchor as HTMLAnchorElement).href.slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  querySelector,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"],[${dataBsToggle}=\"${dropupString}\"],[${dataBsToggle}=\"${dropendString}\"],[${dataBsToggle}=\"${dropstartString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<DropdownEvent>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore next: this test requires a navbar */\n  if (getElementStyle(menu, 'position') === 'static') return;\n\n  const RTL = isRTL(element);\n  // const menuStart = hasClass(menu, dropdownMenuStartClass);\n  const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n  // reset menu offset and position\n  const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n  resetProps.forEach(p => {\n    // menu.style[p] = '';\n    const style: { [key: string]: string } = {};\n    style[p] = '';\n    setElementStyle(menu, style);\n  });\n\n  // set initial position class\n  // take into account .btn-group parent as .dropdown\n  // this requires navbar/btn-group/input-group\n  let positionClass =\n    dropdownClasses.find(c => hasClass(parentElement, c)) ||\n    /* istanbul ignore next: fallback position */ dropdownString;\n\n  const dropdownMargin: { [key: string]: number[] } = {\n    dropdown: [offset, 0, 0],\n    dropup: [0, 0, offset],\n    dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n    dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n  };\n\n  const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n    dropdown: { top: '100%' },\n    dropup: { top: 'auto', bottom: '100%' },\n    dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n    dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n    menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n    menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n  };\n\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const { left: targetLeft, top: targetTop, width: targetWidth, height: targetHeight } = getBoundingClientRect(element);\n\n  // dropstart | dropend\n  const leftFullExceed = targetLeft - menuWidth - offset < 0;\n  // dropend\n  const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n  // dropstart | dropend\n  const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n  // dropdown\n  const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n  // dropup\n  const topExceed = targetTop - menuHeight - offset < 0;\n  // dropdown / dropup\n  const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n  const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n  // recompute position\n  // handle RTL as well\n  if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropendString;\n  }\n  if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropstartString;\n  }\n  if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n    positionClass = dropupString;\n  }\n\n  // override position for horizontal classes\n  if (horizontalClass.includes(positionClass) && bottomExceed) {\n    ObjectAssign(dropdownPosition[positionClass], {\n      top: 'auto',\n      bottom: 0,\n    });\n  }\n\n  // override position for vertical classes\n  if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n    // don't realign when menu is wider than window\n    // in both RTL and non-RTL readability is KING\n    let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n    if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n    if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n    if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n  }\n\n  const margins: number[] = dropdownMargin[positionClass];\n  setElementStyle(menu, {\n    ...dropdownPosition[positionClass],\n    margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n  });\n\n  // override dropdown-menu-start | dropdown-menu-end\n  if (verticalClass.includes(positionClass) && menuEnd) {\n    /* istanbul ignore else */\n    if (menuEnd) {\n      const endAdjust =\n        (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n      setElementStyle(menu, dropdownPosition[endAdjust]);\n    }\n  }\n  // trigger updated event\n  dispatchEvent(parentElement, updatedDropdownEvent);\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler as EventListener);\n  action(doc, focusEvent, dropdownDismissHandler as EventListener);\n  action(doc, keydownEvent, dropdownPreventScroll as EventListener);\n  action(doc, keyupEvent, dropdownKeyHandler as EventListener);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param self the `Dropdown` instance\n * @param add when `true`, it will add the event listener\n */\nconst toggleDropdownHandler = (self: Dropdown, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler as EventListener);\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore next: impossible to satisfy */\n  if (!target || !(target as HTMLElement).closest) return; // some weird FF bug #409\n\n  const element = getCurrentOpenDropdown(target as HTMLElement);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const hasData = closest(target as HTMLElement, dropdownSelector) !== null;\n  const isForm =\n    parentElement &&\n    parentElement.contains(target as HTMLElement) &&\n    ((target as HTMLElement).tagName === 'form' || closest(target as HTMLElement, 'form') !== null);\n\n  if (type === mouseclickEvent && isEmptyAnchor(target as HTMLElement)) {\n    e.preventDefault();\n  }\n  if (type === focusEvent && (target === element || target === menu || menu.contains(target as HTMLElement))) {\n    return;\n  }\n\n  /* istanbul ignore next */\n  if (isForm || hasData) {\n    // smile to ESLint\n  } else if (self) {\n    self.hide();\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopImmediatePropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n  /* istanbul ignore next: impossible to satisfy */\n  if (!self || !activeElement) return;\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n    let idx = menuItems.indexOf(activeElement);\n    /* istanbul ignore else */\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    /* istanbul ignore else */\n    if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n\n    // set targets\n    this.parentElement = parentElement as HTMLElement;\n    this.menu = querySelector(`.${dropdownMenuClass}`, parentElement as HTMLElement) as HTMLElement;\n\n    // add event listener\n    toggleDropdownHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (open) return;\n\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement && getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, showDropdownEvent);\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'true');\n\n    // change menu position\n    styleDropdown(this);\n\n    this.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, hideDropdownEvent);\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'false');\n\n    this.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    toggleDropdownHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'div' }) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import {\n  createElement,\n  getDocument,\n  reflow,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getDocumentBody,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isHTMLElement,\n  isRTL,\n  isFunction,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  focus,\n  Timer,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  action(element, mouseclickEvent, modalDismissHandler as EventListener);\n  action(getWindow(element), resizeEvent, self.update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler as EventListener);\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Modal` instance.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listener is added\n */\nconst toggleModalHandler = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler as EventListener));\n  }\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n * @param callback the `Modal` instance\n */\nconst afterModalHide = (self: Modal, callback?: () => void) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  /* istanbul ignore else */\n  if (isFunction(callback)) callback();\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n * @param callback when `true` skip animation\n */\nconst beforeModalHide = (self: Modal, callback?: () => void) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && !callback && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self, callback);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.toggle();\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(modalActiveSelector, getDocument(target as Node));\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { options } = self;\n  /* istanbul ignore else */\n  if (\n    options.keyboard &&\n    code === keyEscape && // the keyboard option is enabled and the key is 27\n    hasClass(element, showClass)\n  ) {\n    // the modal is not visible\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nfunction modalDismissHandler(this: HTMLElement, e: MouseEvent) {\n  const self = getModalInstance(this);\n\n  // this timer is needed\n  /* istanbul ignore next: must have a filter */\n  if (!self || Timer.get(this)) return;\n\n  const { options, isStatic, modalDialog } = self;\n  const { backdrop } = options;\n  const { target } = e;\n\n  const selectedText = getDocument(this)?.getSelection()?.toString().length;\n  const targetInsideDialog = modalDialog?.contains(target as HTMLElement);\n  const dismiss = target && closest(target as HTMLElement, modalDismissSelector);\n\n  /* istanbul ignore else */\n  if (isStatic && !targetInsideDialog) {\n    Timer.set(\n      this,\n      () => {\n        addClass(this, modalStaticClass);\n        emulateTransitionEnd(modalDialog as HTMLElement, () => staticTransitionEnd(self));\n      },\n      17,\n    );\n  } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n    self.relatedTarget = dismiss || null;\n    self.hide();\n    e.preventDefault();\n  }\n}\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration =\n    (isHTMLElement(modalDialog) ? getElementTransitionDuration(modalDialog) : /* istanbul ignore next */ 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    this.modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    // modal can have multiple triggering elements\n    this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional internals\n    this.isStatic = this.options.backdrop === 'static';\n    this.hasFade = hasClass(element, fadeClass);\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleModalHandler(this, true);\n\n    // bind\n    this.update = this.update.bind(this);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showModalEvent);\n    if (showModalEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n\n    if (currentOpen && currentOpen !== element) {\n      const that =\n        getModalInstance(currentOpen) ||\n        /* istanbul ignore next */\n        getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, offcanvasComponent);\n      if (that) that.hide();\n    }\n    if (backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(element, hasFade, true);\n      } else {\n        toggleOverlayType(true);\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n      setTimeout(() => beforeModalShow(this), overlayDelay);\n    } else {\n      beforeModalShow(this);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hide the modal from the user.\n   *\n   * @param callback when defined it will skip animation\n   */\n  hide(callback?: () => void) {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideModalEvent);\n    if (hideModalEvent.defaultPrevented) return;\n    removeClass(element, showClass);\n    setAttribute(element, ariaHidden, 'true');\n    removeAttribute(element, ariaModal);\n\n    // if (hasFade && callback) {\n    /* istanbul ignore else */\n    if (hasFade) {\n      emulateTransitionEnd(element, () => beforeModalHide(this, callback));\n    } else {\n      beforeModalHide(this, callback);\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update() {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  }\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    toggleModalHandler(this);\n    // use callback\n    this.hide(() => super.dispose());\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  isFunction,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the `click` event listeners.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true*, listeners are added\n */\nconst toggleOffcanvasEvents = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  self.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler as EventListener));\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler as EventListener);\n  action(doc, mouseclickEvent, offcanvasDismissHandler as EventListener);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param callback the hide callback\n */\nconst beforeOffcanvasHide = (self: Offcanvas, callback?: () => void) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => hideOffcanvasComplete(self, callback));\n  } else hideOffcanvasComplete(self, callback);\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must have a filter */\n  if (!self) return;\n\n  const { options, triggers } = self;\n  const { backdrop } = options;\n  const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n  const selection = getDocument(element).getSelection();\n\n  /* istanbul ignore next: a filter is required here */\n  if (overlay.contains(target as HTMLElement) && backdrop === 'static') return;\n\n  /* istanbul ignore else */\n  if (\n    !(selection && selection.toString().length) &&\n    ((!element.contains(target as HTMLElement) &&\n      backdrop &&\n      /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n      (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n  ) {\n    self.relatedTarget = offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n    self.hide();\n  }\n\n  /* istanbul ignore next */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (self.options.keyboard && code === keyEscape) {\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param callback the hide callback\n */\nconst hideOffcanvasComplete = (self: Offcanvas, callback?: () => void) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n  // callback\n  if (isFunction(callback)) callback();\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleOffcanvasEvents(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showOffcanvasEvent);\n    if (showOffcanvasEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const that =\n        getOffcanvasInstance(currentOpen) ||\n        /* istanbul ignore next */\n        getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, modalComponent);\n      if (that) that.hide();\n    }\n\n    if (options.backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(element, true);\n      } else {\n        toggleOverlayType();\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n    } else {\n      beforeOffcanvasShow(this);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hides the offcanvas from the user.\n   *\n   * @param callback when `true` it will skip animation\n   */\n  hide(callback?: () => void) {\n    const { element, relatedTarget } = this;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideOffcanvasEvent);\n    if (hideOffcanvasEvent.defaultPrevented) return;\n\n    addClass(element, offcanvasTogglingClass);\n    removeClass(element, showClass);\n\n    if (!callback) {\n      emulateTransitionEnd(element, () => beforeOffcanvasHide(this, callback));\n    } else beforeOffcanvasHide(this, callback);\n  }\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    toggleOffcanvasEvents(this);\n    this.hide(() => super.dispose());\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  toLowerCase,\n  createCustomEvent,\n  dispatchEvent,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\nimport type { TooltipEvent } from '../interface/tooltip';\nimport type { PopoverEvent } from '../interface/popover';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n  /* istanbul ignore next */\n  if (!tooltip) return;\n  const tipPositions = { ...tipClassPositions };\n  const RTL = isRTL(element);\n\n  // reset tooltip style (top: 0, left: 0 works best)\n  setElementStyle(tooltip, {\n    // top: '0px', left: '0px', right: '', bottom: '',\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  const isPopover = self.name === popoverComponent;\n  const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n  const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n  let { placement } = options;\n  const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n  const parentPosition = getElementStyle(container as HTMLElement, 'position');\n  const fixedParent = parentPosition === 'fixed';\n  const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n  const leftBoundry = RTL && fixedParent ? /* istanbul ignore next */ scrollbarWidth : 0;\n  const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n  const {\n    width: elemWidth,\n    height: elemHeight,\n    left: elemRectLeft,\n    right: elemRectRight,\n    top: elemRectTop,\n  } = getBoundingClientRect(element, true);\n  const { x, y } = {\n    x: elemRectLeft,\n    y: elemRectTop,\n  };\n  // reset arrow style\n  setElementStyle(arrow as HTMLElement, {\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  let topPosition: number | string = 0;\n  let bottomPosition: number | string = '';\n  let leftPosition: number | string = 0;\n  let rightPosition: number | string = '';\n  let arrowTop: number | string = '';\n  let arrowLeft: number | string = '';\n  let arrowRight: number | string = '';\n\n  const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n  const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n  const arrowAdjust = arrowWidth / 2;\n\n  // check placement\n  let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n  let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n  let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n  let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n  const horizontals = ['left', 'right'];\n  const verticals = ['top', 'bottom'];\n\n  topExceed = horizontals.includes(placement)\n    ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n    : topExceed;\n  bottomExceed = horizontals.includes(placement)\n    ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n    : bottomExceed;\n  leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n  rightExceed = verticals.includes(placement)\n    ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n    : rightExceed;\n\n  // first remove side positions if both left and right limits are exceeded\n  // we usually fall back to top|bottom\n  placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n  // recompute placement\n  placement = placement === 'top' && topExceed ? 'bottom' : placement;\n  placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n  placement = placement === 'left' && leftExceed ? 'right' : placement;\n  placement = placement === 'right' && rightExceed ? 'left' : placement;\n\n  // update tooltip/popover class\n  if (!tooltip.className.includes(placement)) {\n    tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n  }\n\n  // compute tooltip / popover coordinates\n  /* istanbul ignore else */\n  if (horizontals.includes(placement)) {\n    // secondary|side positions\n    if (placement === 'left') {\n      // LEFT\n      leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n    } else {\n      // RIGHT\n      leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n    }\n\n    // adjust top and arrow\n    if (topExceed && bottomExceed) {\n      topPosition = 0;\n      bottomPosition = 0;\n      arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n    } else if (topExceed) {\n      topPosition = y;\n      bottomPosition = '';\n      arrowTop = elemHeight / 2 - arrowWidth;\n    } else if (bottomExceed) {\n      topPosition = y - tipHeight + elemHeight;\n      bottomPosition = '';\n      arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n    } else {\n      topPosition = y - tipHeight / 2 + elemHeight / 2;\n      arrowTop = tipHeight / 2 - arrowHeight / 2;\n    }\n  } else if (verticals.includes(placement)) {\n    if (placement === 'top') {\n      topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n    } else {\n      // BOTTOM\n      topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n    }\n\n    // adjust left | right and also the arrow\n    if (leftExceed) {\n      leftPosition = 0;\n      arrowLeft = x + elemWidth / 2 - arrowAdjust;\n    } else if (rightExceed) {\n      leftPosition = 'auto';\n      rightPosition = 0;\n      arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n    } else {\n      leftPosition = x - tipWidth / 2 + elemWidth / 2;\n      arrowLeft = tipWidth / 2 - arrowAdjust;\n    }\n  }\n\n  // apply style to tooltip/popover\n  setElementStyle(tooltip, {\n    top: `${topPosition}px`,\n    bottom: bottomPosition === '' ? '' : `${bottomPosition}px`,\n    left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n    right: rightPosition !== '' ? `${rightPosition}px` : '',\n  });\n\n  // update arrow placement\n  /* istanbul ignore else */\n  if (isHTMLElement(arrow)) {\n    if (arrowTop !== '') {\n      arrow.style.top = `${arrowTop}px`;\n    }\n    if (arrowLeft !== '') {\n      arrow.style.left = `${arrowLeft}px`;\n    } else if (arrowRight !== '') {\n      arrow.style.right = `${arrowRight}px`;\n    }\n  }\n  const updatedTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`updated.bs.${toLowerCase(self.name)}`);\n  dispatchEvent(element, updatedTooltipEvent);\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","// import {getWindow} from '@thednp/shorty';\nimport { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: Node, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element) || (isString(content) && !content.length)) return;\n\n  /* istanbul ignore else */\n  if (isString(content)) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    // const win = getWindow(element);\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    : /* istanbul ignore next */ undefined;\n\n  const { tooltip } = self;\n  /* istanbul ignore next */\n  if (!tooltip) return;\n\n  // set id and role attributes\n  setAttribute(tooltip, 'id', id);\n  setAttribute(tooltip, 'role', tooltipString);\n\n  const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n  const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n  const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n  // set arrow and enable access for styleTip\n  self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n  const { arrow } = self;\n\n  if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n  else {\n    const tempTitle = createElement('div') as Node;\n    setHtml(tempTitle, title, sanitizeFn);\n    titleParts = [...[...tempTitle.childNodes]];\n  }\n\n  if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n  else {\n    const tempContent = createElement('div') as Node;\n    setHtml(tempContent, content, sanitizeFn);\n    contentParts = [...[...tempContent.childNodes]];\n  }\n\n  // set dismissible button\n  if (dismissible) {\n    if (title) {\n      if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        titleParts = [...titleParts, tempBtn.firstChild as Node];\n      }\n    } else {\n      /* istanbul ignore else */\n      if (tooltipHeader) tooltipHeader.remove();\n      if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        contentParts = [...contentParts, tempBtn.firstChild as Node];\n      }\n    }\n  }\n\n  // fill the template with content from options / data attributes\n  // also sanitize title && content\n  /* istanbul ignore else */\n  if (!isTooltip) {\n    /* istanbul ignore else */\n    if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n    /* istanbul ignore else */\n    if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n    // set btn\n    self.btn = querySelector('.btn-close', tooltip) || undefined;\n  } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n  // Bootstrap 5.2.x\n  // addClass(tooltip, 'position-absolute');\n  addClass(tooltip, 'position-fixed');\n  addClass(arrow, 'position-absolute');\n\n  // set popover animation and placement\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n  /* istanbul ignore else */\n  if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n  /* istanbul ignore else */\n  if (customClass && !hasClass(tooltip, customClass)) {\n    addClass(tooltip, customClass);\n  }\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n};\n\nexport default createTip;\n","import { getDocument, isShadowRoot, isTableElement, getParentNode, getElementStyle } from '@thednp/shorty';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = ['HTML', 'BODY'];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, 'position') !== 'relative' &&\n        containers.slice(i + 1).every(r => getElementStyle(r as HTMLElement, 'position') === 'static')\n      ) {\n        return c;\n      }\n      return null;\n    }) || /* istanbul ignore next: optional guard */ getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  isFunction,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementStyle,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip as HTMLElement, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  toggleTooltipHandlers(self);\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n\n  [scrollEvent, resizeEvent].forEach(ev => {\n    action(getWindow(element), ev, self.update, passiveHandler);\n  });\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element, onHideComplete } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n  if (isFunction(onHideComplete)) {\n    onHideComplete();\n    self.onHideComplete = undefined;\n  }\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  // btn is only for dismissible popover\n  const { element, options, btn } = self;\n  const { trigger } = options;\n  const isPopover = self.name !== tooltipComponent;\n  const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n  if (trigger.includes('manual')) return;\n\n  self.enabled = !!add;\n\n  const triggerOptions = trigger.split(' ');\n\n  triggerOptions.forEach(tr => {\n    /* istanbul ignore else */\n    if (tr === mousehoverEvent) {\n      action(element, mousedownEvent, self.show);\n      action(element, mouseenterEvent, self.show);\n\n      /* istanbul ignore else */\n      if (dismissible && btn) {\n        action(btn, mouseclickEvent, self.hide);\n      } else {\n        action(element, mouseleaveEvent, self.hide);\n        action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n      }\n    } else if (tr === mouseclickEvent) {\n      action(element, tr, !dismissible ? self.toggle : self.show);\n    } else if (tr === focusEvent) {\n      action(element, focusinEvent, self.show);\n      /* istanbul ignore else */\n      if (!dismissible) action(element, focusoutEvent, self.hide);\n      /* istanbul ignore else */\n      if (isApple) {\n        action(element, mouseclickEvent, () => focus(element));\n      }\n    }\n  });\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, container, offsetParent } = self;\n  const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  const win = getWindow(element);\n  const overflow = offsetHeight !== scrollHeight;\n  const scrollTarget = container === offsetParent && overflow ? container : win;\n  action(scrollTarget, resizeEvent, self.update, passiveHandler);\n  action(scrollTarget, scrollEvent, self.update, passiveHandler);\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.hide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.hide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content || getAttribute(element, titleAtt[0]) || /* istanbul ignore next */ '',\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n  declare onHideComplete?: () => void;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if ((!options.title && isTooltip) || (!isTooltip && !options.content)) {\n      // throw Error(`${this.name} Error: target has no content set.`);\n      return;\n    }\n\n    // reset default options\n    ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n    // all functions bind\n    this.handleTouch = this.handleTouch.bind(this);\n    this.update = this.update.bind(this);\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n    this.toggle = this.toggle.bind(this);\n\n    // set title attributes and add event listeners\n    /* istanbul ignore else */\n    if (hasAttribute(element, titleAttr) && isTooltip && typeof options.title === 'string') {\n      toggleTooltipTitle(this, options.title);\n    }\n\n    // set containers\n    this.container = getElementContainer(element);\n    this.offsetParent = ['sticky', 'fixed'].some(\n      position => getElementStyle(this.container as HTMLElement, 'position') === position,\n    )\n      ? (this.container as HTMLElement)\n      : getDocument(this.element).body;\n\n    // create tooltip here\n    createTip(this);\n\n    // attach events\n    toggleTooltipHandlers(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Shows the tooltip. */\n  show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasPopup(tooltip, tipContainer)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (showTooltipEvent.defaultPrevented) return;\n\n          // append to container\n          appendPopup(tooltip, tipContainer);\n\n          setAttribute(element, ariaDescribedBy, `#${id}`);\n\n          this.update();\n          toggleTooltipOpenHandlers(this, true);\n\n          /* istanbul ignore else */\n          if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n          /* istanbul ignore else */\n          if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n          else tooltipShownAction(this);\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  hide() {\n    const { options, tooltip, element, container, offsetParent } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (hideTooltipEvent.defaultPrevented) return;\n\n          this.update();\n          removeClass(tooltip, showClass);\n          toggleTooltipOpenHandlers(this);\n\n          /* istanbul ignore else */\n          if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n          else tooltipHiddenAction(this);\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update() {\n    styleTip<Tooltip>(this);\n  }\n\n  /** Toggles the tooltip visibility. */\n  toggle() {\n    const { tooltip, container, offsetParent } = this;\n\n    if (tooltip && !hasPopup(tooltip, container === offsetParent ? container : offsetParent)) this.show();\n    else this.hide();\n  }\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      toggleTooltipHandlers(this, true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, container, offsetParent, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent) && animation) {\n        this.onHideComplete = () => toggleTooltipHandlers(this);\n        this.hide();\n      } else {\n        toggleTooltipHandlers(this);\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch({ target }: TouchEvent) {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore next */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  }\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, container, offsetParent, options } = this;\n    const callback = () => disposeTooltipComplete(this, () => super.dispose());\n\n    if (options.animation && tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent)) {\n      this.options.delay = 0; // reset delay\n      this.onHideComplete = callback;\n      this.hide();\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show() {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  }\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  // ObjectAssign,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget ? getScrollHeight(scrollTarget) : /* istanbul ignore next */ scrollHeight;\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n/**\n * Toggles on/off the component event listener.\n *\n * @param self the `ScrollSpy` instance\n * @param add when `true`, listener is added\n */\nconst toggleSpyHandlers = (self: ScrollSpy, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.scrollTarget as EventTarget, scrollEvent, self.refresh, passiveHandler);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (!this.target) return;\n\n    // set initial state\n    this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n    this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n    // bind events\n    this.refresh = this.refresh.bind(this);\n\n    // add event handlers\n    toggleSpyHandlers(this, true);\n\n    this.refresh();\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh() {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore next */\n    if (target?.offsetHeight === 0) return;\n\n    updateSpyTargets(this);\n\n    const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n    if (scrollTop >= maxScroll) {\n      const newActiveItem = items[itemsLength - 1];\n\n      /* istanbul ignore else */\n      if (activeItem !== newActiveItem) {\n        activate(this, newActiveItem);\n      }\n      return;\n    }\n\n    const { offsets } = this;\n\n    if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n      this.activeItem = null;\n      if (target) clear(target);\n      return;\n    }\n\n    items.forEach((item, i) => {\n      if (\n        activeItem !== item &&\n        scrollTop >= offsets[i] &&\n        (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n      ) {\n        activate(this, item);\n      }\n    });\n  }\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    toggleSpyHandlers(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  // ObjectAssign,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || /* istanbul ignore next */ {\n      currentHeight: 0,\n      nextHeight: 0,\n    };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n  if (showTabEvent.defaultPrevented) return;\n\n  if (nextContent) addClass(nextContent, activeClass);\n  if (content) removeClass(content, activeClass);\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const nextHeight = nextContent.scrollHeight;\n    tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n    addClass(tabContent, collapsingClass);\n    tabContent.style.height = `${currentHeight}px`;\n    reflow(tabContent);\n    [content, nextContent].forEach(c => {\n      if (c) removeClass(c, 'overflow-hidden');\n    });\n  }\n\n  if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n    setTimeout(() => {\n      addClass(nextContent, showClass);\n      emulateTransitionEnd(nextContent, () => {\n        triggerTabShow(self);\n      });\n    }, 1);\n  } else {\n    if (nextContent) addClass(nextContent, showClass);\n    triggerTabShow(self);\n  }\n\n  if (tab) dispatchEvent(tab, hiddenTabEvent);\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  /* istanbul ignore next */\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Tab` instance\n * @param add when `true`, event listener is added\n */\nconst toggleTabHandler = (self: Tab, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, tabClickHandler);\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n  e.preventDefault();\n\n  self.show();\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    if (!content) return;\n\n    const nav = closest(element, '.nav');\n    const container = closest(content, '.tab-content');\n\n    this.nav = nav;\n    this.content = content;\n    this.tabContent = container;\n\n    // event targets\n    this.dropdown = getParentDropdown(element);\n\n    // show first Tab instance of none is shown\n    // suggested on #432\n    const { tab } = getActiveTab(this);\n    if (nav && !tab) {\n      const firstTab = querySelector(tabSelector, nav);\n      const firstTabContent = firstTab && getTargetElement(firstTab);\n\n      /* istanbul ignore else */\n      if (firstTabContent) {\n        addClass(firstTab, activeClass);\n        addClass(firstTabContent, showClass);\n        addClass(firstTabContent, activeClass);\n        setAttribute(element, ariaSelected, 'true');\n      }\n    }\n\n    // add event listener\n    toggleTabHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      if (isHTMLElement(tab as Node)) dispatchEvent(tab as EventTarget, hideTabEvent);\n      if (hideTabEvent.defaultPrevented) return;\n\n      addClass(element, activeClass);\n      setAttribute(element, ariaSelected, 'true');\n\n      const activeDropdown = isHTMLElement(tab as HTMLElement) && getParentDropdown(tab as HTMLElement);\n      if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n        removeClass(activeDropdown, activeClass);\n      }\n\n      /* istanbul ignore else */\n      if (nav) {\n        const toggleTab = () => {\n          if (tab) {\n            removeClass(tab, activeClass);\n            setAttribute(tab, ariaSelected, 'false');\n          }\n          if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n        };\n\n        if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n          Timer.set(nav, toggleTab, 1);\n        } else toggleTab();\n      }\n\n      if (content) {\n        removeClass(content, showClass);\n        if (hasClass(content, fadeClass)) {\n          emulateTransitionEnd(content, () => triggerTabHide(this));\n        } else {\n          triggerTabHide(this);\n        }\n      }\n    }\n  }\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    toggleTabHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  // ObjectAssign,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Toast` instance\n * @param add when `true`, it will add the listener\n */\nconst toggleToastHandlers = (self: Toast, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, triggers, dismiss, options } = self;\n\n  /* istanbul ignore else */\n  if (dismiss) {\n    action(dismiss, mouseclickEvent, self.hide);\n  }\n\n  /* istanbul ignore else */\n  if (options.autohide) {\n    [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n      action(element, e, interactiveToastHandler as EventListener),\n    );\n  }\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n  }\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  toggleToastHandlers(self);\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n  /* istanbul ignore next */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.show();\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore next: a solid filter is required */\n  if (!self || element === relatedTarget || element.contains(relatedTarget as Node)) return;\n\n  if ([mouseenterEvent, focusinEvent].includes(type)) {\n    Timer.clear(element, toastString);\n  } else {\n    Timer.set(element, () => self.hide(), self.options.delay, toastString);\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // bind\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n\n    // add event listener\n    toggleToastHandlers(this, true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (showToastEvent.defaultPrevented) return;\n\n      showToast(this);\n    }\n  }\n\n  /** Hides the toast. */\n  hide() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (hideToastEvent.defaultPrevented) return;\n      hideToast(this);\n    }\n  }\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","import { Data, ObjectKeys, ObjectValues, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = {\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n};\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  ObjectValues(componentsList).forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  ObjectKeys(componentsList).forEach(comp => {\n    removeComponentDataAPI(comp, lookUp);\n  });\n};\n\n// bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n"],"names":["exports","r","a","s","e","c","n","o","t","i","f","d","g","E","L","dt","mt","Et","vt","pt","gt","ft","bt","yt","ht","At","wt","St","kt","Dt","q","G","K","J","X","z","Y","Z","$","_","ee","te","ne","oe","re","ae","ce","ie","ue","le","de","me","Ee","ve","pe","ge","fe","be","ye","he","Ae","we","Se","ke","De","Me","Ne","Te","Ce","Le","Oe","Ie","ze","xe","He","Be","Ve","Pe","Fe","Mt","Nt","Tt","Ct","Lt","Ot","It","zt","xt","Ht","Bt","Vt","Pt","Ft","Rt","Wt","Ut","jt","Qt","qt","Gt","Kt","Jt","Xt","Yt","Zt","$t","_t","en","tn","nn","on","Re","We","x","N","Ue","je","T","H","sn","rn","an","cn","un","ln","dn","mn","En","w","vn","S","W","O","pn","U","gn","fn","k","bn","Qe","qe","Ge","Ke","yn","hn","An","wn","Sn","Je","kn","Dn","Mn","B","Nn","Tn","Cn","Ln","On","In","zn","xn","Hn","v","u","A","C","Bn","m","V","P","b","Xe","Ye","F","Vn","Ze","$e","Pn","l","_e","et","Fn","Rn","Wn","Un","I","tt","jn","p","M","lt","R","Qn","qn","Gn","Kn","Jn","Xn","Yn","nt","Zn","$n","h","_n","D","eo","to","ot","no","st","oo","j","Q","y","rt","so","at","ro","ct","ao","co","io","uo","lo","mo","Eo","vo","po","go","fo","bo","yo","ho","it","Ao","ut","wo","So","ko","Do","Mo","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","version","BaseComponent","target","config","element","querySelector","isString","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","that","toggleAlertHandler","dispatchEvent","add","action","addListener","removeListener","dismiss","mouseclickEvent","self","closest","hasClass","removeClass","emulateTransitionEnd","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","toggleButtonHandler","setAttribute","ariaPressed","isActive","addClass","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","getAttribute","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","arrowKeyNext","keyArrowLeft","keyArrowRight","arrowKeyPrev","carouselDragHandler","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","activateCarouselIndicator","pageIndex","pointermoveEvent","passiveHandler","pointerupEvent","toggleCarouselHandlers","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","touchstartEvent","dragstartEvent","arrow","indicator","keydownEvent","isHTMLElement","getElementsByClassName","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","itemClasses","slide","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","toggleCollapseHandler","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","endAdjust","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","toggleDropdownHandler","dropdownClickHandler","getCurrentOpenDropdown","currentParent","type","hasData","isForm","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","pad","padStyle","toggleModalDismiss","modalDismissHandler","modalKeyHandler","toggleModalHandler","modalClickHandler","afterModalHide","callback","relatedTarget","focusElement","isFunction","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffcanvasEvents","offcanvasTriggerHandler","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offCanvasDismiss","selection","visibleTrigger","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","toLowerCase","tooltipDefaults","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","offsetParent","ariaDescribedBy","disposeTooltipComplete","toggleTooltipHandlers","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","onHideComplete","hiddenTooltipEvent","tr","mousehoverEvent","mousedownEvent","focusinEvent","focusoutEvent","isApple","toggleTooltipOpenHandlers","offsetHeight","parentModal","parentOffcanvas","win","scrollTarget","titleAtt","tipComponent","elem","getUID","position","outTimer","tipContainer","showTooltipEvent","delay","hideTooltipEvent","enabled","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","itemsLength","isWin","isWindow","links","getElementsByTagName","scrollHEIGHT","getScrollHeight","href","targetItem","rect","getOffsetHeight","link","clear","item","activate","parents","parentItem","menuItem","parentLink","toggleSpyHandlers","scrollTop","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","toggleTabHandler","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toggleToastHandlers","interactiveToastHandler","toastClickHandler","completeDisposeToast","isShown","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","ObjectValues","cs","init","selector","matches","removeDataAPI","comp"],"mappings":"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"}