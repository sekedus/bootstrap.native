{"version":3,"file":"bootstrap-native.js","sources":["../node_modules/@thednp/event-listener/dist/event-listener.mjs","../node_modules/@thednp/shorty/dist/shorty.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/strings/offcanvasComponent.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["const e = {}, r = (s) => {\n  const { type: c, target: n, currentTarget: i } = s;\n  [...e[c]].forEach(([t, o]) => {\n    [i, n].includes(t) && [...o].forEach(([a, f]) => {\n      a.apply(t, [s]), typeof f == \"object\" && f.once && d(t, c, a, f);\n    });\n  });\n}, E = (s, c, n, i) => {\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const t = e[c];\n  t.has(s) || t.set(s, /* @__PURE__ */ new Map());\n  const o = t.get(s), { size: a } = o;\n  o.set(n, i), a || s.addEventListener(c, r, i);\n}, d = (s, c, n, i) => {\n  const t = e[c], o = t && t.get(s), a = o && o.get(n), f = a !== void 0 ? a : i;\n  o && o.has(n) && o.delete(n), t && (!o || !o.size) && t.delete(s), (!t || !t.size) && delete e[c], (!o || !o.size) && s.removeEventListener(c, r, f);\n}, g = E, M = d;\nexport {\n  E as addListener,\n  r as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  d as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","const fe = \"aria-checked\", me = \"aria-description\", ge = \"aria-describedby\", Ee = \"aria-expanded\", ve = \"aria-haspopup\", be = \"aria-hidden\", he = \"aria-label\", ye = \"aria-labelledby\", we = \"aria-modal\", Ae = \"aria-pressed\", Se = \"aria-selected\", Me = \"aria-valuemin\", Ne = \"aria-valuemax\", ke = \"aria-valuenow\", Te = \"aria-valuetext\", j = \"abort\", J = \"beforeunload\", K = \"blur\", X = \"change\", Y = \"contextmenu\", H = \"DOMContentLoaded\", Z = \"DOMMouseScroll\", $ = \"error\", _ = \"focus\", tt = \"focusin\", et = \"focusout\", nt = \"gesturechange\", ot = \"gestureend\", st = \"gesturestart\", ct = \"keydown\", rt = \"keypress\", it = \"keyup\", at = \"load\", ut = \"click\", lt = \"dblclick\", dt = \"mousedown\", pt = \"mouseup\", ft = \"hover\", mt = \"mouseenter\", gt = \"mouseleave\", Et = \"mousein\", vt = \"mouseout\", bt = \"mouseover\", ht = \"mousemove\", yt = \"mousewheel\", wt = \"move\", At = \"orientationchange\", St = \"pointercancel\", Mt = \"pointerdown\", Nt = \"pointerleave\", kt = \"pointermove\", Tt = \"pointerup\", Dt = \"readystatechange\", Ct = \"reset\", Lt = \"resize\", Ot = \"select\", It = \"selectend\", zt = \"selectstart\", xt = \"scroll\", Vt = \"submit\", Bt = \"touchstart\", Ht = \"touchmove\", Pt = \"touchcancel\", Ut = \"touchend\", Ft = \"unload\", De = {\n  DOMContentLoaded: H,\n  DOMMouseScroll: Z,\n  abort: j,\n  beforeunload: J,\n  blur: K,\n  change: X,\n  click: ut,\n  contextmenu: Y,\n  dblclick: lt,\n  error: $,\n  focus: _,\n  focusin: tt,\n  focusout: et,\n  gesturechange: nt,\n  gestureend: ot,\n  gesturestart: st,\n  hover: ft,\n  keydown: ct,\n  keypress: rt,\n  keyup: it,\n  load: at,\n  mousedown: dt,\n  mousemove: ht,\n  mousein: Et,\n  mouseout: vt,\n  mouseenter: mt,\n  mouseleave: gt,\n  mouseover: bt,\n  mouseup: pt,\n  mousewheel: yt,\n  move: wt,\n  orientationchange: At,\n  pointercancel: St,\n  pointerdown: Mt,\n  pointerleave: Nt,\n  pointermove: kt,\n  pointerup: Tt,\n  readystatechange: Dt,\n  reset: Ct,\n  resize: Lt,\n  scroll: xt,\n  select: Ot,\n  selectend: It,\n  selectstart: zt,\n  submit: Vt,\n  touchcancel: Pt,\n  touchend: Ut,\n  touchmove: Ht,\n  touchstart: Bt,\n  unload: Ft\n}, Ce = \"loadstart\", Le = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Oe = { down: \"mousedown\", up: \"mouseup\" }, Ie = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : [\"mouseover\", \"mouseout\"], ze = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, xe = { in: \"focusin\", out: \"focusout\" }, Ve = {\n  Backspace: \"Backspace\",\n  Tab: \"Tab\",\n  Enter: \"Enter\",\n  Shift: \"Shift\",\n  Control: \"Control\",\n  Alt: \"Alt\",\n  Pause: \"Pause\",\n  CapsLock: \"CapsLock\",\n  Escape: \"Escape\",\n  Scape: \"Space\",\n  ArrowLeft: \"ArrowLeft\",\n  ArrowUp: \"ArrowUp\",\n  ArrowRight: \"ArrowRight\",\n  ArrowDown: \"ArrowDown\",\n  Insert: \"Insert\",\n  Delete: \"Delete\",\n  Meta: \"Meta\",\n  ContextMenu: \"ContextMenu\",\n  ScrollLock: \"ScrollLock\"\n}, Be = \"Alt\", He = \"ArrowDown\", Pe = \"ArrowUp\", Ue = \"ArrowLeft\", Fe = \"ArrowRight\", We = \"Backspace\", Re = \"CapsLock\", Qe = \"Control\", qe = \"Delete\", Ge = \"Enter\", je = \"Escape\", Je = \"Insert\", Ke = \"Meta\", Xe = \"Pause\", Ye = \"ScrollLock\", Ze = \"Shift\", $e = \"Space\", _e = \"Tab\", Wt = \"animationDuration\", Rt = \"animationDelay\", P = \"animationName\", T = \"animationend\", Qt = \"transitionDuration\", qt = \"transitionDelay\", D = \"transitionend\", U = \"transitionProperty\", tn = \"addEventListener\", en = \"removeEventListener\", nn = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, on = \"offsetHeight\", sn = \"offsetWidth\", cn = \"scrollHeight\", rn = \"scrollWidth\", an = \"tabindex\", Gt = navigator.userAgentData, S = Gt, { userAgent: jt } = navigator, M = jt, I = /iPhone|iPad|iPod|Android/i;\nlet C = !1;\nS ? C = S.brands.some((t) => I.test(t.brand)) : C = I.test(M);\nconst un = C, z = /(iPhone|iPod|iPad)/, ln = S ? S.brands.some((t) => z.test(t.brand)) : z.test(M), dn = M ? M.includes(\"Firefox\") : !1, { head: N } = document, pn = [\"webkitPerspective\", \"perspective\"].some((t) => t in N.style), Jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(e, n, s);\n}, Kt = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(e, n, s);\n}, Xt = (t, e, n, o) => {\n  const s = (c) => {\n    (c.target === t || c.currentTarget === t) && (n.apply(t, [c]), Kt(t, e, s, o));\n  };\n  Jt(t, e, s, o);\n}, Yt = () => {\n}, fn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    Xt(document, H, Yt, e);\n  } catch {\n  }\n  return t;\n})(), mn = [\"webkitTransform\", \"transform\"].some((t) => t in N.style), gn = \"ontouchstart\" in window || \"msMaxTouchPoints\" in navigator, En = [\"webkitAnimation\", \"animation\"].some((t) => t in N.style), vn = [\"webkitTransition\", \"transition\"].some((t) => t in N.style), Zt = (t, e) => t.getAttribute(e), bn = (t, e, n) => e.getAttributeNS(t, n), hn = (t, e) => t.hasAttribute(e), yn = (t, e, n) => e.hasAttributeNS(t, n), F = (t, e, n) => t.setAttribute(e, n), wn = (t, e, n, o) => e.setAttributeNS(t, n, o), An = (t, e) => t.removeAttribute(e), Sn = (t, e, n) => e.removeAttributeNS(t, n), Mn = (t, ...e) => {\n  t.classList.add(...e);\n}, Nn = (t, ...e) => {\n  t.classList.remove(...e);\n}, kn = (t, e) => t.classList.contains(e), { body: Tn } = document, { documentElement: Dn } = document, Cn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, a = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((e) => t.nodeType === e) || !1, u = (t) => a(t) && t.nodeType === 1 || !1, y = /* @__PURE__ */ new Map(), L = {\n  set: (t, e, n) => {\n    if (!u(t))\n      return;\n    y.has(e) || y.set(e, /* @__PURE__ */ new Map()), y.get(e).set(t, n);\n  },\n  getAllFor: (t) => y.get(t) || null,\n  get: (t, e) => {\n    if (!u(t) || !e)\n      return null;\n    const n = L.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  remove: (t, e) => {\n    const n = L.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && y.delete(e));\n  }\n}, Ln = (t, e) => L.get(t, e), g = (t) => typeof t == \"string\" || !1, W = (t) => v(t) && t.constructor.name === \"Window\" || !1, R = (t) => a(t) && t.nodeType === 9 || !1, d = (t) => W(t) ? t.document : R(t) ? t : a(t) ? t.ownerDocument : window.document, h = (t) => Object.entries(t), $t = (t) => {\n  if (!t)\n    return;\n  if (g(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = $t(e);\n  if (!n)\n    return;\n  const o = { ...t };\n  return delete o.tagName, h(o).forEach(([s, c]) => {\n    g(s) && g(c) && F(n, s, c);\n  }), n;\n}, _t = (t, e) => {\n  if (!t || !e)\n    return;\n  if (g(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = _t(t, n);\n  if (!o)\n    return;\n  const s = { ...e };\n  return delete s.tagName, h(s).forEach(([c, i]) => {\n    g(c) && g(i) && F(o, c, i);\n  }), o;\n}, Q = (t, e) => t.dispatchEvent(e), On = (t, e, n) => n.indexOf(t) === e, E = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, te = (t) => {\n  const e = E(t, P), n = E(t, Rt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, ee = (t) => {\n  const e = E(t, P), n = E(t, Wt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, In = (t, e) => {\n  let n = 0;\n  const o = new Event(T), s = ee(t), c = te(t);\n  if (s) {\n    const i = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(T, i), n = 1);\n    };\n    t.addEventListener(T, i), setTimeout(() => {\n      n || Q(t, o);\n    }, s + c + 17);\n  } else\n    e.apply(t, [o]);\n}, ne = (t) => {\n  const e = E(t, U), n = E(t, qt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, oe = (t) => {\n  const e = E(t, U), n = E(t, Qt), o = n.includes(\"ms\") ? 1 : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? 0 : s;\n}, zn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = oe(t), c = ne(t);\n  if (s) {\n    const i = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(D, i), n = 1);\n    };\n    t.addEventListener(D, i), setTimeout(() => {\n      n || Q(t, o);\n    }, s + c + 17);\n  } else\n    e.apply(t, [o]);\n}, xn = (t) => Float32Array.from(Array.from(t)), Vn = (t) => Float64Array.from(Array.from(t)), Bn = (t, e) => t.focus(e), x = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, se = (t) => t.toLowerCase(), Hn = (t, e, n, o) => {\n  const s = { ...n }, c = { ...t.dataset }, i = { ...e }, l = {}, p = \"title\";\n  return h(c).forEach(([r, f]) => {\n    const A = o && typeof r == \"string\" && r.includes(o) ? r.replace(o, \"\").replace(/[A-Z]/g, (G) => se(G)) : r;\n    l[A] = x(f);\n  }), h(s).forEach(([r, f]) => {\n    s[r] = x(f);\n  }), h(e).forEach(([r, f]) => {\n    r in s ? i[r] = s[r] : r in l ? i[r] = l[r] : i[r] = r === p ? Zt(t, p) : f;\n  }), i;\n}, q = (t, ...e) => Object.assign(t, ...e), Pn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Un = (t) => Object.keys(t), Fn = (t) => Object.values(t), Wn = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return v(e) && q(n, e), n;\n}, Rn = { passive: !0 }, Qn = (t) => t.offsetHeight, qn = (t, e) => {\n  h(e).forEach(([n, o]) => {\n    if (o && g(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, q(t.style, s);\n    }\n  });\n}, O = (t) => v(t) && t.constructor.name === \"Map\" || !1, ce = (t) => typeof t == \"number\" || !1, m = /* @__PURE__ */ new Map(), Gn = {\n  set: (t, e, n, o) => {\n    !u(t) || (o && o.length ? (m.has(t) || m.set(t, /* @__PURE__ */ new Map()), m.get(t).set(o, setTimeout(e, n))) : m.set(t, setTimeout(e, n)));\n  },\n  get: (t, e) => {\n    if (!u(t))\n      return null;\n    const n = m.get(t);\n    return e && n && O(n) ? n.get(e) || null : ce(n) ? n : null;\n  },\n  clear: (t, e) => {\n    if (!u(t))\n      return;\n    const n = m.get(t);\n    e && e.length && O(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && m.delete(t)) : (clearTimeout(n), m.delete(t));\n  }\n}, jn = (t) => t.toUpperCase(), w = (t, e) => {\n  const { width: n, height: o, top: s, right: c, bottom: i, left: l } = t.getBoundingClientRect();\n  let p = 1, r = 1;\n  if (e && u(t)) {\n    const { offsetWidth: f, offsetHeight: A } = t;\n    p = f > 0 ? Math.round(n) / f : 1, r = A > 0 ? Math.round(o) / A : 1;\n  }\n  return {\n    width: n / p,\n    height: o / r,\n    top: s / r,\n    right: c / p,\n    bottom: i / r,\n    left: l / p,\n    x: l / p,\n    y: s / r\n  };\n}, Jn = (t) => d(t).body, k = (t) => d(t).documentElement, Kn = (t) => d(t).head, Xn = (t) => {\n  const e = W(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, re = (t) => a(t) && t.constructor.name === \"ShadowRoot\" || !1, Yn = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || a(t) && t.parentNode || re(t) && t.host || k(t), ie = (t) => {\n  if (!u(t))\n    return !1;\n  const { width: e, height: n } = w(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, Zn = (t, e, n) => {\n  const o = u(e), s = w(t, o && ie(e)), c = { x: 0, y: 0 };\n  if (o) {\n    const i = w(e, !0);\n    c.x = i.x + e.clientLeft, c.y = i.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - c.x,\n    y: s.top + n.y - c.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet V = 0, B = 0;\nconst b = /* @__PURE__ */ new Map(), ae = (t, e) => {\n  let n = e ? V : B;\n  if (e) {\n    const o = ae(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), O(s) && !s.has(e) ? (s.set(e, n), V += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), B += 1);\n  }\n  return n;\n}, $n = (t) => {\n  var e;\n  return t ? R(t) ? t.defaultView : a(t) ? (e = t == null ? void 0 : t.ownerDocument) == null ? void 0 : e.defaultView : t : window;\n}, ue = (t) => Array.isArray(t) || !1, _n = (t) => a(t) && t.nodeName === \"CANVAS\" || !1, le = (t) => u(t) && !!t.shadowRoot || !1, to = (t) => a(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, eo = (t) => {\n  if (!a(t))\n    return !1;\n  const { top: e, bottom: n } = w(t), { clientHeight: o } = k(t);\n  return e <= o && n >= 0;\n}, no = (t) => {\n  if (!a(t))\n    return !1;\n  const { clientWidth: e, clientHeight: n } = k(t), { top: o, left: s, bottom: c, right: i } = w(t, !0);\n  return o >= 0 && s >= 0 && c <= n && i <= e;\n}, oo = (t) => ue(t) && t.every(u) || !1, so = (t) => typeof t == \"function\" || !1, co = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, ro = (t) => u(t) && t.tagName === \"IMG\" || !1, io = (t) => {\n  if (!g(t))\n    return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, ao = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, uo = (t) => a(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((e) => t.constructor.name.includes(e)) || !1, lo = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, po = (t) => k(t).dir === \"rtl\", fo = (t) => a(t) && t.constructor.name.includes(\"SVG\") || !1, mo = (t) => a(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, de = (t, e) => t ? t.closest(e) || de(t.getRootNode().host, e) : null, go = (t, e) => u(t) ? t : (a(e) ? e : d()).querySelector(t), pe = (t, e) => (a(e) ? e : d()).getElementsByTagName(t), Eo = (t) => [...pe(\"*\", t)].filter(le), vo = (t, e) => d(e).getElementById(t) || null, bo = (t, e) => (a(e) ? e : d()).querySelectorAll(t), ho = (t, e) => (e && a(e) ? e : d()).getElementsByClassName(\n  t\n), yo = (t, e) => t.matches(e);\nexport {\n  Cn as ArrayFrom,\n  H as DOMContentLoadedEvent,\n  Z as DOMMouseScrollEvent,\n  L as Data,\n  xn as Float32ArrayFrom,\n  Vn as Float64ArrayFrom,\n  q as ObjectAssign,\n  h as ObjectEntries,\n  Pn as ObjectHasOwn,\n  Un as ObjectKeys,\n  Fn as ObjectValues,\n  Gn as Timer,\n  j as abortEvent,\n  Mn as addClass,\n  tn as addEventListener,\n  Rt as animationDelay,\n  Wt as animationDuration,\n  T as animationEndEvent,\n  P as animationName,\n  fe as ariaChecked,\n  ge as ariaDescribedBy,\n  me as ariaDescription,\n  Ee as ariaExpanded,\n  ve as ariaHasPopup,\n  be as ariaHidden,\n  he as ariaLabel,\n  ye as ariaLabelledBy,\n  we as ariaModal,\n  Ae as ariaPressed,\n  Se as ariaSelected,\n  Ne as ariaValueMax,\n  Me as ariaValueMin,\n  ke as ariaValueNow,\n  Te as ariaValueText,\n  J as beforeunloadEvent,\n  nn as bezierEasings,\n  K as blurEvent,\n  X as changeEvent,\n  de as closest,\n  Y as contextmenuEvent,\n  Wn as createCustomEvent,\n  $t as createElement,\n  _t as createElementNS,\n  Q as dispatchEvent,\n  On as distinct,\n  Tn as documentBody,\n  Dn as documentElement,\n  N as documentHead,\n  In as emulateAnimationEnd,\n  zn as emulateTransitionEnd,\n  $ as errorEvent,\n  Bn as focus,\n  _ as focusEvent,\n  xe as focusEvents,\n  tt as focusinEvent,\n  et as focusoutEvent,\n  nt as gesturechangeEvent,\n  ot as gestureendEvent,\n  st as gesturestartEvent,\n  Zt as getAttribute,\n  bn as getAttributeNS,\n  w as getBoundingClientRect,\n  Eo as getCustomElements,\n  d as getDocument,\n  Jn as getDocumentBody,\n  k as getDocumentElement,\n  Kn as getDocumentHead,\n  te as getElementAnimationDelay,\n  ee as getElementAnimationDuration,\n  vo as getElementById,\n  E as getElementStyle,\n  ne as getElementTransitionDelay,\n  oe as getElementTransitionDuration,\n  ho as getElementsByClassName,\n  pe as getElementsByTagName,\n  Ln as getInstance,\n  Xn as getNodeScroll,\n  Yn as getParentNode,\n  Zn as getRectRelativeToOffsetParent,\n  ae as getUID,\n  $n as getWindow,\n  hn as hasAttribute,\n  yn as hasAttributeNS,\n  kn as hasClass,\n  ln as isApple,\n  ue as isArray,\n  _n as isCanvas,\n  le as isCustomElement,\n  R as isDocument,\n  to as isElement,\n  eo as isElementInScrollRange,\n  no as isElementInViewport,\n  oo as isElementsArray,\n  dn as isFirefox,\n  so as isFunction,\n  co as isHTMLCollection,\n  u as isHTMLElement,\n  ro as isHTMLImageElement,\n  io as isJSON,\n  O as isMap,\n  uo as isMedia,\n  un as isMobile,\n  a as isNode,\n  lo as isNodeList,\n  ce as isNumber,\n  v as isObject,\n  po as isRTL,\n  fo as isSVGElement,\n  ie as isScaledElement,\n  re as isShadowRoot,\n  g as isString,\n  mo as isTableElement,\n  ao as isWeakMap,\n  W as isWindow,\n  Be as keyAlt,\n  He as keyArrowDown,\n  Ue as keyArrowLeft,\n  Fe as keyArrowRight,\n  Pe as keyArrowUp,\n  We as keyBackspace,\n  Re as keyCapsLock,\n  Qe as keyControl,\n  qe as keyDelete,\n  Ge as keyEnter,\n  je as keyEscape,\n  Je as keyInsert,\n  Ke as keyMeta,\n  Xe as keyPause,\n  Ye as keyScrollLock,\n  Ze as keyShift,\n  $e as keySpace,\n  _e as keyTab,\n  Ve as keyboardEventKeys,\n  ct as keydownEvent,\n  rt as keypressEvent,\n  it as keyupEvent,\n  at as loadEvent,\n  Ce as loadstartEvent,\n  yo as matches,\n  Oe as mouseClickEvents,\n  Ie as mouseHoverEvents,\n  Le as mouseSwipeEvents,\n  ut as mouseclickEvent,\n  lt as mousedblclickEvent,\n  dt as mousedownEvent,\n  mt as mouseenterEvent,\n  ft as mousehoverEvent,\n  Et as mouseinEvent,\n  gt as mouseleaveEvent,\n  ht as mousemoveEvent,\n  vt as mouseoutEvent,\n  bt as mouseoverEvent,\n  pt as mouseupEvent,\n  yt as mousewheelEvent,\n  wt as moveEvent,\n  De as nativeEvents,\n  Yt as noop,\n  Hn as normalizeOptions,\n  x as normalizeValue,\n  Kt as off,\n  on as offsetHeight,\n  sn as offsetWidth,\n  Jt as on,\n  Xt as one,\n  At as orientationchangeEvent,\n  Rn as passiveHandler,\n  St as pointercancelEvent,\n  Mt as pointerdownEvent,\n  Nt as pointerleaveEvent,\n  kt as pointermoveEvent,\n  Tt as pointerupEvent,\n  go as querySelector,\n  bo as querySelectorAll,\n  Dt as readystatechangeEvent,\n  Qn as reflow,\n  An as removeAttribute,\n  Sn as removeAttributeNS,\n  Nn as removeClass,\n  en as removeEventListener,\n  Ct as resetEvent,\n  Lt as resizeEvent,\n  xt as scrollEvent,\n  cn as scrollHeight,\n  rn as scrollWidth,\n  Ot as selectEvent,\n  It as selectendEvent,\n  zt as selectstartEvent,\n  F as setAttribute,\n  wn as setAttributeNS,\n  qn as setElementStyle,\n  Vt as submitEvent,\n  pn as support3DTransform,\n  En as supportAnimation,\n  fn as supportPassive,\n  gn as supportTouch,\n  mn as supportTransform,\n  vn as supportTransition,\n  an as tabindex,\n  se as toLowerCase,\n  jn as toUpperCase,\n  ze as touchEvents,\n  Pt as touchcancelEvent,\n  Ut as touchendEvent,\n  Ht as touchmoveEvent,\n  Bt as touchstartEvent,\n  qt as transitionDelay,\n  Qt as transitionDuration,\n  D as transitionEndEvent,\n  U as transitionProperty,\n  Ft as unloadEvent,\n  M as userAgent,\n  S as userAgentData\n};\n//# sourceMappingURL=shorty.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  element: HTMLElement;\n  options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<this>(element, this.name);\n    if (prevInstance) prevInstance.dispose();\n\n    this.element = element;\n\n    /* istanbul ignore else */\n    if (this.defaults && ObjectKeys(this.defaults).length) {\n      this.options = normalizeOptions(element, this.defaults, config || {}, 'bs');\n    }\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /**\n   * Removes component from target element;\n   */\n  dispose() {\n    Data.remove(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  closest,\n  // ObjectAssign,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n// import type { BaseOptions } from 'src/interface/baseComponent';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (that: Alert) => {\n  const { element } = that;\n  toggleAlertHandler(that);\n\n  dispatchEvent(element, closedAlertEvent);\n\n  that.dispose();\n  element.remove();\n};\n\n// ALERT PRIVATE METHOD\n// ====================\n/**\n * Toggle on / off the `click` event listener.\n *\n * @param that the target alert instance\n * @param add when `true`, event listener is added\n */\nconst toggleAlertHandler = (that: Alert, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { dismiss } = that;\n  /* istanbul ignore else */\n  if (dismiss) action(dismiss, mouseclickEvent, that.close);\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    toggleAlertHandler(this, true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   *\n   * @param e the `click` event\n   */\n  close(e?: Event) {\n    const self = e ? (getAlertInstance(closest(e.target as HTMLElement, alertSelector) as HTMLElement) as Alert) : this;\n    const { element } = self;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n      if (closeAlertEvent.defaultPrevented) return;\n\n      removeClass(element, showClass);\n\n      if (hasClass(element, fadeClass)) {\n        emulateTransitionEnd(element, () => alertTransitionEnd(self));\n      } else alertTransitionEnd(self);\n    }\n  }\n\n  /** Remove the component from target element. */\n  dispose() {\n    toggleAlertHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  // ObjectAssign,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON PRIVATE METHOD\n// =====================\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Button` instance\n * @param add when `true`, event listener is added\n */\nconst toggleButtonHandler = (self: Button, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, self.toggle);\n};\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    toggleButtonHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle(e: Event) {\n    if (e) e.preventDefault();\n    const self = e ? (getButtonInstance(e.target as HTMLElement) as Button) : this;\n    if (!self.element) return;\n    const { element, isActive } = self;\n\n    if (hasClass(element, 'disabled')) return;\n\n    const action = isActive ? removeClass : addClass;\n    action(element, activeClass);\n    setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n    self.isActive = hasClass(element, activeClass);\n  }\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    toggleButtonHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  addClass,\n  hasClass,\n  removeClass,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  // discontinue disposed instances\n  /* istanbul ignore else */\n  if (self.isAnimating && getCarouselInstance(element)) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // check for element, might have been disposed\n    if (!getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n\n  const newIndex = +(getAttribute(this, dataBsSlideTo) || 0);\n\n  if (\n    this &&\n    !hasClass(this, activeClass) && // event target is not active\n    !Number.isNaN(newIndex)\n  ) {\n    // AND has the specific attribute\n    self.to(newIndex); // do the slide\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const control = this;\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n  const orientation = getAttribute(this, dataBsSlide);\n\n  /* istanbul ignore else */\n  if (orientation === 'next') {\n    self.next();\n  } else if (orientation === 'prev') {\n    self.prev();\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (!self || self.isAnimating || /textarea|input/i.test(target.nodeName)) return;\n  const RTL = isRTL(element);\n  const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n  const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n  /* istanbul ignore else */\n  if (code === arrowKeyPrev) self.prev();\n  else if (code === arrowKeyNext) self.next();\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  // const element = this;\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (!self || self.isAnimating || self.isTouch) {\n    return;\n  }\n\n  // filter pointer event on controls & indicators\n  const { controls, indicators } = self;\n  if ([...controls, ...indicators].some(el => el === target || el.contains(target as Node))) {\n    return;\n  }\n\n  startX = e.pageX;\n\n  /* istanbul ignore else */\n  if (this.contains(target as Node)) {\n    self.isTouch = true;\n    toggleCarouselTouchHandlers(self, true);\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore next */\n  if (!self) {\n    return;\n  }\n\n  const { element, index } = self;\n  const RTL = isRTL(element);\n\n  self.isTouch = false;\n  toggleCarouselTouchHandlers(self);\n\n  if (doc.getSelection()?.toString().length) {\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n    return;\n  }\n\n  endX = e.pageX;\n\n  // the event target is outside the carousel context\n  // OR swipe distance is less than 120px\n  /* istanbul ignore else */\n  if (!element.contains(target as HTMLElement) || Math.abs(startX - endX) < 120) {\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n    return;\n  }\n  // OR determine next index to slide to\n  /* istanbul ignore else */\n  if (currentX < startX) {\n    self.to(index + (RTL ? -1 : 1));\n  } else if (currentX > startX) {\n    self.to(index + (RTL ? 1 : -1));\n  }\n  // reset pointer position\n  startX = 0;\n  currentX = 0;\n  endX = 0;\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param pageIndex the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, pageIndex: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[pageIndex]) addClass(indicators[pageIndex], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler as EventListener, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler as EventListener, passiveHandler);\n};\n\n/**\n * Toggles all event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselHandlers = (self: Carousel, add?: boolean) => {\n  const { element, options, slides, controls, indicators } = self;\n  const { touch, pause, interval, keyboard } = options;\n  const action = add ? addListener : removeListener;\n\n  if (pause && interval) {\n    action(element, mouseenterEvent, carouselPauseHandler);\n    action(element, mouseleaveEvent, carouselResumeHandler);\n  }\n\n  if (touch && slides.length > 2) {\n    action(element, pointerdownEvent, carouselPointerDownHandler as EventListener, passiveHandler);\n  }\n\n  /* istanbul ignore else */\n  if (controls.length) {\n    controls.forEach(arrow => {\n      /* istanbul ignore else */\n      if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler as EventListener);\n    });\n  }\n\n  /* istanbul ignore else */\n  if (indicators.length) {\n    indicators.forEach(indicator => {\n      action(indicator, mouseclickEvent, carouselIndicatorHandler as EventListener);\n    });\n  }\n\n  if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler as EventListener);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.index = 0;\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length < 2) {\n      return;\n    }\n    // external controls must be within same document context\n    const doc = getDocument(element);\n\n    this.controls = [\n      ...querySelectorAll(`[${dataBsSlide}]`, element),\n      ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n    // a LIVE collection is prefferable\n    this.indicators = [\n      ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n      ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    // set JavaScript and DATA API options\n    const { options } = this;\n\n    // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n    this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n    // set first slide active if none\n    /* istanbul ignore else */\n    if (getActiveIndex(this) < 0) {\n      addClass(slides[0], activeClass);\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, 0);\n    }\n\n    // attach event handlers\n    toggleCarouselHandlers(this, true);\n\n    // start to cycle if interval is set\n    if (options.interval) this.cycle();\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (this.isAnimating || activeItem === next || Timer.get(element, dataBsSlide)) return;\n\n    // determine transition direction\n    /* istanbul ignore else */\n    if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n      this.direction = RTL ? 'right' : 'left'; // next\n    } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n      this.direction = RTL ? 'left' : 'right'; // prev\n    }\n    const { direction } = this;\n\n    // find the right next index\n    if (next < 0) {\n      next = slides.length - 1;\n    } else if (next >= slides.length) {\n      next = 0;\n    }\n\n    // orientation, class name, eventProperties\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    const eventProperties = {\n      relatedTarget: slides[next],\n      from: activeItem,\n      to: next,\n      direction,\n    };\n\n    // update event properties\n    ObjectAssign(carouselSlideEvent, eventProperties);\n    ObjectAssign(carouselSlidEvent, eventProperties);\n\n    // discontinue when prevented\n    dispatchEvent(element, carouselSlideEvent);\n    if (carouselSlideEvent.defaultPrevented) return;\n\n    // update index\n    this.index = next;\n    activateCarouselIndicator(this, next);\n\n    if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n      Timer.set(\n        element,\n        () => {\n          addClass(slides[next], `${carouselItem}-${orientation}`);\n          reflow(slides[next]);\n          addClass(slides[next], `${carouselItem}-${directionClass}`);\n          addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n          emulateTransitionEnd(slides[next], () => carouselTransitionEndHandler(this));\n        },\n        0,\n        dataBsSlide,\n      );\n    } else {\n      addClass(slides[next], activeClass);\n      removeClass(slides[activeItem], activeClass);\n\n      Timer.set(\n        element,\n        () => {\n          Timer.clear(element, dataBsSlide);\n          // check for element, might have been disposed\n          /* istanbul ignore else */\n          if (element && options.interval && !this.isPaused) {\n            this.cycle();\n          }\n\n          dispatchEvent(element, carouselSlidEvent);\n        },\n        0,\n        dataBsSlide,\n      );\n    }\n  }\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { slides } = this;\n    const itemClasses = ['start', 'end', 'prev', 'next'];\n\n    [...slides].forEach((slide, idx) => {\n      if (hasClass(slide, activeClass)) activateCarouselIndicator(this, idx);\n      itemClasses.forEach(c => removeClass(slide, `${carouselItem}-${c}`));\n    });\n\n    toggleCarouselHandlers(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  // ObjectAssign,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (showCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  addClass(element, collapsingClass);\n  removeClass(element, collapseString);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n    addClass(element, showClass);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, shownCollapseEvent);\n  });\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (hideCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  removeClass(element, collapseString);\n  removeClass(element, showClass);\n  addClass(element, collapsingClass);\n\n  reflow(element);\n  setElementStyle(element, { height: '0px' });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    /* istanbul ignore else */\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, hiddenCollapseEvent);\n  });\n};\n\n/**\n * Toggles on/off the event listener(s) of the `Collapse` instance.\n *\n * @param self the `Collapse` instance\n * @param add when `true`, the event listener is added\n */\nconst toggleCollapseHandler = (self: Collapse, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler as EventListener));\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = querySelector(options.parent as HTMLElement | string, doc) || getTargetElement(element) || null;\n\n    // add event listeners\n    toggleCollapseHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (Timer.get(element)) return;\n\n    collapseContent(this);\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    toggleCollapseHandler(this);\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (element as HTMLAnchorElement).href.slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor && hasAttribute(parentAnchor, 'href') && (parentAnchor as HTMLAnchorElement).href.slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  querySelector,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"],[${dataBsToggle}=\"${dropupString}\"],[${dataBsToggle}=\"${dropendString}\"],[${dataBsToggle}=\"${dropstartString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore next: this test requires a navbar */\n  if (getElementStyle(menu, 'position') === 'static') return;\n\n  const RTL = isRTL(element);\n  // const menuStart = hasClass(menu, dropdownMenuStartClass);\n  const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n  // reset menu offset and position\n  const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n  resetProps.forEach(p => {\n    // menu.style[p] = '';\n    const style: { [key: string]: string } = {};\n    style[p] = '';\n    setElementStyle(menu, style);\n  });\n\n  // set initial position class\n  // take into account .btn-group parent as .dropdown\n  // this requires navbar/btn-group/input-group\n  let positionClass =\n    dropdownClasses.find(c => hasClass(parentElement, c)) ||\n    /* istanbul ignore next: fallback position */ dropdownString;\n\n  const dropdownMargin: { [key: string]: number[] } = {\n    dropdown: [offset, 0, 0],\n    dropup: [0, 0, offset],\n    dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n    dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n  };\n\n  const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n    dropdown: { top: '100%' },\n    dropup: { top: 'auto', bottom: '100%' },\n    dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n    dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n    menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n    menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n  };\n\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const { left: targetLeft, top: targetTop, width: targetWidth, height: targetHeight } = getBoundingClientRect(element);\n\n  // dropstart | dropend\n  const leftFullExceed = targetLeft - menuWidth - offset < 0;\n  // dropend\n  const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n  // dropstart | dropend\n  const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n  // dropdown\n  const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n  // dropup\n  const topExceed = targetTop - menuHeight - offset < 0;\n  // dropdown / dropup\n  const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n  const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n  // recompute position\n  // handle RTL as well\n  if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropendString;\n  }\n  if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropstartString;\n  }\n  if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n    positionClass = dropupString;\n  }\n\n  // override position for horizontal classes\n  if (horizontalClass.includes(positionClass) && bottomExceed) {\n    ObjectAssign(dropdownPosition[positionClass], {\n      top: 'auto',\n      bottom: 0,\n    });\n  }\n\n  // override position for vertical classes\n  if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n    // don't realign when menu is wider than window\n    // in both RTL and non-RTL readability is KING\n    let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n    if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n    if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n    if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n  }\n\n  const margins: number[] = dropdownMargin[positionClass];\n  setElementStyle(menu, {\n    ...dropdownPosition[positionClass],\n    margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n  });\n\n  // override dropdown-menu-start | dropdown-menu-end\n  if (verticalClass.includes(positionClass) && menuEnd) {\n    /* istanbul ignore else */\n    if (menuEnd) {\n      const endAdjust =\n        (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n      setElementStyle(menu, dropdownPosition[endAdjust]);\n    }\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler as EventListener);\n  action(doc, focusEvent, dropdownDismissHandler as EventListener);\n  action(doc, keydownEvent, dropdownPreventScroll as EventListener);\n  action(doc, keyupEvent, dropdownKeyHandler as EventListener);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param self the `Dropdown` instance\n * @param add when `true`, it will add the event listener\n */\nconst toggleDropdownHandler = (self: Dropdown, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler as EventListener);\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore next: impossible to satisfy */\n  if (!target || !(target as HTMLElement).closest) return; // some weird FF bug #409\n\n  const element = getCurrentOpenDropdown(target as HTMLElement);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const hasData = closest(target as HTMLElement, dropdownSelector) !== null;\n  const isForm =\n    parentElement &&\n    parentElement.contains(target as HTMLElement) &&\n    ((target as HTMLElement).tagName === 'form' || closest(target as HTMLElement, 'form') !== null);\n\n  if (type === mouseclickEvent && isEmptyAnchor(target as HTMLElement)) {\n    e.preventDefault();\n  }\n  if (type === focusEvent && (target === element || target === menu || menu.contains(target as HTMLElement))) {\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (isForm || hasData) {\n    // smile to ESLint\n  } else if (self) {\n    self.hide();\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopImmediatePropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n  /* istanbul ignore next: impossible to satisfy */\n  if (!self || !activeElement) return;\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n    let idx = menuItems.indexOf(activeElement);\n    /* istanbul ignore else */\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    /* istanbul ignore else */\n    if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n\n    // set targets\n    this.parentElement = parentElement as HTMLElement;\n    this.menu = querySelector(`.${dropdownMenuClass}`, parentElement as HTMLElement) as HTMLElement;\n\n    // add event listener\n    toggleDropdownHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (open) return;\n\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement && getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, showDropdownEvent);\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'true');\n\n    // change menu position\n    styleDropdown(this);\n\n    this.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, hideDropdownEvent);\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'false');\n\n    this.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    toggleDropdownHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'DIV' }) as HTMLElement;\n\nconst appendPopup = (target?: HTMLElement) => {\n  const BODY = getDocumentBody(target);\n  if (isNode(target)) {\n    if (!BODY.contains(popupContainer)) {\n      BODY.append(popupContainer);\n    }\n    popupContainer.append(target);\n  }\n};\n\nconst removePopup = (target?: HTMLElement) => {\n  if (isNode(target)) {\n    target.remove();\n\n    if (!popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement) => {\n  return popupContainer.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import { createElement, getDocument, reflow, removeClass, hasClass, addClass, querySelector } from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  // container.append(overlay);\n  appendPopup(overlay);\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param {HTMLElement=} element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    // overlay.remove();\n    removePopup(overlay);\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isHTMLElement,\n  isRTL,\n  isFunction,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  // ObjectAssign,\n  focus,\n  Timer,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  action(element, mouseclickEvent, modalDismissHandler as EventListener);\n  action(getWindow(element), resizeEvent, self.update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler as EventListener);\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Modal` instance.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listener is added\n */\nconst toggleModalHandler = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler as EventListener));\n  }\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n * @param callback the `Modal` instance\n */\nconst afterModalHide = (self: Modal, callback?: () => void) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  /* istanbul ignore else */\n  if (isFunction(callback)) callback();\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n * @param callback when `true` skip animation\n */\nconst beforeModalHide = (self: Modal, callback?: () => void) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && !callback && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self, callback);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.toggle();\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(modalActiveSelector, getDocument(target as Node));\n  const self = element && getModalInstance(element);\n\n  if (!self) return;\n\n  const { options } = self;\n  /* istanbul ignore else */\n  if (\n    options.keyboard &&\n    code === keyEscape && // the keyboard option is enabled and the key is 27\n    hasClass(element, showClass)\n  ) {\n    // the modal is not visible\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nfunction modalDismissHandler(this: HTMLElement, e: MouseEvent) {\n  const self = getModalInstance(this);\n\n  // this timer is needed\n  /* istanbul ignore next: must have a filter */\n  if (!self || Timer.get(this)) return;\n\n  const { options, isStatic, modalDialog } = self;\n  const { backdrop } = options;\n  const { target } = e;\n\n  const selectedText = getDocument(this)?.getSelection()?.toString().length;\n  const targetInsideDialog = modalDialog?.contains(target as HTMLElement);\n  const dismiss = target && closest(target as HTMLElement, modalDismissSelector);\n\n  /* istanbul ignore else */\n  if (isStatic && !targetInsideDialog) {\n    Timer.set(\n      this,\n      () => {\n        addClass(this, modalStaticClass);\n        emulateTransitionEnd(modalDialog as HTMLElement, () => staticTransitionEnd(self));\n      },\n      17,\n    );\n  } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n    self.relatedTarget = dismiss || null;\n    self.hide();\n    e.preventDefault();\n  }\n}\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (isHTMLElement(modalDialog) ? getElementTransitionDuration(modalDialog) : 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    this.modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    // modal can have multiple triggering elements\n    this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional internals\n    this.isStatic = this.options.backdrop === 'static';\n    this.hasFade = hasClass(element, fadeClass);\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleModalHandler(this, true);\n\n    // bind\n    this.update = this.update.bind(this);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showModalEvent);\n    if (showModalEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const this1 = getModalInstance(currentOpen);\n      const that1 =\n        this1 ||\n        /* istanbul ignore next */ getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, 'Offcanvas');\n      if (that1) that1.hide();\n    }\n\n    if (backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(hasFade, true);\n      } else {\n        toggleOverlayType(true);\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n\n      showOverlay();\n      setTimeout(() => beforeModalShow(this), overlayDelay);\n    } else {\n      beforeModalShow(this);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hide the modal from the user.\n   *\n   * @param callback when defined it will skip animation\n   */\n  hide(callback?: () => void) {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideModalEvent);\n    if (hideModalEvent.defaultPrevented) return;\n    removeClass(element, showClass);\n    setAttribute(element, ariaHidden, 'true');\n    removeAttribute(element, ariaModal);\n\n    // if (hasFade && callback) {\n    /* istanbul ignore else */\n    if (hasFade) {\n      emulateTransitionEnd(element, () => beforeModalHide(this, callback));\n    } else {\n      beforeModalHide(this, callback);\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update() {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  }\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    toggleModalHandler(this);\n    // use callback\n    this.hide(() => super.dispose());\n  }\n}\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  isFunction,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  // ObjectAssign,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the `click` event listeners.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true*, listeners are added\n */\nconst toggleOffcanvasEvents = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  self.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler as EventListener));\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler as EventListener);\n  action(doc, mouseclickEvent, offcanvasDismissHandler as EventListener);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param callback the hide callback\n */\nconst beforeOffcanvasHide = (self: Offcanvas, callback?: () => void) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => hideOffcanvasComplete(self, callback));\n  } else hideOffcanvasComplete(self, callback);\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must have a filter */\n  if (!self) return;\n\n  const { options, triggers } = self;\n  const { backdrop } = options;\n  const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n  const selection = getDocument(element).getSelection();\n\n  if (overlay.contains(target as HTMLElement) && backdrop === 'static') return;\n\n  /* istanbul ignore else */\n  if (\n    !(selection && selection.toString().length) &&\n    ((!element.contains(target as HTMLElement) &&\n      backdrop &&\n      /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n      (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n  ) {\n    self.relatedTarget = offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n    self.hide();\n  }\n\n  /* istanbul ignore next */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (self.options.keyboard && code === keyEscape) {\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param callback the hide callback\n */\nconst hideOffcanvasComplete = (self: Offcanvas, callback?: () => void) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n  // callback\n  if (isFunction(callback)) callback();\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleOffcanvasEvents(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showOffcanvasEvent);\n    if (showOffcanvasEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const this1 = getOffcanvasInstance(currentOpen);\n      const that1 =\n        this1 ||\n        /* istanbul ignore next */ getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, 'Modal');\n      if (that1) that1.hide();\n    }\n\n    if (options.backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(true);\n      } else {\n        toggleOverlayType();\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n    } else {\n      beforeOffcanvasShow(this);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hides the offcanvas from the user.\n   *\n   * @param callback when `true` it will skip animation\n   */\n  hide(callback?: () => void) {\n    const { element, relatedTarget } = this;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideOffcanvasEvent);\n    if (hideOffcanvasEvent.defaultPrevented) return;\n\n    addClass(element, offcanvasTogglingClass);\n    removeClass(element, showClass);\n\n    if (!callback) {\n      emulateTransitionEnd(element, () => beforeOffcanvasHide(this, callback));\n    } else beforeOffcanvasHide(this, callback);\n  }\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    toggleOffcanvasEvents(this);\n    this.hide(() => super.dispose());\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getWindow,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  isMedia,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\n// import TooltipInterface from '../interface/tooltip';\n// import PopoverInterface from '../interface/popover';\nimport Tooltip from '../components/tooltip';\nimport { popupContainer } from './popupContainer';\n\n// type FakeTip = {\n//   name: string,\n//   element: HTMLElement,\n//   tooltip: HTMLElement,\n//   options: TooltipInterface.Options | PopoverInterface.Options,\n//   arrow: HTMLElement,\n//   offsetParent: ParentNode\n// }\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n * @param e event object\n */\nconst styleTip = <T extends Tooltip>(self: T, e?: Event & PointerEvent) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, options, arrow } = self;\n  if (!tooltip) return;\n  const tipPositions = { ...tipClassPositions };\n\n  const RTL = isRTL(element);\n  if (RTL) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // reset tooltip style (top: 0, left: 0 works best)\n  setElementStyle(tooltip, {\n    // top: '0px', left: '0px', right: '', bottom: '',\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  const isPopover = self.name === popoverComponent;\n  const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n  const { clientWidth: htmlcw, clientHeight: htmlch } = getDocumentElement(element);\n  // const { container } = options;\n  let { placement } = options;\n  const { left: parentLeft, right: parentRight, top: parentTop } = getBoundingClientRect(popupContainer, true);\n  const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = popupContainer;\n  const scrollbarWidth = Math.abs(parentCWidth - parentOWidth);\n  // const tipAbsolute = getElementStyle(tooltip, 'position') === 'absolute';\n  const parentPosition = getElementStyle(popupContainer, 'position');\n  // const absoluteParent = parentPosition === 'absolute';\n  const fixedParent = parentPosition === 'fixed';\n  const staticParent = parentPosition === 'static';\n  // const stickyParent = parentPosition === 'sticky';\n  // const isSticky = stickyParent && parentTop === parseFloat(getElementStyle(popupContainer, 'top'));\n  // const absoluteTarget = getElementStyle(element, 'position') === 'absolute';\n  // const stickyFixedParent = ['sticky', 'fixed'].includes(parentPosition);\n  const leftBoundry = RTL && fixedParent ? scrollbarWidth : 0;\n  const rightBoundry = fixedParent\n    ? parentCWidth + parentLeft + (RTL ? scrollbarWidth : 0)\n    : parentCWidth + parentLeft + (htmlcw - parentRight) - 1;\n  const {\n    width: elemWidth,\n    height: elemHeight,\n    left: elemRectLeft,\n    right: elemRectRight,\n    top: elemRectTop,\n  } = getBoundingClientRect(element, true);\n  console.log(getWindow(tooltip));\n  const win = getWindow(tooltip);\n\n  const scroll = { x: win.scrollX, y: win.scrollY };\n  // const { x, y } = getRectRelativeToOffsetParent(element, win, scroll);\n  const { x, y } = { x: elemRectLeft + scroll.x, y: elemRectTop + scroll.y };\n  // reset arrow style\n  setElementStyle(arrow as HTMLElement, {\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  let topPosition: number | string = 0;\n  let leftPosition: number | string = 0;\n  let rightPosition: number | string = 0;\n  let arrowTop: number | string = 0;\n  let arrowLeft: number | string = 0;\n  let arrowRight: number | string = 0;\n\n  const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n  const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n  const arrowAdjust = arrowWidth / 2;\n\n  // check placement\n  let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n  let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n  let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n  let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n  const horizontal = ['left', 'right'];\n  const vertical = ['top', 'bottom'];\n\n  topExceed = horizontal.includes(placement)\n    ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n    : topExceed;\n  bottomExceed = horizontal.includes(placement)\n    ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n    : bottomExceed;\n  leftExceed = vertical.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n  rightExceed = vertical.includes(placement)\n    ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n    : rightExceed;\n\n  // first remove side positions if both left and right limits are exceeded\n  // we usually fall back to top|bottom\n  placement = horizontal.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n  // second, recompute placement\n  placement = placement === 'top' && topExceed ? 'bottom' : placement;\n  placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n  placement = placement === 'left' && leftExceed ? 'right' : placement;\n  placement = placement === 'right' && rightExceed ? 'left' : placement;\n\n  // update tooltip/popover class\n  if (!tooltip.className.includes(placement)) {\n    tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n  }\n\n  // compute tooltip / popover coordinates\n  /* istanbul ignore else */\n  if (horizontal.includes(placement)) {\n    // secondary|side positions\n    if (placement === 'left') {\n      // LEFT\n      leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n    } else {\n      // RIGHT\n      leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n    }\n\n    // adjust top and arrow\n    if (topExceed) {\n      topPosition = y;\n      // topPosition += isSticky ? -parentTop - scroll.y : 0;\n\n      arrowTop = elemHeight / 2 - arrowWidth;\n    } else if (bottomExceed) {\n      topPosition = y - tipHeight + elemHeight;\n      // topPosition += isSticky ? -parentTop - scroll.y : 0;\n\n      arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n    } else {\n      topPosition = y - tipHeight / 2 + elemHeight / 2;\n      // topPosition += isSticky ? -parentTop - scroll.y : 0;\n\n      arrowTop = tipHeight / 2 - arrowHeight / 2;\n    }\n  } else if (vertical.includes(placement)) {\n    if (e && isMedia(element)) {\n      let eX = 0;\n      let eY = 0;\n      if (staticParent) {\n        eX = e.pageX;\n        eY = e.pageY;\n      } else {\n        // fixedParent | stickyParent\n        eX = e.clientX - parentLeft + (fixedParent ? scroll.x : 0);\n        eY = e.clientY - parentTop + (fixedParent ? scroll.y : 0);\n      }\n\n      // some weird RTL bug\n      eX -= RTL && fixedParent && scrollbarWidth ? scrollbarWidth : 0;\n\n      if (placement === 'top') {\n        topPosition = eY - tipHeight - arrowWidth;\n      } else {\n        topPosition = eY + arrowWidth;\n      }\n\n      // adjust (left | right) and also the arrow\n      if (e.clientX - tipWidth / 2 < leftBoundry) {\n        leftPosition = 0;\n        arrowLeft = eX - arrowAdjust;\n      } else if (e.clientX + tipWidth / 2 > rightBoundry) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = rightBoundry - eX - arrowAdjust;\n        arrowRight -= fixedParent ? parentLeft + (RTL ? scrollbarWidth : 0) : 0;\n\n        // normal top/bottom\n      } else {\n        leftPosition = eX - tipWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    } else {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n  }\n\n  // apply style to tooltip/popover\n  setElementStyle(tooltip, {\n    top: `${topPosition}px`,\n    left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n    right: rightPosition !== undefined ? `${rightPosition}px` : '',\n  });\n\n  // update arrow placement\n  /* istanbul ignore else */\n  if (isHTMLElement(arrow)) {\n    if (arrowTop !== undefined) {\n      arrow.style.top = `${arrowTop}px`;\n    }\n    if (arrowLeft !== undefined) {\n      arrow.style.left = `${arrowLeft}px`;\n    } else if (arrowRight !== undefined) {\n      arrow.style.right = `${arrowRight}px`;\n    }\n  }\n  console.log(tooltip, leftPosition, rightPosition, arrowLeft);\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","// import {getWindow} from '@thednp/shorty';\nimport { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: Node, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element) || (isString(content) && !content.length)) return;\n\n  /* istanbul ignore else */\n  if (isString(content)) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    // const win = getWindow(element);\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate) ? (tooltipTemplate.cloneNode(true) as HTMLElement) : undefined;\n\n  const { tooltip } = self;\n  if (!tooltip) return;\n\n  // set id and role attributes\n  setAttribute(tooltip, 'id', id);\n  setAttribute(tooltip, 'role', tooltipString);\n\n  const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n  const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n  const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n  // set arrow and enable access for styleTip\n  self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n  const { arrow } = self;\n\n  if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n  else {\n    const tempTitle = createElement('div') as Node;\n    setHtml(tempTitle, title, sanitizeFn);\n    titleParts = [...[...tempTitle.childNodes]];\n  }\n\n  if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n  else {\n    const tempContent = createElement('div') as Node;\n    setHtml(tempContent, content, sanitizeFn);\n    contentParts = [...[...tempContent.childNodes]];\n  }\n\n  // set dismissible button\n  if (dismissible) {\n    if (title) {\n      if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        titleParts = [...titleParts, tempBtn.firstChild as Node];\n      }\n    } else {\n      /* istanbul ignore else */\n      if (tooltipHeader) tooltipHeader.remove();\n      if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        contentParts = [...contentParts, tempBtn.firstChild as Node];\n      }\n    }\n  }\n\n  // fill the template with content from options / data attributes\n  // also sanitize title && content\n  /* istanbul ignore else */\n  if (!isTooltip) {\n    /* istanbul ignore else */\n    if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n    /* istanbul ignore else */\n    if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n    // set btn\n    self.btn = querySelector('.btn-close', tooltip) || undefined;\n  } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n  // Bootstrap 5.2.x\n  addClass(tooltip, 'position-absolute');\n  addClass(arrow, 'position-absolute');\n\n  // set popover animation and placement\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n  /* istanbul ignore else */\n  if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n  /* istanbul ignore else */\n  if (customClass && !hasClass(tooltip, customClass)) {\n    addClass(tooltip, customClass);\n  }\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n};\n\nexport default createTip;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mousemoveEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  isMedia,\n  isFunction,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\n// import isVisibleTip from '../util/isVisibleTip';\n// import getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip);\n  // tooltip?.remove();\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  toggleTooltipHandlers(self);\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n\n  /* istanbul ignore else */\n  if (!isMedia(element)) {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, self.update, passiveHandler);\n    });\n  }\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n * @param callback the dispose callback\n */\nconst tooltipHiddenAction = (self: Tooltip, callback?: () => any) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n  if (isFunction(callback)) callback();\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  // btn is only for dismissible popover\n  const { element, options, btn } = self;\n  const { trigger } = options;\n  const isPopover = self.name !== tooltipComponent;\n  const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n  if (trigger?.includes('manual')) return;\n\n  self.enabled = !!add;\n\n  const triggerOptions = trigger?.split(' ');\n  const elemIsMedia = isMedia(element);\n\n  if (elemIsMedia) {\n    action(element, mousemoveEvent, self.update, passiveHandler);\n  }\n\n  triggerOptions?.forEach(tr => {\n    /* istanbul ignore else */\n    if (elemIsMedia || tr === mousehoverEvent) {\n      action(element, mousedownEvent, self.show);\n      action(element, mouseenterEvent, self.show);\n\n      /* istanbul ignore else */\n      if (dismissible && btn) {\n        action(btn, mouseclickEvent, self.hide);\n      } else {\n        action(element, mouseleaveEvent, self.hide);\n        action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n      }\n    } else if (tr === mouseclickEvent) {\n      action(element, tr, !dismissible ? self.toggle : self.show);\n    } else if (tr === focusEvent) {\n      action(element, focusinEvent, self.show);\n      /* istanbul ignore else */\n      if (!dismissible) action(element, focusoutEvent, self.hide);\n      /* istanbul ignore else */\n      if (isApple) {\n        action(element, mouseclickEvent, () => focus(element));\n      }\n    }\n  });\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n  // const { offsetHeight, scrollHeight } = popupContainer;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  if (!isMedia(element)) {\n    const win = getWindow(element);\n    // const overflow = offsetHeight !== scrollHeight;\n    // const scrollTarget = overflow || offsetParent !== win ? popupContainer : win;\n    action(win, resizeEvent, self.update, passiveHandler);\n    action(win, scrollEvent, self.update, passiveHandler);\n  }\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.hide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.hide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(element, titleAtt[content ? 0 : 1], content || getAttribute(element, titleAtt[0]) || '');\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement | Window;\n  declare enabled: boolean;\n  declare id: string;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if ((!options.title && isTooltip) || (!isTooltip && !options.content)) {\n      // throw Error(`${this.name} Error: target has no content set.`);\n      return;\n    }\n\n    // reset default options\n    ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n    // all functions bind\n    this.handleTouch = this.handleTouch.bind(this);\n    this.update = this.update.bind(this);\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n    this.toggle = this.toggle.bind(this);\n\n    // set title attributes and add event listeners\n    /* istanbul ignore else */\n    if (hasAttribute(element, titleAttr) && isTooltip) {\n      toggleTooltipTitle(this, options.title);\n    }\n\n    // create tooltip here\n    createTip(this);\n\n    // attach events\n    toggleTooltipHandlers(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /**\n   * Shows the tooltip.\n   *\n   * @param e the `Event` object\n   */\n  show(e?: Event) {\n    const { options, tooltip, element, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasPopup(tooltip)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (showTooltipEvent.defaultPrevented) return;\n\n          // append to container\n          appendPopup(tooltip);\n\n          setAttribute(element, ariaDescribedBy, `#${id}`);\n\n          this.update(e);\n          toggleTooltipOpenHandlers(this, true);\n\n          /* istanbul ignore else */\n          if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n          /* istanbul ignore else */\n          if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n          else tooltipShownAction(this);\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /**\n   * Hides the tooltip.\n   *\n   * @param e the dispose callback\n   * @param callback the dispose callback\n   */\n  hide(e?: Event, callback?: () => void) {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasPopup(tooltip)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (hideTooltipEvent.defaultPrevented) return;\n\n          this.update(e); // use Event\n          removeClass(tooltip, showClass);\n          toggleTooltipOpenHandlers(this);\n\n          /* istanbul ignore else */\n          if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this, callback));\n          else tooltipHiddenAction(this, callback);\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  }\n\n  /**\n   * Updates the tooltip position.\n   *\n   * @param e the `Event` object\n   */\n  update(e?: Event) {\n    styleTip<Tooltip>(this, e as (Event & PointerEvent) | undefined);\n  }\n\n  /**\n   * Toggles the tooltip visibility.\n   *\n   * @param e the `Event` object\n   */\n  toggle(e?: Event) {\n    const { tooltip } = this;\n\n    if (tooltip && !hasPopup(tooltip)) this.show(e);\n    else this.hide();\n  }\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      toggleTooltipHandlers(this, true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasPopup(tooltip) && animation) {\n        this.hide(undefined, () => toggleTooltipHandlers(this));\n      } else {\n        toggleTooltipHandlers(this);\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch({ target }: TouchEvent) {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore next */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  }\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const callback = () => disposeTooltipComplete(this, () => super.dispose());\n\n    if (options.animation && tooltip && hasPopup(tooltip)) {\n      this.options.delay = 0; // reset delay\n      this.hide(undefined, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show() {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  }\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  // ObjectAssign,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget && getScrollHeight(scrollTarget);\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (itemsLength !== links.length || scrollHEIGHT !== scrollHeight)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT as number;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n/**\n * Toggles on/off the component event listener.\n *\n * @param self the `ScrollSpy` instance\n * @param add when `true`, listener is added\n */\nconst toggleSpyHandlers = (self: ScrollSpy, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.scrollTarget as EventTarget, scrollEvent, self.refresh, passiveHandler);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window | null;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (!this.target) return;\n\n    // set initial state\n    this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n\n    // bind events\n    this.refresh = this.refresh.bind(this);\n\n    // add event handlers\n    toggleSpyHandlers(this, true);\n\n    this.refresh();\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh() {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore next */\n    if (target?.offsetHeight === 0) return;\n\n    updateSpyTargets(this);\n\n    const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n    if (scrollTop >= maxScroll) {\n      const newActiveItem = items[itemsLength - 1];\n\n      /* istanbul ignore else */\n      if (activeItem !== newActiveItem) {\n        activate(this, newActiveItem);\n      }\n      return;\n    }\n\n    const { offsets } = this;\n\n    if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n      this.activeItem = null;\n      if (isHTMLElement(target)) clear(target);\n      return;\n    }\n\n    items.forEach((item, i) => {\n      if (\n        activeItem !== item &&\n        scrollTop >= offsets[i] &&\n        (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n      ) {\n        activate(this, item);\n      }\n    });\n  }\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    toggleSpyHandlers(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  // ObjectAssign,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || { currentHeight: 0, nextHeight: 0 };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n  if (showTabEvent.defaultPrevented) return;\n\n  if (nextContent) addClass(nextContent, activeClass);\n  if (content) removeClass(content, activeClass);\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const nextHeight = nextContent.scrollHeight;\n    tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n    addClass(tabContent, collapsingClass);\n    tabContent.style.height = `${currentHeight}px`;\n    reflow(tabContent);\n    [content, nextContent].forEach(c => {\n      if (c) removeClass(c, 'overflow-hidden');\n    });\n  }\n\n  if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n    setTimeout(() => {\n      addClass(nextContent, showClass);\n      emulateTransitionEnd(nextContent, () => {\n        triggerTabShow(self);\n      });\n    }, 1);\n  } else {\n    if (nextContent) addClass(nextContent, showClass);\n    triggerTabShow(self);\n  }\n\n  if (tab) dispatchEvent(tab, hiddenTabEvent);\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Tab` instance\n * @param add when `true`, event listener is added\n */\nconst toggleTabHandler = (self: Tab, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, tabClickHandler);\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n  e.preventDefault();\n\n  self.show();\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    if (!content) return;\n\n    const nav = closest(element, '.nav');\n    const container = closest(content, '.tab-content');\n\n    this.nav = nav;\n    this.content = content;\n    this.tabContent = container;\n\n    // event targets\n    this.dropdown = getParentDropdown(element);\n\n    // show first Tab instance of none is shown\n    // suggested on #432\n    const { tab } = getActiveTab(this);\n    if (nav && !tab) {\n      const firstTab = querySelector(tabSelector, nav);\n      const firstTabContent = firstTab && getTargetElement(firstTab);\n\n      /* istanbul ignore else */\n      if (firstTabContent) {\n        addClass(firstTab, activeClass);\n        addClass(firstTabContent, showClass);\n        addClass(firstTabContent, activeClass);\n        setAttribute(element, ariaSelected, 'true');\n      }\n    }\n\n    // add event listener\n    toggleTabHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      if (isHTMLElement(tab as Node)) dispatchEvent(tab as EventTarget, hideTabEvent);\n      if (hideTabEvent.defaultPrevented) return;\n\n      addClass(element, activeClass);\n      setAttribute(element, ariaSelected, 'true');\n\n      const activeDropdown = isHTMLElement(tab as HTMLElement) && getParentDropdown(tab as HTMLElement);\n      if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n        removeClass(activeDropdown, activeClass);\n      }\n\n      /* istanbul ignore else */\n      if (nav) {\n        const toggleTab = () => {\n          if (tab) {\n            removeClass(tab, activeClass);\n            setAttribute(tab, ariaSelected, 'false');\n          }\n          if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n        };\n\n        if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n          Timer.set(nav, toggleTab, 1);\n        } else toggleTab();\n      }\n\n      if (content) {\n        removeClass(content, showClass);\n        if (hasClass(content, fadeClass)) {\n          emulateTransitionEnd(content, () => triggerTabHide(this));\n        } else {\n          triggerTabHide(this);\n        }\n      }\n    }\n  }\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    toggleTabHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  // ObjectAssign,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Toast` instance\n * @param add when `true`, it will add the listener\n */\nconst toggleToastHandlers = (self: Toast, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, triggers, dismiss, options } = self;\n\n  /* istanbul ignore else */\n  if (dismiss) {\n    action(dismiss, mouseclickEvent, self.hide);\n  }\n\n  /* istanbul ignore else */\n  if (options.autohide) {\n    [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n      action(element, e, interactiveToastHandler as EventListener),\n    );\n  }\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n  }\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  toggleToastHandlers(self);\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.show();\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore next: a solid filter is required */\n  if (!self || element === relatedTarget || element.contains(relatedTarget as Node)) return;\n\n  if ([mouseenterEvent, focusinEvent].includes(type)) {\n    Timer.clear(element, toastString);\n  } else {\n    Timer.set(element, () => self.hide(), self.options.delay, toastString);\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: ToastOptions) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // bind\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n\n    // add event listener\n    toggleToastHandlers(this, true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (showToastEvent.defaultPrevented) return;\n\n      showToast(this);\n    }\n  }\n\n  /** Hides the toast. */\n  hide() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (hideToastEvent.defaultPrevented) return;\n      hideToast(this);\n    }\n  }\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","import { Data, ObjectKeys, ObjectValues, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = {\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip,\n};\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  ObjectValues(componentsList).forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  ObjectKeys(componentsList).forEach(comp => {\n    removeComponentDataAPI(comp, lookUp);\n  });\n};\n\n// bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n"],"names":["a","d","E","g","M","e","r","querySelector","isString","Data","ObjectKeys","normalizeOptions","getInstance","createCustomEvent","dispatchEvent","addListener","removeListener","mouseclickEvent","closest","hasClass","removeClass","emulateTransitionEnd","setAttribute","ariaPressed","addClass","getDocument","getAttribute","x","Timer","querySelectorAll","isElementInScrollRange","isRTL","keyArrowRight","keyArrowLeft","pointermoveEvent","passiveHandler","pointerupEvent","mouseenterEvent","mouseleaveEvent","pointerdownEvent","keydownEvent","isHTMLElement","getElementsByClassName","ObjectAssign","getElementTransitionDuration","reflow","noop","setElementStyle","ariaExpanded","hasAttribute","dropdownClasses","getElementStyle","getDocumentElement","getBoundingClientRect","focusEvent","keyupEvent","scrollEvent","resizeEvent","getWindow","keyArrowDown","keyArrowUp","focus","keyEscape","getDocumentBody","createElement","isNode","isFunction","removeAttribute","ariaHidden","ariaModal","y","isMedia","isNodeList","isArray","ariaDescribedBy","touchstartEvent","toLowerCase","mousemoveEvent","mousehoverEvent","mousedownEvent","focusinEvent","focusoutEvent","isApple","getUID","isWindow","getElementsByTagName","ariaSelected","ObjectValues","matches"],"mappings":"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"}